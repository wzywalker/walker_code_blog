{"posts": [{"title": "hitTest\u793a\u4f8b", "date": "2022-02-19T21:03:00-00.00", "path": "/archives/hittest/", "text": "\u5f80\u7a97\u53e3\u91cc\u6dfb\u52a0\u4e24\u4e2a\u81ea\u5b9a\u4e49\u7684view\uff0c\u8fd9\u6837\u6bcf\u4e2aview\u7684hitTest\u65b9\u6cd5\u88ab\u8bbf\u95ee\u7684\u65f6\u5019\u6211\u4eec\u5c31\u80fdlog\u4e00\u4e0b\uff1aimport UIKit\n\nclass ViewController: UIViewController {\n\n    override func viewDidLoad() {\n        super.viewDidLoad()\n\n        let view1 = View1(frame: CGRect(x: 110, y: 110, width: 150, height: 150))\n        let view2 = View2(frame: CGRect(x: 170, y: 170, width: 150, height: 150))\n        view1.backgroundColor = .yellow\n        view2.backgroundColor = .red\n\n        self.view.addSubview(view1)\n        self.view.addSubview(view2)\n    }\n}\n\nclass View1 : UIView {\n    override func hitTest(_ point: CGPoint, with event: UIEvent?) -&gt; UIView? {\n        print(&quot;enter v1 \\(point)&quot;)\n        return super.hitTest(point, with: event)\n    }\n}\n\nclass View2 : UIView {\n    override func hitTest(_ point: CGPoint, with event: UIEvent?) -&gt; UIView? {\n        print(&quot;enter v2, \\(point)&quot;)\n        return super.hitTest(point, with: event)\n    }\n}\n\n\u8fd0\u884c\uff1a\u5728\u7a7a\u767d\u5904(bottom view)\u70b9\u4e86\u4e00\u4e0b\uff0c\u8f93\u51fa\uff1aenter v2, (-48.66007995605469, 306.0133361816406)\nenter v1, (11.339920043945312, 366.0133361816406)\nenter v2, (-48.66007995605469, 306.0133361816406)\nenter v1, (11.339920043945312, 366.0133361816406)\nenter v2, (-43.33333333333334, 325.3333333333333)\nenter v1, (16.666666666666657, 385.3333333333333)\nenter v2, (-43.33333333333334, 325.3333333333333)\nenter v1, (16.666666666666657, 385.3333333333333)\n\n\u5728\u7ea2\u6846\u4e0a(top view)\u70b9\u4e00\u4e0b\uff0c\u8f93\u51fa\uff1aenter v2, (38.66666666666666, 48.66666666666666)\nenter v2, (38.66666666666666, 48.66666666666666)\n\n\u5728\u9ec4\u6846(middle view)\u70b9\u4e00\u4e0b\uff0c\u8f93\u51fa\uff1aenter v2, (-31.210678100585938, -27.8685302734375)\nenter v2, (-31.210678100585938, -27.8685302734375)\nenter v2, (-25.0, -22.333333333333343)\nenter v1, (35.0, 37.66666666666666)\nenter v2, (-25.0, -22.333333333333343)\nenter v1, (35.0, 37.66666666666666)\n\n\n\u6211\u4eec\u77e5\u9053hitTest\u673a\u5236\u662f\u4e8b\u4ef6\u4f20\u9012\u94fe\u7531\u5e95\u5411\u4e0a\uff0c\u54cd\u5e94\u94fe\u7531\u4e0a\u5230\u4e0b\uff0c\n\u6240\u4ee5\u6700\u5e95\u5c42\u7684bottom view\u6700\u5148\u63a5\u5230\u4e8b\u4ef6\u5c31\u5f00\u59cb\u627e\u54cd\u5e94\u8005\n\u5b83\u5f00\u59cb\u4ece\u5b83\u7684\u6700\u9876\u5c42subview\u5f00\u59cb\u627e\u54cd\u5e94\u8005(v2)\uff0c\u7136\u540e\u518d\u5f80\u4e0b(v1)\uff0c\u5747\u6ca1\u627e\u5230\uff0c\u6240\u4ee5\u5c31\u662f\u81ea\u5df1\u4e86\n\u4e3a\u4f55\u8c03\u4e86\u56db\u6b21\u5462\uff1f\uff08\u672a\u6df1\u7a76\uff09\nYes, it\u2019s normal. The system may tweak the point being hit tested between the calls. Since hitTest should be a pure function with no side-effects, this should be fine.\n\n\u7b2c\u4e8c\u6b21\u6d4b\u8bd5\uff0c\u76f4\u63a5\u5728\u6700\u9876\u5c42view\u5c31\u627e\u5230\u4e86\uff08\u6240\u8c13\u7684\u627e\u5230\uff0c\u5c31\u662f\u70b9\u51fb\u7684\u4f4d\u7f6e\u5728\u8fd9\u4e2aview\u7684bounds\u5185\uff0c\u540e\u9762\u8bf4\uff09\n\u81f3\u4e8e\u4e3a\u4ec0\u4e48\u5750\u6807\u4f1a\u53d8\uff1f\uff08\u672a\u6df1\u7a76\uff09\n\u7b2c\u4e09\u6b21\u6d4b\u8bd5\uff0c\u70b9\u4e86v1\uff0c\u53ef\u4ee5\u770b\u5230\u65e5\u5fd7\uff0c\u5728v2\u90a3\u91cc\u8dd1\u4e863\u6b21\uff0c\u518d\u8dd1\u4e86v1\uff0c\u4e0d\u77e5\u9053\u4e3a\u4ec0\u4e48\u8fd8\u662f\u6ca1\u8fd4\u56de\uff0c\u8fd8\u8dd1\u4e86\u4e00\u6b21v2\u540e\u624d\u8ba4\u5b9av1\n\n\u5927\u4f53\u53ef\u4ee5\u77e5\u9053hitTest\u7684\u673a\u5236\u4e86\u5427\uff1f\u4ee5\u4f20\u9012\u94fe\u7684\u7ec8\u70b9\u90a3\u4e2aview\u4e3a\u57fa\u7840\uff0c\u5728subviews\u9006\u5411\u904d\u5386\uff08\u81ea\u9876\u5411\u4e0b\uff09\uff0c\u4e00\u76f4\u5230\u81ea\u5df1\u3002\u5e94\u75281\n\u6765\u4e2a\u7b80\u5355\u573a\u666f\uff0c\u5982\u679c\u9ec4\u8272\u7684view\u662f\u6709\u89e6\u6478\u4e8b\u4ef6\u7684\uff0c\u5e76\u4e14\u8981\u6c42\u88ab\u8986\u76d6\u7684\u533a\u57df\u4e5f\u80fd\u54cd\u5e94\uff0c\u8be5\u600e\u4e48\u505a\u5462\uff1f\u601d\u8003\uff1a\n\u6211\u4eec\u77e5\u9053\u70b9\u51fb\u7684\u4f4d\u7f6e\uff0c\u80af\u5b9a\u662f\u5728\u9ec4\u6846\u8303\u56f4\u5185\u7684\uff0c\u6240\u4ee5\u8981\u7684\u5c31\u662f\u4e00\u4e2a\u5165\u53e3\uff0c\u7528\u6765\u5224\u65ad\u8fd9\u4e2a\u70b9\u4e0e\u9ec4\u6846\u7684\u5173\u7cfb\uff0c\u4e00\u65e6\u786e\u8ba4\u70b9\u7684\u8303\u56f4\u662f\u5728\u9ec4\u6846\u91cc\uff0c\u5c31\u628a\u8ba4\u4e3a\u9ec4\u6846\u662f\u4e8b\u4ef6\u54cd\u5e94\u8005\u3002\n\u56e0\u6b64\u6539\u4e0bdemo\uff0c\u52a0\u4e86\u4e8b\u4ef6\uff0c\u8fd8\u52a0\u4e86\u4e00\u4e2aparent view\uff08\u8fd9\u6837\u624d\u80fd\u5728\u7528\u5c5e\u6027\u7684\u65b9\u5f0f\u628a\u9ec4\u6846\u5f15\u7528\u51fa\u6765\uff09\n\nclass ViewController: UIViewController {\n\n    override func viewDidLoad() {\n        super.viewDidLoad()\n\n\n        let view1 = UIView(frame: CGRect(x: 110, y: 110, width: 150, height: 150))\n        let view2 = UIView(frame: CGRect(x: 170, y: 170, width: 150, height: 150))\n        view1.backgroundColor = .yellow\n        view2.backgroundColor = .red\n\n        let tap = UITapGestureRecognizer(target: self, action: #selector(tap(_:)))\n        view1.addGestureRecognizer(tap)\n        view1.isUserInteractionEnabled = true\n\n        let view = View(a: view1, b: view2)\n        self.view.addSubview(view)\n    }\n\n    @objc func tap(_ sender: UIGestureRecognizer) {\n        print(&quot;view1 taped&quot;)\n    }\n}\n\nclass View: UIView {\n    var view1: UIView\n    var view2: UIView\n    init(a: UIView, b: UIView) {\n        self.view1 = a\n        self.view2 = b\n        super.init(frame: UIScreen.main.bounds)\n        self.addSubview(a)\n        self.addSubview(b)\n    }\n    required init?(coder: NSCoder) {\n        fatalError(&quot;init(coder:) has not been implemented&quot;)\n    }\n    override func hitTest(_ point: CGPoint, with event: UIEvent?) -&gt; UIView? {\n      let loc_v1 = self.convert(point, to: self.view1)\n          // \u4e3b\u8981\u5c31\u662f\u8fd9\u4e00\u53e5\n        if(self.view1.point(inside: loc_v1, with: event)) {\n            return self.view1\n        }\n        return super.hitTest(point, with: event)\n    }\n}\n\n\nlet loc_v1 = self.convert(point, to: self.view1)\u610f\u601d\u662f\u8fd9\u4e2a\u70b9\u4ee5view1\u4e3a\u5750\u6807\u7cfb\u7684\u4f4d\u7f6e\nif(self.view1.point(inside: loc_v1, with: event)) \u8fd9\u5c31\u662f\u5224\u65ad\u8fd9\u4e2a\u70b9\u5728\u4e0d\u5728view1\u7684bounds\u91cc\u9762\u4e86\n\n\u7b80\u5355\u6765\u8bf4\uff0c\u5c31\u662f\u7b80\u5355\u7c97\u66b4\u5730\u201c\u902e\u4f4f\u6bcf\u4e00\u4e2a\u673a\u4f1a\u201d\uff0c\u95ee\u662f\u4e0d\u662f\u4f60\uff0c\u662f\u4e0d\u662f\u4f60\u3002\u5e94\u75282\n\u5982\u679c\u4e00\u4e2a\u6309\u94ae\u5f88\u5c0f\uff0c\u4f60\u8981\u6269\u5927\u4ed6\u7684\u70b9\u51fb\u533a\u57df\u600e\u4e48\u505a\uff1f\u7f51\u4e0a\u6709\u5f88\u591a\u65b9\u6cd5\uff0c\u5173\u8054\u5c5e\u6027\u554a\uff0c\u4ea4\u6362\u65b9\u6cd5\u554a\uff0c\u53ef\u4ee5\u53bb\u641c\u641c\uff0c\u6211\u4eec\u8fd9\u91cc\u7ee7\u7eed\u4e0a\u9762\u7684\u4f8b\u5b50\uff0c\u77e5\u9053\u6709\u4e00\u4e2apoint(inside:with)\u65b9\u6cd5\uff0c\u987e\u540d\u601d\u4e49\uff0c\u5c31\u662f\u8fd9\u4e2a\u70b9\u5728\u4e0d\u5728\u6211\u7684\u89c6\u56fe\u533a\u57df\u5185\u5b83\u5f53\u7136\u4e5f\u662f\u53ef\u4ee5\u88ab\u91cd\u5199\uff0c\u81ea\u5b9a\u4e49\u5728\u4ec0\u4e48\u6837\u7684\u8303\u56f4\u5185\uff0c\u90fd\u7b97inside\uff0c\u4e0b\u9762\u662f\u7f51\u4e0a\u6284\u7684\u4e00\u6bb5\u4ee3\u7801\n- (BOOL)pointInside:(CGPoint)point withEvent:(UIEvent*)event {\n   //\u83b7\u53d6\u5f53\u524dbutton\u7684\u5b9e\u9645\u5927\u5c0f\n    CGRect bounds = self.bounds;\n    //\u82e5\u539f\u70ed\u533a\u5c0f\u4e8e44x44\uff0c\u5219\u653e\u5927\u70ed\u533a\uff0c\u5426\u5219\u4fdd\u6301\u539f\u5927\u5c0f\u4e0d\u53d8\n    CGFloat widthDelta = MAX(44.0 - bounds.size.width, 0);\n    CGFloat heightDelta = MAX(44.0 - bounds.size.height, 0);\n    //\u6269\u5927bounds\n    bounds = CGRectInset(bounds, -0.5 * widthDelta, -0.5 * heightDelta);\n    //\u5982\u679c\u70b9\u51fb\u7684\u70b9 \u5728 \u65b0\u7684bounds\u91cc\uff0c\u5c31\u8fd4\u56deYES\n    return CGRectContainsPoint(bounds, point);\n}\n\n\u8fd9\u4e2a\u4f8b\u5b50\u4e3b\u8981\u5c31\u662f\u5229\u7528\u5e95\u5c42\u7684CGRectContainsPoint\u65b9\u6cd5\uff0c\u4f20\u5165\u4e86\u65b0\u7684bounds\uff0c\u53ef\u4ee5\u7406\u89e3\u4e3a\u4eba\u4e3a\u4fee\u6539\u5165\u53c2\u5427\u3002\u4ee3\u7801\u4e5f\u5f88\u660e\u786e\u4e86\uff0c\u81ea\u5df1\u6839\u636e\u5f53\u524d\u7684bounds\u5408\u7406\u505a\u4e00\u4e2a\u5927\u4e00\u70b9\u7684bounds\uff0c\u4ea4\u7ed9\u7cfb\u7edf\u53bb\u505a\u5c31\u884c\u4e86\u3002", "categories": [{"name": "posts", "slug": "posts", "permalink": "/category/posts/"}], "tags": [{"name": "hitTest", "slug": "hitTest", "permalink": "/tag/hitTest/"}]}, {"title": "Programming iOS 14 - Layer", "date": "2022-02-18T00:00:00-00.00", "path": "/archives/Layer/", "text": "\u300aProgramming iOS 14: Dive Deep into Views, View Controllers, and Frameworks\u300b\u7b2c3\u7ae0\nLayers\n\nA UIView does not actually draw itself onto the screen; it draws itself into its layer, and it is the layer that is portrayed on the screen.\na view is not redrawn frequently;\ninstead, its drawing is cached, and the cached version of the drawing (the bitmap backing store) is used where possible.\nThe cached version is, in fact, the layer.\nthe view\u2019s graphics context is actually the layer\u2019s graphics context.\na layer is the recipient and presenter of a view\u2019s drawing\nLayers are made to be animated\nView\u6301\u6709layer\uff0c\u662flayer\u7684\u4ee3\u7406\uff08CALayerDeletgate\uff09\n\u4f46layer\u4e0d\u80fd\u627e\u5230View\n\n\nView\u7684\u5927\u90e8\u5206\u5c5e\u6027\u90fd\u53ea\u662f\u5176underlying layer\u7684\u4fbf\u6377\u65b9\u6cd5\nlayer\u80fd\u64cd\u63a7\u548c\u6539\u53d8view\u7684\u8868\u73b0\uff0c\u800c\u65e0\u9700ask the view to redraw itself\n\n\u81ea\u5b9a\u4e49underlaying layer\u7684\u65b9\u6cd5class CompassView : UIView {\n    override class var layerClass : AnyClass {\n        return CompassLayer.self\n    }\n}\n\nLayers and Sublayers\n\nlayer\u7684\u7ee7\u627f\u6811\u8ddfview\u7684\u7ee7\u627f\u6811\u51e0\u4e4e\u4e00\u81f4\nlayer\u7684masksToBounds\u5c5e\u6027\u51b3\u5b9a\u4e86\u80fd\u5426\u663e\u793asublayer\u8d85\u51fa\u4e86\u5176bounds\u7684\u90e8\u5206\uff0c\u8fd9\u4e5f\u662fview\u7684clipsToBounds\u7684\u5e73\u884c\u5c5e\u6027\nsublayers\u662f\u53ef\u5199\u7684\uff0c\u800csubviews\u4e0d\u662f\n\u6240\u4ee5\u8bbe\u4e3anil\u53ef\u4ee5\u79fb\u9664\u6240\u6709\u5b50\u5c42\uff0c\u4f46subview\u5374\u9700\u8981\u4e00\u4e2a\u4e2aremoveFromSuperview\n\n\nzPostion\u51b3\u5b9a\u4e86\u5c42\u7ea7\uff08order\uff09\uff0c\u9ed8\u8ba4\u503c\u90fd\u662f0.0\na layer does not have a center\u9760position\u548canchorPoint\u5b9a\u4f4d\nposition: \u5728superLayer\u4e2d\u7684\u4f4d\u7f6e\nanchorPoint: \u7528\u5c0f\u6570\u8868\u793a\u7684bound(\u5bbd/\u9ad8)\u4f4d\u7f6e\uff0c\u5de6\u4e0a(0, 0), \u53f3\u4e0b(1, 1)\uff0c default:(0.5, 0.5)\n\u6240\u4ee5(0.5, 0.5)\u7684anchorPoint\uff0c\u5bf9\u5e94\u7684poosition\u5c31\u7b49\u540c\u4e8ecenter\u4e86\uff0c\u7406\u89e3\u4e00\u4e0b\n\u5176\u5b9e\u5c31\u662f\u8bf4\u4f60\u7684\u201c\u951a\u70b9\u201d\u5728superLayer\u7684\u4ec0\u4e48\u4f4d\u7f6e\u7684\u610f\u601d\n\n\nWhen you get the frame, it is calculated from the bounds size along with the position and anchorPoint.\nWhen you set the frame, you set the bounds size and position\n\n\n\n\n\n// demo, \u628a\u4e00\u4e2a80x40\u7684layer\uff0c\u5de6\u4e0a\u89d2\u653e\u5230(130, 120\u7684\u4f4d\u7f6e\uff09\nlet layer = CALayer()\nlayer.bounds = CGRect.init(x: 0, y: 0, width: 80, height: 40)\nlayer.backgroundColor = UIColor.yellow.cgColor\nlayer.position = CGPoint.init(x: 130, y: 120)\nlayer.anchorPoint = CGPoint.init(x: 0, y: 0)\n\n\n\u5982\u679c\u4e00\u4e2alayer\u7684position\u662f(0, 0)\uff0c\u951a\u70b9\u662f(0,0)\uff0c\u521a\u597d\u663e\u793a\u5728\u5de6\u4e0a\u89d2\n\u800c\uff080.5\uff0c0.5)\u5219\u53ea\u80fd\u663e\u793a\u53f3\u4e0b\u89d2\u76841/4\u4e86\n\u5373(0.5, 0.5)\u5230\u4e86\u539f\u6765(0,0)\u7684\u4f4d\u7f6e\u3002\u6240\u4ee5\u8bf4\u5176\u5b9e\u5c31\u662f\u628a\u81ea\u8eabbounds\u5ea6\u91cf\u4e0b\u7684\u54ea\u4e2a\u4f4d\u7f6e\u79fb\u5230(0,0)\n\u8fd9\u4e48\u8bf4\u6765\uff0c\u5bf9\u951a\u70b9\u7684\u6700\u6b63\u786e\u7406\u89e3\u5176\u5b9e\u662f\uff0c\n\u6211\u628a\u81ea\u8eab\u5750\u6807\u7cfb\u91cc\u7684\u54ea\u4e2a\u70b9\u5b9a\u4e49\u4e3a\u539f\u70b9\uff0c\n\u5e76\u4e14\uff0c\u8fd9\u4e2a\u70b9\u79fb\u5230\u539f\u672c\u201c\u5de6\u4e0a\u89d2\u201d\u7684\u4f4d\u7f6e\uff08\u60f3\u8c610.5,0.5)\n\u5e76\u4e14\uff0c\u6240\u6709\u7684\u65cb\u8f6c\u4e4b\u7c7b\u7684\u52a8\u753b\u672c\u6765\u662f\u5bf9\u201c\u5de6\u4e0a\u89d2\u201d\u7684\u4f4d\u7f6e\u8fdb\u884c\u7684\uff0c\u4e0d\u7ba1\u73b0\u5728\u8fd9\u4e2a\u4f4d\u7f6e\u662flayer\u4e0a\u7684\u54ea\u4e2a\u90e8\u5206\n\u6216\u8005\u8bf4\uff0c\u65cb\u8f6c\u6c38\u8fdc\u662f\u53d1\u751f\u5728position\u4e0a\u7684\uff0c\u4f60\u628a\u54ea\u4e2a\u70b9\u653e\u5230position\u4e0a\u5b83\u4e0d\u7ba1\n\n\n\n\u7406\u89e3frame\u7684\u5c0f\u7ec3\u4e60// \u5982\u679c\u6211\u8bbe\u4e86layer\u7684frame:\ncircle.frame = CGRect.init(x: 50, y: 50, width: 200, height: 200)\n\n// \u5b9e\u9645\u4e0a\u662f\u901a\u8fc7size, position, anchorPoint\u6765\u5b9e\u73b0\u7684\uff1a\ncircle.bounds = CGRect(x: 0, y: 0, width: 200, height: 200)\n\n// \u4ee5\u5de6\u4e0a\u89d2\u4e3aanchorPoint\ncircle.position = CGPoint(x:50, y:50)\ncircle.anchorPoint = CGPoint(x:0, y:0)\n// \u6216\u8005\uff0c\u4ee5\u4e2d\u5fc3\u4e3aanchorPoint\ncircle.position = CGPoint(x:150, y:150)\ncircle.anchorPoint = CGPoint(x:0.5, y:0.5)\n// \u6216\u8005\u5176\u5b83\u4efb\u610fanchorPoint\uff0c\u524d\u63d0\u662f\u81ea\u5df1\u6362\u7b97\n// \u800c\u4e14\uff0c\u867d\u7136\u4f4d\u7f6e\u662f\u4e00\u6837\u7684\uff0c\u4f46\u4f1a\u5f71\u54cdtransform\n\nCAScrollLayer\n\u4f60\u60f3\u901a\u8fc7\u79fb\u52a8layer\u7684bounds\u6765\u91cd\u5b9a\u4f4dsublayers\uff0c\u53ef\u4ee5\u4f7f\u7528CAScrollLayer\n\u4f46\u662f\u5b83\u5e76\u4e0d\u80fd\u901a\u8fc7\u62d6\u62fd\u6765\u79fb\u52a8\u91cc\u9762\u7684\u5185\u5bb9\uff08\u8bb0\u5f97\u5b83\u6ca1\u6709\u54cd\u5e94\u94fe\uff09\n\u800c\u662f\u7406\u89e3\u4e3a\u4e00\u4e2amasksToBounds\u7684\u7a97\u53e3\uff0c\u4f60\u53ea\u80fd\u770b\u5230\u5b83bounds\u91cc\u9762\u7684\u5185\u5bb9\n\u80fd\u901a\u8fc7\u672c\u8eab\u7684scroll(to:)\u65b9\u6cd5\uff0c\u548csublayers\u7684scroll(_:)\u548cscrollRectToVisible(_:)\u65b9\u6cd5\u6765\u6539\u53d8scroll layer\u7684bounds\uff0c\u8fbe\u5230\u663e\u793asublayer\u6307\u5b9a\u533a\u57df\u7684\u76ee\u7684\n\nLayer and Delegate\n\u5bf9\u4e00\u4e2a\u4e0d\u662fUIView\u7684undrelying layer\u7684layer\uff0c\u8ba9\uff08\u4efb\u610f\uff09\u4e00\u4e2a\u5bf9\u8c61\u6210\u4e3a\u5176delegate\uff0c\u53ef\u4ee5\u7531\u5b83\u6765\u64cd\u63a7\u5b83\u7684layout\u548cdrawing\n\u4f46\u5343\u4e07\u4e0d\u8981\u8ba9UIView\u6210\u4e3a\u4e0d\u662f\u5176underlying\u7684layer\u7684\u4ee3\u7406\uff0c\u53cd\u4e4b\u4ea6\u7136\n\nLayout of Lyaers\nWhen a layer needs layout, either because its bounds have changed or because you called setNeedsLayout\n\nDrawing in a Layer\n\nset contents is the simplest way to draw in a layer -&gt; CGImage\n\u4f46contents\u80fd\u63a5\u53d7\u4efb\u4f55\u7c7b\u578b\uff0c\u6240\u4ee5\u4e0d\u6b63\u786e\u7684content\u53ea\u4f1afail silently\n\n\nlayer\u4e5f\u6709\u4e00\u4e2adraw(_:)\u65b9\u6cd5\uff0c\u5b83\u88ab(\u81ea\u52a8)\u8c03\u7528\u7684\u65f6\u5019\u901a\u5e38\u8868\u793a\u8981redisplay itself`\uff0c\u4ec0\u4e48\u65f6\u5019\u9700\u8981redisplay itself?\n\u5982\u679cneedsDisplayOnBoundsChange\u662ffalse\uff0c\u90a3\u4e48\u5c31\u53ea\u6709\u5728sefNeedDisplay\u65b9\u6cd5\uff08\u53ca\u5176inRect\u884d\u751f\u65b9\u6cd5\uff09\u91cc\u4f1a\u89e6\u53d1\n\u5982\u679c\u662f\u975e\u5e38\u91cd\u8981\u7684\u91cd\u7ed8\uff0c\u90a3\u4e48\u9700\u8981\u518d\u663e\u5f0f\u8c03\u7528\u4e00\u6b21displayIfNeeded\n\n\n\u662ftrue\u7684\u8bdd\u5c31\u5982\u5176\u540d\uff0c\u5728bounds\u53d8\u5316\u7684\u65f6\u5019\u4e5f\u4f1a\u91cd\u7ed8\n\n\n\u6709\u56db\u4e2a\u65b9\u6cd5\u80fd\u5728redisplay\u7684\u65f6\u5019\u8c03\u7528:\nsubclass\u7684display\u91cd\u8f7d\uff0c\u5b83\u6ca1\u6709graphics context\uff0c\u6240\u4ee5\u53ea\u80fd\u63d0\u4f9b\u56fe\u7247\ndelegate\u7684display(in:)\u65b9\u6cd5\uff0c\u540c\u6837\uff0c\u53ea\u80fd\u63d0\u4f9b\u56fe\u7247\nsubclass\u7684draw(in:)\u65b9\u6cd5\uff0c\u6709context\uff0c\u6240\u4ee5\u80fd\u76f4\u63a5\u5728\u91cc\u9762\u7ed8\u56fe\uff0c\u4f46\u4e0d\u4f1amake current context\ndelegate\u7684draw(_:in)\u65b9\u6cd5\uff0c\u9650\u5236\u4e5f\u540c\u4e0a\n\n\nunderlaying layer\u4e0d\u5e94\u8c03\u7528\u4e0a\u9762\u7684\u65b9\u6cd5\uff0c\u800c\u4ea4\u7531view\u7684draw(_:)\u65b9\u6cd5\n\u4e00\u5b9a\u8981\u8c03\u4e5f\u53ef\u4ee5\uff0c\u4f46\u8981\u663e\u5f0f\u5b9e\u73b0view\u7684draw(_:)\u65b9\u6cd5\uff0c\u65b9\u6cd5\u4f53\u4e3a\u7a7a\u5c31\u884c\u4e86\n\n\n\nDrawing-Related Layer Properties\ncontentsScale: \u50cf\u7d20\u5bf9\u9ad8\u5206\u5c4f\u7684\u6620\u5c04\uff0cCocoa\u7ba1\u7406\u7684layer\u4f1a\u81ea\u52a8\u8bbe\u7f6e\uff0c\u81ea\u5b9a\u4e49\u7684\u7c7b\u9700\u8981\u6ce8\u610f\u8fd9\u4e2ascale\nopacity: \u5c31\u662fview\u7684alpha\nChanging the isOpaque property has no effect until the layer redisplays itself.\n\n\n\nContent Resizing and Positioning\nA layer\u2019s content is stored (cached) as a bitmap which is then treated like an image:\n\u5982\u679ccontent\u6765\u81ea\u4e00\u5f20\u56fe\u7247\uff0c\u90a3\u4e48\u7f13\u5b58\u7684\u5c31\u662f\u56fe\u7247\uff08CGImage\uff09\uff0c\u5927\u5c0f\u5c31\u662f\u56fe\u7247\u7684point size\n\u5982\u679c\u6765\u81ea\u7ed8\u56fe\uff0c\u90a3\u4e48\u5b58\u7684\u662fgraphics context\n\n\nContentGravity\uff0c\u7c7b\u4f3cUIView\u2019s contentMode property\uff0c\u5373\u7f29\u653e\u62c9\u4f38\n\u56e0\u4e3a\u5750\u6807\u7cfb\u4e0d\u540c\u7684\u5386\u53f2\u539f\u56e0\uff0ctop, bottom\u662f\u76f8\u53cd\u7684\n\u5982\u679c\u662f\u81ea\u5df1\u7ed8\u5236\uff0c\u5219\u8fd9\u4e2a\u5c5e\u6027\u65e0\u610f\u4e49\uff0c\u4f46\u7ed3\u5408\u4e0b\u9762\u7684rect\u5c5e\u6027\u53c8\u6709\u7528\u4e86\uff0c\u56e0\u4e3a\u622a\u53d6\u4e86rect\u5927\u5c0f\u7684\u7ed8\u5236\n\n\ncontentsRect\uff0c\u7ed3\u5408\u4e0a\u4e00\u4e2a\u5c5e\u6027\uff0c\u505a\u8d2d\u7269\u7f51\u7ad9\u90a3\u79cd\u622a\u53d6\u4e00\u5c0f\u5757\uff0c\u7ed8\u5236\u5230\u4e00\u4e2a\u5927\u56fe\u4e0a\u53bb\u3002\u8fd9\u91cc\u662f\u7ed8\u5236\u5230view\u4e0a\n\u9ed8\u8ba4\u662f\u5168\u56fe(0,0,1,1)\n\n\ncontentsCenter ?? \u597d\u50cf\u662f\u5bf9\u4e0a\u8ff0rect\u5c5e\u6027\u5212\u62109\u5bab\u683c\uff0c\u4e0d\u540c\u4f4d\u7f6e\u7684\u683c\u5b50\u7f29\u653e\u89c4\u5219\u4e0d\u4e00\u6837\uff0c\u6bd4\u5982\u56db\u4e2a\u89d2\u843d\u7684\u683c\u5b50\uff0c\u4e0d\u4f1a\u7f29\u653e\n\u6240\u4ee5\u7ed9\u4e86\u4e00\u4e2acenter region\uff08rect)\uff0c\u628a\u5b83\u7684\u56db\u6761\u8fb9\u5ef6\u957f\uff0c\u5c31\u67099\u4e2a\u683c\u5b50\u4e86\n\n\n\nLayers that Draw Themselves\u7cfb\u7edf\u5185\u7f6e\u4e86\u4e00\u4e9b\u80fd\u81ea\u6211\u7ed8\u5236\u7684layer:\nCATextLayer\uff0c\u8f7b\u91cf\u7248\u7684UILabel\u3002\u901a\u8fc7string\u5c5e\u6027\u5b58\u53d6\uff0c\u4e0econtenta\u4f1a\u51b2\u7a81\uff0c\u4e0d\u8981\u540c\u65f6\u8bbe\u3002\nCAShapeLayer, \u6709path\u5c5e\u6027\uff0c\u53ef\u4ee5\u4e0econtents\u5171\u5b58\uff0cpath\u7ed8\u5236\u4e8econtent\u4e4b\u4e0a\uff0c\u5e76\u4e14\u4e0d\u80fd\u8bbe\u878d\u5408\u6a21\u5f0f\nCAGradientLayer\uff0c\u901a\u8fc7\u80cc\u666f\u8272\u505a\u7684\u6e10\u53d8\uff0c\u53bb\u4e86\u89e3\u4e0bclip\u548cmask\n\nTransforms\n\nview\u7684transform\u662f\u6839\u636e\u5176center\u6765\u5e94\u7528\u7684\uff0clayer\u7684\u662f\u6839\u636eanchorPoint\n\u6240\u4ee5anchorPoint\u5c31\u4e24\u4e2a\u4f5c\u7528\uff0c\u628a\u5b83\u79fb\u52a8\u5230position\u7684\u4f4d\u7f6e\uff0c\u548c\u4ee5\u5b83\u4e3a\u4e2d\u5fc3\u8fdb\u884c\u65cb\u8f6c\n\n\n\n\n\u753b\u523b\u5ea6\uff0c\u6838\u5fc3\u662f\u628a\u6587\u5b57\u5148\u5f80\u4e0a\u632a\u5230\u5706\u5708\u7684\u4f4d\u7f6e\uff0c\u6240\u4ee5anchorPoint\u53ea\u52a8y\u4e0d\u52a8x (center, midY/textHeight)\n\nlet str = &quot;ABCD&quot;\nfor (i, s) in str.enumerated() {\n    let t = CATextLayer()\n    t.string = String(s)\n    t.bounds = CGRect.init(x: 0, y: 0, width: 40, height: 40)\n    t.position = circle.center // \u8fd9\u624d\u662f\u6838\u5fc3\uff0c\u4e00\u5207\u5b9a\u4f4d\u548c\u65cb\u8f6c\u7684\u57fa\u51c6\n    let vert = circle.bounds.midY/t.bounds.height\n    t.anchorPoint = CGPoint.init(x: 0.5, y: vert) // \u534a\u5706\u662f\u6587\u5b57\u8c03\u84c4\u7684\u591a\u5c11\u500d\uff0c\u5c31\u4e0a\u79fb\u591a\u5c11\uff0c\u4f46\u9690\u5f62\u7684\u811a\uff08\u5373\u9ad8\u8df7\u7684\u652f\u70b9\uff09\u4ecd\u5728position\u5904\n    t.foregroundColor = UIColor.red.cgColor\n\n    t.setAffineTransform(CGAffineTransform(rotationAngle: .pi/2.0 * CGFloat(i)))\n    circle.addSublayer(t)\n}\n\n\u7ed3\u679c\u5982\u56fe\uff1a\n\n\u753b\u7bad\u5934\uff0c\u6f14\u793a\u4e86\u590d\u6742\u7684\u7ed8\u5236\u600e\u4e48\u628a\u5b83\u4ee3\u7406\u51fa\u53bb\uff0c\u5e76\u4e14\u4ec0\u4e48\u65f6\u673a\u8ba9\u5b83\u4ea7\u751f\u7ed8\u5236\uff1a\n\n// the arrow\nlet arrow = CALayer()\narrow.contentsScale = UIScreen.main.scale\narrow.bounds = CGRect(0, 0, 40, 100)\narrow.position = self.bounds.center\narrow.anchorPoint = CGPoint(0.5, 0.8) // \u7bad\u5c3e\u51f9\u8fdb\u53bb\u7684\u4f4d\u7f6e\uff08\u6240\u4ee5\u4e0d\u53ef\u80fd\u662f1.0\uff09\narrow.delegate = self // we will draw the arrow in the delegate method\narrow.setAffineTransform(CGAffineTransform(rotationAngle:.pi/5.0))\nself.addSublayer(arrow)\narrow.setNeedsDisplay() // draw, please\n\n** 3D Transforms\nA layer\u2019s affineTransform is merely a fa\u00e7ade for accessing its transform.\nA layer\u2019s transform is a three-dimensional transform, a CATransform3D\n\n\u7ed5Y\u8f74\u955c\u50cf\u7684\u793a\u4f8b\uff1asomeLayer.transform = CATransform3DMakeRotation(.pi, 0, 1, 0)\n\n\u4e00\u822c\u800c\u8a00\uff0c\u5728Z\u8f74\u6ca1\u6709\u5206\u91cf\u7684\u5e73\u9762\u56fe\uff0c\u90a3\u5c31\u53ea\u5269\u65cb\u8f6c\u7684\u6548\u679c\u4e86\uff08\u6ca1\u6709\u7ffb\u8f6c)\n\u8fd9\u662f\u628aanchorPoint\u8bbe\u5728\u4e86\u5706\u5fc3\uff0c\u5982\u679c\u8bbe\u5728(0,0):\n\nlayer\u4e0d\u662f\u4e3a\u4e863D\u5efa\u6a21\u800c\u8bde\u751f\u7684\uff08\u8003\u8651Metal\uff09\uff0c\u5b83\u662f2D\u5bf9\u8c61\uff0c\u4e3aspeed\u548csimplicity\u800c\u8bbe\u8ba1\n\ndepth\u73b0\u5b9e\u4e16\u754cz-component\u7684\u52a0\u5165\u4f1a\u8fd1\u5927\u8fdc\u5c0f\uff0clayer\u7ed8\u5236\u6ca1\u6709\u8868\u73b0\u51fa\u8fd9\u79cd\u8ddd\u79bb\uff0c\u800c\u662f\u538b\u5e73\u5230\u4e00\u4e2a\u9762\uff1aorthographic projection\uff0c\u4f46\u662f\u4f7f\u7528\u4e86\u4e00\u4e9b\u6280\u5de7\u6765\u5236\u9020\u8fd9\u79cd\u89c6\u89c9\u6548\u679c\u3002[waiting for demo]Futher Layer Features\nshadows\nThe shadow is normally based on the shape of the layer\u2019s nontransparent region\n\u6240\u4ee5\u5b8c\u5168\u900f\u660e\u7684\u89c6\u56fe\u662f\u6ca1\u6709\u9634\u5f71\u7684\n\n\nclip\u548cshadow\u662f\u4e0d\u53ef\u80fd\u540c\u65f6\u5b58\u5728\u7684\uff0c\u6280\u5de7\u662f\u7528\u53e6\u4e00\u4e2aview\u53e0\u5230\u5e95\u5c42\uff0c\u8ba9\u5b83\u5b9e\u73b0\u9634\u5f71\u3002\n\nBorders and Rounded Corners\n\u60f3\u8981\u5706\u89d2\uff0c\u5c31\u5fc5\u987b\u7528masksToBounds\u6765\u5b9e\u73b0clip\uff0c\u540c\u65f6\u8fd8\u8981\u9634\u5f71\u7684\u8bdd\uff0c\u53c8\u5f97\u501f\u52a9\u4e0a\u56fe\u7684\u6280\u5de7\u4e86\u3002\n\u4eceiOS 11\u8d77\uff0c\u53ef\u4ee5\u5355\u72ec\u8bbe\u7f6e\u5706\u89d2\u4e86\uff1amaskedCorners\uff0c\u5b83\u7531minx, miny, maxx, maxy\u8fd9\u79cd\u98ce\u683c\u7684\u63cf\u8ff0\u8fdb\u884c\u7ec4\u5408\uff0c\u800c\u4e0d\u662f\u6211\u4eec\u671f\u671b\u7684top-left\u4e4b\u7c7b\u7684\u3002\n\nMasks\nA CALayer can have a mask. This is itself a layer, whose content must be provided somehow.\n\u53ea\u6709\u900f\u660e\u90e8\u5206\u6709\u4f5c\u7528\n\u900f\u660e\u7684\u4f4d\u7f6e\uff0c\u5bf9\u5e94\u7684layer\u4f4d\u7f6e\u4e5f\u662f\u900f\u660e\u7684\n\u53cd\u8fc7\u6765\u60f3\u4e0d\u900f\u660e\u7684\u90e8\u5206\uff0c\u8fd8\u662f\u88ab\u5e94\u7528mask\u7684layer\u80fd\u663e\u793a\u7684\u90e8\u5206\n\u8fd9\u5c31\u662fphotoshop\u91cc\u56fe\u5c42\u8499\u677f\u201d\u6d82\u9ed1\u5c31\u662f\u663e\u793a\u201c\u7684\u610f\u601d\n\n\nthere is no built-in mechanism for automatically resizing the mask as the layer is resized.\n\u628a\u4e00\u4e2aview\u5f53\u4f5c\u53e6\u4e00\u4e2aview\u7684mask\u5c5e\u6027\uff0c\u5e95\u5c42\u5c31\u662f\u76f8\u5e94\u7684layer\n\n\u4e0b\u4f8b\u7528mask\u6765\u5236\u4f5c\u81ea\u5df1\u7684\u5706\u89d2\u77e9\u5f62\uff0c\u6ce8\u610f\u91cc\u9762context\u548cpath\u7684\u5173\u7cfb\u3002\u5728context\u91cc\u9762\uff0c\u65b0\u5efa\u7684path\u90fd\u662f\u80fd\u76f4\u63a5\u7ed8\u5236\u7684\uff0c\u800c\u4e0d\u9700\u8981\u8fd9\u4e2apath\u8bbe\u4e3a\u8c01\u7684\u5c5e\u6027\uff08drawRect:\u65b9\u6cd5\u91cc\u4e5f\u662f\u4e00\u6837\uff0c\u53ea\u8981\u65b0\u5efapath\uff0c\u518d\u81ea\u884c\u53bbstoke, fill\u90fd\u884c\uff0c\u800ccontext\u4e0a\u4e5f\u53ef\u4ee5\u76f4\u63a5\u7ed8\u5236func mask(size sz:CGSize, roundingCorners rad:CGFloat) -&gt; CALayer {\n    let rect = CGRect(origin:.zero, size:sz)\n    let r = UIGraphicsImageRenderer(bounds:rect)\n    let im = r.image { ctx in\n        // context\u7ed8\u5236\n        let con = ctx.cgContext\n        con.setFillColor(UIColor(white:0, alpha:0).cgColor)\n        con.fill(rect)\n        con.setFillColor(UIColor(white:0, alpha:1).cgColor)\n        // path\u7ed8\u5236\n        let p = UIBezierPath(roundedRect:rect, cornerRadius:rad)\n        p.fill()\n    }\n    let mask = CALayer()\n    mask.frame = rect\n    mask.contents = im.cgImage\n    return mask\n}\n\nLayer Efficiency\n\u7531\u4e8e\u79fb\u52a8\u8bbe\u5907\u7b97\u529b\u7684\u5f71\u54cd\uff0c\u5927\u91cf\u53e0\u52a0\u7684\u534a\u900f\u660e\u56fe\u5c42\u7684\u6e32\u67d3\u662f\u4e00\u4ef6\u5f88\u6d88\u8017\u4e14\u4f4e\u6548\u7684\u4e8b\uff0c\u7279\u522b\u662f\u52a8\u753b\u7684\u65f6\u5019\u3002debug\uff1a\nCore Animation template in Instruments\nNew in Xcode 12, animation \u201chitches\u201d can be measured with XCTMetrics during performance testing.\nthe Simulator\u2019s Debug menu lets you summon colored overlays that provide clues as to possible sources of inefficient drawing\n\u771f\u673a\uff1aDebug \u2192 View Debugging \u2192 Rendering\n\n\nNew in Xcode 12, the view debugger (\u201cView Debugger\u201d on page 75) can display layers \u2014 choose Editor \u2192 Show Layers \u2014 and can offer suggestions for improving layer rendering efficiency.\n\ntips:\nopaque drawing is most efficient.\nNonopaque drawing is what the Simulator marks when you check Debug \u2192 Color Blended Layers.\n\n\n\u201cfreezing\u201d the entirety of the layer\u2019s drawing as a bitmap.\n\u76f4\u63a5\u7ed8\u5236\u6548\u7387\u786e\u5b9e\u6bd4\u7f13\u5b58\u6548\u7387\u9ad8\n\u4f46\u662f\u8fc7\u6df1\u8fc7\u590d\u6742\u7684\u7ee7\u627f\u6811\uff0c\u6ca1\u5fc5\u8981\u6bcf\u6b21\u90fd\u5b9e\u65f6\u8ba1\u7b97\u6e32\u67d3\nby shouldRasterize = true and rasterizationScale = UIScreen.main.scale\n\n\ndrawsAsynchronously = true\n\nLayers and Key-Value Coding\nlayer.mask = mask\n// or:\nlayer.setValue(mask, forKey: &quot;mask&quot;)\n\nself.rotationLayer.transform = CATransform3DMakeRotation(.pi/4.0, 0, 1, 0)\n// or:\nself.rotationLayer.setValue(.pi/4.0, forKeyPath:&quot;transform.rotation.y&quot;)\n\n\n\u4e0d\u4ee3\u8868CATransform3D\u6709rotation\u5c5e\u6027\n\u5b83\u6ca1\u6709\u4efb\u4f55\u5c5e\u6027\n\u5b83\u751a\u81f3\u4e0d\u662f\u4e00\u4e2a\u5bf9\u8c61\nself.rotationLayer.transform.rotation.y = //... no, sorry\n\n\nsome transform key:\n\n\u2022 &quot;rotation.x&quot;,&quot;rotation.y&quot;,&quot;rotation.z&quot;\n\u2022 &quot;rotation&quot; (same as &quot;rotation.z&quot;)\n\u2022 &quot;scale.x&quot;,&quot;scale.y&quot;,&quot;scale.z&quot;\n\u2022 &quot;translation.x&quot;,&quot;translation.y&quot;,&quot;translation.z&quot; \u2022 &quot;translation&quot; (two-dimensional, a CGSize)\nTheQuartz Core framework also injects key\u2013value coding compliance into CGPoint, CGSize, and CGRect, allowing you to use keys and key paths matching their struct component names.\n\n\nsee \u201cCore Animation Extensions to Key-Value Coding\u201d in Apple\u2019s Core Animation Programming Guide\n\nyou can treat a CALayer as a kind of dictionary, and get and set the value for any key.\nview\u6709tag\uff0clayer\u5c31\u6709\u4efb\u610fkey\n\n\n\n", "categories": [{"name": "posts", "slug": "posts", "permalink": "/category/posts/"}], "tags": [{"name": "drawing", "slug": "drawing", "permalink": "/tag/drawing/"}, {"name": "layer", "slug": "layer", "permalink": "/tag/layer/"}, {"name": "mask", "slug": "mask", "permalink": "/tag/mask/"}, {"name": "shadow", "slug": "shadow", "permalink": "/tag/shadow/"}, {"name": "transforms", "slug": "transforms", "permalink": "/tag/transforms/"}, {"name": "anchorpoint", "slug": "anchorpoint", "permalink": "/tag/anchorpoint/"}]}, {"title": "\u300aEffective Objective-C 2.0\u300b\u7b14\u8bb0\u7b2c1-2\u7ae0", "date": "2022-01-14T00:00:00-00.00", "path": "/archives/%E3%80%8AEffective-Objective-C-2.0%E3%80%8B%E7%AC%94%E8%AE%B0%E7%AC%AC1-2%E7%AB%A0/", "text": "\n\u8fd9\u4e2a\u4e66\u5f53\u7136\u4e2d\u6587\u7248\u7684\uff0c\u4e5f\u5f88\u7ecf\u5178\uff0c\u6211\u4e5f\u8bfb\u8fc7\u4e86\uff0c\u4f46\u662f\u561b\uff0c\u8001\u89c4\u77e9\uff0c\u6709\u539f\u7248\u8fd8\u662f\u8bfb\u4e00\u904d\u539f\u7248\uff0c\u518d\u52a0\u4e0a\u82f1\u6587\u6c34\u5e73\u4e5f\u53ea\u6709\u90a3\u4e48\u597d\uff0c\u6709\u673a\u4f1a\u80fd\u591a\u8bfb\u8bfb\u5728\u5c31\u591a\u8bfb\u8bfb\u5427\u3002\u4e00\u5171\u5c317\u7ae0\uff0c52\u8282\uff0c200\u591a\u9875\uff0c\u5e76\u4e0d\u591a\u3002\n\u6b64\u5916\uff0c\u56e0\u4e3a\u5f88\u591a\u540d\u8bcd\u5176\u5b9e\u6211\u4eec\u5e73\u65f6\u76f4\u63a5\u53eb\u7684\u5c31\u662f\u82f1\u6587\uff0c\u4e2d\u6587\u7248\u91cc\u7edf\u7edf\u90fd\u7ed9\u4e86\u4e00\u4e2a\u4e2d\u6587\u7ffb\u8bd1\uff0c\u53cd\u800c\u66f4\u964c\u751f\u4e86\uff0c\u6709\u79cd\u201c\u8bbf\u8fbe\u201d\u7684\u5373\u89c6\u611f\u3002\nChapter 1: Accustoming Yourself to Objective-C\nItem 1: Familiarize Yourself with Objective-C\u2019s Roots\n\nmessaging structure v.s. function callihng\nin messaging structure, the runtime decides which code gets executed, while in function, the  compiler decides.\ndynamic binding v.s. virtual table  &lt;= \u591a\u6001\n\n\nruntime component v.s. compiler\n\u542b\u6709\u6240\u6709\u8ba9\u9762\u5411\u5bf9\u8c61\u7684OC\u80fd\u5de5\u4f5c\u7684 data structures and functions\n\u6bd4\u5982\uff0c\u542b\u6709\u6240\u6709\u7684memory-management methods\n\n\n\u66f4\u65b0runtime component\u5c31\u80fd\u63d0\u5347\u6027\u80fd\uff0c\u800c\u65e0\u9700\u91cd\u65b0\u7f16\u8bd1\n\n\nObjective-C is a superset of C\n\u6240\u4ee5\u8bed\u6cd5\u57fa\u672c\u7c7b\u4f3c\uff1aNSString *str = @&quot;The String\n\u8868\u793a\u58f0\u660e\u4e86\u4e00\u4e2a\u53d8\u91cf\uff0c\u7c7b\u578b\u662fNSString *\uff0c\u662f\u4e00\u4e2a\u6307\u5411NSString\u7684\u6307\u9488\n\u6240\u6709OC\u5bf9\u8c61\u5fc5\u987b\u5982\u6b64\u58f0\u660e\uff0c\u5bf9\u8c61\u5185\u5b58\u4e5f\u603b\u662f\u5206\u914d\u5728heap space\u4e0a\n\u8fd9\u662f\u5206\u914d\u5230stack\u4e0a\uff1aNSString stackString &lt;- \u62a5\u9519\n\n\n\u4f46\u6307\u5411\u8fd9\u4e2a\u5bf9\u8c61\u7684\u6307\u9488\uff08pointer\uff09\u662f\u5206\u914d\u5728stack frame\u91cc\u7684\uff0c\u591a\u4e2a\u6307\u5411\u540c\u4e00\u5bf9\u8c61\u7684\u6307\u9488\u5c31\u5206\u914d\u4e86\u591a\u4e2a\u5185\u5b58\n\u6bcf\u4e2a\u5185\u5b58\u5927\u5c0f\u5c31\u662f\u4e00\u679a\u6307\u9488\u7684\u5927\u5c0f\n\u503c\u4e5f\u662f\u4e00\u6837\n\n\n\n\nThe memory allocated in the heap has to be managed directly\nOC\u5c06\u5806\u5185\u5b58\u7ba1\u7406\u62bd\u8c61\u4e86\u51fa\u6765\uff0cruntime\u8fdb\u4e00\u6b65\u62bd\u8c61\u6210\u4e00\u5957\u5185\u5b58\u7ba1\u7406\u67b6\u6784\uff1areference counting\n\n\n\u6574\u4e2a\u7cfb\u7edf\u6846\u67b6\u90fd\u8981\u4f7f\u7528\u7ed3\u6784\u4f53\uff0c\u7528\u5bf9\u8c61\u4f1a\u6709\u989d\u5916\u7684\u5f00\u9500\n\nItem 2: Minimize Importing Headers in Headers\nObjective-C, just like C and C++, makes use of header files and implementation files.\nforward declaring -&gt; @class SomeClass\n\u5934\u6587\u4ef6\u91cc\u5e76\u4e0d\u77e5\u9053\u77e5\u9053\u4e00\u4e9b\u7c7b\u7684\u5b9e\u73b0\u7ec6\u8282\uff0c\u53ea\u9700\u8981\u77e5\u9053\u6709\u8fd9\u4e48\u4e00\u4e2a\u7c7b\u5c31\u884c\u4e86\n\u4f46\u662f.m\u6587\u4ef6\u91cc\u5c31\u8981\u81ea\u884c\u53bbimport\u4e00\u6b21\u8fd9\u4e2aclass\u4e86\n\u539f\u5219\u5c31\u662f\u5c3d\u91cf\u5ef6\u540e\u5f15\u5165\u5934\u6587\u4ef6\u7684\u65f6\u673a\uff0c\u51cf\u5c11\u7f16\u8bd1\u65f6\u95f4\n\u8fd8\u89e3\u51b3\u4e86\u4e92\u76f8\u5f15\u7528\u7684\u95ee\u9898\n\u5f15\u7528super class, protocol\u7b49\u5fc5\u987b\u8981\u77e5\u9053\u7ec6\u8282\uff0c\u4e0d\u80fd\u5e94\u7528forward declaring\n\u6240\u4ee5\u6700\u597d\u628aprotocol\u5355\u72ec\u653e\u5728\u4e00\u4e2a\u5934\u6587\u4ef6\uff0c\u907f\u514d\u65e0\u8c13\u5730\u5f15\u7528\u5927\u6587\u4ef6\uff0c\u589e\u52a0\u7f16\u8bd1\u65f6\u95f4\n\u4f46\u662fdelegate\u653e\u5230class-continuation category\u91cc\u9762\u5199\u66f4\u597d\uff08\u5373\u5728.m\u6587\u4ef6\u91cc\u5199protocol\u548cimport\uff09\uff0c\u65e0\u9700\u66b4\u9732\u5230\u516c\u5171\u5934\u6587\u4ef6\n\n\n\u5173\u952e\u8bcd\uff1a\u51cf\u5c0f\u4f9d\u8d56\uff0c\u7f29\u51cf\u7f16\u8bd1\u65f6\u95f4\n\n\n\nItem 3: Prefer Literal Syntax over the Equivalent Methods\n\n\u5c3d\u91cf\u4f7f\u7528\u5b57\u9762\u91cf\u8bed\u6cd5\uff08Literal Syntax\uff09\u521b\u5efa\u548c\u4f7f\u7528\u5bf9\u8c61\n\u5b57\u9762\u91cf\u8bed\u6cd5\u53ea\u662f\u4e00\u4e2a\u8bed\u6cd5\u7cd6\uff08syntactic sugar\uff09\uff0c\u63a8\u8350\u4f7f\u7528\u5b57\u9762\u91cf\uff0c\u4f1a\u51cf\u5c11\u4ee3\u7801\u91cf\uff0c\u4f46\u6700\u597d\u77e5\u9053\u5b83\u5bf9\u5e94\u7684\u539f\u59cb\u65b9\u6cd5\u3002\uff08\u4f46\u662f\u8fd8\u662f\u4f1a\u6709\u6240\u533a\u522b\uff0c\u770b\u4e0b\u4f8b\uff09\n\u7528\u5b57\u9762\u91cf\u521d\u59cb\u6570\u7ec4\uff0c\u5982\u679c\u4e0d\u662f\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u662fnil\uff0c\u4f1a\u62a5\u9519\uff0c\u800c\u539f\u59cb\u7684arrayWithObjects:\u65b9\u6cd5\u5219\u4f1a\u5728\u78b0\u5230\u7b2c\u4e00\u4e2anil\u65f6\u5f53\u6210\u662f\u7ec8\u6b62\u53c2\u6570\u800c\u6b63\u5e38\u6267\u884c\uff08\u53ea\u4fdd\u7559nil\u524d\u7684\u5143\u7d20\u521d\u59cb\u5316\u6570\u7ec4\uff09\n\u4f5c\u8005\u8bf4\u8fd9\u53cd\u800c\u662f\u597d\u4e8b\uff0c\u672a\u9884\u6599\u5230\u7684\u60c5\u51b5\u6210\u529f\u6267\u884c\u6bd4\u62a5\u9519\u66f4\u53ef\u6015\uff0c\u629b\u5f02\u5e38\u80fd\u66f4\u65e9\u5730\u53d1\u73b0\u9519\u8bef\n\n\n\u53ea\u80fd\u521b\u5efaFoundation\u6846\u67b6\u7684\u5bf9\u8c61\uff0c\u81ea\u5b9a\u4e49\u5bf9\u8c61\u4e0d\u884c\uff08\u4e00\u822c\u4e5f\u6ca1\u5fc5\u8981\uff09\n\u4f7f\u7528\u5b57\u9762\u91cf\u8bed\u6cd5\u521b\u5efa\u51fa\u6765\u7684String, Array, Dict\u7b49\u90fdimmutable\u7684\n\nItem 4: Prefer Typed Constants to Preprocessor #define\n\n#define\u672c\u8d28\u662f\u66ff\u6362\n#define\u51fa\u6765\u7684\u662f\u6ca1\u6709\u7c7b\u578b\u4fe1\u606f\u7684\n\u5982\u679c\u662f\u58f0\u660e\u5728\u5934\u6587\u4ef6\u4e2d\uff0c\u5f15\u7528\u4e86\u6b64\u5934\u6587\u4ef6\u7684\u4ee3\u7801\u90fd\u4f1a\u5e94\u7528\u6b64\u66ff\u6362\n\u5373\u4f7f\u88ab\u91cd\u5b9a\u4e49\u4e86\uff0c\u7f16\u8bd1\u5668\u4e5f\u4e0d\u4f1a\u4ea7\u751f\u8b66\u544a\n\n\n\u800c\u5e38\u91cf\u5c31\u5e26\u4e86\u7c7b\u578b\u4fe1\u606f\nstatic NSString * const MyStringConstants = &quot;Hello world;\n\u6ce8\u610f\u661f\u53f7\u7684\u4f4d\u7f6e\uff0c\u8fd9\u91cc\u8868\u793a\u6307\u9488\u6307\u5411\u7684\u662f\u6574\u4e2a\u5e38\u91cf\n\u5982\u679c\u628a\u661f\u53f7\u5199\u5230const\u540e\uff0c\u90a3\u8868\u793a\u6307\u9488\u5c31\u662f\u90a3\u4e2a\u5e38\u91cf...\n\n\n\u5b9a\u4e49\u5e38\u91cf\u7684\u4f4d\u7f6e\u5f88\u91cd\u8981\uff08\u9884\u5904\u7406\u6307\u4ee4\u4e5f\u4e00\u6837\uff09\uff0c\u4e0d\u6253\u7b97\u516c\u5f00\u7684\u8bdd\u5c31\u5728.m\u6587\u4ef6\u91cc\u5b9a\u4e49\n\u547d\u4ee4\u4e5f\u5f88\u91cd\u8981\n\u5426\u5219\u6210\u4e86\u5168\u5c40\u53d8\u91cf\uff0c\u5f88\u53ef\u80fd\u201d\u4e0d\u7ecf\u610f\u201c\u5f15\u8d77\u53d8\u91cf\u51b2\u7a81/\u8986\u76d6\nstatic const\u8981\u4e00\u8d77\u4f7f\u7528\uff0c\u5355\u72ec\u7684const\u4f1a\u62a5\u9519\nstatic\u4e0d\u518d\u662f\u522b\u7684\u8bed\u8a00\u4e2d\u7684\u9759\u6001\u53d8\u91cf\uff0c\u800c\u4fdd\u662f\u4e00\u4e2a\u4f5c\u7528\u57df\u58f0\u660e\n\u4e00\u4e2a\u7f16\u8bd1\u5355\u5143\uff08translation unit\uff09\u4e2a\u8f93\u51fa\u4e00\u4e2a\u76ee\u6807\u6587\u4ef6\uff08object file\uff09\n\u8003\u8651\u4f60\u7f16\u8bd1\u4e00\u4e2ac++\u6587\u4ef6\uff0c\u4e00\u4e2a\u6587\u4ef6\u751f\u6210\u4e00\u4e2a\u76ee\u6807\uff08\u4e8c\u8fdb\u5236\uff09\u6587\u4ef6\uff0c\u7136\u540e\u518d\u94fe\u63a5\u3002\n\u6240\u4ee5\u4e00\u4e2a\u7f16\u8bd1\u5355\u5143\u4e00\u822c\u662f\u4e00\u4e2a.m\u6587\u4ef6\n\n\n\u7ed3\u5408\u8d77\u6765\uff0cstatic\u5c31\u662f\u5728\u4e00\u4e2a\u76ee\u6807\u6587\u4ef6\u5185\u53ef\u89c1\n\u5982\u679c\u4e0d\u52a0static\uff0c\u7f16\u8bd1\u5668\u4f1a\u6dfb\u52a0\u4e00\u4e2aexternal symbol\uff08\u540e\u9762\u6709\u8be6\u8ff0\uff09\uff0c\u8fd9\u6837\u5c31\u6709\u91cd\u5b9a\u4e49\u98ce\u9669\u4e86\uff08duplicate symbol\uff09\n\n\n\u6700\u540e\uff0c\u4e8b\u5b9e\u4e0astatic const\u4e00\u8d77\u7528\uff0c\u7f16\u8bd1\u5668\u505a\u7684\u4ecd\u7136\u662f\u66ff\u6362\uff0c\u800c\u6ca1\u6709\u53bb\u521b\u5efa\u7b26\u53f7\uff08\u4f46\u6b64\u65f6\u5df2\u7ecf\u6709\u7c7b\u578b\u4fe1\u606f\u4e86\uff09\n\n*\u5982\u679c\u9700\u8981\u516c\u5f00\uff0c\u5219\u6dfb\u52a0\u5230\u5168\u5c40\u7b26\u53f7\u8868\uff08global symbol table\uff09\u4e2d\uff1a// In the header file\nextern NSString *const EOCStringConstant;\n\n// In the implementation file\nNSString *const EOCStringConstant = @&quot;VALUE&quot;;\n\n\n\u4e0a\u9762\u89e3\u91ca\u4e86static\uff0c\u73b0\u5728\u6765\u89e3\u91caextern\nextern\u8868\u793a\u5411\u7f16\u8bd1\u5668\u4fdd\u8bc1\u5168\u5c40\u7b26\u53f7\u8868\u4e2d\u5c06\u4f1a\u6709\u8fd9\u4e2a\u7b26\u53f7\uff0c\u5176\u5b9e\u5c31\u662f\u8981\u7f16\u8bd1\u5668\u4e0d\u8981\u7ee7\u7eed\u68c0\u67e5\n\u5b83\u77e5\u9053\u94fe\u63a5\u6210\u4e8c\u8fdb\u5236\u6587\u4ef6\u540e\uff0c\u80af\u5b9a\u80fd\u627e\u5230\u8fd9\u4e2a\u5e38\u91cf\n\n\n\u6240\u4ee5\u5728.m\u6587\u4ef6\u91cc\u6b63\u5e38\u5b9a\u4e49\u548c\u8d4b\u503c\uff0c\u5728\u4efb\u610f.h\u6587\u4ef6\u65f6\u7ed9\u7f16\u8bd1\u5668\u6253\u4e2a\u62db\u547c\u5c31\u884c\u4e86\n\u547d\u540d\u89c4\u8303\uff1a\n\u5982\u679c\u662f\u9650\u5b9a\u53ef\u89c1\u57df\u7684\uff0c\u7528k\u5f00\u5934\u5c31\u884c\u4e86\n\u5982\u679c\u4f1a\u516c\u5f00\u7684\uff0c\u90a3\u4e48\u5c31\u7528\u51fd\u6570\u540d\u4f5c\u524d\u7f00\uff08\u7cfb\u7edf\u6846\u67b6\u90fd\u662f\u8fd9\u4e48\u505a\u7684\uff09\n\n\n\nexternal symbol V.S. global symbol\n\u524d\u6587\u4f60\u5df2\u7ecf\u77e5\u9053\u4e86\u4e24\u79cd\u63d0\u5347\u4f5c\u7528\u57df\u7684\u65b9\u5f0f\uff0c\u533a\u522b\u5728\n\u4e00\u4e2a\u662f\u901a\u8fc7\u4e0d\u5bf9const\u52a0static\uff08\u6dfb\u52a0external symbol\uff09\uff0c\n\u4e00\u4e2a\u662f\u989d\u5916\u58f0\u660eextern\uff08\u6dfb\u52a0\u5230blobal symbol talbe\uff09\n\n\nItem 5: Use Enumerations for States, Options, and Status Codes\n\n\u679a\u4e3e\u53ea\u662f\u4e00\u79cd\u5e38\u91cf\u547d\u540d\u65b9\u5f0f\n\u8bed\u6cd5\u5f88\u5947\u8469\uff1aenum EOCConnectionState state = EOCConnectionStateDisconnected;\n\u770b\u9ad8\u4eae\u7684\u90e8\u5206\uff0c\u522b\u4eba\u53ea\u8981\u5199\u4e00\u4e2atype\uff0c\u5b83\u8981\u8fdeenum\u5e26\u540d\u79f0\u5199\u5168\n\n\n\u6240\u4ee5\u4e00\u822c\u4f1atypedef\u4e00\u4e0b\uff1atypedef enum EOCConnectionState EOCConnectionState;\n\u73b0\u5728\u5c31\u53ef\u4ee5\u7528EOCConnectionState\u8fd9\u4e2atype\u6765\u5b9a\u4e49\u53d8\u91cf\u4e86\n\n\n\u7528enum\u6765\u505a\u9009\u9879(options)\u7684\u65f6\u5019\uff0c\u56e0\u4e3a\u4e0d\u662f\u4e92\u65a5\u7684\u5173\u7cfb\uff0c\u9009\u62e9bitwise OR operator\u6765\u4f1a\u76f4\u89c2\u5f88\u591a\uff08\u5c31\u662f\u6bcf\u4e00\u4e2a\u4e8c\u8fdb\u5236\u4f4d\u4ee3\u8868\u4e00\u4e2a\u72b6\u6001\uff09\n\nenum UIViewAutoresizing { \n    UIViewAutoresizingNone = 0, \n    UIViewAutoresizingFlexibleLeftMargin = 1 &lt;&lt; 0, \n    UIViewAutoresizingFlexibleWidth = 1 &lt;&lt; 1, \n    UIViewAutoresizingFlexibleRightMargin = 1 &lt;&lt; 2, \n    UIViewAutoresizingFlexibleTopMargin = 1 &lt;&lt; 3, \n    UIViewAutoresizingFlexibleHeight = 1 &lt;&lt; 4, \n    UIViewAutoresizingFlexibleBottomMargin = 1 &lt;&lt; 5,\n}\n\n\nFoundation\u6846\u67b6\u5b9a\u4e49\u4e86\u4e00\u4e9b\u8f85\u52a9\u5b8f\uff0c\u4ee5\u4fbf\u652f\u6301\u65b0\u7684C++\u6807\u51c6\u5bf9\u5b8f\u5b9a\u4e49\u7684\u589e\u5f3a\u540c\u65f6\u8fd8\u80fd\u517c\u5bb9\u8001\u7684\u6807\u51c6: NS_ENUM\u548cNS_OPTIONS\n\u7279\u522b\u662fc++\u5bf9\u679a\u4e3e\u503c\u91cc\u7684bitwise\u64cd\u4f5c\u7ed3\u679c\u9700\u8981\u663e\u5f0f\u8f6c\u6362\n\u6240\u4ee5\u7528\u5230\u4e86\u53ef\u7ec4\u5408\u7684option\u7c7b\u7684\u679a\u4e3e\uff0c\u6700\u597d\u7528NS_OPTIONS\u5b8f\uff0c\u5426\u5219\u7528NS_ENUM\u5c31\u591f\u4e86\n\n\n\u5bf9enum\u5e94\u7528switch\u6700\u597d\u4e0d\u8981\u52a0default\uff0c\u8fd9\u6837\u4f60\u6dfb\u52a0\u4e86\u65b0\u7684\u679a\u4e3e\u503c\u800c\u5fd8\u8bb0\u4e86\u5904\u7406\uff0c\u80fd\u53ca\u65f6\u5f97\u5230\u9519\u8bef\u53cd\u9988\n\nChapter 2: Objects, Messaging, and the Runtime\nItem 6: Understand Properties\n\nProperties are an Objective-C feature providing encapsulation of the data an object contains.\nstored by instance variables\naccessed through accessor methods (getter, setter)\ncan be written by complier automatically &lt;= autosynthesis\nintroduced a dot syntax to  accessing the data\n\n\n\n\n\n\u770b\u4e00\u4e0bC++\u5199\u6cd5\uff1a@interface EOCPerson : NSObject { \n@public\n    NSString *_firstName;\n    NSString *_lastName; \n@private\n    NSString *_someInternalData; \n}\n@end\n\n\n\u5bf9\u8c61\u5e03\u5c40\u5728\u7f16\u8bd1\u671f\u5c31\u786e\u5b9a\u4e86\uff0c\u6240\u4ee5\u5c31\u786c\u7f16\u7801\u4e86\u6bcf\u4e2a\u5c5e\u6027\u5728\u5bf9\u8c61\u5185\u5b58\u4e2d\u7684\u504f\u79fb\u91cf\n\u6240\u4ee5\u5982\u679c\u5bf9\u8c61\u5e03\u5c40\u53d8\u5316\u4e86\uff08\u6bd4\u5982\u589e\u52a0\u4e86\u5b9e\u4f8b\u53d8\u91cf\uff09\uff0c\u8fd9\u4e9b\u504f\u79fb\u91cf\u5c31\u4f1a\u51fa\u9519\uff0c\u5fc5\u987b\u8981\u91cd\u65b0\u7f16\u8bd1\u3002\n\u5982\u679c\u94fe\u63a5\u4ee3\u7801\u65f6\u4f7f\u7528\u4e86\u4e0d\u540c\u7248\u672c\u7684\u7c7b\u5b9a\u4e49\uff0c\u5c31\u4f1a\u4ea7\u751f\u8fd9\u79cd\u201c\u4e0d\u517c\u5bb9\u201d\u7684\u95ee\u9898\n\n\nOC\u7684\u89e3\u51b3\u65b9\u6848\u662f\uff0c\u628a\u504f\u79fb\u91cf\u4ecd\u7531\u201c\u5b9e\u4f8b\u53d8\u91cf\u201d\u5b58\u50a8\n\u4f46\u662f\u4ea4\u7531\u201c\u7c7b\u5bf9\u8c61\u201c(class object)\u4fdd\u7ba1\n\u504f\u79fb\u91cf\u5728\u8fd0\u884c\u671f\u67e5\u627e -&gt; \u7c7b\u7684\u5b9a\u4e49\u53d8\u4e86\uff0c\u504f\u79fb\u91cf\u4e5f\u5c31\u53d8\u4e86\uff08\u5b9e\u65f6\u7684\uff09\n\u751a\u81f3\u53ef\u4ee5\u5728\u8fd0\u884c\u671f\u5411\u7c7b\u4e2d\u65b0\u589e\u5b9e\u4f8b\u53d8\u91cf\nnonfragile Application Binary Interface(ABI)\n\u8fd9\u6837\u5c31\u53ef\u4ee5\u4e0d\u6b62\u5728\u58f0\u660e\u6587\u4ef6\u91cc\u5b9a\u4e49\u5b9e\u4f8b\u53d8\u91cf\uff0c\u8fd8\u53ef\u4ee5\u5728class-continuation\u548c\u5b9e\u73b0\u6587\u4ef6\u91cc\u9762\u5b9a\u4e49\u4e86\n\n\n\u5c3d\u91cf\u4e0d\u8981\u76f4\u63a5\u8bbf\u95ee\u5b9e\u4f8b\u53d8\u91cf\n\n\n\u4f7f\u7528\u70b9\u8bed\u6cd5\u8bbf\u95ee\u5c5e\u6027\n\u7f16\u8bd1\u5668\u4f1a\u8f6c\u6362\u4e3a\u5bf9\u5b58\u53d6\u65b9\u6cd5\u7684\u8c03\u7528\n\u7f16\u8bd1\u5668\u4f1a\u4e3a\u5c5e\u6027\u751f\u6210\u76f8\u5e94\u7684\u5b9e\u4f8b\u53d8\u91cf\uff0c\u5e76\u81ea\u52a8\u5408\u6210\uff08\u751f\u6210\u76f8\u5e94\u7684\u5b58\u53d6\u65b9\u6cd5\uff09\n\u7f16\u8bd1\u671f\u8fdb\u884c\uff0c\u6240\u4ee5\u4f60\u770b\u4e0d\u5230\u5b9e\u9645\u7684\u4ee3\u7801\n\u4e5f\u53ef\u4ee5\u624b\u5199\u540c\u6837\u7684\u4ee3\u7801\uff08\u8fd9\u65f6\u4f60\u5c31\u53ef\u4ee5\u81ea\u5b9a\u4e49\u5b9e\u4f8b\u65b9\u6cd5\u7684\u7b7e\u540d\u4e86\uff09\n@dynamic\u80fd\u963b\u6b62\u5408\u6210 &lt;= \u76f8\u4fe1\u8fd0\u884c\u671f\u80fd\u627e\u5230\n\n\n\n\n\nProperty Attributes\n\n\u539f\u5b50\u6027(Atomicity)\uff0c\u8bfb\u5199\u7684\u65f6\u5019\u52a0\u9501\n\u8bfb/\u5199\u6743\u9650\n\u5185\u5b58\u7ba1\u7406\u8bed\u4e49\nassign: on scalar type\nstrong: \u62e5\u6709\u5173\u7cfb\uff0c\u8bbe\u7f6e\u65b0\u503c\u6d41\u7a0b\uff1aretain new -&gt; release old -&gt; set new\nweak: \u975e\u62e5\u6709\u5173\u7cfb\nunsafe_unretained: \u7c7b\u4f3cassign\uff0c\u4f46\u9002\u7528\u4e8e\u5bf9\u8c61\u7c7b\u578b\uff08\u800c\u4e0d\u53ea\u6709scalar type)\n\u4e0eweak\u7684\u533a\u522b\u5728\u76ee\u6807\u5bf9\u8c61\u5728\u9500\u6bc1\u65f6\uff0c\u8be5\u5c5e\u6027\u503c\u4e0d\u4f1a\u81ea\u52a8\u6e05\u7a7a\n\n\ncopy: \u7c7b\u4f3cstrong\uff0c\u4f46\u662f\u76f8\u6bd4\u8d77retain\uff0c\u5b83\u76f4\u63a5\u662f\u590d\u5236\u4e86\u4e00\u4efd\uff0c\u901a\u5e38\u7528\u4e8e\u62e5\u6709\u53ef\u53d8\u7c7b\u578b\u7684\u53d8\u91cf\uff0c\u6bd4\u5982NSString *\uff0c\u53ef\u53d8\u7248\u7684string\u4e5f\u80fd\u8d4b\u503c\u7ed9NSString\uff0c\u8fd9\u5c31\u4f1a\u5f15\u8d77\u8d4b\u503c\u540e\u503c\u8fd8\u81ea\u5df1\u53d8\u4e86\u7684\u53ef\u80fd\u6027\n\n\n\u65b9\u6cd5\u540d\ngetter=\uff0c\u9700\u8981\u6ce8\u610f\u7684\u662f\u6709\u4e9bbool\u7c7b\u578b\u7684\u901a\u5e38\u4f1a\u8bbe\u7f6e\u4e3aisXXXX\nsetter=\uff0c\u4f46\u5f88\u5c11\u8fd9\u4e48\u505a\n\n\n\n\u5982\u679c\u81ea\u5df1\u6765\u5b9e\u73b0accessor methods\uff0c\u90a3\u4e48\u5c31\u8981\u81ea\u5df1\u53bb\u4fdd\u8bc1\u8fd9\u4e9b\u65b9\u6cd5\u7b26\u5408\u8fd9\u4e9battributes\uff0c\u6bd4\u5982\u5185\u5b58\u7ba1\u7406\u8bed\u4e49\u4e3acopy\uff0c\u90a3\u4e48\u5728\u8bbe\u7f6e\u7684\u65f6\u5019\u5c31\u8981\u62f7\u8d1d\u4f20\u5165\u7684\u503c\uff1a@interface EOCPerson : NSManagedObject \n@property (copy) NSString *firstName;\n@property (copy) NSString *lastName;\n- (id)initWithFirstName:(NSString*)firstName lastName:(NSString*)lastName;\n@end\n\n// \u5b9e\u73b0\u6587\u4ef6\uff1a\n- (id)initWithFirstName:(NSString*)firstName lastName:(NSString*)lastName\n{\n    if ((self = [super init])) {\n        _firstName = [firstName copy];\n        _lastName = [lastName copy]; }\n        return self; \n    }\n\n\n\n\u8bfb\u5199\u64cd\u4f5c\u7684\u539f\u5b50\u6027\u5e76\u4e0d\u662f\u7ebf\u7a0b\u5b89\u5168\niOS\u4e2d\u4f7f\u7528\u540c\u6b65\u9501\u5f00\u9500\u8f83\u5927\n\u5b9e\u9645iOS\u7a0b\u5e8f\u78b0\u5230\u591a\u7ebf\u7a0b\u8bfb\u5199\u5c5e\u6027\u7684\u573a\u666f\u4e5f\u975e\u5e38\u5c11\n\u6240\u4ee5\u57fa\u672c\u4e0a\u90fd\u662f\u58f0\u660e\u4e3anonatomic\n\n\nItem 7: Access Instance Variables Primarily Directly When Accessing Them Internally\n\u5728\u5bf9\u8c61\u5185\u90e8\u4f18\u5148\u8bbf\u95ee\u5b9e\u4f8b\u53d8\u91cf\u3002\u76f4\u63a5\u8bbf\u95ee\u800c\u4e0d\u7528\u70b9\u8bed\u6cd5\u7684\u5f71\u54cd\uff1a\n\u4e0d\u7ecf\u8fc7\u6d88\u606f\u6d3e\u53d1\uff0c\u901f\u5ea6\u5feb\uff08\u7f16\u8bd1\u5668\u751f\u6210\u7684\u4ee3\u7801\u4f1a\u76f4\u63a5\u8bbf\u95ee\u76f8\u5e94\u7684\u5185\u5b58\uff09\n\u4e0d\u4f1a\u8c03\u7528setter\uff0c\u4e5f\u7ed5\u8fc7\u4e86\u76f8\u5e94\u7684\u5185\u5b58\u7ba1\u7406\u8bed\u4e49\n\u4e0d\u4f1a\u89e6\u53d1KVO\n\u6ca1\u6709\u673a\u4f1a\u5728getter, setter\u4e2d\u8bbe\u7f6e\u65ad\u70b9\u6765\u8c03\u8bd5\n\u6ca1\u6709\u673a\u4f1alazy intialization\uff0c\u800cgetter\u673a\u5236\u80fd\u5728\u9996\u6b21\u88ab\u8c03\u7528\u5230\u7684\u65f6\u5019\u624d\u53bb\u521d\u59cb\u5316\u5b9e\u4f8b\u53d8\u91cf\n\u521d\u59cb\u5316\u548cdealloc\u7684\u65f6\u5019\u603b\u662f\u8981\u76f4\u63a5\u7528\u5b9e\u4f8b\u53d8\u91cf\n\n\u4f5c\u8005\u5efa\u8bae\u5c3d\u91cf\u5728\u8bfb\u53d6\u5b9e\u4f8b\u53d8\u91cf\u7684\u65f6\u5019\u76f4\u63a5\u8bbf\u95ee\uff0c\u8bbe\u7f6e\u7684\u65f6\u5019\u7528\u5c5e\u6027\uff08\u4f1a\u81ea\u52a8\u8003\u8651\u5185\u5b58\u7ba1\u7406\u8bed\u4e49\uff09Item 8: Understand Object Equality\n\u5176\u5b9e\u5c31\u662f\u7406\u89e3NSObject\u81ea\u5e26\u7684isEqual:\u65b9\u6cd5\u3002\n==\u5c31\u662f\u6bd4\u6307\u9488\nisEqual:\u6bd4\u7684\u662fhash\uff0c\u6240\u4ee5\u81ea\u5b9a\u4e49\u7684\u7c7b\u8981\u5b9e\u73b0equality\u5c31\u8981\u81ea\u884c\u5b9e\u73b0\u8fd9\u4e24\u4e2a\u65b9\u6cd5\nhash\u4e0d\u540c\u5fc5\u7136\u5bf9\u8c61\u4e0d\u540c\uff0c\u4f46\u7531\u4e8e\u6709hash collisions\u7684\u5b58\u5728\uff0c\u53cd\u8fc7\u6765\u5e76\u4e0d\u6210\u7acb\n\u5c3d\u91cf\u7528\u5bf9\u8c61\u7684\u4e0d\u53ef\u53d8\u90e8\u5206\u6765\u505ahash\n\n\n\n\u4e00\u4e2a\u505ahash\u7684\u65b9\u6cd5\uff1a- (NSUInteger)hash {\n    NSUInteger firstNameHash = [_firstName hash]; \n    NSUInteger lastNameHash = [_lastName hash]; \n    NSUInteger ageHash = _age;\n    return firstNameHash ^ lastNameHash ^ ageHash;\n}\n\nItem 9: Use the Class Cluster Pattern to Hide Implementation Detail\n+ (UIButton*)buttonWithType:(UIButtonType)type;\n\n\n\u4f5c\u8005\u5c06\u4e0a\u8ff0\u8fd9\u79cd\u89e3\u91ca\u4e3a\u201c\u7c7b\u65cf\u201d\uff0c\u5373\u5b83\u7684\u8fd4\u56de\u503c\u53ef\u80fd\u662f\u5404\u79cdbutton\uff0c\u4f46\u5f52\u6839\u7ed3\u5e95\uff0c\u90fd\u662fUIButton\uff0c\u5c31\u662f\u9760\u7740switch\u5404\u79cdtype\u6765\u5b9e\u4f8b\u5316\u5404\u79cd\u5b50\u7c7b\u3002\n\u540c\u65f6\uff0c\u56e0\u4e3aOC\u6ca1\u6709abstract class\uff0c\u4e3a\u4e86\u907f\u514d\u76f4\u63a5\u4f7f\u7528\u62bd\u8c61\u57fa\u7c7b\uff0c\u4e00\u822c\u4e0d\u63d0\u4f9binit\u65b9\u6cd5\uff0c\u5e76\u5728\u57fa\u7c7b\u76f8\u5173\u65b9\u6cd5\u91cc\u5e72\u8106\u629b\u5f02\u5e38\n\u8fd9\u91cc\u4f7f\u7528isMemberOfClass\u5c31\u8981\u5c0f\u5fc3\uff0c\u5b83\u662fkind\uff0c\u4f46\u4e0d\u4e00\u5b9a\u662fmember\n\u7cfb\u7edf\u6846\u67b6\u91cc\u6709\u5f88\u591aclass cluster\uff0c\u7279\u522b\u662fcollection\n\u6240\u4ee5if([anArray class] == [NSArray class])\u662ffalse\uff08\u539f\u56e0\u5c31\u662f\u5b83\u662f\u88ab\u5f53\u4f5c\u201c\u62bd\u8c61\u57fa\u7c7b\u6765\u8bbe\u8ba1\u7684\uff0c\u5b9e\u9645\u4e0a\u662f\u9690\u85cf\u5728\u516c\u5171\u63a5\u53e3\u540e\u9762\u7684\u67d0\u4e2a\u5185\u90e8\u7c7b\u578b\uff09\n\u540c\u6837\uff0c\u7528isKindOfClass:\u81f3\u5c11\u80fd\u5224\u65ad\u662f\u5728\u8fd9\u4e2a\u7c7b\u65cf\u91cc\n\n\n\nItem 10: Use Associated Objects to Attach Custom Data to Existing Classes\n\u6269\u5c55\u73b0\u6709\u7c7b\uff0c\u6211\u4eec\u53ef\u4ee5\u7ee7\u627f\uff0c\u4f46\u6709\u65f6\u5019\u4e00\u4e9b\u7279\u6b8a\u673a\u5236\u521b\u5efa\u7684\u7c7b\u5374\u65e0\u6cd5\u7ee7\u627f\uff0c\u53ef\u4ee5\u901a\u8fc7Associated Object\u6765\u6dfb\u52a0\u8fd9\u4e9b\u4fe1\u606f\u3002\n\u4ee5\u952e\u503c\u5bf9\u6765\u5b58\u50a8\uff0c\u6240\u4ee5\u662f\u53ef\u4ee5\u5b58\u50a8\u591a\u4e2a\u5173\u8054\u6570\u636e\u7684\n\u53ef\u4ee5\u6307\u5b9astorage policy\uff0c\u5bf9\u5e94\u5185\u5b58\u7ba1\u7406\u8bed\u4e49\n\n\u65b9\u6cd5:// Sets up an association of object to value with the given key and policy.\nvoid objc_setAssociatedObject(id object, void *key, id value, objc_AssociationPolicy policy)\n\n// Retrieves the value for the association on object with the given key.\nid objc_getAssociatedObject(id object, void *key)\n\n// Removes all associations against object.\nvoid objc_removeAssociatedObjects(id object)\n\n\u4e66\u4e2d\u5199\u4e86\u4e00\u4e2a\u4f8b\u5b50\uff0calertView\u7684\u4ee3\u7406\u65b9\u6cd5\u6765\u5904\u7406\u6309\u4e86\u4ec0\u4e48\u952e\uff0c\u800c\u4e00\u4e2a\u9875\u9762\u4e2d\u5982\u679c\u6709\u591a\u4e2aalertView\uff0c\u4e14\u7528\u540c\u4e00\u4e2a\u4ee3\u7406\u5bf9\u8c61\uff0c\u90a3\u4e48\u5904\u7406\u9700\u8981\u66f4\u7cbe\u7ec6\uff08\u6bd4\u5982\u9700\u8981\u77e5\u9053\u662f\u54ea\u4e2a\u8b66\u544a\u6846\u5f39\u7684\uff0c\u6211\u4e00\u822c\u7528tag\uff09\u3002\n\u800c\u5982\u679c\u628a\u5904\u7406\u65b9\u6cd5\u5b9a\u4e49\u4e3a\u4e00\u4e2ablock\uff0c\u5e76\u628a\u5b83\u5173\u8054\u5230UIAlertView\u7c7b\uff0c\u90a3\u4e48\u5904\u7406\u903b\u8f91\u5c31\u53ef\u4ee5\u8ddf\u5b9a\u4e49alertView\u5199\u5728\u4e00\u8d77\u4e86\u3002todo, item 11-14", "categories": [{"name": "posts", "slug": "posts", "permalink": "/category/posts/"}], "tags": [{"name": "objective c", "slug": "objective c", "permalink": "/tag/objective%20c/"}, {"name": "runtime", "slug": "runtime", "permalink": "/tag/runtime/"}, {"name": "message forward", "slug": "message forward", "permalink": "/tag/message%20forward/"}, {"name": "property", "slug": "property", "permalink": "/tag/property/"}]}, {"title": "Programming iOS 14 - Drawing", "date": "2021-12-25T00:00:00-00.00", "path": "/archives/Drawing/", "text": "\u300aProgramming iOS 14: Dive Deep into Views, View Controllers, and Frameworks\u300b\u7b2c2\u7ae0\nDrawing\nMany UIView subclasses, such as a UIButton or a UILabel, know how to draw themselves.A pure UIView is all about drawing, and it leaves that drawing largely up to you.Images and Image Views\n\u56fe\u7247\u53ef\u4ee5\u6765\u81ea\u6587\u4ef6\uff0c\u4ee3\u7801\uff0c\u6216\u7f51\u7edc\u3002Image Files\n\ninit(named:)\uff0c\u4f1a\u4eceAsset catalog\u548cApp bundle\u7684\u9876\u5c42\u53bb\u67e5\u627e\n\u8fd4\u56de\u7684\u662f\u4e00\u4e2aOptional\uff0c\u56e0\u4e3a\u4e0d\u80fd\u786e\u5b9a\u8fd9\u4e2a\u8def\u5f84\u5bf9\u5e94\u4e00\u5f20\u56fe\u7247\uff0c\u6216\u80fd\u89e3\u7801\u6210\u529f\n\u5b83\u4f1a\u5c06\u56fe\u7247\u7f13\u5b58\ninit(contentsOfFile:)\u5219\u4e0d\u4f1a\u7f13\u5b58\uff0c\u4f46\u4e0d\u4eceasset catalog\u52a0\u8f7d\u800c\u662f\u76f8\u5bf9\u4e8eBundle.main\u6765\u505a\u8def\u5f84\n\n\n\n\n\u4ecebundle\u91cc\u627e\u65f6\u4e0d\u52a0\u6269\u5c55\u540d\u4f1a\u9ed8\u8ba4\u4e3apng\n\u76f4\u63a5\u5c06\u56fe\u7247\u62d6\u5230\u4ee3\u7801\u751f\u6210\u7684\u4e0d\u662fOptional\u7684image\uff0c\u8c03\u7528\u7684\u662finit(imageLiteralResourceName:)\u65b9\u6cd5\n\u6587\u4ef6\u540d\u91cc\u7684@\u8868\u793aHigh-resolution variants\uff0c\u5373\u4e0d\u540c\u5206\u8fa8\u7387\u4e0b\u91c7\u7528\u7684\u56fe\u7247\uff0c\u6bd4\u5982@2x\n\u6587\u4ef6\u540d\u91cc\u7684~\u8868\u793aDevice type variants\uff0c\u5373\u4e0d\u540c\u8bbe\u5907\u7c7b\u578b\u4e0b\u91c7\u7528\u7684\u56fe\u7247\uff0c\u6bd4\u5982~ipad\n\n\n\u5c3d\u91cf\u628a\u56fe\u7247\u653e\u5230asset catalog\u91cc\uff0c\u5bf9\u4e0d\u540c\u7684\u5904\u7406\u5668\uff0c\u66f4\u5bbd\u7684\u8272\u57df\uff0c\u7b49\u7b49\n\u4e0d\u5149\u5f71\u54cd\u8fd0\u884c\u65f6\uff0c\u5728Apple Store\u5bf9\u4f60\u7684app\u5bf9\u7279\u5b9a\u8bbe\u5907\u8fdb\u884cthinning\u90fd\u4f1a\u7528\u5230\n\u4e0d\u540csize class, dark mode, ipad\u7b49\u7b49trait collection\u90fd\u53ef\u4ee5\u8bbe\u7f6e\u5bf9\u5e94\u7684\u56fe\u7247\nVector images\nAn image file in the asset catalog can be a vector-based PDF or (new in Xcode 12) an SVG.\ninit(systemName:) -&gt; SF Symbols\n.withConfiguration(_:) or .applyingSymbolConfiguration(_:) \u8fdb\u884c\u81ea\u5b9a\u4e49\uff0c\u53c2\u6570\u662f\u4e00\u4e2aUIImage.SymbolConfiguration\nConfigurations can involve one of nine weights, one of three scales, a font or text style, and a point size, in various combinations\n\n\n\nAsset catalogs and trait collections\u6307\u5b9atrait collection\u521d\u59cb\u5316\u56fe\u7247\uff1ainit(named:in:compatibleWith:)\nA built-in interface object that displays an image, such as a UIImageView, is automatically trait collection\u2013aware;\nit receives the traitCollectionDidChange(_:) message and responds accordingly.\n\nlet tcreg = UITraitCollection(verticalSizeClass: .regular)\nlet tccom = UITraitCollection(verticalSizeClass: .compact)\nlet moods = UIImageAsset()\nlet frowney = UIImage(named:&quot;frowney&quot;)!\nlet smiley = UIImage(named:&quot;smiley&quot;)!\nmoods.register(frowney, with: tcreg)\nmoods.register(smiley, with: tccom)\n\n\u7531\u6b64\u4e5f\u53ef\u89c1\uff0c\u4f60\u64cd\u4f5c\u7684\u662f\u201c\u4e00\u5f20\u56fe\u7247\u201d\uff0c\u5176\u5b9e\u5b83\u662f\u4e00\u7ec4\u5e26\u4e86\u6761\u4ef6\u7684\u56fe\u7247\u3002\nUIColor\u4e5f\u662f\u76f8\u540c\u7684\u673a\u5236\uff0c\u4f60\u7528resolvedColor(with:)\u4f20\u5165trait collection\u628a\u5bf9\u5e94\u7684\u989c\u8272\u53d6\u51fa\u6765\u4f7f\u7528\u3002\nNamespacing image files\n\u7269\u7406\u6587\u4ef6\u5939\uff0c\u865a\u62df\u6587\u4ef6\u5939\u5185\u7684\u56fe\u7247\u8bbf\u95ee\u65f6\uff0c\u90fd\u9700\u8981\u52a0\u4e0a\u6587\u4ef6\u5939\u540d\uff08namespaing)\ninit(named:)\u7684\u5b8c\u5168\u5f62\u6001\u5176\u5b9e\u662finit(named:in:)\uff0c\u7b2c\u4e8c\u4e2a\u53c2\u6570\u662fbundle\uff0c\u6bd4\u5982\u6765\u81ea\u67d0\u4e2aframework.\n\nImage Views\nA UIImageView can actually have two images, one assigned to its image property and the other assigned to its highlightedImage property\nA UIImageView without an image and without a background color is invisibleResizable Images\u7528inset\u6765\u8bbe\u7f6e\u4e0d\u62c9\u4f38\u7684\u533a\u57df\uff0c\u6bd4\u5982\u4e00\u822c\u6211\u4eec\u78b0\u5230\u7684\u591a\u4e3a\u5de6\u53f3\u968f\u4fbf\u62c9\u4f38\u7684\u80f6\u56ca\u6309\u94ae\uff0c\u9700\u8981\u8bbe\u8ba1\u5e08\u505a\u7684\u5c31\u662f\u5de6\u53f3\u4e24\u4e2a\u534a\u5706\uff08\u4e0d\u62c9\u4f38\uff09\u548c\u4e2d\u95f41\u50cf\u7d20\u7684\u53ef\u62c9\u4f38\u90e8\u5206let marsTiled = mars.resizableImage(withCapInsets:\nUIEdgeInsets(\n    top: mars.size.height / 2.0 - 1,\n    left: mars.size.width / 2.0 - 1,\n    bottom: mars.size.height / 2.0 - 1,\n    right: mars.size.width / 2.0 - 1\n), resizingMode: .stretch)\n\n\u6240\u4ee5\u5982\u679c\u53ea\u662f\u6a2a\u5411\u62c9\u4f38\uff0c\u4e0a\u9762\u7684\u4ee3\u7801\u4e2d\uff0ctop, bottom\u90fd\u53ef\u4ee5\u8bbe\u4e3a0\uff0c\u6216\u90fd\u8bbe\u4e3a\u56fe\u7247\u9ad8\u5ea6\uff08\u800c\u4e0d\u53bb\u96642\u4ec0\u4e48\u7684\uff09\uff0c\u53ea\u9700\u8981\u4fdd\u8bc1\u628aUI\u63a7\u4ef6\u7684\u9ad8\u5ea6\u4fdd\u6301\u8ddf\u56fe\u7247\u4e00\u81f4\u5373\u53ef\u3002\u90a3\u4e48\uff0c\u5982\u679c\u4e0d\u5c0f\u5fc3\u9ad8\u5ea6\u5927\u4e8e\u56fe\u7247\u9ad8\u5ea6\u4e86\u5462\uff1f\u5206\u4e24\u79cd\u60c5\u51b5\uff0c\u5982\u679c\u8bbe\u4e860\uff0c\u8868\u793a\u6ca1\u6709\u4fdd\u7559\u533a\u57df\uff0c\u76f4\u63a5\u7ad6\u5411\u62c9\u4f38\uff0c\u800c\u5982\u679c\u8bbe\u6210\u4e86\u56fe\u7247\u9ad8\u5ea6\uff0c\u90a3\u4e48\u8868\u793a\u6574\u4e2aY\u65b9\u5411\u6ca1\u6709\u53ef\u4f9b\u62c9\u4f38\u7684\u50cf\u7d20\uff0c\u5fc5\u7136\u9020\u6210\u62c9\u4f38\u5931\u8d25\uff1aTransparency MasksThe image shown on the screen is formed by combining the image\u2019s transparency values with a single tint color.\u5ffd\u7565\u56fe\u7247\u5404\u50cf\u7d20\u4e0a\u989c\u8272\u7684\u6570\u503c\uff0c\u53ea\u4fdd\u7559\u900f\u660e\u5ea6\uff0c\u5c31\u6210\u4e86\u4e00\u4e2amask. (renderingMode: alwaysTemplate)\niOS gives every UIView a tintColor, which will be used to tint any template images\u3002\u6240\u4ee5\u6211\u4eec\u7ecf\u5e38\u7528\u7684tintColor\u5176\u5b9e\u5c31\u662f\u7ed9\u6a21\u677f\u56fe\u7247\u67d3\u8272\u7684\u610f\u601d\u3002\ntintColor\u662f\u5411\u4e0b\u7ee7\u627f\u7684\nThe symbol images are always template images\niOS 13\u8d77\uff0c\u53ef\u4ee5\u5bf9UIImage\u76f4\u63a5\u5e94\u7528tint color\n\nReversible Images\n\u7528imageFlippedForRightToLeftLayoutDirection\u6765\u521b\u5efa\u4e00\u4e2a\u5728\u4ece\u53f3\u5411\u5de6\u7684\u4e66\u5199\u7cfb\u7edf\u91cc\u4f1a\u81ea\u52a8\u7ffb\u8f6c\u7684\u56fe\u7247\u3002\n\u4f46\u4f60\u53c8\u53ef\u4ee5\u8bbe\u7f6esemanticContentAttribute\u6765\u963b\u6b62\u8fd9\u4e2a\u955c\u50cf\u884c\u4e3a\n\n\n\u5982\u679c\u4e0d\u8003\u8651\u4e66\u5199\u7cfb\u7edf\uff0c\u53ef\u4ee5\u7528withHorizontallyFlippedOrientation\u5f3a\u884c\u955c\u50cf\n\nGraphics Contexts\nGraphics Contexts\u662f\u7ed8\u56fe\u7684\u8d77\u70b9\uff0c\u4f60\u80fd\u4ece\u5982\u4e0b\u65b9\u5f0f\u5f97\u5230Graphics Contexts\uff1a\n\u8fdb\u5165UIView\u7684 draw(_:)\u65b9\u6cd5\u65f6\uff0c\u7cfb\u7edf\u4f1a\u7ed9\u4f60\u63d0\u4f9b\u4e00\u4e2aGraphics Contexts\nCALayer\u7684draw(in:),\u6216\u5176\u4ee3\u7406\u7684draw(_:in:)\u65b9\u6cd5\uff0cin\u53c2\u6570\u5c31\u662fGraphics Contexts\n\u4f46\u5b83\u4e0d\u662fcurrnet context\n\n\n\u624b\u52a8\u521b\u5efa\u4e00\u4e2a\n\nUIKit \u548c Core Graphics\u662f\u4e24\u5957\u7ed8\u5236\u5de5\u5177\u3002\nUIKit\u662f\u5927\u591a\u6570\u60c5\u51b5\u4e0b\u4f60\u7684\u9009\u62e9\uff0c\u5927\u90e8\u5206Cocoa class\u77e5\u9053\u5982\u4f55\u7ed8\u5236\u81ea\u5df1\n\u53ea\u80fd\u5728current context\u4e0a\u7ed8\u5236\nCore Graphics is the full drawing API\uff0c often referred to as Quartz (2D)\nUIKit drawing is built on top of it.\n\n\u4e24\u5957\u4f53\u7cfb\uff0c\u4e09\u79cdcontext\u6765\u6e90\uff0c\u5171\u8ba16\u79cd\u6b8a\u9014\u540c\u5f52\u7684\u65b9\u5f0f\u3002Drawing on Demand\n\u76f4\u63a5\u4e0a\u4ee3\u7801\uff1a// UIView\n\n// UIKit\noverride func draw(_ rect: CGRect) {\n    // \u76f4\u63a5\u7ed8\u5236\n    let p = UIBezierPath(ovalIn: CGRect(0,0,100,100))\n    UIColor.blue.setFill()\n    p.fill()\n}\n\n// CG\noverride func draw(_ rect: CGRect) {\n    // \u53d6\u5230context\n    let con = UIGraphicsGetCurrentContext()!\n    con.addEllipse(in:CGRect(0,0,100,100))\n    con.setFillColor(UIColor.blue.cgColor)\n    con.fillPath()\n}\n\n// CALayer\n\n// UIKit\n override func draw(_ layer: CALayer, in con: CGContext) {\n    UIGraphicsPushContext(con)\n    let p = UIBezierPath(ovalIn: CGRect(0,0,100,100))\n    UIColor.blue.setFill()\np.fill()\n    UIGraphicsPopContext()\n}\n\n// CG\noverride func draw(_ layer: CALayer, in con: CGContext) {\n    con.addEllipse(in:CGRect(0,0,100,100))\n    con.setFillColor(UIColor.blue.cgColor)\n    con.fillPath()\n}\n\nDrawing a UIImage\nlet r = UIGraphicsImageRenderer(size:CGSize(100,100))\nlet im = r.image { _ in\n    let p = UIBezierPath(ovalIn: CGRect(0,0,100,100))\n    UIColor.blue.setFill()\n    p.fill()\n}\n// im is the blue circle image, do something with it here ...\nAnd here\u2019s the same thing using Core Graphics:\nlet r = UIGraphicsImageRenderer(size:CGSize(100,100))\nlet im = r.image { _ in\n    let con = UIGraphicsGetCurrentContext()!\n    con.addEllipse(in:CGRect(0,0,100,100))\n    con.setFillColor(UIColor.blue.cgColor)\n    con.fillPath()\n}\n// im is the blue circle image, do something with it here ...\n\nUIImage Drawing\n\u7528\u5df2\u6709\u7684\u56fe\u50cf\u8fdb\u884c\u7ed8\u5236\uff1alet mars = UIImage(named:&quot;Mars&quot;)!\nlet sz = mars.size\nlet r = UIGraphicsImageRenderer(size:CGSize(sz.width*2, sz.height),\n    format:mars.imageRendererFormat)\nlet im = r.image { _ in\n    mars.draw(at:CGPoint(0,0))\n    mars.draw(at:CGPoint(sz.width,0))\n}\n\n\u8fd9\u91cc\uff0c\u7ed8\u5236\u4e86\u4e24\u4e2a\u706b\u661f\uff0c\u6ce8\u610fimageRendererFormat\u7684\u4f7f\u7528CGImage Drawing\nlet mars = UIImage(named:&quot;Mars&quot;)!\n// extract each half as CGImage\nlet marsCG = mars.cgImage!\nlet sz = mars.size\nlet marsLeft = marsCG.cropping(to:\n    CGRect(0,0,sz.width/2.0,sz.height))!\nlet marsRight = marsCG.cropping(to:\n    CGRect(sz.width/2.0,0,sz.width/2.0,sz.height))!\nlet r = UIGraphicsImageRenderer(size: CGSize(sz.width*1.5, sz.height),\n    format:mars.imageRendererFormat)\nlet im = r.image { ctx in\n    let con = ctx.cgContext\n    con.draw(marsLeft, in:\n        CGRect(0,0,sz.width/2.0,sz.height))\n    con.draw(marsRight, in:\n        CGRect(sz.width,0,sz.width/2.0,sz.height))\n}\n\n\u5f53\u7136, con.draw\u53ef\u4ee5\u7531UIImage\u6765\u5b8c\u6210\uff1aUIImage(cgImage: marsLeft!,\nscale: mars.scale,\norientation: mars.imageOrientation).draw(at:CGPoint(0,0))\n\nSnapshots\n\ndrawHierarchy(in:afterScreenUpdates:)\u5c06\u6574\u4e2a\u89c6\u56fe\u5b58\u6210\u4e00\u5f20\u56fe\u7247\u3002\n\u66f4\u5feb\uff0c\u8bed\u4e49\u66f4\u597d\u7684\u65b9\u6cd5\uff1a.snapshotView(afterScreenUpdates:) -&gt; \u8f93\u51fa\u662fUIView\uff0c\u4e0d\u662fUIImage\nresizableSnapshotView(from:after- ScreenUpdates:withCapInsets:)\u751f\u6210\u53ef\u7f29\u653e\u7684\n\nCore Image\nThe \u201cCI\u201d in CIFilter and CIImage stands for Core Image, a technology for transforming images through mathematical filters. (iOS 5\u8d77\uff0c\u4ecemacOS\u5f15\u5165)\u7528\u9014\uff1a\npatterns and gradients (\u53ef\u4ee5\u88ab\u522b\u7684filter\u4e00\u8d77\u4f7f\u7528)\ncompositing (\u4f7f\u7528composting blend modes)\ncolor (\u989c\u8272\u8c03\u6574\uff0c\u4eae\u5ea6\u9510\u5ea6\u8272\u6e29\u7b49\u7b49)\ngeometric (\u51e0\u4f55\u76f8\u5173\u7684\u5c31\u662f\u7528\u6765\u53d8\u5f62)\ntransformation (distort, blur, stylize an image)\ntransition (\u4e00\u822c\u7528\u4e8e\u52a8\u753b\uff0c\u901a\u8fc7\u8bbe\u7f6eframe\u5e8f\u5217)\n\nThere are more than 200 available CIFilters\uff0c A CIFilter is a set of instructions for generating a CIImage\n\u57fa\u672c\u4e0a\uff0c\u5904\u7406\u7684\u90fd\u662fCIImage(input)\n\u8f93\u51fa\u4e5f\u662fCIImage\uff0c\u6216\u8005\u53e6\u4e00\u4e2afilter -&gt; \u94fe\u5f0f\u8c03\u7528\n\u6700\u540e\u4e00\u5c42\u94fe\u53ef\u4ee5\u81ea\u884c\u8f6c\u6362\u4e3abitmap: cg\u6216ui image(by rendering\u65b9\u6cd5)\nrendering\u7684\u65f6\u5019\uff0c\u6240\u6709\u7684\u6570\u5b66\u8ba1\u7b97\u624d\u5f00\u59cb\u53d1\u751f\n\u56e0\u4e3a\u53ea\u662finstructions\n\n\n\u5173\u952e\u8bcd\uff1afilter\u662f\u7528\u6765\u63cf\u8ff0\u600e\u4e48\u751f\u6210CIImage\u7684\nCGImage\u548cUIImage\u90fd\u80fd\u5f97\u5230CIImage\n\n\nUIImage\u53ea\u6709\u5728\u5df2\u7ecfwraps\u4e86\u4e00\u4e2aCIImage\u7684\u60c5\u51b5\u4e0b.ciImage\u624d\u6709\u503c\uff0c\u800c\u5927\u591a\u6570\u60c5\u51b5\u4e0b\u662f\u6ca1\u6709\u7684\u3002\nCore Image Filter Reference\u91cc\u6709\u6240\u6709\u7684filter\u7684\u540d\u5b57\uff0c\u7528\u6765\u521d\u59cb\u5316\u4e00\u4e2afilterlet filter = CIFilter(name: &quot;CICheckerboardGenerator&quot;)!\n// or:\nlet filter = CIFilter.checkerboardGenerator()\n\n// \u7528key-value\u6765\u51b3\u5b9a\u884c\u4e3a\uff1a\nfilter.setValue(30, forKey: &quot;inputWidth&quot;)\n// or:\nfilter.width = 30\n// or init with params\ninit(name:parameters:)\n\n// apply filter on CIImage(if exists one)\nciimage.applyingFilter(_:parameters:)\n// or output a ciimage\nfilter.outputImage\n\nRender a CIImage\nCIImage \u4e0d\u662f\u4e00\u4e2adisplayaable image\nCIContext.init(options:).createCGImage(_:from)\n\u53c2\u65701\u662fCIImage\uff0c\n\u53c2\u65702\u662f\u7ed8\u5236\u533a\u57df\uff08\u6240\u4ee5\u6ca1\u6709frame/bounds)\uff0c\u53ebextent\n\u8fd9\u662f\u5f88\u6602\u8d35\u7684\u64cd\u4f5c\uff0c\u5efa\u8bae\u5728\u5168app\u751f\u547d\u5468\u671f\u4fdd\u7559\u8fd9\u4e2acontext\u590d\u7528\n\n\nUIImage.init(ciImage:)\n\u628a\u4e0a\u4e00\u6b21\u7684uiimage\u8bbe\u7f6e\u6210UIImageView\u7684image\uff0c\u4e5f\u80fd\u9020\u6210CIImage\u7684\u6e32\u67d3\u3002\n\n\u4ee5\u4e0a\u8bf4\u7684\u90fd\u662f&quot;render&quot; CIImage\u7684\u65f6\u673a\uff0c\u6240\u4ee5\u4f20\u5165\u7684\nMetal\u80fd\u5feb\u901f\u6e32\u67d3CIImage\n\u4e32\u8d77\u4e00\u4e2ademo:let moi = UIImage(named:&quot;Moi&quot;)!\nlet moici = CIImage(image:moi)!\nlet moiextent = moici.extent\nlet smaller = min(moiextent.width, moiextent.height)\nlet larger = max(moiextent.width, moiextent.height)\n// first filter\nlet grad = CIFilter.radialGradient()\ngrad.center = moiextent.center\ngrad.radius0 = Float(smaller)/2.0 * 0.7\ngrad.radius1 = Float(larger)/2.0\nlet gradimage = grad.outputImage!\n// \u5230\u6b64\u6b65\u4e3a\u6b62\uff0c\u5e76\u6ca1\u6709moi\u8fd9\u4e2a\u56fe\u7247\u53c2\u4e0e\uff0c\u7b49\u4e8e\u662f\u4e00\u4e2a\u7eaffilter\n\n// second filter\nlet blend = CIFilter.blendWithMask()\nblend.inputImage = moici  // \u8bbe\u7f6e\u4e86image\nblend.maskImage = gradimage // \u8fd9\u91cc\u6f14\u793a\u7684\u662fmask filter\uff0c\u6309\u6211\u7406\u89e3\u5e76\u4e0d\u662f\u94fe\u5f0f\u7684\uff0c\u800c\u4e14\u8bed\u6cd5\u4e0a\u4e5f\u4e0d\u662f\u94fe\u5f0f\u7684\uff0c\u800c\u662f\u8d4b\u503c\u7ed9\u4e86maskImage\uff0c\u4f46\u4e66\u91cc\u76f4\u63a5\u8bf4\u662f\u94fe\u5f0f\u7684\nlet blendimage = blend.outputImage!\n\n// \u4e24\u79cdrender\u65b9\u6cd5\n// content\nlet moicg = self.context.createCGImage(blendimage, from: moiextent)! // *\nself.iv.image = UIImage(cgImage: moicg)\n\n// UIImage\nlet r = UIGraphicsImageRenderer(size:moiextent.size)\nself.iv.image = r.image { _ in\n    UIImage(ciImage: blendimage).draw(in:moiextent) // *\n}\n\n\n\u5173\u4e8e\u4e0a\u8ff0\u4ee3\u7801\u91cc\u6211\u7684\u7591\u60d1\uff0c\u7b2c\u4e00\u4e2afilter\u5e76\u4e0d\u662fchain\u5230\u7b2c\u4e8c\u4e2afilter\u91cc\u7684\uff0c\u4f46\u4e66\u91cc\u8bf4\u662fobtain the final CIImage in the chain (blendimage)\uff0c\u770b\u6765\u6240\u8c13\u7684chain\uff0c\u5e76\u4e0d\u662ffitler\u7684chain\uff0c\u800c\u662foutputImage`\u7684chain?\n\u95ee\u9898\u662f\uff0c\u8fd9\u662f\u552f\u4e00\u4e14\u6807\u51c6\u7684filter\u5d4c\u5957\u7528\u6cd5\u4e48\uff1f-&gt; mask\n\u4e0d\u662f\u7684\n\u5bf9filter\u7684outputImage\u7ee7\u7eed\u5e94\u7528aplyingFilter(_:parameters)\u6765\u94fe\u5f0f\u5e94\u7528\u4e00\u4e2a\u65b0\u7684filter\n\u8fd4\u56de\u503c\u662fCIImage\uff0c\u4e0d\u518d\u662ffilter\n\u6240\u4ee5\u5982\u679c\u7ee7\u7eedchain\uff0c\u76f4\u63a5\u7528\u8fd4\u56de\u503c\u8c03apply...\u65b9\u6cd5\u5373\u53ef\n\n\n\u628a\u4e0a\u4e00\u4e2afilter\u7684outputImage\u8bbe\u4e3a\u4e0b\u4e00\u4e2afilter\u7684inputImage:\n\nCIFilter *gloom = [CIFilter filterWithName:@&quot;CIGloom&quot;];\n[gloom setDefaults];                                        \n[gloom setValue: result forKey: kCIInputImageKey];\n[gloom setValue: @25.0f forKey: kCIInputRadiusKey];         \n[gloom setValue: @0.75f forKey: kCIInputIntensityKey];      \n// \u5373outputImage\nCIImage *result = [gloom valueForKey: kCIOutputImageKey];   \n\nCIFilter *bumpDistortion = [CIFilter filterWithName:@&quot;CIBumpDistortion&quot;];\n[bumpDistortion setDefaults];                                              \n// \u8bbe\u7f6einputImage (with first filter&#39;s output image) \n[bumpDistortion setValue: result forKey: kCIInputImageKey];\n[bumpDistortion setValue: [CIVector vectorWithX:200 Y:150]\n                forKey: kCIInputCenterKey];                              \n[bumpDistortion setValue: @100.0f forKey: kCIInputRadiusKey];                \n[bumpDistortion setValue: @3.0f forKey: kCIInputScaleKey];                   \nresult = [bumpDistortion valueForKey: kCIOutputImageKey];\n\n\nCIImage\u80fd\u8ba4\u51faEXIF\u91cc\u5173\u4e8e\u65cb\u8f6c\u65b9\u5411\u7684\u53c2\u6570\uff0c\u5e76\u4ee5\u6b63\u786e\u7684\u65b9\u5411\u5c55\u793a\nBlur and Vibrancy Views\n\u6bdb\u73bb\u7483\u6548\u679c\uff0c\u7528UIVisualEffectView\uff0c\u8fd9\u662f\u4e2a\u62bd\u50cf\u7c7b\uff0c\u5b9e\u9645\u7528\u8fd9\u4e24\u4e2a\uff1aUIVisualEffectView\u548cUIVibrancyEffect\u3002\u4ec0\u4e48\u662fUIVibrancyEffect?\nAn object that amplifies and adjusts the color of the content layered behind a visual effect view.\n\u5173\u952e\u8bcd\u662fbehind\uff0c\u5373\u5b83\u662f\u914d\u5408\u522b\u7684\u89c6\u6548\u4e00\u8d77\u7528\u7684\uff08\u6bd4\u5982\u6bdb\u73bb\u7483\uff09\u3002\u6587\u5b57\u88ab\u6bdb\u73bb\u7483\u8986\u76d6\u540e\u7684\u6548\u679c\uff0c\u5e76\u4e0d\u662f\u7531\u6bdb\u73bb\u7483\u5c42\u6765\u786e\u5b9a\u7684\uff0c\u800c\u662f\u7531vibrancy effect\u81ea\u5b9a\u4e49\u7684\u3002\u603b\u7684\u6765\u8bf4\n\u7528effect\u521d\u59cb\u5316effect view, effect\u5c31\u662f\u4e94\u79cdmaterial\n\u8fd9\u4e2aview\u53ef\u4ee5\u5f53\u6210\u5e38\u89c4view\u6765\u5b9a\u4f4d\uff0c\u5e03\u5c40\uff0c\u6dfb\u52a0\u5230subview\u91cc\uff0c\u7b49\u7b49\n\u7528\u4e0a\u4e00\u4e2aeffect\u521d\u59cb\u5316\u4e00\u4e2avibrancy effect\uff08with style)\n\u7528vibrance effect\u521d\u59cb\u5316\u4e00\u4e2aview\n\u521b\u5efaUI\u63a7\u4ef6\n\u8ba9vibView\u7684bounds\u7b49\u4e8e\u5185\u5bb9\u7684bounds\uff08\u7b49\u4e8e\u53ea\u5bf9\u5185\u5bb9\u6240\u6709\u7684\u8303\u56f4\u5185\u5e94\u7528\u7279\u6548\uff09\uff0c\u5e76\u5b9a\u4f4d\nvibView\u6dfb\u52a0\u5230effectView\u7684contentView\u7684subView\u91cc\u53bb\n\u9700\u8981\u88abvibrancy\u7684\u5185\u5bb9\uff08\u6bd4\u5982\u4e00\u4e2alabel)\uff0c\u5219\u6dfb\u52a0\u5230vibView.contentView.addSubview(label)\n\nlet blurEffect = UIBlurEffect(style: .systemThinMaterial)\nlet blurView = UIVisualEffectView(effect: blurEffect)\nblurView.frame = self.view.bounds\nblurView.autoresizingMask = [.flexibleWidth, .flexibleHeight]\nself.view.addSubview(blurView)\nlet vibEffect = UIVibrancyEffect(\n    blurEffect: blurEffect, style: .label)\nlet vibView = UIVisualEffectView(effect:vibEffect)\nlet lab = UILabel()\nlab.text = &quot;Hello, world&quot;\nlab.sizeToFit()\nvibView.bounds = lab.bounds\nvibView.center = self.view.bounds.center\nvibView.autoresizingMask =\n    [.flexibleTopMargin, .flexibleBottomMargin,\n    .flexibleLeftMargin, .flexibleRightMargin]\nblurView.contentView.addSubview(vibView)\nvibView.contentView.addSubview(lab)\n\nDrawing a UIView\nUIView\u672c\u8eab\u5c31\u63d0\u4f9b\u4e86\u4e00\u4e2agraphics context\uff0c\u5728\u8fd9\u4e2acontext\u91cc\u8fdb\u884c\u7684\u7ed8\u5236\u4f1a\u76f4\u63a5\u663e\u793a\u5728view\u91cc\u3002\nsubclass UIView's .draw(_:)method\n\u76f4\u5230\u9700\u8981\u65f6\u624d\u4f1a\u88ab\u8c03\u7528\n\u6216setNeedsDisplay\u4f1a\u8c03\u7528\n\u4e00\u91cf\u88abdraw\uff0c\u5c31\u7f13\u5b58\u8d77\u6765\u4e86 (bitmap backing store)\n\n\n\u5b9e\u65f6\u7ed8\u5236\u4f1a\u5413\u5230\u4e00\u4e9b\u521d\u5b66\u8005\uff0c\u7ed8\u5236\u662ftime-comsuming operation\n\n\u63a8\u8350\u5728draw\u65b9\u6cd5\u91cc\u5b9e\u65f6\u7ed8\u5236\nIn fact, moving code to draw(_: ) is commonly a way to increase efficiency. This is because it is more efficient for the drawing engine to render directly onto the screen than for it to render offscreen and then copy those pixels onto the screen.\n\u51e0\u4e2a\u6ce8\u610f\u70b9\uff1a\n\u4e0d\u8981\u624b\u52a8\u8c03\u7528draw\u65b9\u6cd5\uff0csetNeedsDisplay\u4f1a\u8ba9\u7cfb\u7edf\u51b3\u5b9a\u4e0b\u4e00\u4e2a\u5408\u9002\u7684\u65f6\u673a\u6765draw\n\u4e0d\u8981\u91cd\u8f7ddraw\u65b9\u6cd5\uff0c\u6bd4\u5982\u4f60\u65e0\u6cd5\u5408\u5e76UIImageView\u7684drawing\n\u4e0d\u8981\u5728draw\u91cc\u505a\u4efb\u4f55\u4e0e\u7ed8\u5236\u65e0\u5173\u7684\u4e8b\uff0c\u914d\u7f6e\uff08\u5982\u80cc\u666f\u8272\uff0c\u6dfb\u52a0\u5b50view/layer\uff09\u9879\u5e94\u8be5\u5728\u522b\u7684\u5730\u65b9\u505a\uff0c\u6bd4\u5982layoutSubviews\n\u7b2c\u4e8c\u4e2a\u53c2\u6570\u662f\u4e00\u4e2arect\uff0c\u9ed8\u8ba4\u662fview\u7684bounds\n\u5982\u679c\u4f60\u7528setNeesDisplay(_:)\u9001\u5165\u4e86\u81ea\u5b9a\u4e49\u7684CGRect\uff0cdraw\u91cc\u9762\u7684rect\u4e5f\u5c31\u6210\u4e86\u8fd9\u4e2a\uff0c\u5982\u679c\u4f60\u4e0d\u5728\u8fd9\u4e2arect\u91cc\u753b\uff08\u800c\u662f\u5728\u6574\u4e2aview\u7684rect\u91cc\uff09\uff0c\u8d85\u51fa\u90e8\u5206\u4f1a\u88abclip\u6389\n\u8fd9\u4e5f\u662f\u4e3a\u4e86\u6548\u7387\uff0c\u663e\u793a\u63d0\u4f9b\u7ed8\u5236\u7684\u533a\u57df\n\n\n\u624b\u5199draw\u7ed8\u5236\u51fa\u6765\u7684view\u4f1a\u6709\u9ed1\u8272\u7684\u5e95\u8272\uff0c\u5982\u679c\u4f60\u6ca1\u6709\u8bbe\u8ba1\u80cc\u666f\u8272\uff0c\u4ee5\u53caisOpaque == true\u65f6\uff08UIView.init(frame:)\u51fa\u6765\u7684view\u6070\u597d\u6ee1\u8db3\u8fd9\u4e24\u4e2a\u6761\u4ef6\uff0c nib\u91cc\u62d6\u51fa\u6765\u7684\u5219\u662fnil\u7684\u80cc\u666f\uff0c\u53cd\u800c\u6ca1\u8fd9\u95ee\u9898\uff09\n\u89e3\u51b3\uff1a\u5b9e\u73b0init(frame:)\uff0c\u53bb\u8bbe\u7f6e*isOpaque`\u4e3afalse\n\n\n\nGraphics Context Commands\n\nUnder the hood, Core Graphics commands to a graphics context are global C functions with names like CGContextSetFillColor\uff0c\u4f46\u662fswift\u7684\u5c01\u88c5\u8ba9\u8c03\u7528\u66f4\u7b80\u5355\uff08\u8bed\u6cd5\u7cd6\uff09\n\u5f53\u4f60\u5728graphics context\u91cc\u7ed8\u5236\u65f6\uff0c\u53d6\u7684\u5c31\u662f\u5f53\u524d\u7684\u8bbe\u7f6e\uff0c\u56e0\u6b64\u5728\u4efb\u4f55\u7ed8\u5236\u524d\uff0c\u7b2c\u4e00\u6b65\u90fd\u662f\u5148\u914d\u7f6econtext's setting\uff0c\u6bd4\u5982\u4f60\u8981\u753b\u4e00\u6839\u7ea2\u7ebf\uff0c\u518d\u753b\u4e00\u6839\u84dd\u7ebf\n\u8bbe\u7f6econtext line color red, then draw a line\n\u8bbe\u7f6econtext line color blue, then draw a line\n\n\u76f4\u89c9\u8ba4\u4e3a\u7ea2\u548c\u84dd\u53ea\u662f\u4e24\u6761\u7ebf\u5404\u81ea\u7684\u5c5e\u6027\uff0c\u5176\u5b9e\u662f\u4f60\u7ed8\u5236\u5f53\u65f6\uff0c\u6574\u4e2agraphics context\u7684\u8bbe\u7f6e\n\u8fd9\u4e9b\u914d\u7f6e\u901a\u901a\u5b58\u6210\u4e00\u4e2astate\n\u8fd9\u4e9bstate\u53c8\u4f1astack\u8d77\u6765\nsaveGState\u5c06\u5f53\u524dstate\u63a8\u5230\u6808\u9876\nrestoreGstate\u5219\u5c06state\u4ece\u6808\u9876\u53d6\u51fa\uff0c\u8986\u76d6\u5f53\u524d\u8bbe\u7f6e\n\n\n\u53ea\u8981\u5148\u540e\u914d\u7f6e\u6ca1\u6709\u51b2\u7a81\u7684\u9879\uff0c\u5c31\u6ca1\u5fc5\u8981\u9891\u7e41save-restore\n\nPaths and Shapes\n\n\u901a\u8fc7\u4e00\u7cfb\u5217\u7684\u63cf\u8ff0\u53bb\u79fb\u52a8\u4e00\u53bb\u60f3\u8c61\u4e2d\u7684\u7b14\uff0c\u5c31\u662f\u6784\u5efapath\u7684\u8fc7\u7a0b\u3002\uff08\u6ce8\u610f\uff0c\u4e0d\u662f\u6784\u5efaCGPath\u8fd9\u4e2a\u5c01\u88c5\u7684\u8fc7\u7a0b\uff09\n\u5373\u53ea\u8981\u4f60\u5728context\u5185\uff0c\u5c31\u53ef\u4ee5\u7528\u7b14\u753b\u4e1c\u897f\u4e86\n\n\n\u53ea\u8981\u4f60\u6b63\u786e\u5730\u4f7f\u7528move(to:)\u65b9\u6cd5\uff0c\u5c31\u4e0d\u9700\u8981\u50cfapple\u6587\u6863\u91cc\u52a8\u4e0d\u52a8\u5c31\u7528beginPath\u6765\u8bbe\u7f6e\u65b0\u7684path\u7684\u8d77\u70b9\nfillPath\u4f1a\u81ea\u52a8closePaht\n\u5148\u63d0\u4f9bpath\uff0c\u518ddraw\uff0cdraw\u7684\u610f\u601d\u8981\u4e48\u662fstroke\uff0c\u8981\u4e48\u662ffill\uff0c\u8981\u4e48\u662fboth\uff08drawPath\u65b9\u6cd5\uff09\uff0c\u4f46\u4e0d\u80fd\u4e00\u6b65\u6b65\u6765\uff0c\u56e0\u4e3adraw\u5b8c\u4f60\u7684path\u5c31\u7a7a\u4e86\n\u8854\u63a5\u7b2c\u4e00\u6761\uff0c\u5982\u679c\u4f60\u60f3\u590d\u7528\u8fd9\u4e2apath\uff0c\u624d\u9700\u8981\u7528CGPath\u5c01\u88c5\u8d77\u6765\n\n\n\u5982\u679c\u662f\u4f7f\u7528UIKit\u5c01\u88c5\u7684\u8bed\u6cd5\uff0c\u90a3\u4e48\u8d77\u70b9\u5c31\u662f\u4e00\u4e2apath let path = UIBezierPath()\n\u90a3\u4e48\u6bcf\u6b21draw\u5b8c\uff0c\u8981\u5728\u522b\u7684\u4f4d\u7f6e\u201c\u843d\u7b14\u201d\u7684\u8bdd\uff0c\u8981\u5148\u6e05\u4e00\u4e0b\u9760\u524d\u7684path: path.removeAllPoints()\n\nClipping\n\nclipping\u6389\u7684\u533a\u57df\u5c31\u4e0d\u80fd\u88ab\u7ed8\u5236\u4e86\n\u901a\u5e38\u4f60\u65e0\u6cd5\u5f97\u77e5\u4e00\u4e2agraphics context\u7684\u5927\u5c0f\uff0c\u4f46\u662f\u901a\u8fc7boundingBoxOfClipPath\u5374\u80fd\u62ff\u5230\u6574\u4e2abounding\n\n\u8fd9\u4e00\u8282\u505a\u4e86\u51e0\u4e2a\u5b9e\u9a8c\uff0c\u5355\u72ec\u5199\u5230\u4e86\u53e6\u4e00\u7bc7\u535a\u6587\n\u524d\u9762\u8bf4\u8fc7\uff0c\u6ca1\u6709\u80cc\u666f\u8272+isOpaque\u4f1a\u5bfc\u81f4\u80cc\u666f\u53d8\u9ed1\uff0c\u5728draw\u91cc\u9762\uff0c\u9ed8\u8ba4\u7684\u989c\u8272\u4e5f\u662f\u9ed1\u8272\uff0c\u6240\u4ee5\u4f60\u4e0d\u5e26\u4efb\u4f55\u8bbe\u7f6e\u7684\u7ed8\u5236\u4f60\u662f\u770b\u4e0d\u5230\u4efb\u4f55\u4e1c\u897f\u7684\uff08\u5c31\u662f\u9ed1\u7b14\u5728\u9ed1\u7eb8\u4e0a\u753b\uff09\nGradients\ngradient\u4e0d\u80fd\u7528\u4f5cpath\u7684fill\uff0c\u4f46\u53ef\u4ee5\u53cd\u8fc7\u6765\u8ba9gradient\u6cbf\u7740path\u5206\u5e03\uff0c\u4ee5\u53ca\u88abclip\u7b49\u3002\u5728\u4e0a\u9762\u5e94\u7528clip\u7ed8\u5236\u7bad\u5c3e\u7684\u4f8b\u5b50\u91cc\uff0c\u6211\u4eec\u628a\u7bad\u67c4\u53d8\u6210\u4ece\u5de6\u5230\u53f3\u662f\u7070-\u9ed1-\u7070\u7684\u6e10\u53d8\uff0c\u53ea\u9700\u8981\u5728addLine\u5e76\u8bbe\u7f6e\u4e86line\u7684\u5bbd\u5ea6\u540e(\u4e0d\u8981\u8bbe\u989c\u8272\u4e86\uff09\uff0c\u4e0d\u662f\u53bbstrokePath()\uff0c\u800c\u662f\uff1acon.replacePathWithStrokedPath()  // \u4e0d\u518dstrokePath\ncon.clip()                        // \u518dclip\u4e00\u6b21\uff0c\u5947\u5076\u53cd\u8f6c\n// draw the gradient\nlet locs : [CGFloat] = [ 0.0, 0.5, 1.0 ]\nlet colors : [CGFloat] = [\n        0.8, 0.4, // starting color, transparent light gray\n        0.1, 0.5, // intermediate color, darker less transparent gray\n        0.8, 0.4, // ending color, transparent light gray\n    ]\nlet sp = CGColorSpaceCreateDeviceGray()\nlet grad = CGGradient(\n    colorSpace:sp, colorComponents: colors, locations: locs, count: 3)!\ncon.drawLinearGradient(grad,\n    start: CGPoint(89,0), end: CGPoint(111,0), options:[])\ncon.resetClip() // done clipping\n\n\u5c0f\u6280\u5de7\u5c31\u662f\u7528replacePathWithStrokedPath\u5047\u88c5\u8fdb\u884c\u4e86\u63cf\u8fb9\uff08\u6240\u4ee5\u53ea\u9700\u8981\u7ebf\u5bbd\u5e76\u4e0d\u9700\u8981\u7ebf\u7684\u989c\u8272\uff09\uff0c\u8fd4\u56de\u4e86\u4e00\u4e2a\u65b0\u7684path\uff0c\u4e00\u6761\u7c97\u7ebf\u53d8\u6210\u4e86\u4e00\u4e2a\u77e9\u5f62\u6846\u3002\n\u800c\u4e00\u65e6\u6dfb\u52a0\u4e86\u8fd9\u4e2a\u6846\uff0c\u524d\u9762\u7684\u5947\u5076\u5173\u7cfb\u5c31\u5168\u53cd\u8fc7\u6765\u4e86\uff0c\u4e8e\u662f\u6211\u4eec\u518dclip\u4e00\u6b21\uff0c\u8fd9\u5c31\u662f\u5934\u4e24\u884c\u4ee3\u7801\u91cc\u505a\u7684\u4e8b\u3002Colors and Patterns\n\u5f53\u4f60\u7684suer interface sytle changes(\u6bd4\u5982\u9ed1\u6697\u6a21\u5f0f\u5207\u6362), draw(_:)\u65b9\u6cd5\u4f1a\u88ab\u7acb\u523b\u8c03\u7528\uff0c\u88ab\u8bbe\u7f6eUITraitCollection.current\uff0c\u4efb\u4f55\u652f\u6301\u52a8\u6001\u989c\u8272\u7684UIColor\u80fd\u53d8\u6210\u76f8\u5e94\u7684\u989c\u8272\uff0c\u4f46\u662fCGColor\u4e0d\u80fd\uff0c\u4f60\u9700\u8981\u624b\u52a8\u89e6\u53d1\u91cd\u7ed8\u3002UIKit\u4f7f\u7528pattern\u975e\u5e38\u7b80\u5355\uff0c\u628a\u7eb9\u7406\u7ed8\u5236\u5230\u56fe\u7247\u4e0a\uff0c\u7136\u540e\u4ece\u7eb9\u7406\u56fe\u7247\u63d0\u53d6\u51fa\u989c\u8272\u4fe1\u606f\uff0c\u5c31\u80fd\u50cf\u522b\u7684\u989c\u8272\u4e00\u6837setFill\u4e86\uff1a// create the pattern image tile\nlet r = UIGraphicsImageRenderer(size:CGSize(4,4))\nlet stripes = r.image { ctx in\n    let imcon = ctx.cgContext\n    imcon.setFillColor(UIColor.red.cgColor)\n    imcon.fill(CGRect(0,0,4,4))\n    imcon.setFillColor(UIColor.blue.cgColor)\n    imcon.fill(CGRect(0,0,4,2))\n}\n// paint the point of the arrow with it\nlet stripesPattern = UIColor(patternImage:stripes)\nstripesPattern.setFill()\nlet p = UIBezierPath()\np.move(to:CGPoint(80,25))\np.addLine(to:CGPoint(100,0))\np.addLine(to:CGPoint(120,25))\np.fill()\n\n\u800cCore Graphics\u5219\u8981\u590d\u6742\uff08\u4e5f\u66f4\u5e95\u5c42\uff09\u5f97\u591a\uff0c\u7ed3\u5408\u6ce8\u91ca\u770b\u4ee3\u7801\uff1acon.saveGState()\n// \u975e\u5e38\u91cd\u8981\uff0c\u8bbe\u7f6e\u989c\u8272\u7a7a\u95f4\nlet sp2 = CGColorSpace(patternBaseSpace:nil)!\ncon.setFillColorSpace(sp2)\n// \u7eb9\u7406\u7ed8\u5236\u771f\u6b63\u53d1\u751f\u7684\u5730\u65b9\nlet drawStripes : CGPatternDrawPatternCallback = { _, con in\n    con.setFillColor(UIColor.red.cgColor)\n    con.fill(CGRect(0,0,4,4))\n    con.setFillColor(UIColor.blue.cgColor)\n    con.fill(CGRect(0,0,4,2))\n}\n// \u5305\u88c5\u6210\u4e00\u4e2acallback\u7ed9CGPattern\u4f7f\u7528\nvar callbacks = CGPatternCallbacks(\n    version: 0, drawPattern: drawStripes, releaseInfo: nil) // \u4e00\u4e2astruct\n\n// \u6838\u5fc3\u5c31\u662f\u6784\u9020\u8fd9\u4e2aCGPattern\nlet patt = CGPattern(info:nil, bounds: CGRect(0,0,4,4),  // cell\u5927\u5c0f\n    matrix: .identity,    // cell\u53d8\u6362\uff0c\u8fd9\u91cc\u6ca1\u6709\uff0c\u5c31\u7528.identity\n    xStep: 4, yStep: 4,   // \u6a2a\u5411\u7eb5\u5411\u590d\u5236cell\u65f6\u7684\u6b65\u957f\n    tiling: .constantSpacingMinimalDistortion,  // \u6392\u5217\u65b9\u5f0f\n    isColored: true,      // \u662f\u989c\u8272\u8fd8\u662f\u753b\u7b14\u6a21\u5f0f\uff0c\u9009\u989c\u8272true\n    callbacks: &amp;callbacks)!  // \u7eb9\u7406\u7ed8\u5236\u7684\u65b9\u6cd5\u5305\u5728callback\u91cc\u9762\uff0c\u4f20\u6307\u9488\nvar alph : CGFloat = 1.0\ncon.setFillPattern(patt, colorComponents: &amp;alph)\ncon.move(to:CGPoint(80, 25))\ncon.addLine(to:CGPoint(100, 0))\ncon.addLine(to:CGPoint(120, 25))\ncon.fillPath()\ncon.restoreGState()\n\nGraphics Context Transforms\n\u8ddf\u524d\u9762\u7684\u77e5\u8bc6\u70b9\u4e00\u6837\uff0c\u5e94\u7528Graphics Context Transforms\u540e\uff0c\u4e5f\u4e0d\u4f1a\u5f71\u54cd\u5f53\u524d\u5df2\u7ecf\u7ed8\u5236\u7684\u4e1c\u897f\u3002 =&gt; CTM\u5373\uff08current transform matrix)\u3002\u65cb\u8f6c\u7684\u4e2d\u5fc3\u70b9\u662f\u539f\u70b9\uff0c\u5927\u591a\u6570\u60c5\u51b5\u4e0b\u4e0d\u662f\u4f60\u60f3\u8981\u7684\uff0c\u8bb0\u5f97\u5148translate\u4e00\u4e0b\u3002override func draw(_ rect: CGRect) {\n    let con = UIGraphicsGetCurrentContext()!\n    con.setShadow(offset: CGSize(7, 7), blur: 12) // \u987a\u4fbf\u6f14\u793a\u4e0bsahdow\n    con.beginTransparencyLayer(auxiliaryInfo: nil)  // \u8fd9\u6837\u91cd\u53e0\u7684\u9634\u5f71\u4e0d\u4f1a\u53e0\u6210\u9ed1\u8272\n    self.arrow.draw(at:CGPoint(0,0))\n    for _ in 0..&lt;3 {\n        con.translateBy(x: 20, y: 100)\n        con.rotate(by: 30 * .pi/180.0)\n        con.translateBy(x: -20, y: -100)\n        self.arrow.draw(at:CGPoint(0,0)) // \u6ce8\u610f\u8fd9\u91cc\u662f\u7528\u524d\u9762\u65b9\u6cd5\u751f\u6210\u7684\u7bad\u5934\u56fe\u7247\u6765draw\u5230\u6307\u5b9a\u4f4d\u7f6e\n    } \n}\n\n\u6ce8\u610f\uff0c\u8bed\u6cd5\u867d\u7136\u662f\u5148\u5904\u7406context\uff0c\u518d\u7ed8\u5236\uff0c\u5176\u5b9e\u53ea\u662f\u544a\u77e5\u5750\u6807\u7cfb\u7684\u53d8\u5316\uff0c\u7ed8\u5236\u7684\u65f6\u5019\u81ea\u52a8\u5e94\u7528\u8fd9\u4e9b\u53d8\u6362\u3002Erasing\nclear(_:)\u64e6\u9664\u884c\u4e3a\u53d6\u51b3\u4e8econtext\u662f\u900f\u660e\u8fd8\u662f\u5b9e\u5fc3\u7684\uff08\u900f\u660e\u64e6\u6210\u900f\u660e\uff0c\u5b9e\u5fc3\u64e6\u6210\u9ed1\u8272\uff09\uff0c\u53ea\u8981\u4e0d\u662fopaque\uff0c\u901a\u901a\u7406\u89e3\u4e3a\u900f\u660e\uff0c\u6bd4\u5982background color\u662fnil, \u62160.9999\u7684\u900f\u660e\u5ea6\u3002Points and Pixels\ncon.fill(CGRect(100,0,1.0/self.contentScaleFactor,100))\u5e94\u7528contentScaleFactor\u753b\u4e00\u6761\u5728\u4efb\u4f55\u5c4f\u5e55\u4e0a\u90fd\u9510\u5229\u76841\u50cf\u7d20\u76f4\u7ebf\u3002Content Mode\nthe drawing system will avoid asking a view to redraw itself from scratch if possible; instead, it will use the cached result of the previous drawing operation (the bitmap backing store).If the view is resized, the system may simply stretch or shrink or reposition the cached drawing, if your contentMode setting instructs it to do so.draw(_:)\u4ece\u539f\u70b9\u5f00\u59cb\u7ed8\u5236\uff0c\u6240\u4ee5\u4f60\u7684contentMode\u4e5f\u8981\u76f8\u5e94\u8bbe\u7f6e\u4e3atopLeft\u3002\u800c\u5982\u679c\u8bbe\u7f6e\u4e3a.redraw\uff0c\u5219\u4e0d\u4f1a\u4f7f\u7528cached content\uff0c\u6bcf\u5f53view\u88abresize\u7684\u65f6\u5019\uff0c\u5c31\u4f1a\u8c03\u7528setNeedsDisplay\u65b9\u6cd5\uff0c\u6700\u7ec8\u89e6\u53d1draw(_:)\u8fdb\u884c\u91cd\u7ed8\u3002", "categories": [{"name": "posts", "slug": "posts", "permalink": "/category/posts/"}], "tags": [{"name": "drawing", "slug": "drawing", "permalink": "/tag/drawing/"}, {"name": "imageview", "slug": "imageview", "permalink": "/tag/imageview/"}, {"name": "core image", "slug": "core image", "permalink": "/tag/core%20image/"}, {"name": "path", "slug": "path", "permalink": "/tag/path/"}, {"name": "shape", "slug": "shape", "permalink": "/tag/shape/"}, {"name": "graphics", "slug": "graphics", "permalink": "/tag/graphics/"}]}, {"title": "Programming iOS 14 - View", "date": "2021-12-22T00:00:00-00.00", "path": "/archives/View/", "text": "\u300aProgramming iOS 14: Dive Deep into Views, View Controllers, and Frameworks\u300b\u7b2c1\u7ae0\nView\n\nA view knows how to draw itself into a rectangular area of the interface.\nA view is also a responder\ninit:\ninit(frame:): init from code\ninit(coder:): init from nib\n\n\n\nWindow and Root View\n\nWindow = top view, ultimate superview\niPad with iOS 13+ can have multiple window\n\n\nonly one subview: rootViewController's main view -&gt; occupy the entirety of the window\n\nHow an App Launches\n\nSwift\u9879\u76ee\u81ea\u52a8\u8c03\u7528\u4e86UIApplicationMain\u65b9\u6cd5\uff0c\u552f\u4e00\u65b9\u6cd5\uff0c\u521d\u59cb\u5316\u4e86\u5fc5\u8981\u8d44\u6e90\n\u521d\u59cb\u5316UIApplicationMain\uff08\u4f60UIApplication.shared\u7684\u6765\u6e90\uff09\uff0c\u53ca\u5176degate class(@UIApplicationMain)\uff0c\u5e76\u6301\u6709\uff0c\u8d2f\u7a7fapp\u6574\u4e2a\u751f\u547d\u5468\u671f\nUIApplicationMain calls the app delegate\u2019s application(_:didFinish- LaunchingWithOptions:), giving your code an opportunity run.\nUIApplicationMain creates a UISceneSession, a UIWindowScene, and an instance that will serve as the window scene\u2019s delegate.\ndelegate\u7531plist.info / Application Scene Manifest / Delegate Class Name \u51b3\u5b9a ($(PRODUCT_MODULE_NAME).SceneDelegate)\n\n\n\u521d\u59cb\u5316root view\nUIApplicationMain\u6839\u636eplist\u5224\u65ad\u662f\u5426\u4f7f\u7528\u4e86storyboard\n\u521d\u59cb\u5316UIWindow\uff0c\u5e76\u8d4b\u7ed9scene delegate's window property\n\u521d\u59cb\u5316initial view controller \u5e76\u8d4b\u7ed9window\u7684rootViewController\u5c5e\u6027\nUIAplicationMain call window's makeKeyAndVisible\u5448\u73b0Interface\n\n\ncall scene delegate's scene(_:willConnectTo:options:)\n\u8fd9\u91cc\u4e5f\u662f\u6ca1\u7528storyboard\u7684\u8bdd\uff0c\u624b\u52a8\u53bb\u5b9e\u73b0\u4e0a\u9762\u51e0\u6b65\u7684\u5730\u65b9\n\n\n\n\n\nReferring to the Windows\nview.window, if it's nil means it can't be visible to the user\nscene delegate's window property\nUIApplication.shared.windows.first!\n\n\nDo not expect that the window you know about is the app\u2019s only window. The runtime can create additional mysterious windows, such as the UITextEffectsWindow and the UIRemoteKeyboardWindow.\nSubview and Superview\n\u66fe\u7ecf\uff0c\u4e00\u4e2aview\u62e5\u6709\u5b83\u5bf9\u5e94\u7684\u4e00\u4e2a\u77e9\u5f62\u533a\u57df\uff0c\u4e0d\u5c5e\u4e8e\u5b83\u7684subview\u7684\u5176\u5b83view\u5728\u8fd9\u4e2a\u77e9\u5f62\u5185\u662f\u770b\u4e0d\u89c1\u7684\uff0c\u56e0\u4e3a\u91cd\u7ed8\u77e9\u5f62\u7684\u65f6\u5019\u662f\u4e0d\u4f1a\u8003\u8651\u5230\u5176\u5b83view\u7684\u3002\u540c\u6837\uff0c\u4e5f\u4e0d\u80fddraw\u5230\u77e9\u5f62\u533a\u57df\u5916\u53bb\u3002OS X10.5\u8d77\uff0c\u82f9\u679c\u66f4\u65b0\u4e86\u5173\u4e8eView\u7684\u67b6\u6784\uff0ciOS\u4e5f\u8ddf\u7740\u6539\u53d8\u4e86\uff0csubview\u80fd\u51fa\u73b0\u5728superview\u4e4b\u5916\uff08\u6240\u4ee5\u53cd\u800c\u9700\u8981clipping\u4e86\uff09\uff0c\u4e00\u4e2aview\u4e5f\u80fdoverlap\u5230\u53e6\u4e00\u4e2aview\u4e0a\u800c\u65e0\u9700\u6210\u4e3a\u5176subview\uff08\u540e\u6765\u5c45\u4e0a\uff09\u3002\u7ed3\u679c\u5c31\u662f\uff0c\u4f60\u73b0\u5728\u770b\u5230\u51e0\u4e2a\u4e92\u76f8\u91cd\u53e0\u7684\u6211\u8272\u5757\uff0c\u4f60\u518d\u4e5f\u5206\u8fa8\u4e0d\u51faview\u4e4b\u95f4\u7684\u5c42\u6b21\u5173\u7cfb\u4e86\u3002\uff08isDescendant(of:)\u53ef\u4ee5\u68c0\u67e5\u5c42\u6b21\u5173\u7cfb\uff09\u6ca1\u6709\u6e05\u7a7asubview\u7684\u65b9\u6cd5\uff0c\u6240\u4ee5\uff1amyView.subviews.forEach {$0.removeFromSuperview()}Color\n\nbackground color\u4e0d\u8bbe\u7f6e\u8868\u793a\u8fd9\u4e2aview\u662f\u900f\u660e\u7684\n\u5982\u679c\u518d\u6ca1\u6709\u8fdb\u884c\u4efb\u4f55\u5b50view\u7684\u7ed8\u5236\uff0c\u90a3\u4e48\u8fd9\u4e2aview\u5c31\u770b\u4e0d\u89c1\u4e86\n\u8fd9\u79cdview\u53ef\u4ee5\u4f5c\u4e3a\u5bb9\u5668\u6765\u4f7f\u7528\n\niOS 13\u8d77\uff0c\u5f15\u5165\u9ed1\u6697\u6a21\u5f0f\u540e\uff0c\u786c\u7f16\u7801\u7684\u989c\u8272\u5c31\u8fce\u6765\u4e86\u5f88\u5927\u7684\u95ee\u9898\u3002\n\u7ea0\u7ed3\u7684\u89e3\u51b3\u65b9\u6cd5\uff1a\n\nv.backgroundColor = UIColor { tc in\n        switch tc.userInterfaceStyle {\n        case .dark:\n            return UIColor(red: 0.3, green: 0.4, blue: 0.4, alpha: 1)\n        default:\n            return UIColor(red: 0, green: 0.1, blue: 0.1, alpha: 1)\n        }\n}\n\n\u5176\u4e2d, tc\u662ftrait collection\uff0c\u4e00\u7cfb\u5217\u7279\u5f81\u7684\u96c6\u5408\u3002\n\u800ciOS 13\u8d77\u591a\u4e86\u5f88\u591a.system\u5f00\u5934\u7684color\uff0c\u53ef\u4ee5\u81ea\u9002\u5e94\nasset catalog\u4e2d\u53ef\u4ee5\u81ea\u5b9a\u4e49\u989c\u8272\uff0c\u5e76\u8bbe\u7f6e\u4e0d\u540c\u6a21\u5f0f\u4e0b\u7684\u989c\u8272\n\nVisibility and Opacity\n\u9690\u85cf\u4e00\u4e2aview:\nisHidden: view\u8fd8\u5728\uff0c\u4f46\u4e0d\u4f1a\u63a5\u53d7\u89e6\u6478\u4e8b\u4ef6\nalpha = 0\u4e5f\u4f1a\u4f7f\u5f97isHidden == true\n\n\nisOpaque: \u5b83\u4e0d\u5f71\u54cd\u53ef\u89c1\u6027\uff0c\u4f46\u5f71\u54cddrawing system\nopaque == true\u7684view\u4e0d\u5177\u6709\u900f\u660e\u5ea6\uff0c\u5c06\u62e5\u6709\u6700\u9ad8\u7684\u6e32\u67d3\u6548\u7387\n\n\nframe = CGRect.zero\u7684view\u4e5f\u662f\u4e0d\u53ef\u89c1\u7684\n\nFrame, Bounds and Center\n\n\u5c31\u662f\u89c6\u56fe\u5728\u7236\u89c6\u56fe\uff08\u5750\u6807\u7cfb\uff09\u4e2d\u7684\u4f4d\u7f6e\u548c\u5927\u5c0f\u3002\nsizeTofit\u65b9\u6cd5\u6765\u9002\u5e94\u5185\u5bb9\u7684\u5927\u5c0f\u3002\nbound\u539f\u70b9\u8bbe\u4e3a(10, 10)\u610f\u601d\u662f\u5750\u6807\u7cfb\u5f80\u5de6\u4e0a\u89d2\u79fb\u4e86(10,10)\u7684\u50cf\u7d20\uff0c\u5373\u539f\u6765\u7684(10,10)\u73b0\u5728\u5230\u4e86\u539f\u70b9\u3002\nbounds.insetBy(dx:dy)\u662f\u4fdd\u6301\u4e2d\u5fc3\u4e0d\u53d8\uff08\u5373\u540c\u65f6\u6539\u53d8\u4e86\u539f\u70b9\u548c\u5bbd\u9ad8\uff09\n\n\ncenter\u8868\u793a\u7684\u662f\u89c6\u56fe\u5728\u7236\u7ea7\u4e2d\u7684\u4f4d\u7f6e\uff0c\u6240\u4ee5\u6539\u53d8\u81ea\u5df1\u7684bounds\u5e76\u4e0d\u6539\u53d8\u5b83\u7684center\n\u672c\u8d28\u4e0aframe\u662fcenter+\u5bbd\u5ea6\u7684\u4fbf\u6377\u65b9\u6cd5\n\u5982\u679cv2\u662fv1\u7684\u5b50\u89c6\u56fe\uff0cv2.center = v1.center \u901a\u5e38\u4e0d\u80fd\u751f\u6548\uff0c\u56e0\u4e3a\u5b83\u4eec\u7684\u5750\u6807\u7cfb\u4e0d\u540c\uff08\u5404\u81ea\u7684\u7236\u7ea7\uff09\n\n\n\nTransform and Transform3D\n\nTransform\u6539\u53d8View\u7684\u7ed8\u5236\uff0c\u4f46\u4e0d\u6539\u53d8\u5b83\u7684bounds\u548ccenter.\nvalue is a CGAffineTransform\uff0c\u5176\u5b9e\u5c31\u662f\u4e00\u4e2a\u53d8\u6362\u77e9\u9635\nCGPoint, CGSize, and CGRect all have an applying(_:) method \u7528\u6765\u8ba1\u7b97\u5e94\u7528Transform\u540e\u7684\u5750\u6807\n3D\u7248\u7684\u5c31\u662f\u591a\u4e86\u4e00\u4e2a\u5782\u76f4\u4e8e\u5c4f\u5e55\u7684Z\u8f74\n\nWindow Coordinates and Screen Coordinates\n\nThe device screen has no frame, but it has bounds.\nThe window has no superview, but its frame is set automatically to match the screen\u2019s bounds.\ncontinues to fill the screen\n\n\n\niOS 7\u53ca\u4e4b\u524d\uff0c\u5c4f\u5e55\u7684\u5750\u6807\u7cfb\u662f\u4e0d\u53d8\u7684\uff0c\u5982\u679c\u6709\u65cb\u8f6c\uff0c\u5219\u662f\u5bf9root view\u8fdb\u884c\u4e86\u4e00\u6b21rotation\u7684transfrom\u3002\n\u4f46\u5728iOS 8\u4e0d\u518d\u7528transform\u800c\u662f\u5236\u5b9a\u4e86\u4e24\u5957\u5750\u6807\u7cfb\uff0c\u901a\u8fc7UICoordinateSpace\u534f\u8bae\u8868\u793a\n    * UIScreen's coordinateSpace: \u4f1a\u65cb\u8f6c\u7684bounds\n    * UIScreen's fixedCoordinateSpace: \u4e0d\u53d8\u8bfb\u53d6\u89c6\u56fev\u5728\u8bbe\u5907\u7684\u56fa\u5b9a\u5750\u6807\u7cfb\u4e0b\u7684\u4f4d\u7f6e\uff1alet screen = UIScreen.main.fixedCoordinateSpace\nlet r = v.superview!.convert(v.frame, to: screen)\n\nTrait Collections\n\u5c06view\u7684\u4e00\u7cfb\u5217\u73af\u5883\u7279\u5f81\u901a\u8fc7view hierarchy\u5c42\u7ea7\u4e0b\u4f20\uff0c\u901a\u8fc7\u670d\u4eceUITraitEnvironment\u534f\u8bae\uff08\u63d0\u4f9btraitCollection\u5c5e\u6027\u548ctraitCollectionDidChange\u65b9\u6cd5\uff09traitCollection\ndisplayScale: screen's resolution\nuserInterfaceIdiom: general device type, iPhone, or ipad\ninterfaceStyle: is in light/dark mode\nuserInterfaceLevel: .base / .elevated -&gt; affects dynamic background colors\n\n\nIf you implement traitCollectionDidChange(_: ), always call super in the first line. Forgetting to do this is a common beginner mistake.\n\u81ea\u5b9a\u4e49trait collection\u53ea\u80fd\u7528\u4e0b\u9762\u8fd9\u79cd\u201c\u7ec4\u5408\u201d\u7684\u65b9\u5f0flet tcdisp = UITraitCollection(displayScale: UIScreen.main.scale)\nlet tcphone = UITraitCollection(userInterfaceIdiom: .phone)\nlet tc1 = UITraitCollection(traitsFrom: [tcdisp, tcphone])  // \u53d6\u4ea4\u96c6\n\n\u81ea\u52a8\u989c\u8272\u7684\u5e95\u5c42\u903b\u8f91\uff1alet yellow = UIColor.systemYellow\nlet light = UITraitCollection(userInterfaceStyle: .light)\nlet dark = UITraitCollection(userInterfaceStyle: .dark)\nlet yellowLight = yellow.resolvedColor(with: light)\n// 1 0.8 0 1\nlet yellowDark = yellow.resolvedColor(with: dark)\n// 1 0.839216 0.0392157 1\n\nSize Classes\n\u628a\u5c4f\u5e55\u9488\u5bf9\u5bbd\u9ad8\u548c\u6bd4\u4f8b\u505a\u51e0\u4e2a\u5206\u7c7b\uff1a\n.regular(h, v) -&gt; iPad\n.compact(h) + .regular(v) -&gt; \u7ad6\u5c4fiPhone\n.regular(h) + .compact(v) -&gt; \u6a2a\u5c4f\u5927iPhone\n.compact(h, v) -&gt; \u6a2a\u5c4f\u5c0fiPhone\uff085S\u4ee5\u524d\u7684\uff09\n\n\u6240\u4ee5, size class:\n\u5e76\u4e0d\u80fd\u4ecetraitCollectionDidChange\u83b7\u5f97\uff0c\u56e0\u4e3aiPad\u6c38\u8fdc\u662f.regular\n\u53ea\u5173\u5fc3\u6a2a\u7ad6\u5411\u7a81\u7136\u95f4.regular\u548c.compact\u7684\u5207\u6362\n\nOverriding Trait CollectionsYou cannot insert a trait collection directly into the inheritance hierarchy simply by setting a view\u2019s trait collection;For the user interface style, there is a simpler facility available both for a UIViewController and for a UIView: the overrideUserInterfaceStyle property. \n    * default .unspecified\uff0c\u610f\u5473\u7740interface style\u4f1a\u5f80\u4e0b\u4f20\n    * \u4e00\u65e6\u8bbe\u4e3a.dark\u6216.light, \u5c31\u62e6\u622a\u4e86userInterfaceStyle\u7684\u7ee7\u627fLayout\n\nManual layout: layoutSubviews\u91cc\u624b\u52a8\u6446\u653e\u6bcf\u4e2a\u89c6\u56fe\uff0c\u53ef\u5b9a\u5236\u6700\u5f3a\nAutoresizing: \u5b50\u89c6\u56fe\u6839\u636eautoresizingMask\u6765\u8c03\u6574\nAutolayout: \u4f9d\u8d56\u5bf9\u201c\u7ea6\u675f\u201d\u7684\u63cf\u8ff0\u6765\u5e03\u5c40\uff0c\u80cc\u540e\u4ecd\u7136\u662flayoutSubviews\n\u9700\u8981\u7981\u6b62autoresizing\n\n\n\nAutoresizing\nAutoresizing is a matter of conceptually assigning a subview \u201csprings and struts.\u201d A spring can expand and contract; a strut can\u2019t. Springs and struts can be assigned internally or externally, horizontally or vertically.\u53ef\u53d8\u7684\u5c31\u53ebSpring(\u6709\u5f39\u6027)\uff0c\u4e0d\u53d8\u7684\u5c31\u53ebStrut\uff08\u4e0d\u77e5\u9053\u600e\u4e48\u7ffb\u8bd1\uff09\u3002\n\u4e00\u4e2a\u5c45\u4e2d\u7684\u5b50\u89c6\u56fe\uff0c\u672c\u8eab\u4e5f\u4f1a\u968f\u7740\u7236\u89c6\u56fe\u800c\u6539\u53d8\u5927\u5c0f:\n\u610f\u5473\u7740\u5b83\u4e0e\u7236\u89c6\u56fe\u7684\u56db\u4e2a\u8fb9\u8ddd\u662f\u4e0d\u53d8\u7684 -&gt; 4\u4e2a\u5916\u90e8\u51b3\u5b9a\u7684struts\n\u5bbd\u9ad8\u5219\u662f\u53ef\u53d8\u7684 -&gt; 2\u4e2a\u5185\u90e8\u51b3\u5b9a\u7684spring\n\n\n\u800c\u5982\u679c\u5b50\u89c6\u56fe\u4e0d\u968f\u73af\u5883\u6539\u53d8\u5927\u5c0f\uff1a\n\u610f\u601d\u7740\u5bbd\u9ad8\u662f\u56fa\u5b9a\u7684 -&gt; 2\u4e2a\u5185\u90e8\u51b3\u5b9a\u7684struts\n\u800c\u56db\u4e2a\u8fb9\u8ddd\u901a\u901a\u53ef\u53d8 -&gt; 4\u4e2a\u5916\u90e8\u51b3\u5b9a\u7684spring\n\n\n\u4e00\u4e2a\u53f3\u4e0b\u89d2\u6446\u653e\u7684OK button\n\u663e\u7136\uff0c\u6309\u94ae\u5927\u5c0f\u4e0d\u6539\u53d8 -&gt; 2\u4e2a\u5185\u90e8struts\n\u4e0e\u53f3\u8fb9\u548c\u5e95\u90e8\u8ddd\u79bb\u4e0d\u53d8 -&gt; 2\u4e2a\u5916\u90e8struts\n\u4e0e\u9876\u90e8\u548c\u5de6\u8fb9\u8ddd\u79bb\u53ef\u53d8 -&gt; 2\u4e2a\u5916\u90e8spring\n\n\n\u4e00\u4e2a\u9876\u90e8\u5360\u6ee1\u7684text field\n\u9ad8\u5ea6\u4e0d\u53d8 -&gt; 1\u4e2avertical struts\uff08\u5185\u90e8\uff09\n\u5bbd\u5ea6\u53ef\u53d8 -&gt; 1\u4e2ahorizontal spring(\u5185\u90e8)\n\u9876\uff0c\u5de6\uff0c\u53f3\u4e09\u8fb9\u8ddd\u79bb\u4e0d\u53d8 -&gt; 3\u4e2a\u5916\u90e8struts\n\u5e95\u90e8\u8ddd\u79bb\u53ef\u53d8 -&gt; 1\u4e2a\u5916\u90e8spring\n\n\n\n\u6240\u8c13\u7684\u201c\u5185\u90e8\u201d\uff0c\u662f\u56e0\u4e3a\u6559\u6750\u91cc\u7528\u7684\u662finternally\uff0c\u5c31\u4f8b\u5b50\u6765\u770b\uff0c\u5176\u5b9e\u5c31\u662f\u8bf4\u8861\u91cf\u7684\u5bf9\u8c61\u53ea\u662f\u81ea\u5df1\uff0c\u800c\u201c\u8ddd\u79bb\u201d\u660e\u663e\u9700\u8981\u6709\u4e00\u4e2a\u53c2\u7167\u7269\uff0c\u90a3\u5c31\u53ebexternally\u4e86\u3002\u901a\u8fc7autoresizingMask\u6765\u63cf\u8ff0\u4e0a\u8ff0\u4f8b\u5b50\u4e2d\u7684\u89c4\u5219\uff0c\u901a\u8fc7bitmask\u6765\u8fdb\u884c\u7ec4\u5408\uff0c\u9ed8\u8ba4\u4e3a\u5168\u7a7a\uff08\u4f46\u662f\u7b49\u540c\u4e8eflexibleRightMargin)\uff0c\u5373\u666e\u901a\u7684\u6d41\u5f0f\u5e03\u5c40\uff0c\u9760\u5de6\u4e0a\u5bf9\u9f50\uff0c\u53f3\u8fb9\u8ddd\u548c\u5e95\u8fb9\u8ddd\u662f\u52a8\u6001\u7684\u3002let v1 = UIView(frame:CGRect(100, 111, 132, 194))\nv1.backgroundColor = UIColor(red: 1, green: 0.4, blue: 1, alpha: 1)\nlet v2 = UIView(frame:CGRect(0, 0, 132, 10))\nv2.backgroundColor = UIColor(red: 0.5, green: 1, blue: 0, alpha: 1)\nlet v1b = v1.bounds\nlet v3 = UIView(frame:CGRect(v1b.width-20, v1b.height-20, 20, 20))\nv3.backgroundColor = UIColor(red: 1, green: 0, blue: 0, alpha: 1)\nself.view.addSubview(v1)\nv1.addSubview(v2)\nv1.addSubview(v3)\n\n\u6f14\u793a\u4e86\u4e0a\u4f8b\u4e2d\u7684&quot;text fiels&quot;\u548c\u201cok button&quot;\uff0c\u4e00\u4e2a\u7f6e\u9876\uff0c\u4e00\u4e2a\u9760\u4e2d\u4e0b\u3002\u5e76\u4e14\u90fd\u8bbe\u7f6e\u4e86\u7edd\u5bf9\u5927\u5c0f\u7684\u5bbd\u9ad8\uff0c\u90a3\u4e48\u5f53\u4f60\u6539\u53d8v1\u7684frame\u7684\u65f6\u5019\uff0c\u6bd4\u5982\u53d8\u5bbd\u53d8\u9ad8\uff0cv2,v3\u4f1a\u53d1\u751f\u4ec0\u4e48\u5462\uff1f\u56e0\u4e3a\u4f60\u6ca1\u6709\u8bbe\u7f6eautoresizingMask\uff0c\u90a3\u4e48\u5c31\u4f1a\u9ed8\u8ba4\u4fdd\u6301\u5de6\u4e0a\u7684\u8fb9\u8ddd\uff0c\u8fd9\u6837v2\u4e0d\u518d\u94fa\u6ee1\u9876\u90e8\uff0cv3\u4e5f\u4e0d\u518d\u7d27\u8d34\u53f3\u4e0b\u89d2\uff0c\u60f3\u8981\u5b83\u4eec\u8ddf\u7740v1\u53d8\u5316\uff1av2.autoresizingMask = .flexibleWidth  // \u5bbd\u5ea6\u53ef\u53d8\nv3.autoresizingMask = [.flexibleTopMargin, .flexibleLeftMargin] // \u5de6\uff0c\u9876\u53ef\u53d8\uff08\u8fd9\u6837\u5c31\u80fd\u5c3d\u60c5\u5f80\u53f3\u4e0b\u8d34\u4e86\uff09\n\n\nAutoResizing\u5728layoutSubviews\u88ab\u8c03\u7528\u4e4b\u524d\u53d1\u751f\u3002\nAutolayout and Constraints\nautolayout\u7684\u5b50view\u53ef\u4ee5\u4e0d\u7528autolayout\uff0c\u4f46\u662f\u7236view\u5fc5\u987b\u662fautolayout\uff0c\u5c42\u5c42\u5411\u4e0a\u5230main view of it's view controller, which receives autolayout-related eventsautolayout\u63cf\u8ff0\u4e0d\u540cview\u7684\u5c5e\u6027\u4e4b\u95f4\u7684\u4f4d\u7f6e\u5173\u7cfb\uff0c\u8fd9\u4e9bview\u4e0d\u5fc5\u662f\u5144\u5f1f\uff0c\u4e5f\u4e0d\u975e\u5f97\u662f\u7236\u5b50\uff0c\u53ea\u9700\u8981\u4fdd\u8bc1\u62e5\u6709\u4e00\u4e2a\u5171\u540c\u7684\u7956\u5148\u3002\u8c01\u6301\u6709\u8fd9\u4e9b\u7ea6\u675f\uff1f\n\u5982\u679c\u662f\u7ea6\u675f\u81ea\u8eab\u7684\u5bbd\u5ea6\uff08\u7edd\u5bf9\u503c\uff09 -&gt; \u5c5e\u4e8e\u81ea\u8eab\n\u5982\u679c\u662f\u7ea6\u675f\u4e86\u5b83\u5bf9superview\u7684\u9876\u90e8\u7684\u8ddd\u79bb -&gt; \u5c5e\u4e8esuperview\n\u5982\u679c\u7ea6\u675f\u4e86\u51e0\u4e2asibling view\u7684\u9876\u90e8\u5bf9\u9f50 -&gt; \u5c5e\u4e8e\u8fd9\u4e9bview\u7684superview\n\n\u4e8b\u5b9e\u4e0a\uff0ciOS\u4e0d\u9700\u8981\u4f60\u5173\u5fc3\u8fd9\u4e2a\uff0c.activate\u8ba9\u4f60\u53ea\u7ba1\u63cf\u8ff0\u7ea6\u675f\u548c\u5173\u7cfb\uff0c\u7136\u540e\u628a\u5b83\u52a0\u5230\u6b63\u786e\u7684view\u4e0a\u3002\u7ea6\u675f\u57fa\u672c\u4e0a\u662f\u53ef\u8bfb\u7684\uff0c\u9664\u4e86priority, constant, \u548c isActive\uff0c\u5176\u5b83\u60c5\u51b5\u4f60\u53ea\u80fd\u79fb\u9664\u5e76\u91cd\u5efa\u4e86\u3002\uff08\u8fd8\u6709\u4e00\u4e2a\u8ddf\u7ea6\u675f\u65e0\u5173\u7684identifier\uff0c debug\u6709\u7528\uff09\nautolayout\u53d1\u751f\u5728layoutSubviews\uff0c\u6240\u4ee5\u5982\u679c\u4f60\u63d0\u524d\u8bbe\u7f6e\u4e86frame\uff0c\u56fe\u50cf\u5c06\u4f1a\u53d1\u751f\u8df3\u52a8\u3002\u5982\u679c\u4f60\u662f\u5728layoutSubviews\u91cc\u9762\u8bbe\u7f6e\u7684\u5c31\u4e0d\u4f1a\u3002\u5f53\u7136\u4f60\u6700\u597d\u7ebf\u7528\u7ea6\u675f\u3002\n\u5982\u679c\u4f60\u7684\u7ea6\u675f\u6d89\u53ca\u5230\u4e86\u522b\u7684\u4e4b\u524d\u5e76\u6ca1\u7528\u4f7f\u7528autolayout\u7684view\uff0c The autolayout engine takes care of this for you:\nit reads the view\u2019s frame\nand autoresizingMask settings and translates them into implicit constraints\n\n\u6bd4\u5982\uff1alet lab1 = UILabel(frame:CGRect(270,20,42,22))\nlab1.autoresizingMask = [.flexibleLeftMargin, .flexibleBottomMargin]\nlab1.text = &quot;Hello&quot;\nself.view.addSubview(lab1)\n\n\u4e00\u4e2a\u53f3\u4e0a\u7684label\uff0c\u5982\u679c\u4f60\u7684\u53e6\u4e00\u4e2aview\u76f8\u5bf9lab1\u6765\u8bbe\u7f6eautolayout\u7684\u7ea6\u675f\uff0c\u90a3\u4e48lab1\u5c06\u4f1a\u81ea\u52a8\u4ea7\u751f\u5982\u4e0b\u56db\u4e2a\u7ea6\u675f\uff1a\n1. &lt;NSAutoresizingMaskLayoutConstraint H:[UILabel:'Hello']-(63)-|&gt;\n2. &lt;NSAutoresizingMaskLayoutConstraint UILabel:'Hello'.minY == 20&gt;\n3. &lt;NSAutoresizingMaskLayoutConstraint UILabel:'Hello'.width == 42&gt;\n4. &lt;NSAutoresizingMaskLayoutConstraint UILabel:'Hello'.height == 22&gt;\n\n\u800c\u4e14\u7ea6\u675f\u7684\u5177\u4f53\u6570\u503c\u4ee5\u5f53\u524d\u8fd0\u884c\u8bbe\u5907\u6765\u5b9a\u7684\uff0c\u6bd4\u5982\u4e0a\u4f8b\u662fiPhone8\uff0c\u5c4f\u5e55\u5bbd\u5ea6\u662f375\uff0c\u90a3\u4e48\uff1a\norigin(270, 28) \u80fd\u5f97\u5230minY = 20 -&gt; \u7ea6\u675f2\nsize(42, 22)\u80fd\u5f97\u5230height = 22, width = 42 -&gt; \u7ea6\u675f3\uff0c4\n\u7ed3\u5408\u5c4f\u5e55\u5bbd\u5ea6\uff0corigin, size\uff0c \u5f97\u5230\u53f3\u8fb9\u8ddd\u79bb\uff1a(375 - 270 - 42 = 63) -&gt; \u7ea6\u675f1\n\n\u4f46\u662f\u5982\u679c\u540e\u9762\u8fd8\u6709\u522b\u7684\u7ea6\u675f\u7684\u8bdd\uff0c\u5f88\u5bb9\u6613\u5343\u4e07\u51b2\u7a81\uff0c\u6bd5\u7adf\u90fd\u81ea\u52a8\u751f\u6210\u7684\uff0c\u7528\u6237\u5199\u4ee3\u7801\u7684\u65f6\u5019\u5e76\u4e0d\u4f1a\u5728\u610f\u5f53\u65f6\u81ea\u52a8\u751f\u6210\u7684\u7ea6\u675f\u5728\u5176\u5b83\u573a\u666f\u662f\u5426\u4e5f\u4f1a\u6709\u522b\u7684\u7ea6\u675f\u81ea\u52a8\u751f\u6210translatesAutoresizingMaskIntoConstraints\u5e72\u7684\u5c31\u662f\u8fd9\u4e2a\uff0c\u6240\u4ee5\u4e00\u822c\u60c5\u51b5\u4e0b\u662f\u628a\u5b83\u5173\u6389\u7684\u3002\u8bed\u6cd5\uff1av1.addConstraint(\n    NSLayoutConstraint(item: v2,\n        attribute: .leading,\n        relatedBy: .equal,\n        toItem: v1,\n        attribute: .leading,\n        multiplier: 1, constant: 0)\n)\n\n\n// compact notation\nNSLayoutConstraint.activate([\n        lab2.topAnchor.constraint(\n            equalTo: lab1.bottomAnchor, constant: 20),\n        lab2.trailingAnchor.constraint(\n            equalTo: self.view.trailingAnchor, constant: -20)\n])\n\nVFL (Visual format notation)\n&quot;V:|-10-[v2(20)]&quot;\u8fd9\u4ee3\u8868v2\u7684\u9876\u90e8\u8ddd\u79bbsuperview 10\u4e2apoint,\u9ad8\u5ea6\u662f20\u3002\u5982\u679c\u63cf\u8ff0\u7684\u662f\u6c34\u5e73\u65b9\u5411\u7684\uff0c\u5219\u662fH\uff0c\u4f46H\u662f\u9ed8\u8ba4\u7684\uff0c\u53ef\u4ee5\u7701\u7565\u3002\u540c\u6837\uff0cH\u5bf9\u5e94\u7684\u62ec\u53f7\u91cc\u7684\u6570\u503c\u4f1a\u88ab\u7406\u89e3\u4e3awidth.v2\u662fview\u7684\u540d\u5b57\uff0c\u901a\u5e38\u4f60\u9700\u8981\u51c6\u5907\u4e00\u4e2a\u5b57\u5178\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u5728VFL\u4e2d\u7528\u7b80\u5355\u7684\u6587\u5b57\u5bf9\u5e94\u4efb\u4f55view\u4e86let d = [&quot;v2&quot;:v2,&quot;v3&quot;:v3]\nNSLayoutConstraint.activate([\n    NSLayoutConstraint.constraints(withVisualFormat:\n        &quot;H:|[v2]|&quot;, metrics: nil, views: d),\n    NSLayoutConstraint.constraints(withVisualFormat:\n        &quot;V:|[v2(10)]&quot;, metrics: nil, views: d),\n    NSLayoutConstraint.constraints(withVisualFormat:\n        &quot;H:[v3(20)]|&quot;, metrics: nil, views: d),\n    NSLayoutConstraint.constraints(withVisualFormat:\n        &quot;V:[v3(20)]|&quot;, metrics: nil, views: d)\n].flatMap {$0})\n\n\u6ce8\u610f\u8fd9\u91cc\u7684flatMap\uff0c\u56e0\u4e3aconstraints(withVisualFormat:) \u8fd4\u7684\u662f\u4e00\u4e2a\u6570\u7ec4\uff0c\u800c\u671f\u671b\u662f\u4e00\u4e2a\u503c\uff0c\u6240\u4ee5\u7528map\u628a$0\u53d6\u4e86\u51fa\u6765\u3002&quot;[v1(&gt;=20@400,&lt;=30)]&quot;\uff0c@\u540e\u9762\u63a5\u7684\u662f\u4f18\u5148\u7ea7new features\niOS 10\u5f15\u5165\u7684anchorWithOffset(to:)\uff0c\u662f\u4ec0\u4e48\u610f\u601d\uff1f\u5b83\u4e5f\u662f\u521b\u5efa\u7684\u4e00\u4e2aanchor\uff0c\u4e5f\u5c31\u662f\u8bf4\u53ef\u4ee5\u5e94\u7528constrain(equalto:)\u4e4b\u7c7b\u7684\u65b9\u6cd5\uff0c\u800c\u5b83\u672c\u8eab\u662f\u4e00\u4e2adimension\uff0c\u6240\u4ee5dimension\u5f53\u7136\u662f\u53ef\u4ee5\u7528\u6765\u6bd4\u8f83\u7684\u3002\u6bd4\u5982\uff0c\u6211\u6709\u4e00\u4e2aview(v1)\uff0c\u6446\u5728\u5c4f\u5e55\u4e0a\u9762\u67d0\u4f4d\u7f6e\uff0c\u73b0\u5728\u8981\u6446\u4e00\u4e2aview(v2)\uff0c\u5e0c\u671b\u5b83\u51fa\u73b0\u5728v1\u548c\u5c4f\u5e55\u5e95\u90e8\uff08\u6216v1\u7684superview\uff0c\u8bbe\u4e3av0\uff09\u7684\u4e2d\u95f4\uff08\u5373\u5782\u76f4\u5c45\u4e2d\uff09\uff0c\u663e\u7136\uff0c\u5982\u679c\u8981\u7528dimension\u63cf\u8ff0\u51fa\u6765\u7684\u8bdd\uff0c\u90a3\u5c31\u662f\uff1a\nv1\u5e95\u90e8\u5230v2\u4e2d\u95f4\u7684\u8ddd\u79bb\n\u7b49\u4e8e\nv2\u4e2d\u90e8\u5230\u5c4f\u5e55\u5e95\u90e8v0\u5e95\u90e8\u7684\u8ddd\u79bb\n\nNSLayoutConstraint.activate([\n    v1.bottomAnchor.anchorWithOffset(to: v2.centerYAnchor)\n        .constraint(equalTo: \n    v2.centerYAnchor.anchorWithOffset(to: view.bottomAnchor))\n])\n\n\u523b\u610f\u5199\u6210\u4e86\u4e09\u884c\uff0c\u4e0e\u6211\u4e0a\u6587\u7684\u4e09\u6bb5\u6587\u5b57\u63cf\u8ff0\u5bf9\u5e94iOS 11\u5f15\u5165\u4e86\u8fd0\u884c\u65f6\u51b3\u5b9a\u7684spacing\uff1a\nconstraint(equalToSystemSpacingAfter:multiplier:)\nconstraint(greaterThanOrEqualToSystemSpacingAfter:multiplier:)\nconstraint(lessThanOrEqualToSystemSpacingAfter:multiplier:)\nconstraint(equalToSystemSpacingBelow:multiplier:)\nconstraint(greaterThanOrEqualToSystemSpacingBelow:multiplier:)\nconstraint(lessThanOrEqualToSystemSpacingBelow:multiplier:)\n\nMargins and Guides\n\nUIEdgeInsets\u662f\u5bf9\u5e03\u5c40\u7684\u8865\u5145\uff0c\u589e\u52a0\u201c\u7b2c\u4e8c\u6761\u8fb9\u201d\nLayout guides -&gt; \u6ca1\u770b\u660e\u767d\nsafe area\u53ef\u4ee5\u8868\u793a\u4e3ainset\uff0c\u4e5f\u53ef\u4ee5\u8868\u793a\u4e3aguides\nadditionalSafeAreaInsets\u8fd8\u80fd\u589e\u52a0safe area\n\n\n\nlet c = v1.topAnchor.constraint(equalTo: v.safeAreaLayoutGuide.topAnchor)\n\nsubview might be positioned with respect to its superview\u2019s margins, especially through an autolayout constraint. By default, a view has a margin of 8 on all four edges.\n\u8fd9\u66f4\u50cf\u662fsuperview\u7684padding\uff0c\u800ciOS\u5e76\u6ca1\u6709padding\u7684\u6982\u5ff5\uff08\u56e0\u4e3a\u5b83\u5e76\u4e0d\u662fCSS\u7684\u76d2\u5b50\u6a21\u578b\uff09let c = v.leadingAnchor.constraint(equalTo:\n        self.view.layoutMarginsGuide.leadingAnchor)\nlet arr = NSLayoutConstraint.constraints(withVisualFormat:\n        &quot;H:|-[v]&quot;, metrics: nil, views: [&quot;v&quot;:v])\n\n\nlayoutMarginsGuide\u662f\u53ea\u8bfb\u7684\uff0c\u4f46UIView\u63d0\u4f9b\u4e86layoutMargins\u5c5e\u6027\uff08\u4e00\u4e2aUIEdgeInsets\uff09\nfrom iOS11: directionalLayoutMargins(\u5176\u5b9e\u5c31\u662f\u7528\u4e86trail, leading\u7b49)\n\n\nVFL\u4e2d\u7528\u77ed\u6a2a\u7ebf\u6765\u4ee3\u8868\u5bf9\u9f50\u7684\u662fmargin\nmargin\u4f1a\u5f80\u4e0b\u4f20\uff0c\u7528preservesSuperviewLayoutMargins\u63a7\u5236\nmargin\u4e0esafearea\u4e0d\u51b2\u7a81\uff0c\u4f1a\u81ea\u52a8\u76f8\u52a0\uff0c\u7528insetsLayoutMarginsFromSafeArea\u5173\u95ed\nviewController\u6709systemMinimumLayoutMargins\u53ef\u4ee5\u589e\u52a0main view\u7684margin(\u51cf\u5c0f\u7684\u8bdd\u4f1a\u9759\u9ed8\u5931\u8d25\uff0c\u5373\u65e0\u6548)\n\u800cviewRespectsSystemMinimumLayoutMargins\u8bbe\u4e3afalse\uff0c\u5c31\u80fd\u7a81\u7834\u8fd9\u4e2a\u9650\u5236\uff1a\uff08\u4e0a\u4e0b\u4e3a0\uff0c\u5de6\u53f3\u4e3a16\uff0c\u5927\u5c4f\u8bbe\u5907\u5de6\u53f3\u4e3a20\uff09\n\n\n\nCustom layout guides\u4e66\u4e2d\u7684\u4f8b\u5b50\u662f\u5782\u76f4\u5e73\u5747\u5206\u914d\u51e0\u4e2aview\uff0c\u7136\u540e\u53d1\u73b0\u662f\u628alayout guide\u5f53\u6210\u4e00\u4e2aview\u6765\u505a\u7684\n\u6bcf\u4e2aview\uff08\u9664\u53bb\u6700\u540e\u4e00\u4e2a\uff09 add\u4e00\u4e2aguide\nABABABA\u6392\u5217\uff0cA\u662fview,B\u662fguide\nA\u7684\u5e95\u90e8=B\u7684\u9876\u90e8\uff08\u9664\u53bb\u6700\u540e\u4e00\u4e2aA\uff09\nA\u7684\u9876\u90e8=B\u7684\u5e95\u90e8\uff08\u9664\u53bb\u7b2c\u4e00\u4e2aA\uff09\n\u4ee4B\u7684\u9ad8\u5ea6\u76f8\u7b49\n\n\u5c31\u628a4\u4e2aA\u7ed9\u5782\u76f4\u5e73\u5747\u5206\u914d\u4e86\uff0c\u7406\u89e3\u7684\u96be\u70b9\u5c31\u662fguide\u4e5f\u5f53\u4f5c\u4e00\u4e2aview\u6765\u7528\uff0c\u800c\u8bed\u6cd5\u4e0a\u53c8\u662f\u52a0\u5230view\u7684\u5c5e\u6027\u91cc\u7684\u3002\u540c\u65f6\uff0c\u53ea\u8981\u8bbe\u7f6eguide\u7684\u9ad8\u5ea6\u76f8\u7b49\uff0c\u5c31\u4f1a\u81ea\u52a8\u5360\u75284\u4e2aView\u4e4b\u5916\u7684\u6240\u6709\u7a7a\u95f4\u5e73\u5747\u5206\u914d\u3002\n\u8fd9\u4e48\u505a\u53ea\u662f\u4e3a\u4e86\u6f14\u793alayout guide\uff0c\u4f46\u662f\u867d\u7136\u7406\u89e3\u4e86\uff0c\u4e5f\u4e0d\u77e5\u9053\u80fd\u7528\u5b83\u6765\u5e72\u561b\uff1f\u5f53\u6210\u4e00\u4e2a\u9690\u5f62\u7684view\u53bb\u505a\u5e03\u5c40\uff1fConstraint alignment\u901a\u8fc7\u8bbe\u7f6eview\u7684alignmentRectInsets\uff0c\u53ef\u4ee5\u6539\u53d8constrains\u8ba1\u7b97\u7684\u8d77\u70b9\u3002\u5bf9\u6211\u6765\u8bf4\uff0c\u53c8\u662f\u4e00\u79cdpadding?\u540c\u6837\u7684\u8fd8\u6709\u81ea\u5b9a\u4e49baseline\u7684forFirstBaselineLayout and forLastBaselineLayout.Intrinsic Content Size\nbutton, label, image\u7b49\u4f1a\u6839\u636e\u5185\u5bb9\u548c\u9884\u8bbe\u6709\u4e00\u4e2ainstrinsic content size\uff0c\u800c\u4e14\u53ef\u4ee5\u7528\u6765\u9690\u5f0f\u5730\u4ea7\u751f\u7ea6\u675f\uff08NSContentSizeLayoutConstraint\uff09\ncontentHuggingPriority(for:) \u67d0\u65b9\u5411\u4e0a\u963b\u6b62\u6269\u5927\u5230\u6bd4intrinsic size\u66f4\u5927\u7684\u4f18\u5148\u7ea7\uff0c\u9ed8\u8ba4250\ncontentCompressionResistancePriority(for:)\uff0c\u963b\u6b62\u7f29\u5c0f\u7684\u4f18\u5148\u7ea7\uff0c\u9ed8\u8ba4750\ninvalidateIntrinsicContentSize\u5c31\u50cfinvalidate a view\uff0c\u4f1a\u89e6\u53d1\u91cd\u65b0\u8ba1\u7b97size\n\n&quot;H:[lab1(&gt;=100)]-(&gt;=20)-[lab2(&gt;=100)]&quot; \u8fd9\u4e24\u4e2alabel\uff0c\u5728\u5c4f\u5e55\u53d8\u5c0f\u65f6\uff0c\u8c01\u6700\u5148\u7f29\u5230100\uff1flet p = lab2.contentCompressionResistancePriority(for: .horizontal)\nlab1.setContentCompressionResistancePriority(p+1, for: .horizontal)\n\n\u8fd9\u91cc\u628alab1\u963b\u6b62\u7f29\u5c0f\u7684\u4f18\u5148\u7ea7\u8c03\u5f97\u66f4\u9ad8\uff0c\u90a3\u4e48\u5c31\u662flab2\u4f1a\u5148\u7f29\u5c0fSelf-Sizing Views\n\u524d\u9762\u8bb2\u7684\u90fd\u662fsuperview\u5bf9subview\u7684\u5f71\u54cd\uff0c\u8fd9\u4e00\u8282\u53cd\u8fc7\u6765\uff0csubview\u7684\u5927\u5c0f\u5f71\u54cdsuperview\u3002\u5047\u5b9a\u4e00\u4e2a\u6ca1\u6709\u8bbe\u7f6e\u5bbd\u9ad8\u7684view\uff0c\u5305\u542b\u4e86\u4e00\u4e2abutton\uff0c\u6211\u4eec\u77e5\u9053button\u662f\u6709\u5176intrinsic size\u7684\uff08\u56fa\u5b9a\u7684\u9ad8\uff0c\u5bbd\u5ea6\u7531\u6309\u94ae\u6587\u5b57\u51b3\u5b9a\uff09\uff0c\n\u6240\u4ee5\u8fd9\u4e2aview\u4e5f\u5c31\u6709\u4e86\u5bbd\u9ad8\u3002\n\u4f46\u8fd9\u4e2a\u5bbd\u9ad8\u62e5\u6709\u4f4e\u4f18\u5148\u7ea7\uff0c\u4e0d\u4f1a\u4e0e\u663e\u5f0f\u8bbe\u5b9a\u7684\u5bbd\u9ad8\u76f8\u51b2\u7a81\u3002\n\u8fd0\u884c\u65f6\u8c03\u7528systemLayoutSizeFitting(_:)\u53ef\u4ee5\u8ba9\u7cfb\u7edf\u4f18\u4f18\u5148\u7ea7\u5730\u53bb\u6309\u8fd9\u4e2asize\u53bblayout\u3002\u8fd9\u4e2a\u64cd\u4f5c\u662f\u6602\u8d35\u548c\u4f4e\u6548\u7684\u3002\n\nStack Views\nUIStackView\u4ecd\u7136\u662f\u81ea\u52a8\u5e03\u5c40\u4f53\u7cfb\u91cc\u7684\uff0c\u5b83\u7684\u4f5c\u7528\u662f\uff08\u4e3a\u5176arrangedSubviews\uff09\u751f\u6210\u4e00\u7cfb\u5217\u7ea6\u675f\uff0c\u53ef\u4ee5\u7406\u89e3\u4e3a\u8bed\u6cd5\u7cd6\u3002\narrangedSubviews\u662fsubViews\u7684\u4e00\u4e2a\u5b50\u96c6\nstackView\u4e5f\u53ef\u4ee5\u6dfb\u52a0\u989d\u5916\u7684subView\nsetCustomSpacing(_:after:)\u8bbe\u7f6e\u989d\u5916\u7684space\n\u4e0d\u8981\u518d\u5bf9arrangedSubviews\u624b\u52a8\u6dfb\u52a0\u7ea6\u675f\uff0c\u57fa\u672c\u4f1a\u4e0e\u4f60\u770b\u4e0d\u89c1\u7684\u8ba1\u7b97\u51fa\u6765\u7684\u7ea6\u675f\u51b2\u7a81\n\u4f46stackview\u672c\u8eab\u662f\u53ef\u4ee5\u7528autolayout\u6765\u5e03\u5c40\u7684\n\n\n\n\u6b64\u65f6\u518d\u6765\u770b\u770b\u524d\u9762\u7684\u7ad6\u5411\u6392\u5217\u5143\u7d20\uff0c\u5e76\u4e14\u95f4\u9694\u76f8\u7b49\u7684\u4f8b\u5b50\u7684\u5199\u6cd5\uff1a// give the stack view arranged subviews\nlet sv = UIStackView(arrangedSubviews: views)\n// configure the stack view\nsv.axis = .vertical\nsv.alignment = .fill\nsv.distribution = .equalSpacing\n// constrain the stack view\nsv.translatesAutoresizingMaskIntoConstraints = false\nself.view.addSubview(sv)\nlet marg = self.view.layoutMarginsGuide\nlet safe = self.view.safeAreaLayoutGuide\nNSLayoutConstraint.activate([\n    sv.topAnchor.constraint(equalTo:safe.topAnchor),\n    sv.leadingAnchor.constraint(equalTo:marg.leadingAnchor),\n    sv.trailingAnchor.constraint(equalTo:marg.trailingAnchor),\n    sv.bottomAnchor.constraint(equalTo:self.view.bottomAnchor),\n])\n\n\u987a\u4fbf\u6ce8\u610f\u4ee5\u4e0b\u91cc\u5bf9layoutMargin\u548csafearea\u7684\u5f15\u7528\uff0c\u90fd\u662f\u901a\u8fc7layout guide\u7684\u3002\ndebug\u4f1a\u53d1\u73b0stack view\u5176\u5b9e\u5e2e\u4f60\u505a\u4e86\u4f60\u4e4b\u524d\u505a\u7684\u4e8b\uff1agenerating UILayoutGuide objects and using them as spacers\nstack view\u8fd8\u6709\u4e00\u4e2a\u7279\u6027\u5c31\u662f\u80fd\u81ea\u9002\u5e94arrangedSubviews\u7684\u53d8\u5316\u3002\u5982\u679c\u4f60\u628a\u5b83\u7406\u89e3\u4e3a\u4e00\u4e2a\u8ba1\u7b97\u5f15\u64ce\uff0c\u53ef\u80fd\u5c31\u597d\u7406\u89e3\u4e86\u3002Internationalization\n\u4f7f\u7528.leading, .trailing\u7b49\u662f\u4e3a\u4e86\u9002\u5e94\u4e0d\u540c\u8bed\u8a00\u7684\u5de6\u53f3\u987a\u5e8f\uff0c\u5f15\u5165\u5230\u5e03\u5c40\u91cc\u5374\u4f1a\u51fa\u73b0\u95ee\u9898\uff0c\u5e76\u4e0d\u662f\u4ece\u53f3\u5230\u5de6\u7684\u8bed\u8a00\u7684\u6a2a\u5411\u5e03\u5c40\u5c31\u4e5f\u8981\u76f8\u5e94\u53cd\u8f6c\u3002UIView.semanticContentAttribute\u53ef\u4ee5\u4eba\u4e3a\u63a7\u5236\uff0c\n\u9ed8\u8ba4\u503c\u662f.unspecified\uff0c\n.playback or .spatial\u5c06\u4f1a\u4e0d\u5e94\u7528\u7ffb\u8f6c\u3002\n.forceLeftToRight or .forceRightToLeft\u5219\u662f\u624b\u52a8\u6307\u5b9a\u4e00\u4e2a\u65b9\u5411\n\nUIView.effectiveUserInterfaceLayoutDirection\u80fdreport\u51fa\u8fd9\u4e2atrait\nYou can test your app\u2019s right-to-left behavior easily by changing the scheme\u2019s Run option Application Language to \u201cRight to Left Pseudolanguage.\u201d\nDebug autolayout\n\n(lldb) e -l objc -- [[UIApplication sharedApplication] windows][0]\n(UIWindow *) $1 = ...\n(lldb) e -l objc -O -- [$1 _autolayoutTrace]\n\nTo get a full list of the constraints responsible for positioning a particular view within its superview, log the results of calling the UIView instance method constraintsAffectingLayout(for:).Configuring Layout in Nib\n\u8fd9\u4e00\u90e8\u5206\u5185\u5bb9\u5efa\u8bae\u6253\u5f00Xcode\u5bf9\u7740\u539f\u6587\u64cd\u4f5c\uff0c\u591a\u4e3a\u754c\u9762\u64cd\u4f5cConditional Interface Design\nwC, HR\u7b49\u7528\u6765\u8868\u793a\u5bbd\u9ad8\u5728\u6b63\u5e38\u548c\u538b\u7f29\u7a7a\u95f4\u91cc\u7684\u4e0d\u540c\u7ec4\u5408\u3002\u601d\u8def\uff1a\u5148\u67b6\u6784\u901a\u7528\u7684\u89c6\u56fe\u548c\u7ea6\u675f\uff0c\u7136\u540e\u7528\u4e24\u79cd\u65b9\u6cd5\u4e4b\u4e00\u6765\u63cf\u8ff0\u4e0d\u540csize class\u4e0b\u7684\u7279\u6b8a\u5e03\u5c40\uff1a\nin the Attributes or Size inspector\ndesign that difference in the canvas:\n\nXcode View Features\nDesignable Views and Inspectable Properties\n\u6709\u5173Xcode\u7684\u9884\u89c8\u8fd9\u4e00\u8282\u53ef\u4ee5\u770b\u770b\uff0c\u4ee5\u53ca@IBDesignable\u65b9\u6cd5\u80fd\u5728xib\u91cc\u9762\u5448\u73b0\uff08\u6559\u7a0b\u91cc\u662f\u5728willMove(toSuperview)\u65b9\u6cd5\u91cc\u8c03\u7528\uff09Layout Events\nupdateConstraints\n\uff08\u5411\u4e0a\u5192\u6ce1\uff09propagated up the hierarchy, starting at the deepest subview\ncalled at launch time\uff0c\u7136\u540e\u51e0\u4e4e\u4e0d\u4f1a\u8c03\u7528\uff0c\u9664\u975e\u624b\u52a8\n\u4e5f\u4ece\u4e0d\u76f4\u63a5\u8c03\u7528\uff0c\u800c\u662f\u901a\u8fc7\nupdateConstraintsIfNeeded\u65b9\u6cd5\n\u6216\u662fsetNeedsUpdateConstraints\n\n\n\ntraitCollectionDidChange(_:)\n(\u5411\u4e0b\u4f20\u64ad)propagated down the hierarchy of UITraitEnvironments.\n\nlayoutSubviews\nThe layoutSubviews message is the moment when layout actually takes place.\n\uff08\u5411\u4e0b\u4f20\u64ad\uff09 propagated down the hierarchy, starting at the top (typically the root view) and working down to the deepest subview.\nIf you\u2019re not using autolayout, layoutSubviews does nothing by default\nlayoutSubviews is your opportunity to perform manual layout after autoresizing has taken place.\nIf you are using autolayout, you must call super or the app will crash (with a helpful error message).\n\u4ece\u4e0d\u76f4\u63a5\u8c03\u7528\uff1a\nlayoutIfNeeded\nsetNeedsLayout\n\n\n\n\nWhen you\u2019re using autolayout, what happens in layoutSubviews?\nThe runtime, having examined and resolved all the constraints affecting this view\u2019s subviews,\nand having worked out values for their center and bounds,\nnow simply assigns center and bounds values to them.\n\nIn other words, layoutSubviews performs manual layout!\n\u6240\u4ee5\u5982\u679c\u4f60\u9700\u8981\u5728auto layout\u4e4b\u540e\u5fae\u8c03\uff0clayoutSubviews\u662f\u6cd5\u5b9a\u7684\u5165\u53e3\uff1a\ncall super, causing all the subviews to adopt their new frames\nexamine those frames, \u5982\u679c\u4e0d\u6ee1\u610f\uff0c\u5219\u5bf9frame\u8fdb\u884c\u5fae\u8c03\uff08\u6216\u8005bounds\u548ccenter\uff09\n\n\u8fd9\u4e5f\u662fautolayout engine\u81ea\u5df1\u7684\u6b65\u9aa4\uff0c\u8981\u6ce8\u610f\u7684\u662f\u4f60\u5fc5\u987b\u8981\u548cautolayout engine\u6765\u534f\u4f5c\uff0c\u5e76\u4e14\u4e0d\u8981\u8c03\u7528setNeedsUpdateConstraints(\u65f6\u673a\u5df2\u8fc7)", "categories": [{"name": "posts", "slug": "posts", "permalink": "/category/posts/"}], "tags": [{"name": "uiview", "slug": "uiview", "permalink": "/tag/uiview/"}, {"name": "frame", "slug": "frame", "permalink": "/tag/frame/"}, {"name": "bounds", "slug": "bounds", "permalink": "/tag/bounds/"}, {"name": "layout", "slug": "layout", "permalink": "/tag/layout/"}, {"name": "autolayout", "slug": "autolayout", "permalink": "/tag/autolayout/"}]}, {"title": "\u7ffb\u8f6c\u4e8c\u53c9\u6811", "date": "2021-12-08T00:00:00-00.00", "path": "/archives/%E7%BF%BB%E8%BD%AC%E4%BA%8C%E5%8F%89%E6%A0%91/", "text": "\u6700\u8fd1\u5728\u627e\u5de5\u4f5c\uff0c\u6240\u4ee5\u8fd9\u4e9b\u7b97\u6cd5\u6897\u53c8\u51fa\u73b0\u5728\u4e86\u6211\u7684\u9605\u8bfb\u89c6\u91ce\u91cc\uff0c\u6bd4\u5982\u7ecf\u5178\u7684homebrew\u4f5c\u8005\u5410\u69fd\u7684\u7ffb\u8f6c\u4e8c\u53c9\u6811\u7684\u95ee\u9898\u3002\n\u6211\u672c\u4ee5\u4e3a\u662f\u6839\u548c\u53f6\u8282\u70b9\u5012\u8f6c\u8fc7\u6765\uff0c\u539f\u6765\u662f\u540c\u5c42\u91cc\u9762\u7684\u5de6\u53f3\u7ffb\u8f6c\u3002\u90a3\u4e48\u5c31\u662f\u628a\u5de6\u8fb9\u6362\u5230\u53f3\u8fb9\uff0c\u53f3\u8fb9\u6362\u5230\u5de6\u8fb9\u5457\uff0c\u53ef\u4ee5\u8003\u8651\u9012\u5f52\u3002\u6211\u4e00\u76f4\u7528\u4e00\u4e2a\u539f\u5219\u7406\u89e3\u9012\u5f52\uff0c\u5c31\u662f\u628a\u547d\u4ee4\u4f20\u8fbe\u4e0b\u53bb\uff08\u6bd4\u5982\u4e0a\u9762\u7684\u5de6\u53f3\u4e92\u6362\uff0c\u5c31\u5b8c\u4e86\uff09\uff0c\u800c\u4e0d\u5173\u5fc3\u7ec6\u8282\uff0c\u53ea\u6709\u6700\u672b\u7aef\u7684\u90a3\u4e2a\u5927\u5934\u5175\u624d\u662f\u771f\u6b63\u505a\u4e1a\u52a1\u7684\u4eba\uff0c\u5199\u4e86\u4e00\u4e0b\uff0c\u9012\u5f52\u52a0\u4e1a\u52a1\u4e5f\u5c314\u884c\u4ee3\u7801\uff1a\u5177\u4f53\u5230\u8fd9\u4e2a\u95ee\u9898\uff0c\u5c31\u662f\u6211\u628aleft\u548cright\u4e92\u6362\u5c31\u662f\u4e86\n\u7136\u540eleft\u548cright\u4f60\u4eec\u505a\u597d\u81ea\u5df1\u7684\u5b50\u7ea7\u7684\u4e92\u6362\uff0c\u6211\u4e0d\u7ba1\uff0c\u6240\u4ee5\u6838\u5fc3\u4ee3\u7801\u5c31\u4e00\u53e5\nleft, right = right, left\uff0c\u524d\u9762\u662f\u4e3a\u4e86\u7a33\u59a5\uff0c\u901a\u8fc7\u4e86\u4e4b\u540e\uff0c\u76f4\u63a5\u7528python\u8fd9\u79cd\u5de6\u53f3\u4e92\u6362\u7684\u7279\u6027\uff0c\u90a3\u5c31\u771f\u662f\u4e00\u53e5\u4ee3\u7801\u4e86\uff1adef invertTree(self, root: TreeNode) -&gt; TreeNode:\n    if root is None:\n        return None\n    root.right, root.left = self.invertTree(root.left), self.invertTree(root.right)\n    return root\n\n", "categories": [{"name": "posts", "slug": "posts", "permalink": "/category/posts/"}], "tags": [{"name": "\u7b97\u6cd5", "slug": "\u7b97\u6cd5", "permalink": "/tag/%E7%AE%97%E6%B3%95/"}]}, {"title": "\u7406\u89e3Core-Graphics\u7684Clipping\u548c\u586b\u5145\u6a21\u5f0f", "date": "2021-11-28T00:00:00-00.00", "path": "/archives/%E7%90%86%E8%A7%A3Core-Graphics%E7%9A%84Clipping%E5%92%8C%E5%A1%AB%E5%85%85%E6%A8%A1%E5%BC%8F/", "text": "\u5148\u6765\u770b\u4e00\u4e2a\u4f8b\u5b50\n\n\u753b\u4e00\u4e2a\u7bad\u5934\uff0c\u5176\u4e2d\u7bad\u5c3e\u6709\u5206\u53c9\uff0c\u4e00\u822c\u6765\u8bf4\uff0c\u662f\u753b\u4e00\u4e2a\u4e09\u89d2\uff0c\u753b\u4e00\u4e2a\u77e9\u5f62\uff08\u5b9e\u5fc3\u77e9\u5f62\u4e00\u822c\u4e5f\u76f4\u63a5\u7528\u5f88\u7c97\u7684\u7ebf\u6761\uff09\uff0c\u6700\u540e\u518d\u53e0\u4e00\u4e2a\u4e09\u89d2\uff08with CGBlendModel.clear)\uff0c\u8fd9\u91cc\u5c31\u4e0d\u591a\u4ecb\u7ecd\u4e86\uff1aoverride func draw(_ rect: CGRect) {       \n    let p = UIBezierPath()\n    // shaft\n    UIColor.yellow.set()\n    p.move(to:CGPoint(100,100))\n    p.addLine(to:CGPoint(100, 19))\n    p.lineWidth = 20\n    p.stroke()\n\n    // point\n    UIColor.red.set()\n    p.removeAllPoints()\n    p.move(to:CGPoint(80,25))\n    p.addLine(to:CGPoint(100, 0))\n    p.addLine(to:CGPoint(120, 25))\n    p.fill()\n\n    // snip\n    p.removeAllPoints()\n    p.move(to:CGPoint(90,101))\n    p.addLine(to:CGPoint(100, 90))\n    p.addLine(to:CGPoint(110, 101))\n    p.fill(with:CGBlendMode.clear, alpha:1.0)\n}\n\n\u6211\u4eec\u6765\u770b\u770bclipping\u600e\u4e48\u7528\nfill\u4e09\u89d2\u7bad\u5934\uff08\u51fa\u4e8e\u5806\u53e0\u4e0a\u76ee\u7684\u53ef\u4ee5\u6700\u540e\u753b\uff09\n\u627e\u5230\u7bad\u5c3e\u7684\u4e09\u4e2a\u9876\u70b9\n\u7528boundingBoxOfClipPath\u6765\u521b\u5efa\u6574\u4e2a\u753b\u677f\u5927\u5c0f\u7684\u77e9\u5f62\n\u5e94\u7528clipping\u628a\u5c0f\u4e09\u89d2\u6316\u6389\n\n\n\n3\uff0c\u753b\u4e00\u6839\u9ec4\u8272\u7bad\u67c4\u7c97\u7ec6\u7684\u7ebf\uff08\u4ece\u5e95\u5411\u4e0a\uff09\n    * \u56e0\u4e3a\u5c0f\u4e09\u89d2\u533a\u57df\u88abclipping\u6389\u4e86\uff0c\u7ed3\u679c\u5c31\u6210\u4e86\u56fe\u793a\u7684\u6a21\u6837override func draw(_ rect: CGRect) {\n        // obtain the current graphics context\n        let con = UIGraphicsGetCurrentContext()!\n\n        // punch triangular hole in context clipping region\n        con.move(to:CGPoint(x:90, y:100))\n        con.addLine(to:CGPoint(x:100, y:90))\n        con.addLine(to:CGPoint(x:110, y:100))\n        con.closePath()\n        // \u6dfb\u52a0\u6574\u4e2a\u533a\u57df\u4e3arect\n        // \u7136\u540e\u518dclip\u8bbe\u5b9a\u4e3a\u4e0d\u6e32\u67d3\u7684\u533a\u57df\n        // \u540e\u7eed\u7684\u6e32\u67d3\u5168\u4f1a\u907f\u5f00\u8fd9\u4e2a\u533a\u57df\n        // \u6211\u4eec\u540e\u9762\u628a\u8fd9\u4e2arect\u8bbe\u4e3a\u84dd\u8272\u8bd5\u8bd5(\u987a\u4fbf\u6539\u4e3a\u4e00\u4e2a\u5c0f\u4e00\u70b9\u7684rect)\n        con.addRect(con.boundingBoxOfClipPath)\n        con.clip(using:.evenOdd)\n//        con.fillPath()\n\n        // draw the vertical line\n        con.setStrokeColor(UIColor.yellow.cgColor)\n        con.move(to:CGPoint(x:100, y:100))\n        con.addLine(to:CGPoint(x:100, y:19))\n        con.setLineWidth(20)\n        con.strokePath()\n\n        // draw the red triangle, the point of the arrow\n        con.setFillColor(UIColor.red.cgColor)\n        con.move(to:CGPoint(x:80, y:25))\n        con.addLine(to:CGPoint(x:100, y:0))\n        con.addLine(to:CGPoint(x:120, y:25))\n        con.fillPath()\n    }\n\n\u80fd\u591f\u5b8c\u7f8erun\u8d77\u6765\uff0c\u4f46\u662f\u6211\u5bf9clipping\u7684\u673a\u5236\u8fd8\u662f\u6709\u70b9\u4e0d\u7406\u89e3\uff0c\u4e00\u4e9b\u5173\u952e\u70b9\u7684\u8bb2\u89e3\uff0c\u548c\u6211\u7684\u95ee\u9898\uff0c\u4e00\u6761\u6761\u8fc7\uff1a\n\u6211\u4eec\u7528\u6784\u5efa\u4e86\u7bad\u5c3e\u7684\u4e09\u89d2\u5f62\uff0c\u7136\u540eclosePath\uff0c\u90a3\u662f\u56e0\u4e3a\u6211\u4eec\u53ea\u753b\u4e86\u4e24\u6761\u7ebf\uff0c\u5982\u679c\u4e8b\u5b9e\u4e0a\u7b2c\u4e09\u6761\u7ebf\u8fde\u56de\u4e86\u539f\u70b9\uff0c\u90a3\u4e48\u8fd9\u4e2aclosePath\u5c31\u4e0d\u9700\u8981\u4e86\n\n\n\uff08\u56fe\u4e00\uff09\u6f14\u793a\u4e86\u4e0dclose\u7684\u8bdd\u5c31\u76f4\u63a5\u53ea\u6709\u4e24\u6761\u7ebf\u4e86\n\n\n\u6211\u60f3\u770b\u770bclipping\u5230\u5e95\u53d1\u751f\u4e86\u5565\uff0c\u4e8e\u662f\u6ce8\u91ca\u6389\u4e86clip\u7684\u90a3\u4e00\u884c\uff0c\u5f97\u5230\u4e86\uff08\u56fe\u4e8c\uff09\n\n\n\u4e4b\u6240\u4ee5\u957f\u90a3\u6837\u662f\u56e0\u4e3a\u968f\u540e\u8bbe\u7f6e\u4e86stroke\u7684\u53c2\u6570\uff0820\u50cf\u7d20\u7684\u9ec4\u8272\uff09\nstroke\u65f6\uff0c\u753b\u677f\u4e0a\u6709\u4e09\u4e2a\u5143\u7d20\uff1a\u4e00\u4e2a\u4e09\u89d2\uff0c\u4e00\u4e2a\u77e9\u5f62\uff0c\u4e00\u6761\u7ebf\u6bb5\uff0c\u5168\u90e8\u752820\u5bbd\u7684\u9ec4\u7ebf\u63cf\u8fb9\u4e86\uff0c\u4e00\u5207\u5982\u9884\u671f\n\n\n\u4e8e\u662f\u6211\u5c1d\u8bd5\u6dfb\u52a0rect\u65f6\u53ea\u53d6\u4e86\u4e2d\u95f4\u4e00\u5c0f\u5757\uff0c\u5e76\u6d82\u6210\u84dd\u8272\uff0c\u4e0dclip\u8bd5\u8bd5\uff0c\u5f97\u5230\uff08\u56fe\u4e09\uff09\u3002\n\u77e5\u9053\u4e86\u65b0rect\u7684\u4f4d\u7f6e\uff0c\u628aclip\u52a0\u56de\u6765\uff0c\u53d1\u73b0\u7bad\u5c3e\u6709\u4e86\uff0c\u7bad\u5934\u5374\u6ca1\u4e86\uff08\u56fe\u56db\uff09\nrect\u4e0eclip\u7684\u5173\u7cfb\u5df2\u7ecf\u51fa\u6765\u4e86\uff0c\u5c1d\u8bd5\u628a\u7ea2\u4e09\u89d2\u7684y\u901a\u901a\u52a050\uff0c\u79fb\u5230\u4e86\u84dd\u77e9\u5f62\u8303\u56f4\u5185\uff0c\u5f97\u5230\u8bc1\u660e\uff08\u56fe\u4e94\uff09\n\n\u90a3\u4e48clipping\u5230\u5e95\u80fd\u5bf9\u54ea\u4e9b\u8d77\u4f5c\u7528\u5462\uff1f\u662f\u4e0a\u9762\u7684rect\u5417\uff1f\u5f53\u7136\u4e0d\u662f\uff01\u5728clip\u65b9\u6cd5\u88ab\u8c03\u7528\u7684\u65f6\u5019\uff0c\u753b\u5e03\u91cc\u6709\u591a\u5c11\u5c01\u95ed\u5143\u7d20\uff0c\u5c31\u4f1a\u88ab\u5e94\u7528clip\u3002\u7531\u4e8e\u6211\u4eec\u9009\u62e9\u7684\u662fevenOdd\u6a21\u5f0f\uff0c\u90a3\u4e48\u5c31\u4f1a\u7b80\u5355\u8ba1\u6570\uff0c\u67d0\u50cf\u7d20\u8986\u76d6\u5947\u6570\u6b21\u663e\u793a\uff0c\u5076\u6570\u6b21\u5219\u4e0d\u663e\u793a\u3002\u4e0a\u4f8b\u4e2d\uff0ccon.clip(using:)\u65b9\u6cd5\u8c03\u7528\u65f6\uff0c\u753b\u5e03\u91cc\u6709\u4e24\u4e2a\u5c01\u95ed\u5143\u7d20\uff0c\u4e00\u4e2a\u4e09\u89d2\uff0c\u4e00\u4e2a\u77e9\u5f62\uff0c\u4e09\u89d2\u5305\u5728\u77e9\u5f62\u91cc\uff0c\u90a3\u4e48\u8ba1\u6570\u4e3a2\uff0c\u5c31\u4e0d\u4e88\u663e\u793a\u4e86\u3002\n\u4e8b\u5b9e\u4e0a\uff0c\u5224\u5b9a\u5947\u5076\u7684\u4f9d\u636e\u662f\u8be5\u70b9\u5411\u5916\u505a\u65e0\u9650\u957f\u7684\u5c04\u7ebf\uff0c\u5224\u5b9a\u6709\u51e0\u6761\u8fb9\u4e0e\u5c04\u7ebf\u76f8\u4ea4\u3002\u540c\u65f6\uff0c\u540c\u6837\u7684\u8bbe\u5b9a\u53ef\u4ee5\u7528\u6765\u89e3\u91ca.winding\u6a21\u5f0f\uff0c\u5373\u4e0d\u4f46\u4e0e\u76f8\u4ea4\u7684\u8fb9\u6709\u4ea4\uff0c\u8fd8\u4e0e\u76f8\u4ea4\u65f6\uff0c\u90a3\u6761\u8fb9\u662f\u987a\u65f6\u9488\u65b9\u5411\u7ed8\u5236\u7684\uff08+1\uff09\u8fd8\u662f\u9006\u65f6\u9488\u65b9\u5411\u7ed8\u5236\u7684\uff08-1\uff09,\u603b\u7ed3\u679c\u4e3a0\u5219\u4e0d\u586b\u5145\u3002\u53c2\u8003\n\u90a3\u5c31\u73a9\u4e00\u73a9\u9a8c\u8bc1\u4e0b\u5427\n\u628a\u77e9\u5f62\u6539\u6210\u4e86\u5706\u5708\uff0c\u7ebf\u5bbd\u4e5f\u6539\u5c0f\u4e00\u70b9\uff0c\u5f97\u5230\uff08\u56fe\u4e00\uff09\u7eff\u8272\u4e09\u89d2\u5f62\u662f\u6211\u540e\u52a0\u7684\uff0c\u56e0\u4e3a\u88ab\u9ec4\u5b9e\u7ebf\u76d6\u4f4f\u4e86\n\u518d\u5728\u91cc\u9762\u6dfb\u52a0\u4e86\u4e00\u4e2a\u5c0f\u5706\uff0c\u5f97\u5230\uff08\u56fe\u4e8c\uff09\n\u8fd9\u65f6\u5019\u6309\u7167\u5947\u5076\u539f\u5219\uff0c\u5c0f\u5706\u91cc\u7684\u50cf\u7d20\u662f\u5076\u6570\uff0c\u800c\u5c0f\u5706\u91cc\u7684\u4e09\u89d2\u5219\u662f\u5947\u6570\u4e86\uff0c\u90a3\u4e48\u5e94\u8be5\u5c31\u53ea\u6709\u5927\u5706\u51cf\u6389\u5c0f\u5706\u7684\u90e8\u5206\uff0c\u548c\u5c0f\u5706\u5185\u7684\u4e09\u89d2\u4f1a\u88ab\u6e32\u67d3\u4e86\uff08\u56fe\u4e09\uff09\uff0c\u4e0e\u9884\u671f\u4e00\u81f4\n\n\u73b0\u5728\u518d\u6765\u56de\u987e\u4e66\u4e0a\u5148\u5957\u4e00\u4e2a\u753b\u5e03\u5927\u5c0f\u7684\u77e9\u5f62\uff0c\u518d\u753b\u4e00\u4e2a\u4e09\u89d2\u5f62\uff0c\u4f60\u5927\u6982\u5e94\u8be5\u77e5\u9053\u76ee\u7684\u4e86\uff08\u51d1\u5947\u5076\uff09\uff0c\u6211\u4eec\u77e9\u5f62\u533a\u57df\u8fc7\u5c0f\u65f6\u7ed8\u5236\u4e0d\u4e86\u7ea2\u8272\u4e09\u89d2\uff0c\u7eaf\u7cb9\u4e5f\u662f\u56e0\u4e3a\u5947\u6570\uff0c\u5f80\u4e0b\u79fb\u5230\u77e9\u5f62\u533a\u57df\u5185\uff0c\u7acb\u9a6c\u53d8\u5076\u6570\u4e86\u3002(\u5f53\u7136\uff0c\u8981\u5728\u539f\u4f4d\u7f6e\u6e32\u67d3\u6211\u4eec\u53ef\u4ee5\u5148\u4e2d\u6b62clip:con.resetClip()\u518d\u7ed8\u56fe\uff09", "categories": [{"name": "posts", "slug": "posts", "permalink": "/category/posts/"}], "tags": [{"name": "core graphics", "slug": "core graphics", "permalink": "/tag/core%20graphics/"}]}, {"title": "Programming iOS 14 - Threading", "date": "2021-11-26T00:00:00-00.00", "path": "/archives/Thread-in-iOS/", "text": "\u300aProgramming iOS 14: Dive Deep into Views, View Controllers, and Frameworks\u300b\u7b2c25\u7ae0\nThread\nThread\u5728\u5f00\u53d1\u8fc7\u7a0b\u4e2d\u57fa\u672c\u4e0a\u7ebf\u7a0b\u662f\u9690\u5f62\u7684\uff0c\u4f60\u611f\u77e5\u4e0d\u5230\uff0c\u56e0\u4e3a\u5927\u591a\u6570\u60c5\u51b5\u4e0b\uff0c\u7a0b\u5e8f\u53ea\uff08\u9700\u8981\uff09\u8dd1\u5728\u4e3b\u7ebf\u7a0b\u4e0a\uff0c\u8fd9\u662f\u6ca1\u6709\u95ee\u9898\u7684\uff1a\n\u4f60\u7684\u4ee3\u7801\u4e8b\u5b9e\u4e0a\u6267\u884c\u5f97\u975e\u5e38\u5feb\uff0c\u4f60\u611f\u77e5\u4e0d\u5230\n\u54cd\u5e94\u903b\u8f91\u8fc7\u7a0b\u9501\u6b7bUI\uff0c\u662f\u5b89\u5168\u7684\u64cd\u4f5c\n\n\u539f\u751f\u7684\u540e\u53f0\u7ebf\u7a0b\uff1a\n\u52a8\u753b\uff1aThe Core Animation framework is running the animation and updating the presentation layer on a background thread.\n\u7f51\u7edc\uff1aA web view\u2019s fetching and loading of its content is asynchronous\n\u5f71\u97f3\uff1aSounds are played asynchronously. Loading, preparation, and playing of movies happens asynchronously.\n\u5b58\u76d8\uff1aUIDocument saves and reads on a background thread.\n\n\u4f46\u6240\u6709\u7684complete functions / delegations / notification \u90fd\u662f\u5728\u4e3b\u7ebf\u7a0b\u88ab\u8c03\u7528\u7684\u591a\u7ebf\u7a0b\u7684\u95ee\u9898\n\u8c03\u7528\u65f6\u673a/\u987a\u5e8f\u4e0d\u53ef\u63a7\uff0c\u6b21\u6570\u4e5f\u4e0d\u53ef\u63a7\uff0c\u968f\u65f6\u53ef\u80fd\u88ab\u6267\u884c\n\u6570\u636e\u7684\u7ebf\u7a0b\u5b89\u5168\uff0c\u4e0d\u5f97\u4e0d\u501f\u52a9\u201c\u9501\u201d\u7684\u673a\u5236\u6765\u4fdd\u8bc1\uff08race condition\uff09\na lock is an invitation to forget to use the lock, or to forget to remove the lock after you\u2019ve set it.\n\n\nThe lifetime of a thread is independent of the lifetimes of other objects in your app.\n\u4e00\u4e2a\u5bf9\u8c61\u7684\u9000\u51fa\u4e0d\u80fd\u4fdd\u8bc1\u6709\u540e\u53f0\u7ebf\u7a0b\u5c06\u6765\u4f1a\u8c03\u7528\u5b83 -&gt; \u95ea\u9000\u6216Zombie\n\n\nHard to debug.\n\nXCode\u5bf9debug\u7684\u652f\u6301\uff1a\nDebug navigator\nNSLog / os_log / Logger outputs\nInstruments &gt; Time Profiler\nThread Sanitizer, Main Thread Checker (\u9879\u76ee\u914d\u7f6e &gt; Diagnostics)\n\n\u6267\u884c\u540e\u53f0\u7ebf\u7a0b\u7684\u65b9\u6cd5\uff1aManual Threading\nperformSelector(inBackground:with:)\n\u53ea\u80fd\u4f20\u4e00\u4e2a\u53c2\u6570\uff0c\u591a\u4e2a\u53c2\u6570\u8981\u6253\u5305\n\u624b\u52a8\u7ba1\u7406\u5185\u5b58 -&gt; wrap every thing in an autorelease pool\n\nfunc drawThatPuppy () {\n        self.makeBitmapContext(size:self.bounds.size)\n        let center = self.bounds.center\n        // \u8fd9\u91cc\u6253\u5305\u53c2\u6570\u4e3a\u4e00\u4e2a\u5b57\u5178\n        let d : [AnyHashable:Any] =\n            [&quot;center&quot;:center, &quot;bounds&quot;:self.bounds, &quot;zoom&quot;:CGFloat(1)]\n        self.performSelector(inBackground: #selector(reallyDraw), with: d)\n    }\n// trampoline, background thread entry point\n@objc func reallyDraw(_ d: [AnyHashable:Any]) {\n    // \u624b\u52a8\u63a7\u5236\u5185\u5b58\n    autoreleasepool {\n        self.draw(center: d[&quot;center&quot;] as! CGPoint,\n            bounds: d[&quot;bounds&quot;] as! CGRect,\n            zoom: d[&quot;zoom&quot;] as! CGFloat)\n        // \u624b\u52a8\u56de\u8c03\u4e3b\u7ebf\u7a0b\n        self.performSelector(onMainThread: #selector(allDone), with: nil,\n            waitUntilDone: false)\n\n}\n// called on main thread! background thread exit point\n@objc func allDone() {\n    self.setNeedsDisplay()\n}\n\n\u5373\u4fbf\u5982\u6b64\uff0c\u8fd8\u662f\u6ca1\u6709\u89e3\u51b3\u4e0d\u540c\u7ebf\u7a0b\u4f7f\u7528\u540c\u4e00\u4e2a\u5b9e\u4f8b\u53d8\u91cf\uff08\u5982bitmapContext\uff09\u9020\u6210\u7a0b\u5e8f\u975e\u5e38\u8106\u5f31\u7684\u95ee\u9898\uff0c\u5f97\u8fdb\u4e00\u6b65\u4f7f\u7528lock\u7b49\u673a\u5236\u3002Operation\n\n\u5c06thread\u5c01\u88c5\u6210task\uff0c\u8868\u793a\u6210Operation \u901a\u8fc7 OperationQueue\u6765\u64cd\u4f5c\u3002\n\u56de\u8c03\u673a\u5236\u53d8\u6210\u4e86\u901a\u77e5\u673a\u5236\uff08\u6216KVO\uff09\n\nlet queue : OperationQueue = {\n    let q = OperationQueue()\n    // ... further configurations can go here ...\n    return q\n}()\n\nfunc drawThatPuppy () {\n    let center = self.bounds.center\n    // \u4e5f\u53ef\u4ee5\u7528 BlcokOperation\n    // \u6765\u6267\u884c\u4f60\u7684\u8017\u65f6\u64cd\u4f5c\n    let op = MyMandelbrotOperation(\n        center: center, bounds: self.bounds, zoom: 1)\n    // \u901a\u77e5/\u56de\u8c03\n    NotificationCenter.default.addObserver(self,\n        selector: #selector(operationFinished),\n        name: MyMandelbrotOperation.mandelOpFinished, object: op)\n    // \u7ed3\u5408\u8d77\u6765\n    self.queue.addOperation(op)\n}\n\n\u800c\u4e00\u4e2aOperation\u5b50\u7c7b\u5305\u542b\u4e24\u4e2a\u90e8\u5206\uff1a\nA designated initializer\n\u4f60\u53ef\u4ee5\u628a\u9700\u8981\u7684\u53c2\u6570\u8bbe\u8ba1\u6210\u5bf9\u5e94\u7684\u5c5e\u6027\uff0c\u5e76\u521d\u59cb\u5316\u597d\u5b83\n\n\nA main method\n\u8017\u7a0b\u5e8f\u771f\u6b63\u6267\u884c\u7684\u5730\u65b9\uff0cOperationQueue\u6267\u884c\u5230\u8fd9\u4e2aOperation\u7684\u65f6\u5019\u5c31\u4f1a\u88ab\u81ea\u52a8\u6267\u884c\n\n\n\nclass MyMandelbrotOperation: Operation {\n    static let mandelOpFinished = Notification.Name(&quot;mandelOpFinished&quot;)\n\n    // 1. params -&gt; arguments\n    private let center : CGPoint\n    private let bounds : CGRect\n    private let zoom : CGFloat\n    private(set) var bitmapContext : CGContext! = nil  // \u5c01\u88c5\u6210\u4e86\u7c7b\u5c5e\u6027\uff0c\u4e0d\u518d\u7ebf\u7a0b\u5171\u4eab\n    init(center c:CGPoint, bounds b:CGRect, zoom z:CGFloat) {\n        self.center = c\n        self.bounds = b\n        self.zoom = z\n        super.init()\n    }\n\n    // 1.1 logic\n    let MANDELBROT_STEPS = 100\n    func makeBitmapContext(size:CGSize) {\n        // ... same as before\n    }\n    func draw(center:CGPoint, bounds:CGRect, zoom:CGFloat) {\n        // ... same as before\n    }\n\n    // 2. main\n    override func main() {\n        // \u9996\u5148\u8981\u68c0\u67e5isCancelled\n        guard !self.isCancelled else {return}\n        self.makeBitmapContext(size: self.bounds.size)\n        self.draw(center: self.center, bounds: self.bounds, zoom: self.zoom)\n        if !self.isCancelled {\n            // \u5b8c\u6210\u901a\u77e5\uff0c\u4e5f\u53ef\u4ee5\u7528KVO\u673a\u5236\n            // \u4e3b\u7ebf\u7a0b\u63a5\u6536\u5230\u540e\u8981\u7acb\u5373\u5904\u7406\uff0c\u56e0\u4e3aOpearationQueue\u5c06\u4f1a\u7acb\u5373\u91ca\u653e\u8fd9\u4e2aOperation\n            // \u6b64\u5916\uff0c\u63a5\u6536\u901a\u77e5\u53ef\u80fd\u4e5f\u4e0d\u5728\u4e3b\u7ebf\u7a0b\uff0c-&gt; GCD\n            NotificationCenter.default.post(\n                name: MyMandelbrotOperation.mandelOpFinished, object: self)\n        }\n    }\n}\n\n// 3. observer\n// \u5c31\u662f\u524d\u9762\u5728\u4e3b\u7ebf\u7a0b\u91cc\u6ce8\u518c\u76d1\u542c\u6d88\u606f\u7684\u65b9\u6cd5\n// warning! called on background thread\n@objc func operationFinished(_ n:Notification) {\n    if let op = n.object as? MyMandelbrotOperation {\n        // 1. \u4e3b\u7ebf\u7a0b\uff08GCD\uff09\n        DispatchQueue.main.async {\n            // 2. \u79fb\u9664\u901a\u77e5\u76d1\u542c\n            NotificationCenter.default.removeObserver(self,\n                name: MyMandelbrotOperation.mandelOpFinished, object: op)\n            self.bitmapContext = op.bitmapContext  // \u4f20\u56de\u8fd9\u4e2a\u4e4b\u524d\u662f\u7ebf\u7a0b\u5171\u4eab\u7684\u53d8\u91cf\n            self.setNeedsDisplay()\n        }\n    } \n}\n\n\u6ce8\u610fbitmapContext\u8fd9\u4e2a\u4e4b\u524d\u4e3b\u7ebf\u7a0b\u8bbe\u7f6e\uff0c\u7136\u540e\u540e\u53f0\u7ebf\u7a0b\u5171\u4eab\u7684\u53d8\u91cf\uff0c\u73b0\u5728\u7531Operation\u8fd9\u4e2a\u7c7b\u81ea\u5df1\u6301\u6709\uff0c\u7ed3\u675f\u65f6\u624d\u8d4b\u503c\u56de\u4e3b\u7ebf\u7a0b\u3002\u6b64\u5916\uff0c\u8fd8\u80fd\u9650\u5236\u5e76\u53d1\u6570\u91cf\uff1alet q = OperationQueue()\nq.maxConcurrentOperationCount = 1\n\nThis turns the OperationQueue into a serial queue.\u6700\u540e\uff0c\u89e3\u51b3\u6700\u540e\u4e00\u4e2a\u95ee\u9898\uff0c\u5373\u4f60\u7684\u8c03\u7528\u8005\u90fd\u6ca1\u4e86\uff0c\u6bd4\u5982ViewController\u6ca1\u4e86\uff0c\u8c03\u7528\u8005\u6ca1\u4e86\uff0c\u540e\u53f0\u4efb\u52a1\u4e5f\u7406\u5e94\u53d6\u6d88\uff08\u4e0b\u8f7d\u3001\u5b58\u76d8\u7c7b\u4e0d\u9700\u8981UI\u4ea4\u4e92\u7684\u9664\u5916\uff09deinit{\n    self.queue.cancelAllOperations()\n}\n\n\u81f3\u6b64\uff0c\u524d\u9762\u63d0\u5230\u7684\u4e00\u4e9b\u591a\u7ebf\u7a0b\u4f1a\u5e26\u6765\u7684\u95ee\u9898\u5982\u8c03\u7528\u65f6\u673a\u548c\u6570\u91cf\u4e0d\u53ef\u63a7\uff0c\u8de8\u7ebf\u7a0b\u6570\u636e\u5b89\u5168\uff0c\u4ee5\u53ca\u751f\u547d\u5468\u671f\u7b49\u95ee\u9898\uff0cOperation\u90fd\u5b8c\u7f8e\u89e3\u51b3\u5e76\u5c01\u88c5\u4e86\u3002\u8bbe\u7f6e\u4f18\u5148\u7ea7\uff0cQoS, \u4f9d\u8d56\u7b49\u4e00\u4e9b\u8fdb\u9636\u793a\u4f8b\uff1alet backgroundOperation = NSOperation()\nbackgroundOperation.queuePriority = .Low\nbackgroundOperation.qualityOfService = .Background\n\nlet operationQueue = NSOperationQueue.mainQueue()\noperationQueue.addOperation(backgroundOperation)\n\n// dependence\nlet networkingOperation: NSOperation = ...\nlet resizingOperation: NSOperation = ...\nresizingOperation.addDependency(networkingOperation)\n\nlet operationQueue = NSOperationQueue.mainQueue()\n// \u867d\u7136resizing\u6dfb\u52a0\u4e86network\u4e3a\u4f9d\u8d56\uff0c\u4f46\u662f\u8fd8\u662f\u9700\u8981\u5168\u90e8\u52a0\u5230\u961f\u5217\u91cc\n// \u4e0d\u8981\u4ee5\u4e3a\u52a0\u4e86\u5c3e\u90e8operation\u5c31\u80fd\u628a\u4f9d\u8d56\u5168\u52a0\u8fdb\u53bb\noperationQueue.addOperations([networkingOperation, resizingOperation], waitUntilFinished: false)\n\nGrand Central Dispatch\n\u53ef\u4ee5\u8ba4\u4e3aGCD\u662f\u66f4\u5e95\u5c42\u7684Operation\uff0c\u5b83\u751a\u81f3\u76f4\u63a5\u5d4c\u5165\u4e86\u64cd\u4f5c\u7cfb\u7edf\uff0c\u80fd\u88ab\u4efb\u4f55\u4ee3\u7801\u6267\u884c\u800c\u4e14\u975e\u5e38\u9ad8\u6548\u3002\u8c03\u7528\u8fc7\u7a0b\u4e5f\u4e0eOperation\u5dee\u4e0d\u591a:\n\u8868\u793a\u4e00\u4e2atask\n\u52a0\u5165\u4e00\u4e2aqueue\nGCD Queue\u4e5f\u88ab\u8868\u793a\u6210\u4e86dispatch queue\na lightweight opaque pseudo-object consisting essentially of a list of functions to be executed.\n\u5982\u679c\u81ea\u5b9a\u4e49\u8fd9\u4e2aqueue\uff0c\u5b83\u9ed8\u8ba4\u72b6\u6001\u4e0b\u662fserial queue\n\n\n\nlet MANDELBROT_STEPS = 100\nvar bitmapContext: CGContext!\nlet draw_queue = DispatchQueue(label: &quot;com.neuburg.mandeldraw&quot;)\n\n// \u6539\u9020\u4e00\u4e2a\u8fd4\u56de\u524d\u8ff0\u8de8\u7ebf\u7a0b\u53d8\u91cf\u7684\u65b9\u6cd5\nfunc makeBitmapContext(size:CGSize) -&gt; CGContext {\n    // ... as before ...\n    let context = CGContext(data: nil,\n        width: Int(size.width), height: Int(size.height),\n        bitsPerComponent: 8, bytesPerRow: bitmapBytesPerRow,\n        space: colorSpace, bitmapInfo: prem)\n    return context!\n}\n// \u76f8\u5e94\u65b9\u6cd5\u589e\u52a0\u8fd9\u4e2acontext\u53c2\u6570\uff0c\u800c\u4e0d\u662f\u4ece\u73af\u5883\u91cc\u53d6\nfunc draw(center:CGPoint, bounds:CGRect, zoom:CGFloat, context:CGContext) {\n        // ... as before, but we refer to local context, not self.bitmapContext\n}\n\n// \u5269\u4e0b\u7684\uff0c\u4e00\u4e2ablock\u641e\u5b9a\uff1a\n// UI\u89e6\u53d1\u7684\u4e8b\u4ef6\nfunc drawThatPuppy () {\n    let center = self.bounds.center\n    let bounds = self.bounds\n    self.draw_queue.async {\n        // \u4e0b\u9762\u4e24\u884c\u4ee3\u7801\u867d\u7136\u7528\u5230\u4e86self\uff0c\u4f46\u662f\u5b83\u4eec\u6ca1\u6709\u6539\u53d8\u4efb\u4f55\u5c5e\u6027\uff0c\u662f\u7ebf\u7a0b\u5b89\u5168\u7684\n        let bitmap = self.makeBitmapContext(size: bounds.size)\n        self.draw(center: center, bounds: bounds, zoom: 1, context: bitmap)\n        DispatchQueue.main.async {\n            self.bitmapContext = bitmap\n            self.setNeedsDisplay()\n        }\n    } \n}\n\n\u53ef\u4ee5\u770b\u5230\uff0c\u76f8\u6bd4Operation\u628a\u4ee3\u7801\u7ed3\u6784\u90fd\u6539\u4e86\uff0cGCD\u51e0\u4e4e\u53ea\u662f\u5305\u4e86\u4e00\u5c42block\uff0c\u4ee3\u7801\u53d8\u52a8\u975e\u5e38\u5c11\u3002\uff08\u552f\u4e00\u7684\u53d1\u52a8\u5c31\u662f\u628a\u6240\u6709\u6267\u884c\u4ee3\u7801\u7684\u53d8\u91cf\u90fd\u9700\u8981\u901a\u8fc7\u53c2\u6570\u673a\u5236\u4f20\u8fdb\u53bb\uff09\u3002\u540c\u65f6\uff0c center, bounds\u7b49\u53c2\u6570\uff0c\u76f4\u63a5\u4ece\u73af\u5883\u91cc\u53d6\uff0c\u8fd9\u662fblock\u673a\u5236\u5e26\u6765\u7684\u4fbf\u5229\uff1b\u540c\u6837\u7684\u673a\u5236\u4e5f\u88ab\u7528\u5728\u4e86\u7ebf\u7a0b\u5171\u4eab\u7684\u53d8\u91cf\u4f20\u56de\u4e3b\u7ebf\u7a0b\u65f6\uff0c\u56e0\u4e3a\u5bf9\u7b2c\u4e8c\u5c42block\u800c\u8a00\uff0c\u7b2c\u4e00\u5c42block\u5c31\u662f\u5b83\u7684higher surrounding scope\uff0c\u662f\u80fd\u770b\u5230\u5b83\u7684bitmap\u53d8\u91cf\u7684\u3002 -&gt; \u6211\u4eec\u5e76\u6ca1\u6709\u4ece\u5934\u5230\u5c3eretrive\u4e00\u4e2aself.bitmap\u53d8\u91cf\uff0c\u4e5f\u5c31\u4e0d\u5b58\u5728data sharing\u3002\u4e0d\u50cfOperation\u628a\u8017\u65f6\u64cd\u4f5c\u5199\u5728\u522b\u5904\uff0cGCD\u7684\u65b9\u5f0f\u6613\u8bfb\u6027\u66f4\u9ad8\u3002\u9664\u4e86\u6709.async(execute:)\uff0c\u8fd8\u6709asyncAfter(deadline:execute:)\u548csync(execute:)\uff0c\u671b\u6587\u751f\u4e49\uff0c\u5c31\u4e0d\u591a\u4ecb\u7ecd\u4e86\u3002Dispatch Groups\ngroup\u63d0\u4f9b\u4e86\u76d1\u542c(wait)\u4e00\u7ec4\u540e\u53f0\u7ebf\u7a0b\u5168\u90e8\u6267\u884c\u7ed3\u675f\u7684\u529f\u80fd\uff1alet outerQueue = DispatchQueue(label: &quot;outer&quot;)\nlet innerQueue = DispatchQueue(label: &quot;inner&quot;)\nlet group = DispatchGroup()\nouterQueue.async {\n    let series = &quot;123456789&quot;\n    for c in series {\n        group.enter()  // flag 1\n        innerQueue.asyncAfter(\n            deadline:.now() + .milliseconds(Int.random(in: 1...1000))) {\n                print(c, terminator:&quot;&quot;)\n                group.leave() // flag 2\n        } \n        group.wait()  // \u4e00\u65e6\u52a0\u4e86\u8fd9\u53e5\u8bdd\uff0c\u8fd99\u4e2a\u7ebf\u7a0b\u5c31\u53d8\u6210\u7ebf\u6027\u7684\u4e86\uff0c\u6ce8\u91ca\u6389\uff0c\u5c31\u662f9\u4e2a\u7ebf\u7a0b\u968f\u673a\u5148\u540e\u6267\u884c\n    }\n    // \u53ef\u89c1\u8fd9\u4e2anotify\u7b49\u540c\u4e8ewait_all\n    // \u5f53enter\u6b21\u6570\u4e0eleave\u6b21\u6570\u4e00\u81f4\u65f6\u89e6\u53d1\n    group.notify(queue: DispatchQueue.main) {\n        print(&quot;\\ndone&quot;)\n    } \n}\n\nOne-Time Execution\nObjective-C\u4e2d\u5b9e\u73b0\u5355\u4f8b\u7684dispatch_once\u5176\u5b9e\u5c31\u662fGCD\u7684\u5185\u5bb9\uff0c\u800c\u5728Swift\u4e2d\u8fd9\u4e2a\u65b9\u6cd5\u5c31\u6ca1\u6709\u4e86\uff0c\u4e5f\u6ca1\u7528GCD\u53bb\u5b9e\u73b0\u4e86:let globalOnce : Void = {\n        print(&quot;once in a lifetime&quot;) // once, at most\n}()\n\n\u8fd9\u4e2aprint\u53ea\u4f1a\u6253\u5370\u4e00\u6b21\u3002\u800c\u5982\u679c\u662f\u7528\u5728\u5bf9\u8c61\u4e2d\uff0c\u53ef\u4ee5\u58f0\u660e\u4e3alazy\uff1aclass ViewController: UIViewController {\n        private lazy var instanceOnce : Void = {\n            print(&quot;once in an instance&quot;) // once per instance, at most\n        }()\n// ... }\n\ninstanceOnce\u8fd9\u4e2a\u53d8\u91cf\u4e5f\u53ea\u4f1a\u521d\u59cb\u5316\u4e00\u6b21\u3002Bonus// \u5e76\u53d1\nlet queue = DispatchQueue(label: &quot;queue&quot;, attributes: .concurrent)\n// \u6761\u4ef6\uff0c check the queue\ndispatchPrecondition(condition: .onQueue(self.draw_queue))\n\nApp Backgrounding\n\n\u5e94\u7528\u8fdb\u5165\u540e\u53f0\u65f6\uff0ciOS\u7cfb\u7edf\u4f1a\u7ed9\u5e94\u7528\u5c0f\u4e8e5\u79d2\u7684\u65f6\u95f4\u6765\u7ed3\u675f\u5f53\u524d\u7684\u4efb\u52a1\n\u53ef\u4ee5\u7528UIApplication.shared.beginBackgroundTask(expirationHandler:)\u6765\u7533\u8bf7\u66f4\u957f\u7684\u65f6\u95f4\uff08\u4e0d\u8d85\u8fc730\u79d2\uff09\uff0c\u8fd4\u56de\u4e00\u4e2aidentifier\nexpirationHandler\u662f\u4e00\u4e2a\u8d85\u65f6\u8fd8\u6ca1\u5904\u7406\u5b8c\u7684\u8bdd\uff0c\u7cfb\u7edf\u4f1a\u8c03\u7684\u65b9\u6cd5\uff0c\n\n\n\u4efb\u52a1\u6267\u884c\u5b8c\u540e\u9700\u8981\u8c03\u7528UIApplication.shared.endBackgroundTask(_:)\u65b9\u6cd5\u6765\u7ed3\u675f\u540e\u53f0\u65f6\u95f4\u7684\u7533\u8bf7\nexpirationHandler\u91cc\u540c\u6837\u9700\u8981\u663e\u5f0fendBackgroundTask\n\u6240\u4ee5\u6b63\u5e38\u65b9\u6cd5\u4f53\u548c\u8d85\u65f6\u65b9\u6cd5\u4f53\u90fd\u4f1a\u6709endBackgroundTask\u7684\u8c03\u7528\n\n\n\n\u628a\u8fd9\u4e2a\u7279\u6027\u76f4\u63a5\u5c01\u88c5\u5230\u4e00\u4e2aoperation\u91cc\u53bb\uff1aclass BackgroundTaskOperation: Operation {\n    var whatToDo : (() -&gt; ())?\n    var cleanup : (() -&gt; ())?\n    override func main() {\n        guard !self.isCancelled else { return }\n        var bti : UIBackgroundTaskIdentifier = .invalid\n        bti = UIApplication.shared.beginBackgroundTask {\n            self.cleanup?()\n            self.cancel()\n            UIApplication.shared.endBackgroundTask(bti) // cancellation\n        }\n        guard bti != .invalid else { return }\n        whatToDo?()\n        guard !self.isCancelled else { return }\n        UIApplication.shared.endBackgroundTask(bti) // completion\n    }\n}\n\n// \u8c03\u7528\nlet task = BackgroundTaskOperation()\ntask.whatToDo = {\n    ...\n}\nmyQueue.addOperation(task)\n\n\u8fd9\u6837\uff0c\n\u6b63\u5e38\u60c5\u51b5\u4e0b\u4f1a\u6267\u884cwhatToDo()\n\u5982\u679c\u5e94\u7528\u88ab\u6302\u5230\u540e\u53f0\uff0c\u56e0\u4e3a\u6ce8\u518c\u8fc7\u540e\u53f0\u4efb\u52a1\uff0c\u6709\u5c0f\u4e8e30\u79d2\u7684\u65f6\u95f4\u8dd1\u5b8c\u4efb\u52a1\n\u5982\u679c\u987a\u5229\u8dd1\u5b8c\uff0c\u4f60\u628a\u5e94\u7528\u5207\u5230\u524d\u53f0\uff0c\u4f1a\u53d1\u73b0UI\u5df2\u7ecf\u66f4\u65b0\u4e86\n\u8d85\u65f6\u4e5f\u6ca1\u8dd1\u5b8c\uff0c\u5c31\u4f1a\u8fdb\u5165\u8d85\u65f6\u7684block\u91cc\u53bb\u53d6\u6d88\u4efb\u52a1\u4e86\uff0cUI\u4e0a\u4e5f\u5f97\u4e0d\u5230\u7ed3\u679c\n\n\n\u6700\u540e\uff0c\u8981\u77e5\u9053\u6240\u8c13\u7684\u7533\u8bf7\u65f6\u957f\uff0c\u5e76\u4e0d\u662f\u5728didEnterBackground\u4e4b\u7c7b\u7684\u65b9\u6cd5\u91cc\u53bb\u505a\u7684\uff0c\u800c\u662f\u505a\u4efb\u52a1\u7684\u65f6\u5019\u5c31\u76f4\u63a5\u6ce8\u518c\u4e86\uff0c\u662f\u4e0d\u662f\u5f88\u9ebb\u70e6\uff1f\nBackground Processing\n\u76f8\u6bd4\u5411\u7cfb\u7edf\u7533\u8bf7\u5c11\u5f97\u53ef\u601c\u7684\u540e\u53f0\u6302\u8d77\u65f6\u95f4\uff0ciOS \u4ece13\u5f00\u59cb\u5f15\u5165\u4e86\u540e\u53f0\u4efb\u52a1\u673a\u5236\uff0c\u65b9\u4fbf\u4f60\u6267\u884c\u4e00\u4e9b\u7528\u6237\u4e0d\u9700\u8981\u611f\u77e5\u7684\u4efb\u52a1\uff0c\u6bd4\u5982\u4e0b\u8f7d\uff0c\u6216\u6570\u636e\u6e05\u7406\uff1a\n\u8def\u5f84\uff1atarget &gt; Signing &amp; Capabilities &gt; Background processing\nuse Background Task framework, need to import BackgroundTasks\nInfo.plist &gt; add &quot;Permitted background task schedule identifiers&quot; key (BTTaskSchedulerPermittedIdentifiers), \u4efb\u610f\u6807\u8bc6\u5b57\u7b26\u4e32\uff0c\u6bd4\u5982\u53cd\u57df\u540d\n\u5728appDelegate\u91cc\u9762\u53bb\u5b9e\u73b0\u9700\u8981\u540e\u53f0\u6267\u884c\u7684\u65b9\u6cd5\n\n\u6d89\u53ca\u5230\u4e24\u4e2a\u7c7b:\nBGProcessingTaskRequest\n\u5728didEnterBackground\u65b9\u6cd5\u91cc\u8c03\u7528\n\u9700\u8981match plist.info\u91cc\u7684id\n\u6ce8\u518c\u662f\u5426\u901a\u7535/\u6709\u7f51/\u5ef6\u8fdf\u6267\u884c\uff08ExternalPower / Network / earliestBeginDate\uff09\n\n\nBGTaskScheduler\napplication(_:didFinishLaunchingWithOptions:)\u91cc\u6267\u884c\nregister(forTaskWithIdentifier:using:launchHandler:)\u65b9\u6cd5\nid: matching plist.info\nusing: dispatch queue\nhandler: BGTask object\n\n\n\u5728BGTask\u7684\u8d85\u65f6\u65b9\u6cd5\u91cc\uff0c\u548c\u6b63\u5e38\u6267\u884c\u7684\u4ee3\u7801\u91cc\uff0c\u5747\u9700\u8c03\u7528setTaskCompleted(_:bool)\u65b9\u6cd5\n\n\n\nlet taskid = &quot;com.neuburg.matt.lengthy&quot;\nfunc application(_ application: UIApplication,\n    didFinishLaunchingWithOptions launchOptions:\n    [UIApplication.LaunchOptionsKey : Any]?) -&gt; Bool {\n}\n// let v = MyView()\nlet ok = BGTaskScheduler.shared.register(\n    forTaskWithIdentifier: taskid,\n    using: DispatchQueue.global(qos: .background)) { task in\n        task.expirationHandler = {\n            task.setTaskCompleted(success: false)\n        }\n        //... my task logic\n        task.setTaskCompleted(success: true)\n    }\n    // might check `ok` here\n    return true\n}\n\nfunc applicationDidEnterBackground(_ application: UIApplication) {\n    // might check to see whether it&#39;s time to submit this request\n    let req = BGProcessingTaskRequest(identifier: self.taskid)\n    try? BGTaskScheduler.shared.submit(req)\n}\n\nDebug\n\n\u6253\u6ee1print\u548c\u65ad\u70b9\n\u8bbe\u5907\u4e0a\uff0c\u628a\u5e94\u7528\u9001\u5230\u540e\u53f0\u518d\u62c9\u5230\u524d\u53f0\nXcode\u4e0a\u6682\u505capp\n(lldb) e -l objc -- (void)[[BGTaskScheduler sharedScheduler] _simulateLaunchForTaskWithIdentifier:@&quot;my_id&quot;] \u6a21\u62dflaunching\n(lldb) e -l objc -- (void)[[BGTaskScheduler sharedScheduler] _simulateExpirationForTaskWithIdentifier:@&quot;my_id&quot;] \u6a21\u62df\u8d85\u65f6\n\n\n\u63a7\u5236\u53f0\u8f93\u5165continue, \u8fd0\u884ctask function\n\u5f53task.setTaskComplete(success: true) \u88ab\u8c03\u7528\uff0c\u63a7\u5236\u53f0\u8f93\u51fa\uff1a\u201cMarking simulated task complete,\u201d\n\nBGAppRefreshTaskRequest\nnot mentioned", "categories": [{"name": "posts", "slug": "posts", "permalink": "/category/posts/"}], "tags": [{"name": "thread", "slug": "thread", "permalink": "/tag/thread/"}, {"name": "gcd", "slug": "gcd", "permalink": "/tag/gcd/"}, {"name": "operation", "slug": "operation", "permalink": "/tag/operation/"}]}, {"title": "\u6570\u636e\u7ed3\u6784\u7bc7\u4e5d\uff1aIndexed Priority Queue", "date": "2021-11-17T22:00:00-00.00", "path": "/archives/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E7%AF%87%E4%B9%9D%EF%BC%9AIndexed-Priority-Queue/", "text": "\u8fd9\u662f\u4e00\u4f4d google \u5de5\u7a0b\u5e08\u5206\u4eab\u76848\u5c0f\u65f6\u7684\u6570\u636e\u7ed3\u6784\u7684\u89c6\u9891,\u6211\u7684\u7b14\u8bb0\nIndexed Priority Queue\n\na traditional priority queue variant\ntop node supports quick update and deletions of key-value paris\n\n\u89c2\u5bdf\u8fd9\u4e2a\u56fe\uff0c\u6570\u636e\u662fAnna, Bella...\u7b49\u7b49\uff0c\n\u9996\u5148\uff0c\u4e3a\u8fd9\u4e00\u5806\u6570\u636e\u8fdb\u884c\u4efb\u610f\u6392\u5e8f\uff0c\u5f97\u5230\u4e00\u5806\u7d22\u5f15(0,1,...)\n\u7136\u540e\u7ec4\u4e00\u4e2abinary heap\uff0c\u8fd9\u6837\u6bcf\u4e2a\u5143\u7d20\u53c8\u83b7\u5f97\u4e00\u4e2a\u7d22\u5f15\uff0c\u5c31\u662f\u5728heap\u4e0a\u7684\u5e8f\u53f7\uff08Position Map\uff09\n\n\u901a\u8fc7\u4e24\u7ec4\u7d22\u5f15\u8fc5\u901f\u627e\u5230key\uff08\u5c31\u662f\u4eba\u540d\uff09\u5728\u5806\u4e2d\u7684\u4f4d\u7f6e\uff0c\u6bd4\u5982\uff1a\nGeorge\uff0cki = 6, pm = 1\nkelly, ki = 10, pm = 10\n...\n\n\u73b0\u5728\u80fd\u8fc5\u901f\u627e\u5230\u6570\u636e\u6e90\u5728\u5806\u4e0a\u7684\u4f4d\u7f6e\u4e86\uff0c\u90a3\u4e48\u5982\u679c\u53cd\u8fc7\u6765\u5462\uff1f\u6bd4\u5982\u5806\u4e0a\u7d22\u5f153\u662f\u6570\u636e\u6e90\u7684\u8c01\uff1f\npm = 3 -&gt; ki = 8 -&gt; Issac BINGO!!!\n\n\u4f46\u795e\u5947\u7684\u4e8b\u53d1\u751f\u4e86\uff0c\u6709\u4eba\u5e0c\u671b\u590d\u7528ki\u8fd9\u4e2a\u81ea\u7136\u6570\u5e8f\u5217\uff08\u95f2\u7684\u86cb\u75bc\uff1f\uff09\uff0c\u4e8e\u662f\u591a\u505a\u4e86\u4e00\u4e2a\u6570\u7ec4\uff0c\u628aki\u5b9a\u4e49\u4e3aheap\u4e0a\u7684\u7d22\u5f15\uff0c\u4e0e\u5143\u7d20\u539f\u6765\u7684ki\u8fdb\u884c\u6620\u5c04\uff08Inverse Map\uff09:IM\n\u53ef\u4ee5\u770b\u5230\uff0c\u8fd9\u5f20\u56fe\u4e0a\u5f20\u4e2aki\u5230im\u7684\u6620\u5c04\uff0c\u4e0epm\u5230ki\u7684\u6620\u5c04\u5176\u5b9e\u662f\u4e00\u6837\u7684\uff0c\u4e5f\u5c31\u662f\u8bf4\u91cd\u5b9a\u4e49\u4e86\u4e00\u4e0b\uff0c\u5e76\u6ca1\u6709\u5f15\u5165\u65b0\u7684\u4e1c\u897f\u3002(pm\u8868\u91cc\u627e\u52303\uff0c\u5bf9\u5e94\u7684\u7b2c\u4e00\u884cki\u8868\u91cc\u5c31\u662f8\uff09\u8fd9\u4e2a\u65f6\u5019\uff0c\u6211\u4eec\u76f4\u63a5\u7528ki\u76843\u5c31\u80fd\u627e\u5230im\u76848\uff0c\u7ee7\u800c\u627e\u5230\u6570\u636e\u6e90\u7684Issac\u4e86\u3002Insertion\n\u4e0a\u9762\u7684\u6570\u7ec4\uff0c\u6211\u4eec\u5f80\u91cc\u9762\u6dfb\u52a0\u7b2c12\u6761\u6570\u636e\u8bd5\u8bd5:\n{ki:12, pm: 12, im:12, value:2}\n\u663e\u7136\u8fdd\u53cd\u4e86binary heap\u7684 invariant\uff0c\u5411\u4e0a\u5192\u6ce1\uff0c\u4e5f\u5c31\u662f\u8ddf{ki:12, pm:5, im:2, value:4}\u7684\u8282\u70b9\u4e92\u6362\n\u6b64\u65f6\uff0c\u6570\u636e\u6e90\u80af\u5b9a\u4e0d\u4f1a\u53d8\uff0c\u4f46\u662f\u8282\u70b9\u53d8\u4e86\uff0cpm\u7684\u503c\u5c31\u8981\u4ea4\u6362\uff085\uff0c 12 \u4e92\u6362\uff09\npm\u53d8\u4e86\uff0c\u628apm\u5f53\u6210ki\u7684\u6620\u5c04\u8868im\u4e5f\u8981\u53d8\uff0812\uff0c 11\u4e92\u6362\uff09\n\n\u4ed4\u7ec6\u89c2\u5bdf\u56fe\u7247\uff0c\u641e\u6e05\u695a\u7b2c\u4e00\u884cki\u5728\u4e24\u6b21\u4e92\u6362\u65f6\u7684\u8eab\u4efd\u5c31\u660e\u767d\u4e86\npm\u7684\u4e92\u6362\u662f\u76f4\u89c2\u7684\uff0c\u5c31\u662f\u8282\u70b9\u7684\u4f4d\u7f6e\n\u77e5\u9053pm\u4e92\u6362\u7684\u4f9d\u636e\u540e\uff082\uff0c5\uff09\uff0c\u5728\u7b2c\u4e00\u884c\u627e2\uff0c5\u5bf9\u5e94\u7684im\u503c\u4e92\u6362\uff0c\u56e0\u4e3a\u5728\u8fd9\u4e2a\u6620\u5c04\u91cc\uff0c\u76f8\u5f53\u4e8epm\u4e0e\u539fki\u7684\u6620\u5c04\uff0cpm\u6b64\u65f6\u662f\uff082\uff0c5\uff09\u4e86\u3002\n\n\u540c\u6837\u903b\u8f91\u7ee7\u7eed\u5192\u6ce1\u5c31\u662f\u4e86\u3002pseudo code:# Inserts a value into the min indexed binary \n# heap. The key index must not already be in \n# the heap and the value must not be null. \nfunction insert(ki, value):\n    values[ki] = value\n    # \u2018sz\u2019 is the current size of the heap\n    pm[ki] = sz  # \u5bf9\u5e94\u4e0a\u56fe\uff0c\u610f\u601d\u5c31\u7b2c\u4e00\u884c\u7d22\u5f15\u5668\u662fki\n    im[sz] = ki  # \u5bf9\u5e94\u4e0a\u56fe\uff0c\u610f\u601d\u5c31\u662f\u4e00\u884c\u7d22\u5f15\u5668\u662fpm\n    swim(sz)     # \u8fd9\u91cc\u4f20\u8fdb\u53bb\u7684pm\uff0c\u5373heap\u4e0a\u8282\u70b9\u7684\u7d22\u5f15\n    sz = sz + 1  # \u6dfb\u52a0\u6210\u529f\uff0csize\u52a01\n\n\u7406\u8bba\u4e0a\uff0c\u6dfb\u52a0\u5143\u7d20\u5230\u6700\u540e\u4e00\u4e2a, sz\u548cki\u5e94\u8be5\u662f\u76f8\u7b49\u7684\uff08\u56e0\u4e3a\u90fd\u662f\u5c3e\u5df4\u4e0a\uff09# Swims up node i (zero based) until heap \n# invariant is satisfied.\nfunction swim(i):\n    # \u6bd4\u7236\u8282\u70b9\u5c0f\u5c31\u5192\u6ce1\uff0c\u6ce8\u610f\u5165\u53c2i\u662f\u8282\u70b9\u4e0a\u7684\u7d22\u5f15\uff0c\u5373pm\n    for (p = (i-1)/2; i &gt; 0 and less(i, p)): \n        swap(i, p)  # \u6240\u4ee5\u8fd9\u91cc\u4f20\u7684\u4e5f\u662fpm\n        i=p\n        p = (i-1)/2\n\nfunction swap(i, j): \n    # \u6211\u4eec\u4ea4\u6362\u4e86\u8282\u70b9\uff0c\u9700\u8981\u4ea4\u6362pm\u8868\u91cc\u7684\u503c\uff0c\u548cim\u8868\u91cc\u7684\u503c\n    # \u4ea4\u6362pm\u7684\u503c\u9700\u8981\u6570\u636e\u6e90\u7684\u7d22\u5f15\uff0c\u5373ki\uff0c\u800cki\u80fd\u4eceim\u8868\u91cc\u7528pm\u7b97\u51fa\u6765\n    # \u6240\u4ee5ki = im[pm] \u8fd9\u91cci,j\u662fpm\uff0c\u6240\u4ee5im[i]\u81ea\u7136\u5c31\u662fi\u5bf9\u5e94ki\n    # pm[ki]\u5f53\u7136\u5c31\u662fpm[im[i]]\u4e86\uff1a\n    pm[im[j]], pm[im[i]] = j, i\n    im[i], im[j] = im[j], im[i]\n\nfunction less(i, j):\n    return values[im[i]] &lt; values[im[j]]\n\n\u8fd8\u662f\u90a3\u53e5\u8bdd\uff0c\u7406\u89e3\u6e05\u695a\u90a3\u4e09\u884c\u6620\u5c04\u8868\u91cc\u7b2c\u4e00\u884c\u7684\u52a8\u6001\u542b\u4e49\uff0c\u5c31\u4e0d\u4f1a\u6709\u95ee\u9898\u3002\npm\u8868\u8981key index\u6765\u7d22\u5f15\nim\u8868\u8981node index\u6765\u7d22\u5f15\n\n\u5728\u64cd\u4f5c\u65f6\uff0c\u53ea\u9700\u8981\u77e5\u9053\u4f20\u5165\u7684\u662f\u54ea\u79cd\u7d22\u5f15\uff0c\u53ca\u65f6\u8f6c\u5316\u5c31\u884c\u4e86\u3002\u6709\u4e86\u7d22\u5f15\uff0clookup\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u5c31\u662f\u5e38\u91cf\u65f6\u95f4\u4e86\uff1aO(1)Polling and Removals\n\u6ca1\u6709\u4ec0\u4e48\u7279\u6b8a\u7684,\u4ecd\u7136\u662f\u627e\u5230\u8282\u70b9,\u4e0e\u6700\u540e\u4e00\u4e2a\u4ea4\u6362,\u79fb\u9664\u6700\u540e\u4e00\u4e2a\u8282\u70b9,\u7136\u540e\u518d\u770b\u6700\u540e\u4e00\u4e2a\u5728\u5806\u91cc\u662f\u4e0a\u5347\u8fd8\u662f\u4e0b\u964d.\n\u4ecd\u7136\u662f\u8bb0\u5f97\u6bcf\u4e00\u6b65\u4ea4\u6362,\u76f8\u5e94\u7684\u51e0\u4e2a\u7d22\u5f15\u503c\u4e5f\u9700\u8981\u968f\u4e4b\u4ea4\u6362.(polling \u5176\u5b9e\u5c31\u662f\u79fb\u9664\u7b2c1\u4e2a\u8282\u70b9,\u672c\u8d28\u4e0a\u8fd8\u662f removal)\npseudo code# Deletes the node with the key index ki\n# in the heap. The key index ki must exist \n# and be present in the heap.\nfunction remove(ki):\n    # \u6ce8\u610f\uff0c\u8fd9\u91cc\u9001\u8fdb\u6765\u7684\u662fki\uff0c\u800c\u4e0d\u662fnode index(pm)\n    # \u8bf4\u660e\u4e1a\u52a1\u9700\u6c42\u4e00\u822c\u662f\u64cd\u4f5c\u6570\u636e\u6e90\uff0c\u800c\u4e0d\u662f\u64cd\u4f5c\u5806\n    i = pm[ki]    # \u8f6c\u6210\u8282\u70b9\u7d22\u5f15\n    sz = sz - 1   # \u4e0e\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u4ea4\u6362\uff0c\u7528size\u6765\u505a\u8282\u70b9\u7d22\u5f15\n\n    # \u4e0b\u9762\u4e09\u4e2a\u5b50\u51fd\u6570\u9001\u5165\u7684\u5c31\u662f\u8282\u70b9\u7d22\u5f15\u4e86\n    swap(i, sz) \n    sink(i)\n    swim(i)\n\n    values[ki] = null  # \u6570\u636e\u6e90\u5bf9\u5e94\u7684\u503c\u7f6e\u7a7a\uff0c\u6240\u4ee5\u7528ki\n    pm[ki] = -1        # \u6570\u636e\u6e90\u5bf9\u5e94\u7684\u8282\u70b9\u7f6e\u7a7a\uff0c\u6240\u4ee5\u7528ki\n    im[sz] = -1        # \u53cd\u67e5\u8868\u7528\u8282\u70b9\u7d22\u5f15\uff0c\u6b64\u5904size\u5c31\u662f\u6700\u540e\u4e00\u4e2a\u8282\u70b9\u7684\u7d22\u5f15\n\nsink pseudo code# Sinks the node at index i by swapping \n# itself with the smallest of the left \n# or the right child node.\nfunction sink(i):\n    # \u8fd9\u662f\u5806\u64cd\u4f5c,\u4f20\u5165\u7684\u7d22\u5f15\u4e5f\u662f\u8282\u70b9\u7d22\u5f15,\u6ca1\u95ee\u9898\n    # sink\u662f\u4e0b\u6c89\uff0c\u4f46\u4e0d\u662f\u8ddfBTS\u4e00\u6837\u627e\u5de6\u4fa7\u6700\u5927\u53f3\u5219\u6700\u5c0f\u90a3\u79cd\u76f4\u63a5\u6362\n    # \u800c\u662f\u4e00\u5c42\u5c42\u5f80\u4e0b\u6362\n    # \u5373\u4e00\u6b21while\u53ea\u8ddf\u5de6\u53f3\u5b50\u7ea7\u6bd4\u5927\u5c0f\uff0c\u786e\u5b9e\u6bd4\u5b50\u7ea7\u8fd8\u5c0f\u7684\u8bdd\uff0c\u5c31\u66ff\u6362\uff0c\u7136\u540e\u518d\u8ddf\u4e0b\u4e00\u5c42\u6bd4\u8f83\n    while true:\n        # \u5229\u7528\u4e8c\u53c9\u6811\u7279\u6027\u7b97\u51fa\u5b50\u8282\u70b9\n        # \u9ed8\u8ba4\u5de6\u8fb9\u6700\u5c0f\uff0c\u7136\u540e\u518d\u770b\u53f3\u8fb9\u662f\u4e0d\u662f\u66f4\u5c0f\n        left =2*i+1\n        right = 2*i + 2\n        smallest = left\n    # \u53f3\u8fb9\u4e0d\u8d8a\u754c\uff0c\u4e14\u5c0f\u4e8e\u5de6\u8fb9\uff0c\u5c31\u8bbe\u53f3\u8fb9\n    if right &lt; sz and less(right, left):\n        smallest = right\n    # \u5de6\u4fa7\u90fd\u8d8a\u754c\u4e86\uff0c\u6216\u5df2\u7ecf\u6bd4\u6700\u5c0f\u503c\u5927\u4e86\uff0c\u8bf4\u660e\u4e0d\u9700\u8981\u4e0b\u6c89\u4e86\n    if left &gt;= sz or less(i, smallest):\n        break\n    # \u53ea\u8981\u6ca1\u6709break\uff0c\u8bf4\u660e\u80fd\u4ea4\u6362\uff0c\u7136\u540e\u628a\u4ea4\u6362\u540e\u7684\u4f5c\u4e3a\u4e0b\u4e00\u4e2a\u5faa\u73af\u7684\u8d77\u70b9\n    swap(smallest, i)\n    i = smallest\n\nUpdates\n\u66f4\u65b0\u8282\u70b9\u8981\u7b80\u5355\u7684\u591a:\n\u7528ki\u627e\u5230value\uff0c\u628a\u503c\u66f4\u65b0\n\u7136\u540e\u6839\u636e\u65b0value\u5b9e\u9645\u60c5\u51b5\u4e0a\u6d6e\u6216\u4e0b\u6c89\n\n# Updates the value of a key in the binary \n# heap. The key index must exist and the\n# value must not be null.\nfunction update(ki, value):\n    i = pm[ki]\n    values[ki] = value\n    sink(i)\n    swim(i)\n\nDecrease and Increase key\n\u4e0d\u597d\u8bf4\uff0c\u5148\u770b\u4ee3\u7801\u5427\uff1a# For both these functions assume ki and value \n# are valid inputs and we are dealing with a\n# min indexed binary heap.\nfunction decreaseKey(ki, value):\n    if less(value, values[ki]): \n        values[ki] = value \n        swim(pm[ki])\n\nfunction increaseKey(ki, value): \n    if less(values[ki], value):\n        values[ki] = value \n        sink(pm[ki])\n\n\u4ee3\u7801\u91cc\u662f\u8ddf\u4e00\u4e2a\u56fa\u5b9a\u503c\u6bd4\u8f83\uff0c\u53ea\u8981ki\u5bf9\u5e94\u7684\u503c\u6bd4\u5b83\u5927(desreaseKey)\u6216\u5c0f(increaseKey\uff09\uff0c\u5c31\u7528\u8fd9\u4e2a\u56fa\u5b9a\u503c\u6765\u66ff\u6362\u5b83\uff0c\u5e76\u4e14\u5728value\u6539\u53d8\u540e\u6839\u636e\u5b9e\u9645\u60c5\u51b5\u4e0a\u6d6e\u6216\u4e0b\u6c89\u3002", "categories": [{"name": "posts", "slug": "posts", "permalink": "/category/posts/"}], "tags": [{"name": "data struct", "slug": "data struct", "permalink": "/tag/data%20struct/"}, {"name": "queue", "slug": "queue", "permalink": "/tag/queue/"}, {"name": "indexed priority queue", "slug": "indexed priority queue", "permalink": "/tag/indexed%20priority%20queue/"}]}, {"title": "\u6570\u636e\u7ed3\u6784\u7bc7\u516b\uff1aBalanced Binary Search Trees(BBST)", "date": "2021-11-17T15:23:00-00.00", "path": "/archives/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E7%AF%87%E5%85%AB%EF%BC%9ABalanced-Binary-Search-Trees%28BBST%29/", "text": "\u8fd9\u662f\u4e00\u4f4d google \u5de5\u7a0b\u5e08\u5206\u4eab\u76848\u5c0f\u65f6\u7684\u6570\u636e\u7ed3\u6784\u7684\u89c6\u9891,\u6211\u7684\u7b14\u8bb0\nBalanced Binary Search Trees (BBST)\n\n\u6ee1\u8db3low (logarithmic) height for fast insertions and deletions\nclever usage of a tree invairant and tree rotation\n\nAVL Tree\n\u4e00\u79cdBBST\uff0c\u6ee1\u8db3O(log n)\u7684\u63d2\u5165\u5220\u9664\u548c\u67e5\u627e\u590d\u6742\u5ea6\uff0c\u4e5f\u662f\u7b2c\u4e00\u79cdBBST\uff0c\u540e\u7eed\u51fa\u73b0\u7684\u66f4\u591a\u7684\uff1a2-3 tree, AA tree, scapegoat tree, red-black tree(avl\u7684\u6700\u4e3b\u8981\u7ade\u4e89\u5bf9\u624b)\u80fd\u4fdd\u6301\u5e73\u8861\u7684\u56e0\u5b50\uff1aBalance Factor (BF)\nBF(node) = H(node.right) - H(node.left)\nH(x) = height of node = # of edges between (x, furthest leaf)\n\u5e73\u8861\u5c31\u662f\u5de6\u53f3\u5e73\u5747\u5206\u914d\uff0c\u6240\u4ee5\u8981\u4e48\u5747\u5206\uff0c\u8981\u4e48\u67d0\u4e00\u8fb9\u591a\u4e00\u4e2a\uff0cBF\u5176\u5b9e\u5c31\u662f(-1, 0, 1)\u91cc\u7684\u4e00\u4e2a\u4e86 &lt;- avl tree invariant\n\n\u4e00\u4e2anode\u9700\u8981\u5b58\uff1a\n\u672c\u8eab\u7684(comparable) value\nbalance factor\nthe height of this node\nleft/right pointer\n\n\u4f7f\u6811\u4fdd\u6301\u5de6\u53f3\u5e73\u8861\u4e3b\u8981\u662f\u9760rotation\uff0c\u6781\u7b80\u60c5\u51b5\u4e0b\uff08\u4e09\u4e2anode\uff09\uff0c\u6211\u4eec\u6709\u4e24\u79cd\u57fa\u672c\u60c5\u51b5\uff08left-left, right-right\uff09\uff0c\u6709\u5176\u5b83\u60c5\u51b5\u5c31\u65cb\u8f6c\u4e00\u6b21\u53d8\u6210\u8fd9\u4e24\u79cd\u60c5\u51b5\u4e4b\u4e00\uff1a\nInsertion\n\u4e00\u6b21\u63d2\u5165\u9700\u8981\u8003\u8651\u7684\u662f\uff0c\u63d2\u5728\u54ea\u8fb9\uff0c\u4ee5\u53ca\u63d2\u5165\u540e\u5bf9bf, height\u548cbalance\u7684\u7834\u574f\n\u5176\u4e2d\u4fee\u590d\u5e73\u8861\u5c31\u662f\u4e0a\u56fe\u4e2d\u51e0\u4e2a\u57fa\u672c\u7ed3\u6784\u7684\u8f6c\u6362Removal\navl\u6811\u5c31\u662f\u4e00\u68f5BST\uff0c\u5220\u9664\u8282\u70b9\u5206\u4e24\u6b65\uff1a\n\u6309\u7167bst\u7684\u65b9\u6cd5\u67e5\u627e\u8282\u70b9\uff0c\u5373\u5c0f\u7684\u5728\u5de6\u8fb9\u627e\uff0c\u5927\u7684\u5728\u53f3\u8fb9\u627e\n\u4e5f\u6309bst\u7684\u539f\u5219\u5220\u9664\u5143\u7d20\uff0c\u5373\u627e\u5230\u5143\u7d20\u540e\uff0c\u628a\u5de6\u8fb9\u7684\u6700\u5927\u503c\u6216\u53f3\u8fb9\u7684\u6700\u5c0f\u503c\u62ff\u8fc7\u6765\u8865\u4e0a\u5220\u9664\u7684\u4f4d\u7f6e\n\u8fd9\u4e00\u6b65\u662f\u591a\u51fa\u6765\u7684\uff0c\u663e\u7136\u662f\u8981\u66f4\u65b0\u4e00\u4e0b\u8282\u70b9\u7684bf\u548cheight\uff0c\u53ca\u91cd\u65b0balance\u4e00\u6b21\u4e86\u3002\n\n\u524d\u4e24\u90e8\u5206\u53c2\u8003BST\u4e00\u7ae0\uff0c\u6d41\u7a0b\u4f2a\u4ee3\u7801\uff1afunction remove(node, value): ...\n    # Code for BST item removal here\n    ...\n    # Update balance factor\n    update(node)\n    # Rebalance tree\n    return balance(node)\n\n", "categories": [{"name": "posts", "slug": "posts", "permalink": "/category/posts/"}], "tags": [{"name": "data struct", "slug": "data struct", "permalink": "/tag/data%20struct/"}, {"name": "bbst", "slug": "bbst", "permalink": "/tag/bbst/"}, {"name": "\u5e73\u8861\u4e8c\u53c9\u6811", "slug": "\u5e73\u8861\u4e8c\u53c9\u6811", "permalink": "/tag/%E5%B9%B3%E8%A1%A1%E4%BA%8C%E5%8F%89%E6%A0%91/"}]}, {"title": "\u6570\u636e\u7ed3\u6784\u7bc7\u4e03\uff1aSuffix Array, Longest Common Prefix (LCP) array", "date": "2021-11-16T16:05:00-00.00", "path": "/archives/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E7%AF%87%E4%B8%83%EF%BC%9ASuffix-Array%2C-Longest-Common-Prefix-%28LCP%29-array/", "text": "\u8fd9\u662f\u4e00\u4f4d google \u5de5\u7a0b\u5e08\u5206\u4eab\u76848\u5c0f\u65f6\u7684\u6570\u636e\u7ed3\u6784\u7684\u89c6\u9891,\u6211\u7684\u7b14\u8bb0\nSuffix Array\n\n\u5b57\u7b26\u4e32\u7684\u6240\u6709\u5b50\u5b57\u7b26\u4e32\u540e\u7f00\u7ec4\u6210\u6570\u7ec4\n\u5bf9\u5b50\u4e32\u6839\u636e\u9996\u5b57\u6bcd\u8fdb\u884c\u6392\u5e8f\n\u6392\u5e8f\u540e\u539f\u6709\u7684index\u5c31\u88ab\u6253\u4e71\u4e86\n\u8fd9\u4e2a\u4e71\u5e8f\u7684indices\u5c31\u662fSuffix Array\n\n\u505a\u5c3e\u7f00\u5b50\u4e32\u7684\u65f6\u5019\u901a\u5e38\u662f\u4ece\u5355\u4e2a\u5b57\u6bcd\u5f00\u59cb\u8d8a\u627e\u8d8a\u591a\uff0c\u8fd9\u5c31\u6709\u4e86\u4e00\u4e2a\u539f\u751f\u987a\u5e8f\uff0c\u7136\u540e\u7528\u9996\u5b57\u6bcd\u6392\u5e8f\u540e\uff0c\u8fd9\u4e2a\u987a\u5e8f\u5c31\u88ab\u6253\u4e71\u4e86\u63d0\u4f9b\u4e86\u4e00\u79cdcompressd representation of sorted suffixes\u800c\u65e0\u9700\u771f\u7684\u628a\u8fd9\u4e9b\u5b50\u4e32\u5b58\u8d77\u6765\u3002\nA space efficient alternative to a suffix tree\na compressd version of a trie?\n\n\n\n\u80fd\u505a\u6240\u6709suffix tree\u80fd\u505a\u7684\u4e8b\uff0c\u5e76\u52a0\u6dfb\u52a0\u4e86Longest Common Prefix(LCP) arrayLongest Common Prefix (LCP) array\n\u7ee7\u7eed\u4e0a\u9762\u7684Suffix Array\uff0c\u5b57\u6bcd\u6392\u5e8f\u540e\uff0c\u6211\u4eec\u4e00\u4e2a\u4e2a\u5730\u7528\u6bcf\u4e00\u4e2a\u5143\u7d20\u540c\u4e0a\u4e00\u4e2a\u5143\u7d20\u6bd4\uff0c\u6807\u8bb0\u76f8\u540c\u524d\u7f00\u7684\u5b57\u6bcd\u4e2a\u6570\uff0c\u8fd9\u4e2a\u6570\u5b57\u5e8f\u5217\u5c31\u662fLCP\u6bd4\u5982adc, adfgadc, \u524d\u7f00ab\u662f\u76f8\u540c\u7684\uff0c\u90a3\u5c31\u662f2\u3002\u7b2c\u4e00\u4e2a\u5143\u7d20\u6ca1\u6709\u201c\u4e0a\u4e00\u4e2a\u201d\u53bb\u6bd4\uff0c\u6240\u4ee5LCP\u6570\u7ec4\u7b2c1\u4f4d\u6c38\u8fdc\u662f0\uff1f\uff08\u662f\u7684\uff0c\u5176\u5b9e\u662fundefined\uff0c\u4f46\u4e00\u822c\u8bbe0\uff09\u8861\u91cf\u7684\u662f\u76f8\u90bb\u7684suffix array\u5143\u7d20\u7684\u524d\u7f00\u95f4\u6709\u591a\u5c11\u4e2a\u5b57\u6bcd\u76f8\u540c\u3002\u5f53\u524d\u4e5f\u53ef\u4ee5\u548c\u4e0b\u4e00\u4e2a\u5143\u7d20\u6bd4\uff08\u8fd9\u6837\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u7684LCP\u80af\u5b9a\u662f0\u4e86\uff0c\u539f\u7406\u540c\u4e0a\uff09Find unique substrings\n\u627e\u5230\uff08\u6216\u8ba1\u6570\uff09\u4e00\u4e2a\u6570\u7ec4\u7684\u6240\u6709\uff08\u4e0d\u91cd\u590d\u7684\uff09\u5b50\u5143\u7d20\u3002\u53ef\u4ee5\u9010\u4e2asubstring\u904d\u5386\uff0c$O(n^2)$\uff0c\u4e0b\u9762\u770b\u770b\u66f4\u5feb\u4e5f\u66f4\u7701\u7a7a\u95f4\u7684LCP\u65b9\u6848\u3002\u627e\u201cAZAZA\u201d\u7684\u4e0d\u91cd\u590d\u5b50\u4e32:\nA,AZ,AZA,AZAZ,AZAZA,Z,ZA,ZAZ,ZAZA,A,AZ,AZA,Z,AZ,A\uff0c\u628a\u91cd\u590d\u7684\u6807\u6ce8\u4e86\u51fa\u6765\u3002\nLCP\u662f\u8fd9\u6837\u7684\uff1a\nLCP|Sorted Suffixes|\n-|-\n0|A\n1|AZA\n3|AZAZA\n0|ZA\n2|ZAZA\u6211\u4eec\u77e5\u9053\u7b2c\u4e00\u5217\u6307\u7684\u662f\u201c\u91cd\u590d\u4e2a\u6570\u201d\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u5982\u679c\u6309\u6211\u4eec\u624b\u5199\u7684\u90a3\u6837\u53bb\u904d\u5386\uff0c\u81f3\u5c11\u6709\u8fd9\u4e48\u591a\u91cd\u590d\u7684\u5b50\u4e32\uff0c\u91cd\u590d\u7684\u65e2\u662f\u201c\u4e2a\u6570\u201d\uff0c\u4e5f\u662f\u201c\u7ec4\u5408\u65b9\u5f0f\u201d\u3002\u6240\u4ee5\u5982\u679c\u6211\u4eec\u53ea\u9700\u8981\u8ba1\u6570\u7684\u8bdd\uff0c\u628a\u53f3\u8fb9\u7684\u6570\u51fa\u6765\u5c31\u77e5\u9053\u6709\u4f1a\u6709\u591a\u5c11\u4e2a\u91cd\u590d\u7684\u4e86\uff0c\u6b64\u4f8b\u4e3a6.$$\\tt unique\\ count = \\underbrace{\\frac{n(n+1)}{2}}_{substr\\ count} - \\underbrace{\\sum_{i=1}^n LCP[i]}_{duplicates}$$\n\u8fd9\u662fLCP\u7684\u5e94\u7528\u4e4b\u4e00\uff0c\u5229\u7528\u4e86LCP\u672c\u8eab\u5c31\u662f\u5728\u6570\u91cd\u590d\u6b21\u6570\u7684\u7279\u5f81\u3002K common substring problem\nn\u4e2a\u5b57\u7b26\u4e32\uff0c\u627e\u51fa\u4e00\u4e2a\u5b50\u4e32\uff0c\u5b83\u81f3\u5c11\u662fk\u4e2a\u5b57\u7b26\u4e32\u7684\u5b50\u4e32\uff0c\u6c42\u6700\u5927\u5b50\u4e32\u3002$2\\leq k \\leq n$\u5373\u5982\u679c\u6709k=2\uff0c\u90a3\u4e48\u8fd9\u4e2a\u5b50\u4e32\u53ea\u9700\u8981\u662f\u5176\u4e2d\u4e24\u4e2a\u7684\u5b50\u4e32\u5c31\u884c\u4e86\uff0c\u5982\u679ck=n\uff0c\u90a3\u4e48\u5c31\u9700\u8981\u662f\u6bcf\u4e00\u4e2a\u5b57\u7b26\u4e32\u7684\u5b50\u4e32\u3002\u76f4\u63a5\u4e0a\u56fe\n\n\u56fe1\u6f14\u793ak=3\u65f6\uff0c\u627e\u5230\u4e86ca\uff0c\u53733\u4e2a\u4e32\u91cc\u90fd\u6709\u7684\u662fca\n\u56fe2\u6f14\u793ak=2\u65f6\uff0c\u627e\u5230\u4e86bca\uff0c\u5373bca\u5b58\u57282\u4e2a\u4e32\u91cc\n\u56fe3\u6f14\u793a\u7684\u662f\u7528\u4e86size=4\u7684\u6ed1\u7a97\u624d\u5305\u542b\u4e863\u4e2a\u5b57\u7b26\u4e32\uff0c\u4ee5\u53ca\u6700\u5927\u5339\u914d\u662fAG\n\n\u6b65\u9aa4\uff1a\n\u9996\u5148\uff0c\u7528\u51e0\u4e2a\u5206\u9694\u7b26\u628a\u5b57\u7b26\u4e32\u62fc\u63a5\u8d77\u6765\n\u5206\u9694\u7b26\u5b57\u7b26\u4e32\u91cc\u4e0d\u4f1a\u51fa\u73b0\n\u5206\u9694\u7b26\u7684\u6392\u5e8f\u8981\u5c0f\u4e8e\u6240\u6709\u5b57\u7b26\n\n\n\u56fe\u4e2d\u67d3\u8272\u7684\u4f9d\u636e\u662fprefix\u662f\u54ea\u4e2a\u4e32\u91cc\u7684\u5c31\u67d3\u6210\u4ec0\u4e48\u989c\u8272\n\u5f00\u59cb\u6ed1\u7a97\u6bd4\u8f83\n\u6ed1\u7a97\u5fc5\u987b\u8981\u80fd\u5305\u542bk\u79cd\u989c\u8272\n\u6240\u4ee5\u6ed1\u7a97\u5927\u5c0f\u4e0d\u662f\u56fa\u5b9a\u7684\uff0c\u6709\u65f6\u5019\u76f8\u90bb\u51e0\u4e2a\u90fd\u662f\u6765\u81ea\u540c\u4e00\u4e2a\u5b57\u7b26\u4e32\n\u6ed1\u7a97\u91cc\u96640\u5916\u7684\u6700\u5c0f\u503c\uff0c\u5c31\u662f\u7b26\u5408\u6761\u4ef6\u7684\u6700\u5927\u5171\u540c\u957f\u5ea6\uff0c\u5982\u56fe3\uff0c\u6700\u5927\u5339\u914d\u957f\u5ea6\u662f2\n\u8bfe\u7a0b\u91cc\u52a8\u753b\u6f14\u793a\u6ed1\u7a97\u5176\u5b9e\u4e0d\u662f\u7528\u6ed1\u7684\uff0c\u800c\u662f\u7528\u7684\u722c\u884c\n\u5373\u4e0b\u754c\u5f80\u4e0b\uff0c\u5305\u542b\u4e86\u6240\u6709\u989c\u8272\u4e4b\u540e\uff0c\u4e0a\u754c\u4e5f\u5f80\u4e0b\uff0c\u8fd9\u6837\u8815\u884c\u524d\u8fdb\uff0c\u6bcf\u4e00\u6b65\u5224\u65ad\u6ed1\u7a97\u91cc\u7684\u5185\u5bb9\n\n\n\n\n\u989d\u5916\u9700\u8981\u4e00\u4e2ahash table\u6765\u4fdd\u5b58\u5207\u7247\u4e0e\u989c\u8272\u7684\u6620\u5c04\u5173\u7cfb\u3002\n\u5982\u679c\u662f\u4f8b\u5b50\u8fd9\u4e48\u7b80\u5355\uff0c\u6211\u53ef\u4ee5\u76f4\u63a5\u68c0\u67e5\u7b2c\u4e00\u4e2a\u51fa\u73b0\u7684\u5206\u9694\u7b26\uff0c\u662f#\u5c31\u662f\u7eff\u8272\uff0c\u51fa\u73b0$\u5c31\u662f\u84dd\u8272\uff0c%\u5c31\u662f\u7ea2\u8272\n\n\n\n\u6838\u5fc3\u5c31\u662f\uff1a\n\u53d6\u5b50\u4e32\u662f\u4ece\u540e\u5411\u524d\u53d6\u7684\n\u4f46\u6bd4\u8f83\u662f\u4ece\u524d\u5411\u540e\u6bd4\u7684\n\u524d\u9762\u7684\u5143\u7d20\u53ef\u80fd\u6765\u81ea\u4efb\u4f55\u4e00\u4e2a\u5b50\u4e32\uff08\u53ea\u8981\u8db3\u591f\u957f\uff09\n\u4ece\u524d\u9762\u6392\u5e8f\uff0c\u5ba2\u89c2\u4e0a\u5c31\u628a\u6765\u81ea\u4e0d\u540c\u5b57\u7b26\u4e32\u7684\u76f8\u540c\u5b57\u6bcd\u6253\u5934\u7684\u5b50\u4e32\u7ed9\u6392\u5230\u4e00\u8d77\u4e86\n\n\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u5728Suffix Array\u7684\u5185\u5bb9\u91cc\u9762\u51fa\u73b0Longest Common Prefix\u7684\u5185\u5bb9\u7684\u539f\u56e0\u4e86.\u806a\u660e\u3002Longest Repeated Substring (LRS)\n\u8fd9\u4e2a\u6bd4\u66b4\u529b\u904d\u5386\u8981\u7b80\u5355\u592a\u591a\uff0c\u76f4\u63a5\u627eLCP\u6700\u5927\u503c\u5373\u53ef", "categories": [{"name": "posts", "slug": "posts", "permalink": "/category/posts/"}], "tags": [{"name": "data struct", "slug": "data struct", "permalink": "/tag/data%20struct/"}, {"name": "suffix array", "slug": "suffix array", "permalink": "/tag/suffix%20array/"}, {"name": "lcp", "slug": "lcp", "permalink": "/tag/lcp/"}]}, {"title": "\u6570\u636e\u7ed3\u6784\u7bc7\u516d\uff1aFenwick Tree (Binary Indexed Tree)", "date": "2021-11-15T23:35:00-00.00", "path": "/archives/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E7%AF%87%E5%85%AD%EF%BC%9AFenwick-Tree-%28Binary-Indexed-Tree%29/", "text": "\u8fd9\u662f\u4e00\u4f4d google \u5de5\u7a0b\u5e08\u5206\u4eab\u76848\u5c0f\u65f6\u7684\u6570\u636e\u7ed3\u6784\u7684\u89c6\u9891,\u6211\u7684\u7b14\u8bb0\nFenwick Tree (Binary Indexed Tree)\n\u6811\u72b6\u6570\u7ec4Motivation\n\u8ba1\u7b97\u6570\u7ec4\u91cc\u4efb\u610f\u8fde\u7eed\u7247\u6bb5\u7684\u548c\uff0c\u6700\u76f4\u89c2\u7684\u65b9\u6848\u5f53\u7136\u662f\u7d2f\u52a0\uff1a\u7ebf\u6027\u65f6\u95f4O(n)\n\u4f46\u662f\u5982\u679c\u4f60\u6709\u4e00\u4e2a\u8bb0\u5f55\u4e86\u6bcf\u4e2a\u8282\u70b9\u5230\u5f53\u524d\u4f4d\u7f6e\u65f6\u7684\u7d2f\u52a0\u548c\u7684\u6570\u7ec4\uff08prefix sum\uff09\uff0c\u7acb\u523b\u53d8\u6210\u4e86\u5e38\u91cf\u65f6\u95f4\n\u95ee\u9898\u662f\u66f4\u65b0\u6570\u636e\u53d8\u6210\u4e86\u7ebf\u6027\u65f6\u95f4\uff08\u540e\u7eed\u6240\u6709\u7684\u6c42\u548c\u90fd\u8981\u6539\u4e00\u904d\uff09\ngreat for static arrays\n\n\n\n\u6240\u4ee5\u5f15\u5165\u4e86:\nFenwick Tree is an efficient data structure for performing range/point queries/updates.(\u5373\u5728\u4e0a\u9762\u7684\u52a8\u673a\u4e0a\uff0c\u8fd8\u8003\u8651\u4e86update\u7684\u6548\u7387)\u524d\u9762\u7684\u4f8b\u5b50\u5728update\u65f6\u6548\u7387\u4e0d\u9ad8\uff0c\u6240\u4ee5Fenwick Tree\u7528\u4e86\u4e00\u79cd\u806a\u660e\u7684\u65b9\u5f0f\uff0c\u4e0d\u662f\u7d2f\u52a0\u6240\u6709\u7684\u503c\uff0c\u800c\u662f\u5206\u6bb5\u7d2f\u52a0\uff0c\u5177\u4f53\u5b9e\u73b0\u770b\u4e0b\u56fe\uff1a\n\n\u628a\u7d22\u5f15\u503c\u7528\u4e8c\u8fdb\u5236\u8868\u793a\nLSB\u7684\u89e3\u91ca\u770b\u56fe\uff0c\u5b9e\u9645\u5e94\u7528\u4e0a\uff0c\u5c31\u662f\u770b\u4ece\u4f4e\u4f4d\u5230\u9ad8\u4f4d\u7b2c\u4e00\u4e2a1\u7684\u53f3\u8fb9\u6709\u51e0\u4e2a0\uff0c\u5047\u8bbe\u4e3an\u4e2a\n\u90a3\u4e48\u8be5cell\u4e0a\u5b58\u7684\u503c\u5c31\u662f\u524d$2^n$\u4e2acell\u7684\u503c\u7684\u548c\n\n\u56fe\u4e2d\u4f8b\u5b50\u662f\u7d22\u5f1510\uff0c\u4e0d\u76f4\u89c2\uff0c\u6211\u4eec\u6362\u621012\uff0c \u4e8c\u8fdb\u5236\u662f1100\uff0c \u6700\u53f3\u8fb9\u67092\u4e2a\u96f6\uff0c\u90a3\u4e48\u5b83\u4fdd\u5b58\u5b83$2^2=4$\u4e2a\u4f4d\u7f6e\u7684\u548c\u3002\n\u4e5f\u5c31\u662f\u8bf4\uff0c\u5982\u679c\u4f60\u8981\u6c42\u548c\uff0c\u5982\u679c\u7528\u4e86cell 12\u4f4d\u7f6e\u7684\u503c\u7684\u8bdd\uff0c\u81f3\u5c11\u53ef\u4ee5\u7701\u63893\u6b21\u7d2f\u52a0\u3002\u5f53\u7136\uff0c\u5b83\u8fd8\u6709\u66f4\u725b\u903c\u7684\u7279\u6027\uff0c\u7ed3\u5408range query\u4e00\u8d77\u6765\u770b\u5427\uff1a\n\u84dd\u7ebf\u8868\u793a\u7684\u662f\u5f53\u7136\u4f4d\u7f6e\u4e0a\u7d2f\u52a0\u4e86\u524d\u51e0\u4e2a\u4f4d\u7f6e\u7684\u503c\uff0c\u5df2\u7ecf\u5f88\u6709\u89c4\u5f8b\u4e86\u5047\u5982\u8ba1\u7b97\u524d11\u4e2a\u503c\u7684\u548c\uff0c\u8fc7\u7a0b\u662f\uff1a\n11\u7684\u7d22\u5f15\u662f1011\uff0c\u53f3\u8fb9\u6ca1\u67090\uff0c\u6240\u4ee5\u5f53\u524d\u7684\u548c\u4e3aA[11]\n\u6839\u636e$2^0$\u6765\u79fb\u4f4d\uff0c\u6765\u523010\u3002\n\u53f3\u8fb9\u4e00\u4e2a0\uff0c\u6240\u4ee5\u5b83\u7ba1$2^1$\u4e2apresum\uff0c\u76ee\u524dA[11] + A[10]\n\u4e0b\u4e00\u4e2a\u7d22\u5f15\u81ea\u7136\u8981\u51cf2\u4e86\uff0c\u6765\u52308\n\n\n8\u662f1000\uff0c3\u4e2a\u96f6\uff0c\u6240\u4ee5\u5b83\u5b58\u4e86$2^3=8$\u4e2a\u503c\u7684\u548c\uff0c\u90a3\u5c31\u662f\u5168\u90e8\u4e86\n\n\u6240\u4ee5\uff1asum = A[11] + A[10] + A[8]\n\u5fc3\u7b97sum(0,7)\u5de9\u56fa\u4e00\u4e0b\n\u7528sum(11,15)\u6f14\u793a\u5b50\u533a\u95f4\uff0c\u5176\u5b9e\u5c31\u662f\u591a\u51cf1\u6b21\uff0c\u81f3\u4e8e\u662f\u51cf\u523010\u8fd8\u662f\u51cf\u523011\uff0c\u770b\u63cf\u8ff0\uff0c\u6bd4\u5982\u8fd9\u91cc11\u662f\u8981\u53c2\u4e0e\u8ba1\u7b97\u7684\uff0c\u90a3\u5c31\u662f\u628a\u524d10\u4e2a\u51cf\u6389\u5c31\u884c\u4e86\u3002\n\n\u4e0a\u9762\u6f14\u793a\u7684\u90fd\u662fworst\u7684\u60c5\u51b5\uff0c\u5373\u9996\u4f4d\u4e3a1\uff0c\u9664\u4e86\u8fd9\u79cd\u60c5\u51b5\uff0c\u522b\u7684\u4f4d\u90fd\u81f3\u5c11\u5b58\u4e86\u524d$2^n$\u4e2a\u5143\u7d20\u7684\u503c\uff08\u6bd4\u598216\uff0c\u76f4\u63a5\u5f97\u523016\u4e2a\u5143\u7d20\u7684\u548c\uff09\n\u8fd9\u91cc\u90fd\u6ca1\u8bb2\u4f60\u662f\u600e\u4e48\u505a\u8fd9\u4e2atree\u7684\uff0c\u800c\u662f\u600e\u4e48\u4f7f\u7528\u5b83\u3002\u5148\u5f04\u6e05\u695a\u4f7f\u7528\u573a\u666f\u518d\u8c08\u6784\u5efa\u3002\nPoint Update\n\u590d\u4e60\u4e00\u4e0bLSB\uff0c\u867d\u7136\u53ef\u4ee5\u76f4\u63a5\u6570\u6700\u53f3\u8fb9\u7684\u96f6\u7684\u4e2a\u6570\uff0c\u4f46\u6570\u5b66\u5176\u5b9e\u662f\uff1a\n13 = 1101 ($2^3 + 2^2 + 2^0 \\Rightarrow 10^3 + 10^2 + 10^0 $)\n\u51cf\u53bb\u6700\u53f3\u8fb9\u76841\u548c0 =&gt; 1100 \uff08$2^3+2^2=12$) \u6240\u4ee5\u4e0b\u4e00\u4e2a\u6570\u662f12\n\u51cf\u53bb\u6700\u53f3\u8fb9\u76841\u548c0 =&gt; 1000 \u5c31\u662f8\u4e86\n\u518d\u51cf\u5c31\u662f0\u4e86\n\n\u800c\u6309$2^n$\u6765\u8ba1\u7b97\u4e2a\u6570\u7684\u8bdd\u5c31\u662f\u8fd9\u6837\u7684\uff1a\n13 = 1101, \u6ca1\u67090\uff0c\u5c31\u662f\u79fb1\u4f4d\uff0c\u53d8\u621012\n12 = 1100\uff0c 2\u4e2a0\uff0c \u5c31\u662f\u79fb4\u4f4d\uff0c\u53d8\u62108\n8 = 1000\uff0c 3\u4e2a0\uff0c \u79fb8\u4f4d\uff0c\u53d8\u62100\n\n\u73b0\u5728\u6765\u8bb2update\uff0c\u524d\u9762\u77e5\u9053\uff0cupdate\u4f1a\u7ea7\u8054\u5f71\u54cd\u5230\u6240\u4ee5\u628a\u8be5cell\u8003\u8651\u8fdb\u53bb\u7684\u8282\u70b9\uff0c\u56e0\u6b64\uff0c\u5b83\u9700\u8981\u53cd\u7740\u5f80\u4e0a\u627e\uff08\u6781\u7aef\u60c5\u51b5\u5f53\u7136\u662f\u627e\u5230\u6700\u540e\u4e00\u4e2a\u5143\u7d20\uff0c\u901a\u5e38\u8fd9\u4e2a\u5143\u7d20\u5c31\u662f\u6574\u4e2a\u6570\u7ec4\u7684\u503c\uff0c\u6240\u4ee5\u4efb\u4f55\u5143\u7d20\u7684\u66f4\u6539\uff0c\u80af\u5b9a\u90fd\u4f1a\u5f71\u54cd\u5230\u5b83\uff09\u524d\u9762\u627e\u4e0b\u4e00\u4e2a\u8282\u70b9\u7528\u7684\u662f\u51cf\u6cd5\uff0c\u73b0\u5728\u5c31\u8981\u7528\u52a0\u6cd5\u4e86\uff0c\u6bd4\u5982\u6211\u66f4\u65b0\u4e86cell 9, \u7528\u4ee5\u4e0a\u4e24\u79cd\u4efb\u610f\u4e00\u79cd\u65b9\u6cd5\u6765\u8ba1\u7b97\uff1a\n$9 = 2^3 + 1 \\Rightarrow 10^3 + 1 = 1001, +1 = 1010 = 10$\n1010 + 10 = 1100 = 12\n1100 + 100 = 10000 = 16 \u5230\u9876\u4e86\uff0c\n\n\u6240\u4ee5\u9700\u8981\u628a9, 10, 12, 16\u5206\u522b\u5e94\u7528\u8fd9\u4e2apoint\u7684\u66f4\u65b0\uff0c\u4e5f\u5c31\u662f\u8bf4\u53ea\u6709\u8fd9\u51e0\u4e2acell\u628a9\u8ba1\u7b97\u8fdb\u53bb\u4e86\u3002\u5f53\u7136\uff0c\u53ef\u4ee5\u770b\u4e00\u4e0b\u5de6\u8fb9\u7684\u793a\u610f\u56fe\uff0c\u66f4\u76f4\u89c2function add(i, x): \n    while i &lt; N:\n        tree[i] = tree[i] + x \n        i = i + LSB(i)\n\n\u4ee3\u7801\u975e\u5e38\u7b80\u5355\uff0c\u5c31\u662f\u4e0d\u65ad\u901a\u8fc7LSB\u627e\u4e0b\u4e00\u4e2a\u4f4d\u7f6e\u53bb\u66f4\u65b0\u5c31\u884c\u4e86\u3002Construction\n\u73b0\u5728\u6765\u8bb2\u6784\u5efafunction construct(values): N := length(values)\n    # Clone the values array since we\u2019re # doing in place operations\n    tree = deepCopy(values)\n    for i = 1,2,3, ... N:\n        j := i + LSB(i)\n        if j &lt; N:\n            tree[j] = tree[j] + tree[i]\n    return tree\n\n\u51e0\u4e4e\u5c31\u4e00\u53e5\u8bdd\uff0c\u5c31\u662f\u628a\u5143\u7d20\u6309\u539f\u6570\u636e\u6446\u597d\uff08\u5373\u4e0d\u52a0\u522b\u7684\u8282\u70b9\uff09\u540e\uff0c\u6bcf\u6b21\u627e\u5230\u5f53\u524d\u5143\u7d20\u5f71\u54cd\u7684\u4e0a\u4e00\u7ea7\uff08\u4e0d\u518d\u5411\u4e0a\u5192\u6ce1\uff09\n\u6bd4\u59821\uff0c\u628a1\u7b97\u8fdb\u53bb\u7684\u67092\uff0c\u867d\u7136\u4e0a\u9762\u8fd8\u67094\uff0c 8\uff0c 16\uff0c\u4f46\u53ea\u628a1\u66f4\u65b0\u52302\n\u52302\u7684\u4e0a\u4e00\u7ea7\u662f4 (2 + lsb(2) = 4), \u628a\u8282\u70b92\u7684\u73b0\u503c\uff08\u5df2\u7ecf\u52a0\u4e86\u8282\u70b91\uff09\u52a0\u52304\u53bb\n\u6240\u4ee5\u6838\u5fc3\u7b97\u6cd5\u59cb\u7ec8\u53ea\u6709\u4e24\u4e2a\u53d8\u91cf\uff0ci\uff0cj\u4ee3\u8868\u6700\u8fd1\u7684\u5305\u542b\u5173\u7cfb\n\n\u4e00\u4e9b\u7b97\u6cd5\u6362\u6210\u4f4d\u8fd0\u7b97\nlsb(i): i &amp; -i\ni -= lsb(i) =&gt; i &amp;= ~lsb(i)\n\n", "categories": [{"name": "posts", "slug": "posts", "permalink": "/category/posts/"}], "tags": [{"name": "data struct", "slug": "data struct", "permalink": "/tag/data%20struct/"}, {"name": "fenwick tree", "slug": "fenwick tree", "permalink": "/tag/fenwick%20tree/"}, {"name": "binary indexed tree", "slug": "binary indexed tree", "permalink": "/tag/binary%20indexed%20tree/"}]}, {"title": "\u6570\u636e\u7ed3\u6784\u7bc7\u4e94\uff1aHash Tables", "date": "2021-11-15T17:00:00-00.00", "path": "/archives/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E7%AF%87%E4%BA%94%EF%BC%9AHash-Tables/", "text": "\u8fd9\u662f\u4e00\u4f4d google \u5de5\u7a0b\u5e08\u5206\u4eab\u76848\u5c0f\u65f6\u7684\u6570\u636e\u7ed3\u6784\u7684\u89c6\u9891,\u6211\u7684\u7b14\u8bb0\nHash Tables\n\nkey-value pair\nusing Hashing technique\noften used tracking item frequencies\n\nwhat's hash function?\nmaps a key x to a whole number in a fixed range.\ne.g. $H(x) = (x^2 - 6x + 9) % 10$ maps (0, 9)\n\u8fd9\u4e2a\u65b9\u7a0b\u4f1a\u4e3a\u4e0d\u540c\u7684x\u4ea7\u751f\u4e00\u6837\u7684y -&gt; hash collision\n\n\ncan hash arbitrary objects like string, list, tuple...\nmust be deterministic(\u786e\u5b9a\u7684x\u4ea7\u751f\u786e\u5b9a\u7684y)\n\u56e0\u6b64key\u7684\u5e94\u8be5\u662fimmutable\u7684\u7c7b\u578b\n\n\n\n\u5173\u952e\u8bcd\u662frange\uff0c\u4f60\u8bbe\u8ba1\u7684function\u603b\u8981mod\u4e00\u4e0b\uff0c\u5c06\u7ed3\u679c\u9650\u5236\u5728\u4e00\u4e2a\u8303\u56f4\u5185\u3002\u8fd9\u91cc\u4f60\u5e94\u8be5\u6682\u65f6\u80fd\u63a8\u6d4b\u51fahashtable\u7684key\u53ef\u80fd\u5c31\u662f\u6570\u5b57\u5427\uff1fhash collision\nseparate chaining\n\n\u7528\u4e00\u79cd\u6570\u636e\u7ed3\u6784\uff08\u901a\u5e38\u662f\u94fe\u8868\uff09\u4fdd\u7559\u6240\u6709\u51b2\u7a81\u7684\u503c\nopen addressing\n\n\u4e3a\u51b2\u7a81\u7684\u503c\u9009\u62e9\u4e00\u4e2aoffset\uff08\u5730\u5740/\u503c\uff09\u4fdd\u5b58 -&gt; probing sequence P(x)\u4e0d\u7ba1\u662f\u600e\u4e48\u89e3\u51b3\u51b2\u7a81\uff0cworst\u7684\u60c5\u51b5\u4e0b\uff0chash table\u7684\u64cd\u4f5c\u65f6\u95f4\u4e5f\u4f1a\u7531O(1)\u53d8\u6210O(n)\u600e\u4e48\u7528HT\u6765\u67e5\u627e\u5462\uff1f\u4e0d\u662f\u628ahash\u540e\u7684\u7ed3\u679c\u62fc\u5230\u539f\u6570\u636e\u4e0a\uff0c\u800c\u662f\u6bcf\u6b21\u67e5\u8be2\u524d\uff0c\u5bf9key\u8fdb\u884c\u4e00\u6b21hash function\uff0c\u5c31\u80fd\u53bb\u67e5\u8be2\u4e86\u3002Open Addressing\nprobing sequences\nlinear probing: P(x) = ax + b\nquadratic probing: p(x) = $ax^2 + bx + c$\ndouble hashing: p(k, x) = $x * H_2(k)$ \u53cc\u91cdhash\npseudo random number generator: p(k, x) = x * rng(H(k), x) \u7528H(k)(\u5373hash value)\u505a\u79cd\u7684\u968f\u673a\u6570\n\n\u603b\u4e4b\u5c31\u662f\u5728\u8fd9\u6837\u4e00\u4e2a\u5e8f\u5217\u91cc\u627e\u4e0b\u4e00\u4e2a\u4f4d\u7f6e\u5047\u8bbe\u4e00\u4e2atable size \u4e3aN\u7684HT\uff0c\u4f7f\u7528\u5f00\u653e\u5bfb\u5740\u7684\u4f2a\u4ee3\u7801\uff1ax = 1\nkeyHash = H(k)   # \u76f4\u63a5\u8ba1\u7b97\u51fa\u6765\u7684hash value\nindex = keyHash  # \u504f\u79fb\u8fc7\u540e\u5b58\u5728HT\u91cc\u7684index\n\nwhile table[index] != None:\n    index = (keyHash + P(k, x)) % N  # \u52a0\u4e0a\u504f\u79fb\uff0c\u8003\u8651size\uff08N\uff09\n    x += 1 # \u6e38\u6807\u52a01\n\n# now can insert (k,v) at table[index]\n\nChaos with cycles\nLinear Probling (LP)LP\u4e2d\uff0c\u5982\u679c\u4f60\u8fd0\u6c14\u4e0d\u597d\uff0c\u4ea7\u751f\u7684\u5e8f\u5217\u7684\u4e0b\u4e00\u4e2a\u503c\u6c38\u8fdc\u662foccupied\u7684\u72b6\u6001\uff08\u4e00\u822c\u662f\u503c\u57df\u5c0f\u4e8esize\uff09\uff0c\u5c31\u8fdb\u5165\u6b7b\u5faa\u73af\u4e86\u3002\u5047\u8bbep(x) = 3x, H(k) = 4, N = 9\n\u90a3\u4e48H(k)+P(x) % N \u53ea\u4f1a\u4ea7\u751f{4,7,1}\uff0c\u5982\u679c\u8fd9\u4e09\u4e2a\u4f4d\u7f6e\u88ab\u5360\u7528\uff0c\u90a3\u5c31\u9677\u5165\u4e86\u6c38\u8fdc\u5bfb\u627e\u4e0b\u4e00\u4e2a\u7684\u65e0\u9650\u5faa\u73af\u4e2d\u3002\u4e00\u822c\u662f\u9650\u5236probing function\u80fd\u8fd4\u56de\u521a\u597dN\u4e2a\u503c\u3002\n\u5f53p(x)=ax\u7684a\u4e0esize\u7684N\u4e92\u8d28\uff0c\u5373\u6ca1\u6709\u516c\u7ea6\u6570\uff0cGCD(a, N) = 1\u4e00\u822c\u80fd\u4ea7\u751f\u521a\u597dN\u4e2a\u503c\u3002(Greatest Common Denominator)\n\n\u6ce8\u610f\uff0c\u4e3a\u4e86\u6027\u80fd\u548c\u6548\u7387\u7684\u5e73\u8861\uff0c\u6709load factor\u7684\u5b58\u5728\uff0c\u6240\u4ee5\u5230\u4e86\u9608\u503c\uff0csize\u5c31\u8981\u52a0\u500d\uff0cN\u7684\u53d8\u5316\uff0c\u5c06\u4f1a\u4f7f\u5f97GCD(a, N) = 1\u7684a\u7684\u9009\u62e9\u6709\u53d8\u5316\uff0c\u800c\u4e14\u4e4b\u524d\u5bf9N\u53d6\u6a21\uff0c\u73b0\u5728\u53d6\u503c\u4e5f\u53d8\u53d1\u751f\u53d8\u5316\uff0c\u8fd9\u65f6\u5019\u9700\u8981\u91cd\u65b0map\n\u91cd\u65b0map\u4e0d\u518d\u6309\u5143\u7d20\u5f53\u521d\u6dfb\u52a0\u7684\u987a\u5e8f\uff0c\u800c\u662f\u628a\u73b0\u6709HT\u91cc\u7684\u503c\u6309\u7d22\u5f15\u987a\u5e8f\u91cd\u65b0map\u4e00\u904d\u3002\u6bd4\u5982\u7b2c\u4e00\u4e2a\u662fk6, \u5373\u7b2c6\u4e2a\u6dfb\u52a0\u8fdb\u6765\u7684\uff0c\u4f46\u662f\u73b0\u5728\u7b2c\u4e00\u4e2a\u5c31\u91cd\u65b0\u8ba1\u7b97\u5b83\u7684\u503c\uff0c\u586b\u5230\u65b0\u7684HT\u91cc\u9762\u53bb\u3002Quadratic Probing \uff08QP\uff09QP \u540c\u6837\u6709chaos with cycles\u7684\u95ee\u9898\uff0c\u901a\u7528\u89e3\u51b3\u529e\u6cd5\uff0c\u4e09\u79cd\uff1a\np(x) = $x^2$, size\u9009\u4e00\u4e2a prime number &gt; 3, and $\\alpha \\leq \\frac{1}{2}$\np(x) = $(x^2 + x) / 2$, keep the size a power of 2 \uff08\u4e0d\u9700\u8981\u662f\u7d20\u6570\u4e86\uff09\np(x)= $(-1^x) \\times x^2$, make size prime N $\\equiv 3$ mod 4 ???\n\nDouble HashingDouble Hashing: P(x) = $x \\times H_2(k)$\u53ef\u89c1\u4ecd\u7136\u7c7b\u4f3c\u4e00\u4e2a\u4e00\u6b21\u7684\u7ebf\u6027\u65b9\u7a0b\uff0c$H_2(k)$\u5c31\u7c7b\u4f3c\u4e8eax\u4e2d\u7684a\uff0c\u8bbe\u4e3a$\\delta$\uff0c\u76f8\u6bd4\u56fa\u5b9a\u7684a, \u8fd9\u91cc\u53ea\u662f\u53d8\u6210\u4e86\u52a8\u6001\u7684\uff0c\u8fd9\u6837\u4e0d\u540c\u7684key\u7684\u5f85\u9009\u5e8f\u5217\u5c31\u662f\u4e0d\u4e00\u6837\u7684\uff08\u53ef\u4ee5\u7406\u89e3\u4e3a\u7cfb\u6570\u4e0d\u540c\u4e86\uff09\u89e3\u51b3chaos:\nsize N to be a prime number\ncalculate: $\\delta = H_2(k)$ mod N\n$\\delta=0$ \u65f6offset\u5c31\u6ca1\u4e86\uff0c\u6240\u4ee5\u9700\u8981\u4eba\u4e3a\u6539\u4e3a1\n$1 \\leq \\delta \\lt N$ and GCD($\\delta$, N) = 1\n\n\n\n\u53ef\u89c1\uff0c\u867d\u7136\u7cfb\u6570\u662f\u201c\u52a8\u6001\u201d\u7684\u4e86\uff0c\u4f46\u662f\u53d6\u503c\u8fd8\u662f\uff081\uff0cN\uff09\u4e2d\u7684\u4e00\u4e2a\u800c\u5df2\uff0chash\u53ea\u662f\u8ba9\u5176\u52a8\u8d77\u6765\u7684\u4e00\u4e2a\u539f\u56e0\uff0c\u800c\u4e0d\u662f\u53c2\u4e0e\u8ba1\u7b97\u7684\u503c\u3002\u6211\u4eec\u672c\u6765\u5c31\u662f\u5728\u6c42hash value\uff0c\u7ed3\u679c\u53c8\u8981\u5f15\u5165\u53e6\u4e00\u4e2ahash function\uff0c\u663e\u7136\u8fd9\u4e2a$H_2$\u4e0d\u80fd\u50cf\u5916\u5c42\u8fd9\u6837\u590d\u6742\uff0c\u4e00\u822c\u662f\u9488\u5bf9\u5e38\u89c1\u7684key\u7c7b\u578b(string, int...-&gt; fundamental data type)\u7684universal hash functions\n\u56e0\u4e3aN\u8981\u662f\u4e00\u4e2a\u7d20\u6570\uff0c\u6240\u4ee5\u5728double size\u7684\u65f6\u5019\uff0c\u8fd8\u8981\u7ee7\u7eed\u5f80\u4e0a\u627e\u76f4\u5230\u627e\u5230\u4e00\u4e2a\u7d20\u6570\u4e3a\u6b62\uff0c\u6bd4\u5982N=7, double\u540e\uff0cN=14\uff0c\u90a3\u4e48\u6700\u7ec8\uff0cN=17\nIssues with removing\n\u56e0\u4e3a\u51b2\u7a81\u7684hash value\u9700\u8981probing\uff0cprobing\u7684\u4f9d\u636e\u662f\u4ece\u5e8f\u5217\u91cc\u4f9d\u6b21\u53d6\u51fa\u4e0b\u4e00\u4e2a\u4f4d\u7f6e\uff0c\u68c0\u67e5\u8fd9\u4e2a\u4f4d\u7f6e\u6709\u6ca1\u6709\u88ab\u5360\u7528\uff0c\u90a3\u4e48\u95ee\u9898\u5c31\u6765\u4e86\uff0c\u5982\u679c\u4e00\u4e2a\u672c\u88ab\u5360\u7528\u7684\u4f4d\u7f6e\uff0c\u56e0\u4e3a\u5143\u7d20\u9700\u8981\u5220\u9664\uff0c\u53cd\u800c\u53d8\u6210\u6ca1\u6709\u5360\u7528\u4e86\uff0c\u8fd9\u6709\u70b9\u7c7b\u4f3c\u5220\u9664\u6811\u8282\u70b9\uff0c\u4e0d\u4f46\u8981\u8003\u8651\u5220\u9664\uff0c\u8fd8\u8981\u8003\u8651\u8fd9\u4e2a\u4f4d\u7f6e\u600e\u4e48\u63a5\u7eed\u3002lazy deletion\n\u4f46HT\u673a\u5236\u6bd4\u6811\u8981\u590d\u6742\uff0c\u4e3a\u4e86\u907f\u514d\u53cd\u590d\u5e94\u7528probing\u51fd\u6570\u91cd\u65b0\u6446\u653e\u540e\u7eed\u6240\u6709\u8282\u70b9\uff0c\u5e72\u8106\u5c31\u5728\u5220\u9664\u7684\u4f4d\u7f6e\u653e\u7f6e\u4e00\u4e2a\u9884\u8bbe\u7684\u6807\u8bc6\uff0c\u6211\u4eec\u79f0\u4e3a\u5893\u7891(tombstone)\uff0c\u800c\u4e0d\u662f\u76f4\u63a5\u7f6e\u7a7a\uff0c\u7136\u540e\u6240\u6709\u7684\u67e5\u627e\u548c\u6dfb\u52a0\u52a0\u4e0a\u8fd9\u4e00\u6761\u89c4\u5219\uff0c\u5c31\u80fd\u5feb\u901f\u5220\u9664\u53c8\u65e0\u9700\u91cd\u65b0\u6392\u5e8f\u3002\u5927\u91cf\u5220\u9664\u4f1a\u9020\u6210\u7a7a\u95f4\u6d6a\u8d39\uff0c\u4f46\u65e0\u9700\u7acb\u5373\u5904\u7406\uff1a\n\u6dfb\u52a0\u5143\u7d20\u5141\u8bb8\u6dfb\u52a0\u5230\u5893\u7891\u4f4d\u7f6e\n\u5230\u8fbe\u9608\u503c\u5bb9\u91cf\u9700\u8981\u500d\u589e\u7684\u65f6\u5019\u6709\u4e00\u6b21\u91cd\u6392\uff0c\u8fd9\u4e2a\u65f6\u5019\u5c31\u53ef\u4ee5\u79fb\u9664\u6240\u6709\u7684\u5893\u7891\n\n\u5982\u679c\u67e5\u627e\u4e00\u4e2ahash value\uff0c\u8fde\u7eed3\u4e2a\u90fd\u662f\u5893\u7891\uff0c\u7b2c4\u4e2a\u624d\u662f\u5b83\uff0c\u8fd9\u662f\u4e0d\u662f\u6709\u70b9\u6d6a\u8d39\u65f6\u95f4\uff1f\n\u786e\u5b9e\uff0c\u6240\u4ee5\u8fd8\u53ef\u4ee5\u4f18\u5316\uff0c\u5f53\u4f60\u67e5\u627e\u8fc7\u4e00\u6b21\u4e4b\u540e\uff0c\u5c31\u53ef\u4ee5\u628a\u5b83\u79fb\u5230\u7b2c\u4e00\u4e2a\u5893\u7891\u7684\u4f4d\u7f6e\uff0c\u8fd9\u6837\uff0c\u4e0b\u6b21\u67e5\u8be2\u7684\u65f6\u5019\u901f\u5ea6\u5c31\u4f1a\u5feb\u5f88\u591a\u4e86\u3002\u6574\u4e2a\u673a\u5236\uff0c\u53eblazy deletion", "categories": [{"name": "posts", "slug": "posts", "permalink": "/category/posts/"}], "tags": [{"name": "data struct", "slug": "data struct", "permalink": "/tag/data%20struct/"}, {"name": "hash table", "slug": "hash table", "permalink": "/tag/hash%20table/"}]}, {"title": "\u6570\u636e\u7ed3\u6784\u7bc7\u56db\uff1aBinary Trees and Binary Search Trees (BST)", "date": "2021-11-14T21:00:00-00.00", "path": "/archives/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E7%AF%87%E5%9B%9B%EF%BC%9ABinary-Trees-and-Binary-Search-Trees-%28BST%29/", "text": "\u8fd9\u662f\u4e00\u4f4d google \u5de5\u7a0b\u5e08\u5206\u4eab\u76848\u5c0f\u65f6\u7684\u6570\u636e\u7ed3\u6784\u7684\u89c6\u9891,\u6211\u7684\u7b14\u8bb0\nTree: \u6ee1\u8db3\u4ee5\u4e0b\u5b9a\u4e49\u7684undirected graph(\u65e0\u5411\u56fe)\nAn acyclic(\u975e\u5faa\u73af\u7684) connected graph\nN nodes and N-1 edges\n\u6709\u4e14\u53ea\u6709\u4e00\u6761\u8def\u5f84\u8fde\u63a5\u4efb\u610f\u4e24\u4e2a\u9876\u70b9\n\n\n\u4efb\u610f\u4e00\u4e2a\u8282\u70b9\u90fd\u53ef\u4ee5\u88ab\u7406\u89e3\u4e3aroot\nBinary Tree\n\u62e5\u6709\u6700\u591a\u4e24\u4e2a\u8282\u70b9\u7684TreeBinary Search Tree\n\u670d\u4ece\u4ee5\u4e0b\u7279\u6027\u7684binary tree\n\u5de6\u5b50\u6811\u7684\u5143\u7d20\u5c0f\u4e8e\u53f3\u5b50\u6811\n\n\u62e5\u6709\u91cd\u590d\u5143\u7d20\u662f\u5141\u8bb8\u7684\uff0c\u4f46\u591a\u6570\u60c5\u51b5\u4e0b\u6211\u4eec\u53ea\u7814\u7a76\u4e0d\u91cd\u590d\u7684\u5143\u7d20\u8fd9\u662f\u4e00\u4e2a\u6709\u6548\u7684BST\u5417\uff1f\n\u662f\u7684\uff08\u5bf9\u4e8e\u5355\u94fe\u4e0b\u6765\u7684\uff0c\u51e0\u4e4e\u4f1a\u76f4\u63a5\u5c31\u6ee1\u8db3\u53f3\u8fb9\u6bd4\u5de6\u8fb9\u5927\uff09Usage\nBSTs\nimplementation of some map and set ADTs\nred black trees\nAVL trees\nsplay trees\n...\n\n\nbinary heaps\nsyntax trees (by compiler and calculators)\nTreap - a probabilistic DS (uses a randomized BST)\n\nComplexity\n\u589e\u5220\u67e5\u5e73\u5747\u4e3aO(log n)\uff0c\u4f46\u6700\u5dee\u60c5\u51b5\u4e0b\u90fd\u4e3aO(n)\uff0c\u5373\u7ebf\u6027\u65f6\u95f4Adding elements to a BST\n\n\u7b2c\u4e00\u4e2a\u4e3aroot\n\u6bcf\u4e00\u4e2a\u65b0\u6570\uff0c\u6bd4\u9876\u70b9\u5927\uff0c\u653e\u53f3\u8fb9\uff0c\u6bd4\u9876\u70b9\u5c0f\uff0c\u653e\u5de6\u8fb9\uff0c\u987a\u5e8f\u4e0b\u884c\n\u4e0d\u662f\u4ece\u5de6\u5230\u53f3\u6446\u6ee1\u518d\u505asubtree\n\u6bd4\u59823,6,9, \u4f1a\u5f97\u4e00\u68f5\u5168\u90e8\u6570\u5b57\u6446\u5728\u53f3\u8fb9\u7684\u6570\uff0c\u800c\u4e0d\u662f\u98763\u5de66\u53f39\u7684\u4e09\u89d2\u5f62\n\u8fd9\u4e5f\u662f\u4e3a\u4ec0\u4e48\u6781\u7aef\u60c5\u51b5\u4e0b\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u662fO(n)\uff0c\u56e0\u4e3a\u5c31\u662f\u4e00\u6761\u7ebf\u5230\u5e95\n\u8fd9\u4e5f\u662fbalanced binary search trees\u88ab\u5f15\u5165\u7684\u539f\u56e0\n\n\n\nRemoving elements from a BST\n\nfind\n\u4eceroot\u5f00\u59cb\uff0c\u5c0f\u7684\u8d70\u5de6\u53f3\uff0c\u5927\u7684\u8d70\u53f3\u8fb9\n\n\nreplace (to maintain the BST invariant)\n\n\u627e\u7ee7\u4efb\u8005\u7684\u65f6\u5019\uff0c\u5982\u679c\u5220\u9664\u5143\u7d20\u6ca1\u6709\u5b50\u8282\u70b9\uff0c\u53ea\u6709\u5de6\u6216\u53f3\u5b50\u8282\u70b9\uff0c\u90fd\u5f88\u597d\u529e\uff0c\u4f46\u5982\u679c\u5b83\u6709\u4e24\u4e2a\u5b50\u8282\u70b9\uff0c\u90a3\u4e48\u5e94\u8be5\u7528\u54ea\u4e2a\u6765\u63a5\u7eed\u5462\uff1f\u539f\u5219\u4ecd\u7136\u662f\u8981\u670d\u4ece\u5de6\u8fb9\u7684\u6bd4\u53f3\u8fb9\u7684\u5c0f\uff0c\u6240\u4ee5\u4f60\u5176\u5b9e\u6709\u4e24\u79cd\u9009\u62e9\uff1a\n\u628a\u5de6\u8fb9\u6700\u5927\u7684\u6570\u9009\u51fa\u6765 \u6216\n\u628a\u53f3\u8fb9\u6700\u5c0f\u7684\u6570\u9009\u51fa\u6765\n\n\u56e0\u4e3a\u5b83\u4eec\u7684\u201c\u6765\u6e90\u201d\uff0c\u80af\u5b9a\u662f\u80fd\u4fdd\u8bc1bst invariant\u7684\n    * \u8fd9\u4e2a\u6570\u662f\u8981\u66ff\u6362\u8fd9\u4e2a\u8282\u70b9\u7684\uff0c\u6240\u4ee5\u8981\u6bd4\u8fd9\u4e2a\u8282\u70b9\u5de6\u8fb9\u7684\u6570\u90fd\u5927\uff0c\u53ca\u6bd4\u53f3\u8fb9\u6240\u6709\u7684\u6570\u90fd\u5c0f\uff0c\u663e\u7136\u5c31\u662f\u5de6\u8fb9\u7684\u6700\u5927\u6570\uff0c\u6216\u53f3\u8fb9\u7684\u6700\u5c0f\u6570\u4e86\u3002\n    * \u53ea\u662f\u628a\u627e\u5230\u7684\u5143\u7d20\u590d\u5236\u8fc7\u53bb\u540e\uff0c\u591a\u4e86\u7684\u90a3\u4e2a\u600e\u4e48\u529e\u5462\uff1f\n\u9012\u5f52\n\n\u65b0\u627e\u5230\u7684\u5143\u7d20\u5f53\u7136\u8981\u4ece\u539f\u6765\u7684\u4f4d\u7f6e\u5220\u9664\uff0c\u8fd9\u65f6\u53c8\u6839\u636e\u5b83\u662f\u5426\u53f6\u8282\u70b9\uff0c\u5355\u5b50\u8282\u70b9\u8fd8\u662f\u5168\u8282\u70b9\uff0c\u6765\u53cd\u590d\u8fdb\u884c\u524d\u9762\u7684\u64cd\u4f5c\uff0c\u6700\u7ec8\u603b\u662f\u53ef\u4ee5\u9000\u51fa\u7684\nTree Traversals\n(Preorder, Inorder, Postorder &amp; Level order)\n\npreorder\uff0c\u5728\u904d\u5386\u5de6\u4fa7\u5143\u7d20\u7684\u65f6\u5019\uff0c\u6bcf\u6b21\u5df2\u7ecf\u5148\u53d6\u5230\u5143\u7d20\u4e86\uff08\u6700\u9876\u5c42\uff09\ninorder\u91cc\uff0c\u904d\u5386\u5143\u7d20\u7684\u65f6\u5019\uff0c\u76f4\u5230\u6240\u6709\u7684left\u8d70\u5b8c\u4e86\uff0c\u624d\u53d6\u5230\u7b2c\u4e00\u4e2a\u5143\u7d20\uff08\u6700\u5e95\u5c42\u7684\uff09\npostorder\u91cc\uff0c\u4e5f\u662f\u904d\u5386\u5230\u6700\u5e95\u5c42\uff0c\u4f46\u662f\u4e0b\u4e00\u6b65\u5c31\u662f\u53d6\u5144\u5f1f\u8282\u70b9\u4e86\n\ninorder\u4e00\u4e2a\u91cd\u8981\u7279\u5f81\uff1a\u5b83\u662f\u4ece\u5c0f\u5230\u5927\u6392\u597d\u5e8f\u7684\uff01\n\npreorder \u548c postorder\u6ca1\u4ec0\u4e48\u7279\u5f81\uff0c\u4e3e\u4e00\u4e2apost\u7684\u4f8b\u5b50\u89c2\u5bdf\u4e0b\u800clevelorder\u5219\u662f\u4e00\u5c42\u4e00\u5c42\u5730\u53d6\u7684\uff1a\n\u8fd9\u5c31\u662f\u5e7f\u5ea6\u4f18\u5148\u4e86\uff08Breadth First Searth)BFS\u5b9e\u73b0BFS\n\u6bcf\u5904\u7406\u4e00\u4e2aparent\u7684\u65f6\u5019\uff0c\u628aparent\u52a0\u5230\u7ed3\u679c\u6570\u7ec4\u91cc\nparent\u7684\u5b50\u8282\u70b9\u52a0\u5230\u961f\u5217\u91cc\n\u6bcf\u6b21\u4ece\u961f\u5217\u91cc\u53d6\u51fa\u4e00\u4e2a\u503c\u52a0\u5230\u7ed3\u679c\u6570\u7ec4\u91cc\uff08\u6b65\u9aa41\uff09\n\u8be5\u503c\u7684child\u52a0\u5230\u961f\u5217\u91cc\uff08\u6b65\u9aa42\uff09\n\n\u5176\u5b9e\u5c31\u662f\u6b65\u9aa41\uff0c2\u7684\u91cd\u590d\uff0c\u6bd4\u5982\uff1a\n\n[11], [6, 15] \u5904\u7406\u7b2c1\u4e2a\u657011\uff0c \u961f\u5217\u91cc\u591a\u4e86\u4e24\u4e2a\u5143\u7d206\uff0c 15\n[11, 6], [15, 3, 8] \u4ece\u961f\u5217\u91cc\u53d6\u51fa6\uff0c \u52a0\u5165\u7ed3\u679c\uff0c\u5b83\u7684\u5b50\u5143\u7d20(3, 8)\u52a0\u5165\u961f\u5217\n[11, 6, 15], [3, 8, 13, 17]\n[11, 6, 15, 3], [8, 13, 17, 1, 5]\n[11, 6, 15, 3, 8], [13, 17, 1, 5] \u8fd9\u4e00\u6b65\uff0c8\u6ca1\u6709\u5b50\u8282\u70b9\u4e86\uff0c\u961f\u5217\u53d8\u77ed\u4e86\n[11, 6, 15, 3, 8, 13], [17, 1, 5, 12, 14]\n[11, 6, 15, 3, 8, 13, 17], [1, 5, 12, 14, 19] 17\u53ea\u6709\u4e00\u4e2achild\n[11, 6, 15, 3, 8, 13, 17, 1, 5, 12, 14, 19] \u5269\u4e0b\u7684\u90fd\u6ca1child\u4e86\uff0c\u5168\u90e8\u62fc\u8fdb\u53bb\n\n", "categories": [{"name": "posts", "slug": "posts", "permalink": "/category/posts/"}], "tags": [{"name": "data struct", "slug": "data struct", "permalink": "/tag/data%20struct/"}, {"name": "bst", "slug": "bst", "permalink": "/tag/bst/"}, {"name": "\u4e8c\u53c9\u6811", "slug": "\u4e8c\u53c9\u6811", "permalink": "/tag/%E4%BA%8C%E5%8F%89%E6%A0%91/"}]}, {"title": "\u6570\u636e\u7ed3\u6784\u7bc7\u4e09\uff1aUnion Find", "date": "2021-11-14T02:00:00-00.00", "path": "/archives/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E7%AF%87%E4%B8%89%EF%BC%9AUnion-Find/", "text": "\u8fd9\u662f\u4e00\u4f4d google \u5de5\u7a0b\u5e08\u5206\u4eab\u76848\u5c0f\u65f6\u7684\u6570\u636e\u7ed3\u6784\u7684\u89c6\u9891,\u6211\u7684\u7b14\u8bb0\nUnion Find\n\nkeep track of elements in different sets\nprimary operations: find and union\n\nUsage\nKruskal's minimum spanning tree algorithm\nGrid percolation\nNetwork connectivity\nLeast common ancestor in trees\nImage processing\n\nComplexity\nconstruction: O(n)\nunion/join/size/check connected/: $\\alpha$(n) :\u63a5\u8fd1\u5e38\u91cf\u65f6\u95f4\ncount: O(1)\n\n\u7ed9\u5b9a\u4e00\u4e2a\u65e0\u5411\u56fe\uff0c\u5982\u679c\u5b83\u4efb\u610f\u4e24\u4e2a\u9876\u70b9\u90fd\u8054\u901a\u5e76\u4e14\u662f\u4e00\u68f5\u6811\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u79f0\u4e4b\u4e3a\u751f\u6210\u6811(Spanning Tree)\u3002\u5982\u679c\u662f\u5e26\u6743\u503c\u7684\u65e0\u5411\u56fe\uff0c\u90a3\u4e48\u6743\u503c\u4e4b\u548c\u6700\u5c0f\u7684\u751f\u6210\u6811\uff0c\u6211\u4eec\u5c31\u79f0\u4e4b\u4e3a\u6700\u5c0f\u751f\u6210\u6811(MST, Minimum Spanning Tree)\u3002\n-&gt; \u7528\u6700\u5c11\u7684\u8fb9\u8fde\u63a5\u6240\u6709\u7684\u9876\u70b9\nsort edges by ascending edge weight\nwalk through edges\n\u68c0\u67e5\u9876\u70b9\uff0c\u5982\u679c\u4e24\u4e2a\u9876\u70b9\u90fd\u5df2\u7ecfunified\uff0c\u5c31\u5ffd\u7565\n\u5176\u5b9e\u5c31\u662f\u8fd9\u4e24\u4e2a\u70b9\u5206\u522b\u88ab\u522b\u7684\u8fb9\u8fde\u8fc7\u4e86\n\n\n\u5426\u5219\u5c31\u6dfb\u52a0edge\uff0c\u5e76\u4e14unify\u9876\u70b9\n\n\n\n\u770b\u5230\u8fd9\u91cc\uff0c\u9996\u5148\u60f3\u77e5\u9053\u4ec0\u4e48\u662funified\uff0c\u770b\u5b9e\u73b0\uff0c\u4e5f\u5c31\u662f\u5728\u4e00\u4e2a\u96c6\u5408\u91cc(component)\n\n\u89c2\u5bdfC_J\uff0c\u56e0\u4e3aC\u548cJ\u5df2\u7ecf\u5728\u4e00\u4e2a\u7ec4\u91cc\u4e86\uff0c\u8fd9\u6761\u8fb9\u5c31\u4e0d\u9700\u8981\u4e86\n\u89c2\u5bdfD_E\uff0c\u4e00\u65e6\u8fde\u4e0a\u540e\uff0c\u7d2b\u8272\u548c\u7eff\u8272\u5176\u5b9e\u5c31\u662f\u4e00\u4e2a\u7ec4\u4e86\n\n\n\u89c2\u5bdfD_H\uff0c\u4e00\u65e6\u8fde\u4e0a\u540e\uff0c\u7d2b\u8272\u548c\u7ea2\u8272\u4e5f\u6210\u4e3a\u4e86\u4e00\u4e2a\u7ec4\n\u8fde\u63a5B_C\uff0c\u6240\u6709\u9876\u70b9\u5c31\u5168\u90e8\u8fde\u4e0a\u4e86\uff0c\u5e76\u4e14\u53ea\u6709\u4e00\u6761\u7d2b\u7ebf\n\nFind: \u627e\u5143\u7d20\u5728\u54ea\u4e2acomponent\u91cc\uff0c\u7136\u540e\u627e\u5230\u5b83\u7684root\nUnion: \u627e\u4e24\u4e2a\u5143\u7d20\u5206\u522b\u5728\u54ea\u4e2acomponent\u91cc\uff0c\u7136\u540e\u627e\u5230\u5b83\u4eec\u7684root\uff0c\u5982\u679c\u4e0d\u662f\u540c\u4e00\u4e2aroot\uff0c\u5c31\u8ba9\u5176\u4e2d\u4e00\u4e2a\u6210\u4e3a\u53e6\u4e00\u4e2a\u7684parent\ncomponent\u7684\u4e2a\u6570\u4e0eroot\u7684\u4e2a\u6570\u4e00\u81f4\nroot\u7684\u4e2a\u6570\u53ea\u51cf\u4e0d\u589e\uff08\u56e0\u4e3a\u901a\u5e38\u53ea\u5408\u5e76\u800c\u4e0d\u62c6\u5206\uff09\n\nunion find\u91cc\n\u4e3a\u6bcf\u4e2a\u5143\u7d20\u5206\u914d\u4e00\u4e2a\u7d22\u5f15\uff0c\u6bcf\u4e2a\u5143\u7d20\u6307\u5411\u81ea\u5df1\uff08\u5373\u521d\u59cb\u662fn\u4e2aroot\uff0cn\u4e2acomponent)\n\u63cf\u8ff0\u4e24\u4e24\u4e4b\u95f4\u7684\u5173\u7cfb\uff0c\u4ee5\u4efb\u4e00\u5143\u7d20\u4e3aparent \uff08\u8c01\u6765\u63cf\u8ff0\uff1f\uff09\n\u6709\u4e00\u4e2a\u5143\u7d20\u5df2\u7ecf\u5c5e\u4e8e\u522b\u7684component\u91cc\u7684\uff0c\u5c31\u5c06\u5b83\u4e5f\u52a0\u5230\u90a3\u4e2acomponent\u91cc\u53bb\n\u5982\u679c\u8fd9\u4e2a\u5143\u7d20\u4e5f\u662f\u522b\u7684component\u91cc\u7684\u9876\u70b9\uff0c\u5c31\u628a\u6574\u4e2a\u7ec4\u6307\u5411\u53e6\u4e00\u4e2a\u7ec4\u7684root\n\n\n\nPath Compression Union Find\n\u7531\u4e00\u5c42\u5c42\u627e\u5230root\u6539\u4e3a\u6240\u6709\u9876\u70b9\u76f4\u63a5\u6307\u5411\u9876\u70b9\uff08\u661f\u5f62\u7ed3\u6784\uff09\uff0c\u5b9e\u73b0\u8def\u5f84\u538b\u7f29\u8fd9\u6bb5\u4ee3\u7801\u6f14\u793a\u7684\u662f\uff0c\u67e5\u627ep\u7684root\u8282\u70b9\uff0c\u5728\u67e5\u627e\u7684\u8fc7\u7a0b\u4e2d\uff0c\u987a\u4fbf\u8fdb\u884c\u4e86\u8def\u5f84\u538b\u7f29\n\u5408\u5e76\u7684\u903b\u8f91\u5c31\u662f\u6bd4\u8f83\u8c01\u7684\u5143\u7d20\u591a\u5c31\u628a\u8c01\u5f53\u4f5croot\uff0c\u53e6\u4e00\u4e2acomponent\u7684root\u7684parent\u8bbe\u4e3a\u5143\u7d20\u591a\u7684\u7ec4\u7684root\n\u5408\u5e76\u5b8c\u6210\u540e\u7ec4\u6570\u5c31\u5c11\u4e861\n\u770b\u4ee3\u7801\uff0c\u8fd9\u4e00\u6b65\u91cc\u9762\u5e76\u6ca1\u6709\u8def\u5f84\u538b\u7f29\uff0c\u4e5f\u5c31\u662f\u5c0f\u7ec4\u91cc\u9762\u7684\u5143\u7d20\u5e76\u6ca1\u6709\u8fdb\u4e00\u6b65\u518d\u661f\u72b6\u5730\u6307\u5411\u65b0\u7684parent\uff0c\u4ecd\u7136\u6307\u5411\u7684\u662f\u8001\u7684\u7ec4\u7684root\u3002", "categories": [{"name": "posts", "slug": "posts", "permalink": "/category/posts/"}], "tags": [{"name": "data struct", "slug": "data struct", "permalink": "/tag/data%20struct/"}, {"name": "union find", "slug": "union find", "permalink": "/tag/union%20find/"}]}, {"title": "\u6570\u636e\u7ed3\u6784\u7bc7\u4e8c\uff1aPriority Queues (PQs) with an interlude on Heaps", "date": "2021-11-13T01:00:00-00.00", "path": "/archives/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E7%AF%87%E4%BA%8C%EF%BC%9APriority-Queues-%28PQs%29-with-an-interlude-on-Heaps/", "text": "\u8fd9\u662f\u4e00\u4f4d google \u5de5\u7a0b\u5e08\u5206\u4eab\u76848\u5c0f\u65f6\u7684\u6570\u636e\u7ed3\u6784\u7684\u89c6\u9891,\u6211\u7684\u7b14\u8bb0\u4f18\u5148\u961f\u5217\u548c\u5806\u7684\u63d2\u66f2\uff0c\u5728\u4f18\u5148\u961f\u5217\u91cc\u5f15\u5165\u4e86heap\u53ea\u662f\u4e2a\u63d2\u66f2\u800c\u4e0d\u7b97\u6b63\u5f0f\u4ecb\u7ecd\uff0c\u4f46\u5176\u5b9e\u8bb2\u5f97\u5dee\u4e0d\u591a\u4e86\u3002\nPriority Queues (PQs) with an interlude on heaps\n\nA priority queue is an Abstract Data Type (ADT)\nexcept each element has a certain priority\ndetermine the order (removed from the PQ)\n\n\nneed comparable data\n\n\u6bcf\u6b21\u53d6\u51fa\u6700\u5c0f\uff08\u6216\u6700\u5927\uff09\u7684-&gt;pool\uff0c\u6dfb\u52a0\u5230PQ\uff0c\u5982\u4f55\u5f97\u77e5\u6781\u503c\u5462\uff1f-&gt; heapHeap\n\na tree based data structure\nstatisfies the heap invariant(heap property):\nif A is a parent node of B then A is ordered with respect ot B for all nodes A, B in the heap\n\u8bf4\u4eba\u8bdd\uff0cA\u662fB\u7684\u7236\u8282\u70b9\uff0c\u5982\u679cA\u6bd4B\u5927\uff0c\u90a3\u4e48\u6bd4B\u7684\u6240\u6709\u5b50\u8282\u70b9\u90fd\u5927\uff0cvice versa\n\n\n\nPriority Queue\u6709\u65f6\u5019\u4e5f\u88ab\u53eb\u505aHeap\uff0c\u56e0\u4e3a\u5b83\u53ea\u662f\u4e00\u4e2aADT\uff0c\u5f53\u7136\u5b83\u4e5f\u53ef\u4ee5\u7528\u522b\u7684\u6570\u636e\u7ed3\u6784\u5b9e\u73b0\u3002\u4ee5\u4e0b\u56db\u4e2a\uff0c\u90fd\u662fheap\n\u8fd9\u4e9b\u5c31\u4e0d\u662f\nUsage\ncertain implementations of Dijkstra's Shortest Path algorithm\nanytime you need the dynamically fetch the next best or worst element\nHuffman coding -&gt; lossless data compression\nBFS\uff0cPQs continuously grab the next most promising node\nMinimum Spaning Tree (MST) algorithm\n\n\u53ef\u89c1\u662f\u5f88\u591a\u7b97\u6cd5\u7684\u57fa\u7840Complexity\nBinary Heap construction: O(n)\nPolling: O(log n)\nPeeking: O(1)\nAdding: O(log n)\n\u539f\u751f\u5220\u9664\uff1aO(n)\nwith hash table: O(log n)\n\n\n\u539f\u751fcontains: O(n)\nwith hash table: O(1)\n\n\n\nTurning Min PQ into Max PQ\u5927\u591a\u6570\u7f16\u7a0b\u8bed\u8a00\u6807\u51c6\u5e93\u53ea\u63d0\u4f9b\u4e86min PQ\u3002\n\u5728\u6784\u5efamin pq\u7684\u65f6\u5019\uff0c\u628a\u6bd4\u8f83\u6807\u51c6\u4ecex&gt;=y\u53d8\u6210x&lt;=y\uff08operator\u91cd\u8f7d\uff09\n\u5728\u6784\u5efamin pq\u7684\u65f6\u5019\uff0c\u628ax\u53d8\u6210-x\uff0c\u53d6\u51fa\u7684\u65f6\u5019\u518d\u53d6\u53cd\u4e00\u6b21\n\n\u539f\u5219\u90fd\u662f\u53d6\u5de7\uff0c\u800c\u4e14\uff0c\u7b2c\u4e8c\u79cd\u65b9\u6cd5\uff0c\u5b58\u5728pq\u91cc\u7684\uff0c\u5e76\u4e0d\u662f\u4f60\u8981\u4f7f\u7528\uff08\u548c\u672c\u60f3\u5b58\u50a8\uff09\u7684\u5bf9\u8c61\uff0c\u6240\u4ee5\u53d6\u51fa\u7684\u65f6\u5019\u9700\u8981\u5904\u7406\u3002Priority Queue with Binary Heap\n\u5b9e\u73b0\u4e86heap invariant\u7684binary tree.\u9664\u4e86Binary Heap\uff0c\u8fd8\u6709\u5f88\u591a\nFibonacci Heap\nBinomial Heap\nParing Heap\n...\n\n\u90fd\u80fd\u5b9e\u73b0\u4e00\u4e2aPQAdding Elements to Binary Heap\n\u4ece\u5c3e\u90e8(last leaf)\u6dfb\u52a0\n\u5982\u679c\u8fdd\u53cd\u4e86heap invairant(\u5373\u6bd4parent\u5927)\uff0c\u5219\u4ea4\u6362\n\u5411\u4e0a\u5192\u6ce1\n\nRemoving Elements From a  Binary Heap\nPoll()\n\n\n\u56e0\u4e3aroot\u603b\u662f\u4f18\u5148\u7ea7\u6700\u9ad8\u7684\u5143\u7d20\uff0cpoll\u79fb\u6389\u7684\u5c31\u662froot\nroot\u5f53\u7136\u4e0d\u80fd\u76f4\u63a5\u79fb\uff0c\u6240\u4ee5\u5148\u8ddf\u6700\u540e\u4e00\u4e2a\u5143\u7d20swap\nswap\u540e\u539froot\u5c31\u6ca1\u6709children\u4e86\uff0c\u76f4\u63a5\u79fb\u9664\n\u6700\u4f4e\u4f18\u5148\u7ea7\u7684\u5143\u7d20\u5230\u4e86top\uff0c\u6240\u4ee5\u8981\u5411\u4e0b\u5192\u6ce1\n\u5148\u5de6\u540e\u53f3\uff0c\u5148\u4f4e\u518d\u9ad8\n\u5373\u5982\u679c\u4e24\u4e2a\u5b50\u7ea7\u4f18\u5148\u7ea7\u4e00\u6837\uff0c\u90a3\u4e48\u76f4\u63a5\u4e0e\u5de6\u8fb9\u4ea4\u6362\n\u5426\u5219\u54ea\u4e2a\u4f18\u5148\u7ea7\u6700\u4f4e\u5c31\u4e0e\u54ea\u4e2a\u5b50\u7ea7\u4ea4\u6362\n\u5b50\u7ea7\u4f18\u5148\u7ea7\u90fd\u6bd4\u5b83\u4f4e\uff0c\u5c31\u5b8c\u6210\u4e86pool()\n\n\n\n\nRemove(m) \u5373\u5220\u9664\u4e00\u4e2a\u7279\u5b9a\u5143\u7d20\n\n\nlinear scan\uff0c\u627e\u5230\u5143\u7d20\u4f4d\u7f6e\n\u4e0elast node\u4ea4\u6362\uff0c\u7136\u540e\u79fb\u9664\nlast node\u7528\u5148\u4e0a\u5411\u4e0b\u7684\u539f\u5219\u5192\u6ce1\n\u5373\u5148\u770b\u80fd\u4e0d\u80fd\u5f80\u4e0a\u5192\u6ce1\uff0c\u4e0d\u80fd\u7684\u8bdd\u518d\u770b\u5f80\u4e0b\u5192\u6ce1\n\n\n\nComplexity\nPool(): O(log n)\nRemove(): O(n) (\u6700\u574f\u60c5\u51b5\u4e0b\uff0c\u53ef\u80fd\u8981\u5220\u7684\u5143\u7d20\u5728\u6700\u540e\u4e00\u4e2a)\u7528hashtable\u4f18\u5316remove\nhashtable\u4e3alookup\u548cupdate\u63d0\u4f9bconstant time\n\u56e0\u4e3a\u4e3aIndex\u548cvalue\u5efa\u7acb\u4e86\u6620\u5c04\uff0c\u8fd9\u6837\u4e0d\u9700\u8981\u901a\u8fc7\u904d\u5386\uff0c\u76f4\u63a5\u901a\u8fc7\u6620\u5c04\u5c31\u80fd\u627e\u5230\u5143\u7d20\n\u5982\u679c\u4e24\u4e2anode\u62e5\u6709\u540c\u6837\u7684value\u5462\uff1f\n\u76f4\u63a5\u628a\u6bcf\u4e2avalue\u5bf9\u5e94\u7684n\u4e2a\u7d22\u5f15\u5168\u90e8\u5b58\u8d77\u6765(set)\n\u4f46\u6211\u5e94\u8be5remove\u54ea\u4e00\u4e2a\u5462\uff1f\n\u968f\u4fbf\uff0c\u53ea\u8981\u6700\u7ec8satisfy the heap variant\n\n\n\n\n\n", "categories": [{"name": "posts", "slug": "posts", "permalink": "/category/posts/"}], "tags": [{"name": "data struct", "slug": "data struct", "permalink": "/tag/data%20struct/"}, {"name": "priority queues", "slug": "priority queues", "permalink": "/tag/priority%20queues/"}, {"name": "heap", "slug": "heap", "permalink": "/tag/heap/"}]}, {"title": "\u6570\u636e\u7ed3\u6784\u7bc7\u4e00\uff1aArray, Linked-List, Stack, Queues", "date": "2021-11-12T00:00:00-00.00", "path": "/archives/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E7%AF%87%E4%B8%80%EF%BC%9AArray-Linked-List-Stack-Queues/", "text": "\u8fd9\u662f\u4e00\u4f4d google \u5de5\u7a0b\u5e08\u5206\u4eab\u76848\u5c0f\u65f6\u7684\u6570\u636e\u7ed3\u6784\u7684\u89c6\u9891,\u6211\u7684\u7b14\u8bb0\u524d\u51e0\u4e2a\u6bd4\u8f83\u57fa\u7840,\u53ea\u8bb0\u5f55\u4e86\u4e9b\u5173\u952e\u5b57\u548c\u63d0\u7eb2Static and Dynamic Arrays\nstatic array\nfixed length\nindexable\n\nusage:\nsequential data\nIO routines as buffers\nlookup tables and inverse lookup tables\nreturn multiple values\n\noperation complexity:\naccess: O(1)\nsearch: O(n)\ninsert: O(n)\nappend: O(1)\ndelet: O(n)\n\u9700\u8981\u904d\u5386\u7684\u64cd\u4f5c\u5c31\u662fO(n)Q: How to implement a dynamic array?\nA:\nstatic array with an initial capacity\nadd new elements, keep tracking the size\nif exceed capacity, create a new static array with twice the capacity\nand copy the original elements into it\n\n\n\nSingly and Doubly Linked Lists\n\u5355\u5411/\u53cc\u5411\u94fe\u8868sequential list of nodes that hold data which point to other nodes also containing data.\n\u8282\u70b9\u5e8f\u5217\uff0c\n\u8282\u70b9\u62e5\u6709\u6307\u5411\u522b\u7684\u8282\u70b9\u7684\u6570\u636e\uff08\u6307\u9488\uff09\n\u522b\u7684\u8282\u70b9\u4e5f\u62e5\u6709\u8fd9\u79cd\u6307\u9488\n\nusage:\nmany List, Queue &amp; Stack implementations\ncircular lists\nmodel real world objects such as trains\nimplementation of adjancy list for graphs\nseparate chaining -&gt; ?\ndeal with hashing collisions -&gt; ?\n\n\n\n\n\u4e0a\u8ff0\u4e24\u4e0a\u95ee\u53f7\u540e\u7eed\u5728Hash Table\u4e00\u8282\u91cc\u81ea\u7136\u5c31\u89e3\u60d1\u4e86\nTerminology\nHead / Tail / Pointer / NodeSingly vs Doubly\nDoubly holds a next and prev reference, which Singly has no prev\n\u63d2\u5165\u5220\u9664\u7684\u65f6\u5019\u9700\u8981\u66f4\u65b0\u6240\u6709\u5f15\u7528\n\n\nboth maintain a reference of head and tail for quick additions / removals\n\ninsertion\ncreate a traverser and move by sepcific steps\ncreate new node\nsingly:\n\u539fnode\u7684next\u6307\u5411\u65b0node\n\u65b0node\u7684next\u6307\u5411\u539fnext\u7684node\n\n\ndoubly:\n\u65b0node\u7684next\u548cprev\u5206\u522b\u6307\u5411\u539fnode\u548c\u4e0b\u4e00\u4e2anode\n\u4e24\u4e2anode\u5206\u522b\u7528next\u548cprev\u6307\u5411\u65b0node\n\n\n\nremovalsingly\u9700\u8981\u4e24\u4e2a\u6e38\u6807:\npt1\u6307\u5411head, pt2\u6307\u5411head-&gt;next\npt1, pt2\u4e00\u8d77\u79fb\u52a8\uff0c\u76f4\u5230pt2\u627e\u5230\u76ee\u6807\npt2\u518d\u5411\u524d\u79fb\u52a8\u4e00\u6b65\npt1\u4f4d\u7f6e\u7684node\u7528next\u6307\u5411pt2\u4f4d\u7f6e\nnow can sefely remoing the element between pt1 and pt2\n\ndoubly\u5374\u53ea\u9700\u8981\u4e00\u4e2a\uff1a\npointer\u627e\u5230\u76ee\u6807\u5143\u7d20\n\u7528prev\u548cnext\u627e\u5230\u4e0a\u4e00\u4e2a\u548c\u4e0b\u4e00\u4e2a\n\u4e0b\u4e00\u4e2a\u548c\u4e0b\u4e00\u4e2anode\u5206\u522b\u4e92\u76f8\u6307\u5411\n\nComplexity\nsearth: O(n)\ninsert at head/tail: O(1)\nremove at head: O(1)\nremove at tail: O(n) (singly) / O(1) (doubly)\n\u56e0\u4e3a\u5373\u4f7f\u6211\u4eec\u77e5\u9053tail\u5728\u54ea\uff0c\u5728\u5355\u5411\u94fe\u8868\u4e2d\uff0c\u6211\u4eec\u4e5f\u627e\u4e0d\u5230\u5b83\u7684\u524d\u4e00\u4e2a\u53bb\u8bbe\u7f6e\u4e3a\u65b0\u7684tail\nremove in middle: O(n)Stack\n\none-ended linear data structure (LIFO)\ntwo operation: push and pop\n\nUsage\nundo mechanisms\ncompiler syntax checking for matching brackets and braces\n\u5f00\u62ec\u53f7\u538b\u5165\u6808\u5185\uff0c\u6bcf\u78b0\u5230\u4e00\u4e2a\u95ed\u62ec\u53f7\uff0c\u4e0e\u6808\u9876\u7684\u6bd4\u8f83\uff0c\u5339\u914d\u5c31\u51fa\u6808\uff0c\u4e0d\u5339\u914d\u5c31\u62a5\u9519\n\n\nmodel a pile of books or plates\n\u6c49\u8bfa\u5854(tower of hanoi)\n\n\ntracking previous function calls\nDFS on a graph\n\nComplexity\npush/pop/peek/size: O(1)\nsearch: O(n)\u53cc\u5411\u94fe\u8868\u5b9e\u73b0\u4e00\u4e2aStack\uff0c\u57fa\u672c\u4e0a\u5c31\u662f\u64cd\u4f5ctailQueues\n\na linear data structure, model real world queues (FIFO)\ntwo primary operations: enqueue, dequeue\n\nUsage\nany waiting line models a queue\nkeep track of the x most recently added elements -&gt; ?\nweb server request management where you want first come first serve\nBFS graph traversal\n\nComplexity\u53ea\u6709contains, revomval\u9700\u8981\u904d\u5386\uff0c\u5176\u5b83\u64cd\u4f5c\uff08\u51fa\u5165\u5217\u7b49\uff09\u90fd\u662fO(1)\u5b9e\u73b0\u4e00\u4e2aBFS\uff1a\u57fa\u672c\u5c31\u662f\u52a8\u6001\u5f80 queue \u91cc\u6dfb\u52a0\u5b50\u8282\u70b9,\u5f53\u524d\u7ea7\u522b\u5143\u7d20\u8bbf\u95ee\u5b8c\u540e, \u518d dequeue \u51fa\u6765\u7684\u5c31\u662f\u6240\u6709\u7684\u4e0b\u4e00\u7ea7\u5b50\u8282\u70b9\n\u53cc\u5411\u5217\u8868\u5b9e\u73b0Queue\uff0c\u5165\u5217\u7528tail\uff0c\u51fa\u5217\u7528head\uff0c\u5373\u6dfb\u52a0\u7684\u603b\u5728\u5c3e\u5df4\uff0c\u6c38\u8fdc\u4ece\u5934\u90e8\u53d6\u51fa\u3002", "categories": [{"name": "posts", "slug": "posts", "permalink": "/category/posts/"}], "tags": [{"name": "data struct", "slug": "data struct", "permalink": "/tag/data%20struct/"}, {"name": "array", "slug": "array", "permalink": "/tag/array/"}, {"name": "linked list", "slug": "linked list", "permalink": "/tag/linked%20list/"}, {"name": "stack", "slug": "stack", "permalink": "/tag/stack/"}, {"name": "queues", "slug": "queues", "permalink": "/tag/queues/"}]}, {"title": "\u5168\u6392\u5217\uff0c\u9012\u5f52\u4e0e\u5206\u6cbb", "date": "2021-11-04T00:00:00-00.00", "path": "/archives/%E5%85%A8%E6%8E%92%E5%88%97%EF%BC%8C%E9%80%92%E5%BD%92%E4%B8%8E%E5%88%86%E6%B2%BB/", "text": "\u80fd\u591f\u7528\u9012\u5f52\u548c\u5206\u6cbb\u89e3\u51b3\u7684\uff0c\u7279\u5f81\u90fd\u662f\u4e0b\u4e00\u7ea7\u505a\u7684\u4e8b\u8ddf\u4e0a\u4e00\u7ea7\u4e00\u6837\uff08\u62bd\u8c61\uff09\uff0c\u6700\u540e\u4e00\u5c42\u505a\u771f\u6b63\u7684\u4e1a\u52a1\u3002\u6bd4\u5982n\u4e2a\u6570\u5b57\u7684\u5168\u6392\u5217\uff0c\u62bd\u8c61\u51fa\u6765\u5c31\u662f\u6bcfn-1\u4e2a\u6570\u5b57\u7684\u5168\u6392\u5217\u5b83\u7684\u96be\u70b9\u5c31\u5728\u4e8e\u62bd\u8c61\uff0c\u56e0\u4e3a\u7b49\u4e8e\u4ec0\u4e48\u90fd\u6ca1\u63cf\u8ff0\uff08\u6211\u89815\u4e2a\u6570\u5b57\u7684\u5168\u6392\u5217\uff0c\u4f60\u5c31\u8bf4\uff0c\u90a3\u597d\uff0c\u4f60\u544a\u8bc9\u6211\u8fd94\u4e2a\u6570\u5b57\u7684\u5168\u6392\u5217\uff0c\u6211\u5c31\u80fd\u544a\u8bc9\u4f605\u4e2a\u6570\u5b57\u7684\u5168\u6392\u5217\uff09\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u5c1d\u8bd5\u7528n\u548cn-1\u7684\u601d\u7ef4\uff08\u6709\u70b9\u50cf\u5f52\u7eb3\u6cd5\uff0c\u52a8\u6001\u89c4\u5212\uff09\u53bb\u63cf\u8ff0\u95ee\u9898\uff0c\u800c\u4e0d\u53bb\u770b\u80fd\u4e0d\u80fd\u89e3\u51b3\u3002\u5177\u4f53\u5230\u8fd9\u91cc\uff0c\u4ee5ABCD\u4e3a\u4f8b\uff0c\u6211\u4eec\u7684\u8bf7\u6c42\u8fc7\u7a0b\u5e94\u8be5\u662f\u8fd9\u6837\u7684\nA\u6253\u5934\u7684\u8bdd\uff0cBCD\u7684\u5168\u6392\u5217 swap(0, 0)\nB\u6253\u5934\u7684\u8bdd\uff0cACD\u7684\u5168\u6392\u5217 swap(0, 1)\n...swap(0,2)\n...swap(0,3)\n\n\u81ea\u5df1\u662f\u53ef\u4ee5\u6570\u51fa\u6765\u7684\uff1aA\u56fa\u5b9a\uff0cBCD\u7684\u6240\u6709\u6392\u5217 swap(0,0)\n  B\u56fa\u5b9a\uff0cCD\u7684\u6240\u6709\u6392\u5217 swap(1,1)\n      C\u56fa\u5b9a\uff0cD\u7684\u6240\u6709\u6392\u5217 swap(1,2)\uff081\uff09\n      D\u56fa\u5b9a\uff0cC\u7684\u6240\u6709\u6392\u5217 swap(1,3)\uff081\uff09\n  C\u56fa\u5b9a\uff0c\u540cB\uff082\uff09\n  D\u56fa\u5b9a\uff0c\u540cB\uff082\uff09\n  \u8ba16\u79cd\nB\u56fa\u5b9a\uff0c\u540cA\uff0c(6) swap(0,1)\nC\u56fa\u5b9a\uff0c\u540cA\uff0c(6) swap(0,2)\nD\u56fa\u5b9a\uff0c\u540cA\uff0c(6) swap(0,3)\n\u7ed3\u679c\u5e94\u8be5\u662f24\n\n\u6240\u6709\u7f29\u8fdb\u90e8\u5206\u90fd\u662f\u9012\u5f52\uff0c\u6240\u4ee5\u771f\u6b63\u7684\u4e1a\u52a1\u4ee3\u7801\u5c31\u662f\u4e00\u53e5\u8bdd\uff0c\u4ea4\u6362\u6bcf\u6b21\u6bd4\u8f83\u7684\u6570\u7ec4\u7684\u7b2c\u4e00\u4e2a\u548c\u5269\u4e0b\u7684\u51e0\u4e2a\u7684\u4f4d\u7f6e\uff0c\u7136\u540e\u9012\u5f52\u4e0b\u53bbctr = 0\ndef perm(arr, start=0, end=None):\n    global ctr\n    end = end or len(arr)\n\n    if start == end:\n        print(arr)\n        ctr += 1\n    else:\n        for i in range(start, end):\n            # \u601d\u8def\u662f\uff0c\u6211\u6bcf\u6b21\u53ea\u52a8\u4e00\u4e2a\u6570\u5b57\uff0c\u7136\u540e\u56fa\u5b9a\u4f4f\u8fd9\u4e2a\u6570\u5b57\uff0c\u770b\u5269\u4e0b\u7684\u6570\u5b57\u6709\u591a\u5c11\u79cd\u6392\u5217\n            # \u4ee3\u7801\u91cc\u6bcf\u6b21\u628a\u56fa\u5b9a\u7684\u6570\u5b57\u632a\u5230\u5f00\u5934\n            arr[i], arr[start] = arr[start], arr[i]\n            perm(arr, start+1, end)\n            arr[i], arr[start] = arr[start], arr[i]\n\nif __name__ == &quot;__main__&quot;:\n    arr = [1,2,3,4]\n    perm(arr)\n    print(ctr)\n\noutput: 24\u53ef\u80fd\u662f\u6211\u7406\u89e3\u80fd\u529b\u7684\u95ee\u9898\uff0c\u6240\u6709\u4eba\u90fd\u6ca1\u6709\u89e3\u91ca\u4e3a\u4ec0\u4e48\u6709swap\uff0c\u53ef\u80fd\u662f\u592a\u76f4\u89c2\u5427\uff0c\u6bd5\u7adfswap\u624d\u662f\u771f\u6b63\u5728\u201d\u6392\u5217\u201c\u7684\u4e1a\u52a1\u4ee3\u7801\u3002\u6211\u8fd8\u662f\u81ea\u5df1\u5199\u4e00\u904d\u624d\u60f3\u660e\u767d\uff0c\u8bb0\u5f55\u4e00\u4e0b\u5427\u3002", "categories": [{"name": "posts", "slug": "posts", "permalink": "/category/posts/"}], "tags": [{"name": "\u7b97\u6cd5", "slug": "\u7b97\u6cd5", "permalink": "/tag/%E7%AE%97%E6%B3%95/"}]}, {"title": "cs193p_2021_\u7b14\u8bb0_[\u5b8c\u7ed3]_pdf\u4e0b\u8f7d", "date": "2021-10-24T07:00:00-00.00", "path": "/archives/cs193p_2021_%E7%AC%94%E8%AE%B0_%5B%E5%AE%8C%E7%BB%93%5D_pdf%E4%B8%8B%E8%BD%BD/", "text": "\u6240\u6709\u7b14\u8bb0\u5df2\u5bfc\u51fa\u6210\u4e00\u7bc7pdf\u6587\u6863\uff0c\u5df2\u4e0a\u4f20\u767e\u5ea6\uff1a\n\u94fe\u63a5: https://pan.baidu.com/s/1hgnzfxbE9l4zlcYBDsa-1g \u63d0\u53d6\u7801: 7w1f\n\u672c\u6587\u5185\u5bb9\uff1a\u4e0eUIKit\u7684\u96c6\u6210\uff0c\u4ee5\u53ca\u5b66\u4e60\u8fc7\u7a0b\u4e2d\u7684\u4e00\u4e9btips\uff0cskills\uff0c\u4e0e\u7ae0\u8282\u65e0\u7ae0\u7684notes\nMVVM\n\nviewmodel\u8981\u8d77\u5230gete keeper\u7684\u4f5c\u7528\uff0c\u5b83\u5c31\u8981\u628amodel\u7ed9private\u8d77\u6765\n\u6216\u8005private (set), \u8fd9\u6837\u4fdd\u62a4\u4e86\u5199\uff0c\u4f46\u662f\u80fd\u8bfb\n\u6216\u8005\u7528\u4e00\u4e2a\u8ba1\u7b97\u5c5e\u6027\u628a\u9700\u8981\u7684model \u66b4\u9732\u51fa\u53bb\n\n\n\u4e00\u4e2aviewmodel\u901a\u5e38\u8981conform ObservableObject\n\u5c31\u9690\u542b\u4e86\u4e00\u4e2avar objectWillChange: ObservableObjectPublisher\nmodel\u8981\u6539\u52a8\u524d\uff1aobjectWillChange.send()\n\u6216\u8005\uff0c\u628amodel\u6539\u4e3a@Publisher var model\uff0c\u4f1a\u81ea\u52a8\u5e7f\u64ad\n\n\n\u8ba2\u9605\u8005\uff08\u901a\u5e38\u5c31\u662fView\uff09\u5c31\u8981\u628a\u8fd9\u4e2aviewmodel\u6253\u4e2a\u53ef\u8ba2\u9605\u7684\u6807\u8bc6\uff1a\n@ObservedObject var viewModel: MyViewModel\n\u53ea\u80fd\u662fvar\uff0c\u56e0\u4e3a\u5f88\u660e\u663e\u662f\u4f1a\u53d8\u7684\nView\u76d1\u542c\u5230\u662f\u4f1a\u81ea\u52a8invalicate view\u7684\uff0c\u5c31\u4f1a\u91cd\u7ed8\n\n\n\nUIKit Integration\nUIKit\u5e76\u4e0d\u662f\u7eafView\u7684\u4e16\u754c\uff0c\u5927\u591a\u6570\u65f6\u5019\u662f\u8ddfViewController\u4e00\u8d77\u51fa\u73b0\u7684\uff0c\u8fd8\u4e25\u91cd\u4f9d\u8d56Delegate\u8fd9\u79cd\u673a\u5236\u8fdb\u884c\u8de8View\u7684\u4e8b\u4ef6\u4f20\u9012\uff08\u56de\u8c03\uff09\u3002Representbles\nUIViewRepresentable\uff0cUIViewContorllerRepresentable\u90fd\u662fSwiftUI\u7684View\u4e86\uff0c\u5305\u542b\u51e0\u4e2a\u7ec4\u4ef6\uff1a\nmakeUIView{Controller}(context: Context) -&gt; view/controller\nupdateUIView{Controller}(view/controller, context: Context) -&gt;\nmakeCoordiinator() -&gt; Coordinator // handle delegate\n\u8c03\u7528\u8be5\u65b9\u6cd5\u540e, context.coordinator\u5c31\u6709\u503c\u4e86\n\n\na Context containn the coordinator, swiftui's env, animation transaction\ndismantleUIView{Controller}(view/controller, coordinator: Coordinator) // clean up when disappears\n\nTips &amp; Skills\n\u5b66\u4e60\u8fc7\u7a0b\u968f\u7b14\u8bb0\u4e0b\u6765\u7684\u4e00\u4e9b\u6280\u5de7\u548c\u77e5\u8bc6\u70b9:basic\n\n[0...6]\u662f0\u52306\uff0c[0..&lt;6]\u662f0\u52305\nvar s = struct_a; s[&quot;a&quot;] = 3, \u4e0d\u4f1a\u6539\u53d8struct_a, \u56e0\u4e3astruct\u6c38\u8fdc\u662f\u590d\u5236\narr.firstIndex(where: { item in item.id == myID})\uff0c\u56e0\u4e3awhere\u9700\u8981\u7684\u51fd\u6570\u4f20\u9012\u7684\u662f\u672c\u8eab\uff08\u7c7b\u4f3cmap, filter)\uff0c\u6240\u4ee5\u53ef\u4ee5\u7b80\u5316\u4e3a\uff1a\narr.firstIndex(where: { $0.id == myID})\n\n\ntypealias Card = MemoryGame&lt;String&gt;.Card \u522b\u540d\nvar a_int_array = [Int]() \u4e00\u79cd\u521d\u59cb\u5316\u65b9\u5f0f\nextension\u4e2d\u7684\u5c5e\u6027\u53ef\u4ee5\u76f4\u63a5\u7528\uff0c\uff08\u5f53\u7136\u4e5f\u53ef\u4ee5\u7528self.\uff09\narr.filter { isGood($0)} \u56e0\u4e3a\u53c2\u6570\u5c31\u662f\u81ea\u5df1\uff0c\u8fd8\u53ef\u4ee5\u7ee7\u7eed\u7b80\u5316\uff1a `arr.filter(isGood)``\n\u540c\u7406\uff1a[1...100].reduce(0, +)\uff0c\u56e0\u4e3a\u9ed8\u8ba4\u53c2\u6570\u662f\u4e24\u4e2a\uff0c\u6240\u4ee5\u4f1a\u81ea\u52a8\u586b\u5230+\u53f7\u4e24\u8fb9\uff0c\u5c55\u5f00\u5c31\u662f{ $0 + $1 }\n\n\nCollection protocol is for immutable collections\nmutalbe Collection protocol is RangeReplaceableCollection\n\u6240\u4ee5\u8981\u5199\u4e00\u4e2a\u6269\u5c55\uff0c\u5728\u6539\u53d8\u96c6\u5408\u7684\u5143\u7d20\uff0c\u5148\u9009\u5bf9\u6b63\u786e\u7684protocol\n\n\n\u7528try\u8fd8\u662ftry?\u8c03\u7528\u4e00\u4e2a\u58f0\u660e\u4e86throw\u7684\u51fd\u6570\uff0c\u53d6\u51b3\u4e8e\u4f60\u662f\u8981\u5ffd\u7565\u5b83\u8fd8\u662f\u5904\u7406\u5b83\ntry\u5c31\u662f\u4e0d\u5904\u7406\uff0c\u7ed3\u679c\u5c31\u662f\u5305\u542b\u4e86\u8fd9\u6bb5\u4ee3\u7801\u7684\u51fd\u6570\u4e5f\u8981\u6807\u4e0athrow\ntry?\u5c31\u662f\u5ffd\u7565\u6389\uff0c\u627f\u8ba4nil\n\n\nString(describing: obj): \u5bf9\u8c61\u7684\u5b57\u7b26\u4e32\u8868\u793a\uff0c\u6216\u5b57\u7b26\u4e32\u63cf\u8ff0\n#function \u7a0b\u5e8f\u540d\n@ScaleMetric var fontSize: CGFloat = 40.0 \u56fa\u5b9a\u5927\u5c0f\u7684\u5b57\u4f53\uff0c\u7528@ScaleMetric\u4e5f\u80fd\u6309\u6bd4\u4f8b\u7f29\u653e\n\u526a\u8d34\u677f\uff1aUIPasteboard.general.image?.jpegData(...)\nsafe area: UIAplication.shared.windows.first?.safeAreaInsets\nviews.map{ UIHostingController(rootView: $0)} \u628a\u4e00\u7ec4View\u8f6c\u4e3aViewController\ntimer = Timer.publish(erery: 3, on: .current, in: .common).autoconnect()\nview.onReceive(timer, perform: {})\n\n\nTexxt(Image(systemName: &quot;video.circle&quot;)) + Text(&quot;\u89c6\u9891&quot;): \u4e24\u4e2a\u77e5\u8bc6\u70b9\nText view\u91cd\u8f7d\u4e86+\u64cd\u4f5c\u7b26\uff0c\u7701\u53bb\u4e86\u7528HStack\nImage\u4e5f\u53ef\u4ee5\u4f5c\u4e3aText\u7684\u5185\u5bb9\n\n\nCircle + trim + stroke + rotation \u53ef\u4ee5\u7ec4\u5408\u51fa\u4e00\u6bb5\u4efb\u610f\u89d2\u5ea6\u7684\u5f27\u5f62\n\u4e00\u4e2aPreferenceKey\u7528\u6765\u5e7f\u64ad\u5c5e\u6027\u53d8\u5316\u7684\u4f8b\u5b50\uff1a\n\n\n* see more [https://swiftwithmajid.com/2020/01/15/the-magic-of-view-preferences-in-swiftui/](https://swiftwithmajid.com/2020/01/15/the-magic-of-view-preferences-in-swiftui/)\n\n\u770b\u4e00\u4e2a\u7b80\u5316\u7684\u5b9e\u4f8b\uff1a\n\n\u53ef\u4ee5\u770b\u5230\uff0c\u5176\u5b9e\u5316\u7b80\u5316\u53ef\u8bfb\u6027\u66f4\u5f3a\uff0c\u7528for\u5faa\u73af\uff0c\u518d\u5728\u91cc\u9762\u505a\u903b\u8f91\uff0c\u4f1a\u628a\u76f4\u767d\u7684\u521d\u8877\u7ed5\u8fdb\u53bb\uff1a\n\u8fd4\u56de\u552f\u4e00\u4e00\u4e2a\u9762\u671d\u4e0a\u7684\u5361\u7247\n\u8bbe\u7f6e\u9009\u5b9a\u7d22\u5f15\u7684\u5361\u7247\u9762\u671d\u4e0a\n\u540c\u6837\uff0c Button\u7684\u58f0\u660e\u662f\uff1a(_ title: StringProtocol, action: () -&gt; Void),\n\u7b80\u5316\u540e\u4e5f\u66f4\u52a0\u76f4\u89c2\u4e86\uff1aButton(&quot;text&quot;){ actions }\n\n\n\u7ed9class/struct\u6dfb\u52a0\u548c\u4f7f\u7528\u9ed8\u8ba4\u7684description\u6709\u70b9\u7ed5\uff0c\u7b49\u4e8e\u539f\u751f\u5e76\u4e0d\u652f\u6301\uff0c\u8fd8\u7406\u89e3\u6210\u4e86String\u7684\u65b9\u6cd5\n\nstruct abc: CustomStringConvertible {\n    var a:Int\n    var b:Int\n    func de() -&gt; String{\n        // #function, file, filePaht, fileID, line, column\n        &quot;\\(String(describing: self))\\n\\(#function)\\n\\(#filePath)&quot;\n\n        // String(describing: obj)\n        // \u7406\u89e3\u4e3a\u7528obj\u5bf9\u8c61\u7684description\u5c5e\u6027\u6765\u6784\u9020\u5b57\u7b26\u4e32\n        // \u800c\u4e00\u822c\u4eba\u7684\u8bbe\u8ba1\u601d\u8def\u4f1a\u662f\uff1a\u7ed9obj\u5bf9\u8c61\u589e\u52a0\u4e00\u4e2adescription\u5c5e\u6027\uff0c\u8fd9\u4e2a\u5c5e\u6027\u662f\u4e2astring\n        // \u5e76\u4e14\u8fd9\u4e2a\u5bf9\u8c61\u8981\u670d\u52a1 CustomStringConvertible \u534f\u8bae\n    }\n    var description: String {\n        &quot;{\\&quot;a\\&quot;:\\(a), \\&quot;b\\&quot;:\\(b)}&quot;\n    }\n}\n\nabc(a: 77, b: 88).de() // \u8f93\u51fa\uff1a {&quot;a&quot;: 77, &quot;b&quot;: 88} \\n de() \\n myfile_path\n\nview\n\nvar body : some View {...} \u610f\u601d\u662f\u4f60\u81ea\u5df1\u4e0d\u9700\u8981\u5b9e\u73b0View\uff0c\u4f46\u4f60\u8981\u8fd4\u56desome\u5b9e\u73b0\u4e86View\u7684\uff08\u522b\u7684\uff09\u5bf9\u8c61\n\u5b83\u662f\u4e00\u4e2acomputed var\uff0c\u6240\u4ee5\u8ddf\u7684{}\u5c31\u662f\u4e00\u4e2afunction\n\u6240\u4ee5{}\u91cc\u9690\u542b\u4e86\u4e00\u4e2areturn\n\n\nText(&quot;hello&quot;).padding()\u8fd4\u56de\u7684\u4e0d\u518d\u662fText\nZStack(alignment: .center, content: {...})\n\u7b80\u5316\u4e3a\uff1aZStack(alignment: .center) {...}\uff0c\u63d0\u53d6\u4e86\u65b9\u6cd5\u4f53\n\u5982\u679calignment\u4e3a\u7a7a\uff1a ZStack {...}\n\u6240\u4ee5\u5b83\u91cc\u9762\u4e5f\u53ef\u4ee5\u6709\u5c40\u90e8\u53d8\u91cf\n\n\n\u591a\u4e2a\u51fd\u6570\u53c2\u6570\u4e5f\u53ef\u4ee5\u7b80\u5316\uff1a\nButton(action: {...}, label: {...})\nButton {...} label: {...}\u7701\u6389\u4e86\u7b2c\u4e00\u4e2a\u53c2\u6570\u540d\uff0c\u7701\u6389\u4e86\u9017\u53f7\n\n\nButton.contextMenu{ some View} \u4e0a\u4e0b\u6587\u83dc\u5355\uff0c\u5185\u5bb9\u5c31\u662fsome View\nMenu{ some View} label: { Label } \u5448\u73b0\u4e3a\u4e00\u4e2abutton\uff0c\u70b9\u51fb\u540e\u4f1a\u81ea\u52a8\u5448\u73b0some View\u7ec4\u6210\u7684\u83dc\u5355\n\u4e5f\u5c31\u662f\u8bf4\u5b83\u81ea\u5df1\u5e2e\u4f60\u5c01\u88c5\u4e86UI\u548c\u884c\u4e3a\uff08\u70b9\u51fb\u5f39\u51fa\u83dc\u5355\uff09\uff0c\u4e0d\u9700\u8981\u5199\u4ec0\u4e48onTap\u4e8b\u4ef6\n\n\nmyView.sheet(isPresented: $flag) { some View} \u901a\u8fc7$flag\u5c31\u80fd\u6839\u636emyView\u7684\u4f4d\u7f6e\u5728\u5408\u9002\u7684\u4f4d\u7f6e\u6253\u5f00sheet\uff0c\u5185\u5bb9\u7531@viewBuilder\u7684closure\u63d0\u4f9b\npopover\u4e5f\u540c\u7406\uff0c\u8fd8\u6709\u4e00\u79cdpopover\u65f6\u628a\u5bf9\u8c61\u4f20\u8fdb\u53bb\u7684\u7528\u6cd5\uff1a\npopover\u4e0esheet\u7684\u533a\u522b\u662fpopover\u5728\u8ba1\u7b97\u81ea\u8eab\u5927\u5c0f\u7684\u65f6\u5019\u662f\u201c\u5c3d\u53ef\u80fd\u5c0f\u201d\uff0c\u6240\u4ee5\u5728\u5305\u7684\u5bf9\u8c61\u91cc\u5bf9\u597d\u81ea\u5df1size\u4e00\u4e0b\n\n\nalert\u6709\u70b9\u4e0d\u540c\uff1a.alert(item: $flag) { alertToShow in return Alert}\uff0c \u5c31\u662f\u8981\u8fd4\u56de\u4e00\u4e2aAlert\u5bf9\u8c61\nmyView.popover(item: $obj) {obj in ...} \u8fd9\u4e00\u7c7b\u4f20item\u505aflag\u7684\u7528\u6cd5\u4e5f\u6709\u5e7f\u6cdb\u7684\u4f7f\u7528\u573a\u666f\n\u5f39\u51fa\u7684\u9875\u9762\u67e5\u770b\u81ea\u5df1\u7684\u72b6\u6001\uff0c\u7528presentationMode\u73af\u5883\u53d8\u91cf\npresentationMode.wrappedValue.isPresented\n\n\nNavigationView\u91cc\u7684NavigationLink\u4e5f\u662f\u4e00\u6837\u5c01\u88c5\u4e86UI\u548c\u884c\u4e3a\uff08\u70b9\u51fb\u8df3\u8f6c\uff09\ntoolbaritem\u7684placement\u9664\u4e86leading, trailing\u7b49\u76f4\u89c2\u8868\u793a\uff0c\u8fd8\u6709\u4e00\u4e9b\u8bed\u4e49\u5bf9\u5e94\u7684(\u7c7b\u4f3calert\u4e2d\u6709\u7ea2\u8272\u7684\u9500\u6bc1\u6309\u94ae\uff09\uff0c\u5982destructiveAction, cancellationAction, confirmationAction\u7b49\uff0c\u751a\u81f3automaic\n\u5de5\u5177\u6761\u653e\u5230\u5e95\u90e8\uff1aToolbarItemGroup(placement: .bottmbar){}`\n.StackNavigationViewStyle, \u8ba9\u5927\u5c4f\u5e55iPhone\u6a2a\u5c4f\u65f6\u4e0d\u53bb\u5c1d\u8bd5\u5de6\u53f3\u5206\u5c4f\uff0c\u76f4\u63a5\u94fa\u6ee1\nUIDevice.current.userInterfaceIdiom == .pad\n\u73af\u5883\u53d8\u91cf\uff1ahorizontalSizeClass, verticalSizeClass\u7b49\uff0c\u6839\u636e\u662f\u5426compact\u6765\u5224\u65ad\u5e03\u5c40\uff0c\u800c\u4e0d\u662f\u5199\u6b7b\u7684\u5927\u5c0f\uff0c\u4ee5\u5b9e\u73b0\u8de8\u673a\u578b\u9002\u914d\n\nlayout\n\nlazyVGrid(columns: [GridItem(.fixed(200)), GridItem(.flexable()), GridItem())])\n\u5176\u5b9e\u5c31\u662f\u4e00\u4e2aflex\u7684\u6392\u7248\n\u6a2a\u5411\u5229\u7528\u6240\u6709\u7a7a\u95f4\uff0c\u7ad6\u5411\u5c3d\u53ef\u80fd\u5c0f\n\u7ad6\u6392\uff0c\u6ca1\u5b9a\u4e49\uff0c\u770b\u6548\u679c\u662ftop\n\u6a2a\u6392\uff0c\u7531\u6bcf\u4e00\u4e2aGridItem\u6765\u5b9a\u4e49\nLazy\u7684\u610f\u601d\u662f\u53ea\u6709\u51fa\u73b0\u5728\u5c4f\u5e55\u4e0a\u65f6\uff0c\u624d\u4f1a\u6e32\u67d3body\n\u5982\u679c\u6a2a\u5411\u5143\u7d20\u4e5f\u81ea\u7531\u6392\u5217\u5462\uff1f\u6bd4\u5982\u6a2a\u5c4f15\u4e2a\uff0c\u7ad6\u5c4f6\u4e2a\nlazyVGrid(columns: GridItem(.adaptive(minimum: 80))) \u53ea\u8981\u4e00\u4e2aitem, \u7136\u540e\u6307\u5b9a\u4e00\u4e2a\u6700\u5c0f\u5bbd\u5ea6\u5373\u53ef\n\n\n\u540c\u7406\u5e94\u8be5\u6709lazyHGrid\n\n\n\nstatic\n\n.largeTitle, .white, \u5176\u5b9e\u5c31\u662f\u9759\u6001\u53d8\u91cf: Font.largeTitle, Color.white\uff0c\u6240\u4ee5\u4e0d\u8981\u89c9\u5f97\u4ee3\u7801\u91cc\u7528static let xxx = xxx\u5f88low\n\u9759\u6001\u65b9\u6cd5\u540c\u7406\uff0c\u53ea\u8981\u4e0d\u9700\u8981\u662f\u5b9e\u4f8b\u53d8\u91cf\u7684\uff0c\u90fd\u53ef\u4ee5staic\u8d77\u6765\uff0c\u8df3\u51fa\u521d\u59cb\u5316\u6d41\u7a0b\n\n\n\nXCode\n\n\u8bbe\u7f6e &gt; Behaviors &gt; Generates output \u53ef\u4ee5\u8bbe\u7f6e\u6a21\u62df\u5668\u6709output\u65f6\u7684\u884c\u4e3a\uff0c\u6bd4\u5982\u62c9\u51fa\u63a7\u5236\u53f0\u770b\u8f93\u51fa\n\n// \u8bbe\u7f6e\u9884\u89c8\u7684\u8bbe\u5907\n    .previewDevice(PreviewDevice(rawValue: &quot;iPhone 12&quot;))\n    .previewDisplayName(&quot;iPhone 12&quot;)\n\n\npreview\u91cc\u9762\u4f60\u505a\u4e24\u4e2a.preferredColorScheme(.dark/.light)\u5c31\u53ef\u4ee5\u540c\u65f6\u9884\u89c8\u4e24\u79cd\u989c\u8272\u6a21\u5f0f\u4e0b\u7684\u6548\u679c\u4e86\n\u5176\u5b9e\u4ee5\u4e0a\u5728\u53f3\u4fa7\u9762\u677f\u8bbe\u7f6e\u4f1a\u66f4\u7b80\u5355\uff0c\u4e00\u6837\u4f1a\u5728Preview\u91cc\u751f\u6210\u76f8\u5e94\uff08\u8ddf\u624b\u5199\u4e00\u6a21\u4e00\u6837\uff09\u7684\u4ee3\u7801\n\n...", "categories": [{"name": "posts", "slug": "posts", "permalink": "/category/posts/"}], "tags": [{"name": "cs193p", "slug": "cs193p", "permalink": "/tag/cs193p/"}, {"name": "mvvm", "slug": "mvvm", "permalink": "/tag/mvvm/"}]}, {"title": "cs193p_2021\u7b14\u8bb0[7]_Document-Architecture", "date": "2021-10-24T06:00:00-00.00", "path": "/archives/cs193p_2021%E7%AC%94%E8%AE%B0%5B7%5D_Document-Architecture/", "text": "Document Architecture\n\u6240\u8c13\u7684Dopcument Architecture\uff0c\u5176\u5b9e\u5c31\u662f\u652f\u6301\u628a\u7528app\u4ea7\u751f\u7684\u4f5c\u54c1\u4fdd\u5b58\u8d77\u6765\uff0c\u6bd4\u5982\u4f60\u521b\u4f5c\u7684\u4e00\u5e45\u56fe\u7247\uff0c\u53ef\u4ee5\u4fdd\u5b58\u4e3a.jpg\uff0c\u4f60\u7528photoshop\u505a\u7684\u6587\u4ef6\u662f.psd\uff0c\u4e0b\u6b21\u7528\u81ea\u5df1\u7684app\u52a0\u8f7d\u8fd9\u4e2a\u6587\u4ef6\uff0c\u80fd\u8ba4\u51fa\u6240\u6709\u7ec4\u4ef6\u548c\u6a21\u578b\uff0c\u6bd4\u5982\u6211\u4eec\u60f3\u4e3adocument\u53d6\u4e2a\u540d\u5b57\u53eb.emojiart\u3002App Architecture\nApp protocol\n\n\u4e00\u4e2aapp\u91cc\u53ea\u80fd\u6709\u4e00\u4e2astruct\u670d\u4eceApp Protocol\nmark it with @main\nit's var body is some Scene\n\nScene protocol\n\nA Scene is a container fo a top-lever View that you want to show in your UI\n@Environment(\\.scenePhase)\nthree main types of Scenes:\n\nWindowGroup {return aTopLevelView}\nDocumentGroup(newDocument:) { config in ... return aTopLevelView}\nDocumentGroup(viewing: viewer:) { config in ... return aTopLevelView}  // \u53ea\u8bfb\n\n\n\u540e\u4e24\u4e2a\u7c7b\u4f3cview\u91cc\u9762\u7684ForEach\u4f46\u4e0d\u5b8c\u5168\u76f8\u540c\uff1a\n\u800c\u662f\uff1a&quot;new window&quot; on Mac, &quot;splitting the screen&quot; on iPad -&gt; for create new Scene\n\n\ncontent\u53c2\u6570\u662f\u4e00\u4e2a\u8fd4\u56desome View\u7684\u65b9\u6cd5\n\u8fd4\u56de\u7684\u662ftop-level view\n\u6bcf\u5f53\u65b0\u5efa\u4e00\u4e2a\u7a97\u53e3\u6216\u7a97\u53e3\u88ab\u5206\u5272\u65f6\u90fd\u4f1a\u88ab\u8c03\u7528\n\n\n\n\u5f53\u4f60\u5728iPad\u4e0a\u5206\u5c4f\uff0c\u4e14\u4e24\u4e2a\u6253\u5f00\u540c\u4e00\u5e94\u7528\uff0c\u5c31\u662fWindowGroup\u5728\u7ba1\u7406\uff0c\u4e3a\u6bcf\u4e00\u4e2awindows\u751f\u6210\u4e00\u4e2aScene(share the same parameter e.g. view model, \u56e0\u4e3a\u4ee3\u7801\u662f\u540c\u4e00\u4efd\uff0c\u9664\u975e\u989d\u5916\u4e3a\u6bcf\u4e2ascene\u8bbe\u7f6e\u81ea\u5df1\u7684viewmodel\u4e4b\u7c7b\u7684).config\u91cc\u4fdd\u5b58\u4e86document(\u5373viewModel)\uff0c\u4e5f\u4fdd\u5b58\u4e86\u6587\u4ef6\u4f4d\u7f6e\u3002SceneStorage\n\n\u80fd\u6301\u4e45\u5316\u6570\u636e\n\u4ee5\u7a97\u53e3/\u5206\u5c4f\u4e3a\u5355\u4f4d -&gt; per-Scene basis\n\u4e5f\u4f1ainvalidate view\n\u6570\u636e\u7c7b\u578b\u6709\u4e25\u683c\u9650\u5236\uff0c\u6700\u901a\u7528\u7684\u662fRawRepresentable\n\n[\u56fe\u7247\u4e0a\u4f20\u5931\u8d25...(image-66d359-1636448439942)]\u4e00\u4e2aView\u91cc\u7684@State\u6539\u4e3a@SceneStorage(uniq_id)\u540e\uff0capp\u9000\u51fa\u6216crash\u4e86\uff0c\u4ecd\u7136\u80fd\u627e\u56de\u539f\u6765\u7684\u503c\u3002\u8fd9\u4e2a\u65f6\u5019\u6bcf\u4e2aScene\u91cc\u7684\u503c\u5c31\u5df2\u7ecf\u4e0d\u4e00\u6837\u4e86\u3002AppStorage\n\napplication-wide basis\n\u5b58\u5728UserDefaults\u91cc\n\u670d\u4ece@SceneStorage\u7684\u6570\u636e\u624d\u80fd\u88ab\u5b58\u50a8\ninvalidate view\n\nDocumentGroup\nDocumentGroup is the document-oriented Scene-building Scene.@main\nstruct MyDemoApp: App {\n    @StateObject var paletteStore = PaletteStore(named: &quot;Default&quot;)\n    var body: some Scene {\n        WindowGroup {\n            MyDemoView()\n            .environmentObject(paletteStore)\n        }\n    }\n}\n\n// V.S.\n\nstruct MyDemoApp: App {\n    var body: some Scene {\n        DocumentGroup(newDocument: {myDocument()}) { config in\n            MyDemoView(document: config.document)\n        }\n    }\n}\n\n\n\u4e0d\u518d\u7528@StateObject\u4f20\u9012ViewModel\uff0c\u6bcf\u65b0\u5efa\u4e00\u4e2aDocument\u90fd\u4f1a\u6709\u4e00\u4e2a\u72ec\u7acb\u7684ViewModel\n\u5fc5\u987b\u8981\u670d\u4eceReferenceFileDocument(\u8fd9\u6837\u80fd\u5b58\u5230\u6587\u4ef6\u7cfb\u7edf\u4ee5\u53ca\u4ece\u6587\u4ef6\u7cfb\u7edf\u8bfb\u53d6\u4e86)\nconfig\u53c2\u6570\u5305\u542b\u4e86\u8fd9\u4e2aViewModel\uff08\u5c31\u662fdocument)\uff0c\u4ee5\u53cadocument\u7684url\n\u5f88\u597d\u7406\u89e3\uff0c\u6bcf\u4e00\u4e2adocument\u80af\u5b9a\u6709\u81ea\u5df1\u7684\u6570\u636e\uff08\u60f3\u8c61\u4e00\u4e2a\u201c\u6700\u8fd1\u6253\u5f00\u201d\u7684\u529f\u80fd\uff0c\u6bcf\u4e00\u4e2a\u6587\u6863\u90fd\u662f\u72ec\u7acb\u7684\uff09\n\n\nnewDocument\u91cc\u81ea\u884c\u63d0\u4f9b\u4e00\u4e2a\u65b0\u5efadocument\u7684\u65b9\u6cd5\n\u5c01\u88c5\u4e86\u5173\u8054\u7684\uff08\u9009\u62e9document\u7684\uff09UI\u548c\u884c\u4e3a\nyou MUST implement Undo in your application\n\n\u5982\u679c\u4e0d\u53bb\u5b9e\u73b0Undo\uff0c\u4e5f\u53ef\u4ee5\u76f4\u63a5\u628amodel\u5b58\u5230document\u6587\u4ef6\u91cc\uff1a\n\u4f60\u7684ViewModel\u8981\u80fdinit itself from a Binding&lt;Type&gt;\n\u5982config.$document\n\n\nViewModel\u7531\u4e00\u4e2aObservedObject\u53d8\u6210\u4e00\u4e2aStateObject\n\u8fd9\u6b21\u5fc5\u987b\u670d\u4eceFileDocument\n\n\n\nstruct MyDemoApp: App {\n    var body: some Scene {\n        DocumentGroup(newDocument: {myDocument()}) { config in\n            // MyDemoView(document: config.document) // \u4e4b\u524d\u7684\n            MyDemoView(document: viewModel(model: config.$document))\n        }\n    }\n}\n\n\u628anewDocument: {myDocument()}\u6539\u4e3aviewer: myDocument.self\uff0c\u5c31\u6210\u4e86\u4e00\u4e2a\u53ea\u8bfb\u7684model\uff0c\uff08\u4f60\u751a\u81f3\u4e0d\u9700\u8981\u4f20\u5165\u5b9e\u4f8b\uff09\uff0c\u5982\u679c\u4f60\u8981\u5f00\u53d1\u7684\u662f\u4e00\u4e2a\u67e5\u770b\u522b\u4eba\u6587\u6863\u7684\u5e94\u7528\uff0c\u8fd9\u4e2a\u7279\u6027\u5c31\u6bd4\u8f83\u6709\u7528\u4e86\u3002FileDocument protocol\nThis protocol gets/puts the contents of a document from/to a file. \u5373\u63d0\u4f9b\u4f60\u7684document\u8bfb\u5230\u6587\u4ef6\u7cfb\u7edf\u7684\u80fd\u529b\u3002// create from a file\ninit(configuration: ReadConfiguration) throws {\n    if let data = configuration.file.regularFileContents {\n        // init yourself from data\n    } else {\n        throw CocoaError(.fileReadCorruptFile)\n    }\n}\n\n// write\nfunc fileWrapper(configuration: WriteConfiguration) throws -&gt; FileWrapper {\n    FileWrapper(regularFileWithContents: /*my data*/)\n}\n\nReferenceFileDocument\n\n\u51e0\u4e4e\u548cFileDocument\u4e00\u81f4\n\u7ee7\u627f\u81eaObservableObject -&gt; ViewModel only\n\u552f\u4e00\u7684\u533a\u522b\u662f\u901a\u8fc7\u540e\u53f0\u7ebf\u7a0b\u7684\u4e00\u4e2asnapshot\u6765\u5199\u5165\n\n// \u5148snapshot\nfunc snapshot(contentType: UTType) throws -&gt; Snapshot {\n    return // my data or something\n}\n// then write\nfunc fileWrapper(snapshot: Snapshot, configuration: WriteConfiguration) throws -&gt; FileWrapper {\n    FileWrapper(regularFileWithContents: /* snapshpt converted to a Data */)\n}\n\n\u6d41\u7a0b\u5927\u6982\u662f\uff0c\u4f60\u7684model\u6709\u53d8\u5316\u4e4b\u540e\uff0c\u4f1a\u5148\u627esnapshot\u65b9\u6cd5\u521b\u5efa\u4e00\u4efd\u955c\u50cf\uff0c\u7136\u540e\u518d\u8981\u6c42\u4f60\u7ed9\u51fa\u4e00\u4e2afileWrapper\u6765\u5199\u6587\u4ef6\u3002\u81ea\u5b9a\u4e49\u6587\u4ef6\u7c7b\u578b\n\u58f0\u660e\u80fd\u6253\u5f00\u4ec0\u4e48\u7c7b\u578b\u7684\u6587\u4ef6\uff0c\u901a\u8fc7\uff1aUTType(Uniform Type Identifier)\u53ef\u4ee5\u7406\u89e3\u4e3a\u600e\u4e48\u5b9a\u4e49\u5e76\u6ce8\u518c\uff08\u5173\u8054\uff09\u81ea\u5df1\u7684\u6269\u5c55\u540d\uff0c\u5c31\u50cfphotoshop\u5173\u8054.psd\u4e00\u6837\u3002\n\u58f0\u660e(Info tab)\uff0c\u8bbe\u7f6eExported/Imported Type Identifier\uff0c\u6240\u4ee5\u8868\u9762\u4e0a\u7684\u6269\u5c55\u540d\uff0c\u5185\u91cc\u8fd8\u5bf9\u5e94\u4e86\u4e00\u4e2a\u552f\u4e00\u7684\u6807\u8bc6\u7b26\uff0c\u4e00\u822c\u7528\u53cd\u57df\u540d\u7684\u683c\u5f0f\n\n\n\u58f0\u660e\u62e5\u6709\u6743\uff0c\u7528\u7684\u5c31\u662f\u4e0a\u4e00\u6b65\u6807\u8bc6\u7b26\uff0c\u800c\u4e0d\u662f\u6269\u5c55\u540d\n\n\n\u544a\u77e5\u7cfb\u7edf\u80fd\u5728Files app\u91cc\u6253\u5f00\u8fd9\u79cd\u6587\u6863\ninfo.plist &gt; Supports Document Browser &gt; YES\n\n\n\u4ee3\u7801\u91cc\u6dfb\u52a0\u679a\u4e3e\uff1a\n\nextension UTType {\n    static let emojiart = UTType(exportedAs: &quot;edu.bla.bla.emojimart&quot;)\n}\n\nstatic let readableContentTypes = [UTType.emojiart]\n\nUndo\n\nuse ReferenceFileDocument must implement Undo\n\u8fd9\u4e5f\u662fSwiftUI\u80fd\u81ea\u52a8\u4fdd\u5b58\u7684\u65f6\u95f4\u8282\u70b9\nby UndoManager -&gt; @Environment(\\.undoManager) var undoManager\nand by register an Undo for it: func registerUndo(withTarget: self, howToUndo: (target) -&gt; Void)\n\nfunc undoablePerform(operation: String, with undoManager: UndoManager?, doit: () -&gt; Void){\n    let oldModel = model\n    doit()\n    undoManager?.registerUndo(withTarget: self) { myself in\n        myself.model = model\n    }\n    undoManager?.setActionName(operation) // \u7ed9\u64cd\u4f5c\u4e00\u4e2a\u540d\u5b57\uff0c\u5982&quot;undo paste&quot;\uff0c \u975e\u5fc5\u9700\n}\n\n\u7528`undoablyPerform(with:){} \u5305\u4f4f\u7684\u4efb\u4f55\u6539\u53d8model\u7684\u64cd\u4f5c\u5c31\u90fd\u652f\u6301\u4e86undoReview\n\u56de\u987e\u4e00\u4e0b\uff0c\u6211\u4eec\u628a\u5e94\u7528\u6539\u9020\u4e3aDocument Architechture\u7684\u6b65\u9aa4\uff1a\n\u5e94\u7528\u5165\u53e3\uff0c\u5c06WindowGroup\u6539\u4e3a\u4e86DocumentGroup\uff0c\u5e76\u4fee\u6539\u4e86\u76f8\u5e94\u7684\u4f20\u9012document\u7684\u65b9\u5f0f\n\u5b9e\u73b0document(\u5373view model) comform to ReferenceFileDocument\n\u5b9e\u73b0snapshot, write to file (FileWrapper), and read from file\n\n\n\u81ea\u5b9a\u4e49\u4e00\u4e2a\u6587\u4ef6\u7c7b\u522b\uff08\u6269\u5c55\u540d\uff0c\u6807\u8bc6\u7b26\uff0c\u58f0\u660e\u62e5\u6709\u8005\u7b49\uff09\n\u6b64\u65f6\u542f\u52a8\u5e94\u7528\uff0c\u5165\u53e3UI\u5df2\u7ecf\u662f\u6587\u6863\u9009\u62e9\u754c\u9762\u4e86\uff0c\u6240\u4ee5\u6211\u8bf4\u5b83\u5c01\u88c5\u4e86UI\u548c\u884c\u4e3a\n\u4f46\u6b64\u65f6\u4e0d\u5177\u5907\u4fdd\u5b58\u7684\u529f\u80fd\uff0c\u9700\u8981\u8fdb\u4e00\u6b65\u5b9e\u73b0Undo'\n\n\n\u901a\u8fc7undoManager\u628a\u6539\u52a8model\u7684\u884c\u4e3a\u90fd\u5305\u8fdb\u53bb\u5b9e\u73b0undo/redo\n\u6b64\u65f6document\u5df2\u80fd\u81ea\u52a8\u4fdd\u5b58\n\n\n\u589e\u52a0toolbar, \u5b9e\u73b0\u624b\u52a8undo/redo\n\u987a\u4fbf\u6ce8\u518c\u6587\u6863\u7c7b\u578b\uff0c\u4ee5\u4fbf\u5728Files\u5e94\u7528\u5185\u80fd\u7528\u672capp\u6253\u5f00\nInfo.plist &gt; Supports Document Browser &gt; YES\n\n\n\n", "categories": [{"name": "posts", "slug": "posts", "permalink": "/category/posts/"}], "tags": [{"name": "cs193p", "slug": "cs193p", "permalink": "/tag/cs193p/"}, {"name": "document", "slug": "document", "permalink": "/tag/document/"}]}, {"title": "cs193p_2021\u7b14\u8bb0[6]_Persistence", "date": "2021-10-24T05:00:00-00.00", "path": "/archives/cs193p_2021%E7%AC%94%E8%AE%B0%5B6%5D_Persistence/", "text": "Persistence\n\u6301\u4e45\u5316\u6570\u636e\u7684\u65b9\u5f0f\u6709\nFile system\uff08FileManager\uff09\nSqlite/CoreData\niCloud: \u6839\u636e\u4e0a\u9762\u4e24\u79cd\u683c\u5f0f\u5b58\u50a8\nCloutKit: a database in the cloud (network)\nUserDefaults\nCodable/JSON\nUIDocument (UIKit feature)(\u4e0eFiles App\u96c6\u6210)\n3rd-party\n\nUserDefaults\n\n\u53ea\u80fd\u5b58\u50a8Property List\nProperty List\u652f\u6301String, Int, Bool, floating point, Date, Data, Array or Dictionary\n\u4efb\u4f55\u5176\u5b83\u7c7b\u578b\u9700\u8981\u8f6c\u6210Property List\nCodable converts structs into Data objects (and Data is a Property List).\n\n\n\nlet defaults = UserDefaults.standard\ndefaults.set(object, forKey: \u201cSomeKey\u201d) // object must be a Property List\ndefaults.setDouble(37.5, forKey: \u201cMyDouble\u201d)\n\n// retrive\n\nlet i: Int = defaults.integer(forKey: \u201cMyInteger\u201d)\nlet b: Data = defaults.data(forKey: \u201cMyData\u201d)\nlet u: URL = defaults.url(forKey: \u201cMyURL\u201d)\nlet strings: [String] = defaults.stringArray(forKey: \u201cMyString\u201d) \n// etc.\n// Retrieving Arrays of anything but String is more complicated ...\nlet a = defaults.array(forKey: \u201cMyArray\u201d) // will return Array&lt;Any&gt;\n// \u6700\u597d\u7528Codable\u7684data(forKey:)\u66ff\u4ee3\n\nCore Data\nSwiftUI\u8fdb\u884c\u7684\u96c6\u6210:\n\u521b\u5efa\u7684\u5bf9\u8c61\u662fObservableObjects\n\u4e00\u4e2aproperty wrapper @FetchRequest\n\u7ba1\u7406\u5bf9\u8c61(context)\u662fNSManagedObjectContext\ncontext\u901a\u8fc7@Environment\u4f20\u5165\n\ndemo:@Environnment(\\.managedObjectContext) var context\nlet flight = Flight(context: context)\nflight.aircraft = \u201cB737\u201d // etc.\n\nlet ksjc = Airport(context: context)\nksjc.icao = \u201cKSJC\u201d // etc.\n\nflight.origin = ksjc // this would add flight to ksjc.flightsFrom too try? context.save()\n\nlet request = NSFetchRequest&lt;Flight&gt;(entityName: \u201cFlight\u201d) request.predicate =\nNSPredicate(format: \u201carrival &lt; %@ and origin = %@\u201c, Date(), ksjc) \nrequest.sortDescriptors = [NSSortDescriptor(key: \u201cident\u201d, ascending: true)] \n\nlet flights = try? context.fetch(request) // past KSJC flights sorted by ident\n// flights is nil if fetch failed, [] if no such flights, otherwise [Flight]\n\n\u4ee5\u4e0a\u662fcore data\u90e8\u5206\uff0c\u8fd8\u662f\u6d53\u6d53\u7684OC\u7684\u75d5\u8ff9\uff0c\u770b\u770bSwift UI\u7684\u7248\u672c\u3002\u9996\u5148\uff0c\u4e0a\u8ff0\u7684Flights, Airports\u90fd\u662fViewModel\u3002\u5b83\u81ea\u7136\u62e5\u6709\u5b83\u7684Property Wrapper:@FetchRequest(entity:sortDescriptors:predicate:) var flights: FetchedResults&lt;Flight&gt;\n@FetchRequest(fetchRequest:) var airports: FetchedResults&lt;Airport&gt;\n\n// flights and airports will continuously update as the database changes. \nForEach(flights) { flight in\n    // UI for a flight built using flight \n}\n\n// bi-binding\n_flights = FetchRequest(...)\n\nCloud Kit\n\u4e0a\u4e2ademo\u5427let db = CKContainer.default.public/shared/privateCloudDatabase \n// Record\u7406\u89e3\u4e3aTable\nlet tweet = CKRecord(\u201cTweet\u201d)\n// \u7d22\u5f15\u7406\u89e3\u4e3aField\ntweet[\u201ctext\u201d] = \u201c140 characters of pure joy\u201d\nlet tweeter = CKRecord(\u201cTwitterUser\u201d)\ntweet[\u201ctweeter\u201d] = CKReference(record: tweeter, action: .deleteSelf)\ndb.save(tweet) { (savedRecord: CKRecord?, error: NSError?) -&gt; Void in\n    if error == nil {\n    // hooray!\n    } else if error?.errorCode == CKErrorCode. NotAuthenticated.rawValue {\n        // tell user he or she has to be logged in to iCloud for this to work!\n    } else {\n        // report other errors (there are 29 different CKErrorCodes!) \n    }\n}\n\n// Query\n// \u7c7b\u4f3ccore data, \u6784\u9020predict, request(\u5c31\u662fquery)\u5373\u53ef\n\nlet predicate = NSPredicate(format: \u201ctext contains %@\u201c, searchString)\nlet query = CKQuery(recordType: \u201cTweet\u201d, predicate: predicate)\ndb.perform(query) { (records: [CKRecord]?, error: NSError?) in\n    if error == nil {\n        // records will be an array of matching CKRecords\n    } else if error?.errorCode == CKErrorCode.NotAuthenticated.rawValue {\n        // tell user he or she has to be logged in to iCloud for this to work!\n    } else {\n        // report other errors (there are 29 different CKErrorCodes!) \n    }\n}\n\nOne of the coolest features of Cloud Kit is its ability to send push notifications on changes. All you do is register an NSPredicate and whenever the database changes to match it,File System\nSandbox\u5305\u542b\uff1a\nApplication directory \u2014 Your executable, .jpgs, etc.; not writeable.\nDocuments directory \u2014 Permanent storage created by and always visible to the user.\nApplication Support directory \u2014 Permanent storage not seen directly by the user.\nCaches directory \u2014 Store temporary files here (this is not backed up).\nOther directories (see documentation)\n...\n\nlet url: URL = FileManager.default.url(\n    for directory: FileManager.SearchPathDirectory.documentDirectory, // for example \n    in domainMask: .userDomainMask // always .userDomainMask on iOS\n    appropriateFor: nil, // only meaningful for \u201creplace\u201d file operations\n    create: true // whether to create the system directory if it doesn\u2019t already exist\n )\n\nExamples of SearchPathDirectory values :.documentDirectory, \n.applicationSupportDirectory, \n.cachesDirectory, \netc.\n\n\u518d\u5217\u4e9b\u5e38\u7528api\uff1a// URL\n\nfunc appendingPathComponent(String) -&gt; URL\nfunc appendingPathExtension(String) -&gt; URL // e.g. \u201cjpg\u201d\nvar isFileURL: Bool // is this a file URL (whether file exists or not) or something else? \nfunc resourceValues(for keys: [URLResourceKey]) throws -&gt; [URLResourceKey:Any]? \n// Example keys: .creationDateKey, .isDirectoryKey, .fileSizeKey\n\n// Data\n\n// retrive binary data\n// option almost always []\ninit(contentsOf: URL, options: Data.ReadingOptions) throws \n// write\n// The options can be things like .atomic (write to tmp file, then swap) or .withoutOverwriting.\nfunc write(to url: URL, options: Data.WritingOptions) throws -&gt; Bool\n\n// FileManager\nfileExists(atPath: String) -&gt; Bool\n// Can also create and enumerate directories; move, copy, delete files; etc.\n\nCodable\n\n\u4fdd\u7559\u4e00\u4e2a\u5bf9\u8c61\u6240\u6709\u7684var\uff08\u53d8\u91cf\uff09\u7684\u673a\u5236\n\u5982\u679c\u4e00\u4e2aStruct\u5b83\u7684\u6210\u5458\u53d8\u662fCodable\u7684\uff0c\u90a3\u4e48Swift\u4f1a\u5e2e\u4f60\u628a\u8fd9\u4e2aStruct\u5b9e\u73b0Codable\uff0c\u6bd4\u5982\u6ca1\u6709associated data\u7684Enum\u3002\n\u5e2e\u4f60\u5b9e\u73b0\u4e0d\u4ee3\u8868\u4e0d\u8981\u663e\u5f0f\u58f0\u660e\n\u57fa\u7840\u7c7b\u578b\u57fa\u672c\u4e0a\u90fd\u5b9e\u73b0\u4e86Codable\n\nlet object: MyType = ...\n// encode\nlet jsonData: Data? = try? JSONEncoder().encode(object)\n\n// write file\ntry jsonData.write(to: url)\n\n// deocde as string\nlet jsonString = String(data: jsonData!, encoding: .utf8)\n\n// decode as object\nlet myObject: MyType = try? JSONDecoder().decode(MyType.self, from: jsonData!)\n// \u4ece\u5b57\u7b26\u4e32\u5230\u5bf9\u8c61\u6ca1\u6709\u4e00\u6b65\u5230\u4f4d\u7684\u529e\u6cd5\uff0c\u53ea\u80fd\u5148string-&gt;Data\nlet data = jsstring.data(using: .utf8) // \u518d\u628adata\u4f20\u5230\u4e0a\u672f\u65b9\u6cd5\u91cc\n\nencode, decode\u662f\u4f1athrow\u7684\uff0c\u6ce8\u610ftry_catch\u76f8\u5e94\u7684Error\uff0c\u6bd4\u5982.keyNotFound, .dataCorrupted...CodingKeys\njson\u4e0e\u5bf9\u8c61\u76f8\u4e92\u8fdb\u884c\u8f6c\u5316\u6709\u4e00\u4e2a\u901a\u7528\u7684\u9700\u6c42\uff0c\u5c31\u662f\u952e\u7684\u6620\u5c04\uff0c\u8fd9\u66f4\u5e38\u7528\u5728\u5916\u90e8API\u4e0e\u672c\u5730\u7c7b\u7684\u6620\u5c04\u4e2d\uff0c\u6bd4\u5982userId\uff0c\u522b\u4eba\u53ebguestId\uff0c\u7b49\u7b49\uff0cSwift\u4e2d\uff0c\u7528\u4e00\u4e2a\u53ebCodingKeys\u7684\u679a\u4e3e\u6765\u5b9e\u73b0\u8fd9\u4e2a\u6620\u5c04\uff1aprivate enum CodingKeys: String, CodingKey {\n    case uid = &quot;user_id&quot;\n    case someDate = &quot;some_date&quot;\n    case pname = &quot;panme&quot; // \u8868\u793a\u5728JSON\u4e2d\u4e5f\u53eb\u8fd9\u4e2a\u540d\u5b57 \n    case sku // \u5982\u679c\u540d\u5b57\u4e00\u6837\u7684\u8bdd\uff0c\u53ef\u4ee5\u8fd9\u4e48\u7b80\u5199 \n    // \u4f46\u662f\u4e0d\u5199\u7684\u8bdd\uff0c\u5e8f\u5217\u5316\u7684\u65f6\u5019\u5c31\u4e0d\u4f1a\u5e8f\u5217\u8fd9\u4e2a\u5b57\u6bb5\u4e86\n    // \u89e3\u7801\u65f6\u4f1a\u6709 KeyNotFound \u7c7b\u7684\u9519\u8bef\n}\n\n// \u7ed3\u5408\u8d77\u6765\uff0c\u7528\u5728init\u4e2d\ninit(from decoder: Decoder) throws {\n    // container\u662f\u5207\u5165\u70b9\uff0c\u8981\u5f04\u6e05\u695a\n    // \u5982\u679c\u6ca1\u6709\u624b\u5199\u952e\u7684\u6620\u5c04\u8868\uff0c\u90a3\u4e48keydBy\u5c31\u662f\u81ea\u5df1\n    let container = try decoder.container(keyedBy: CodingKeys.self)\n    someDate = try container.decode(Date.self, forKey: .someDate) \n    // \u4ecejson\u4e2d\u52a0\u8f7d.someDate\u5bf9\u5e94\u7684\u952e\u7684\u503c\uff0c\u5c1d\u8bd5\u89e3\u7801\u6210Date\n    // other vars (\u6bcf\u79cdcase\u5fc5\u987b\u5168\u90e8\u90fd\u6709)\n}\n\nEnum\n\u5e8f\u5217\u5316\u679a\u4e3e\u6709\u70b9\u590d\u6742\uff1a\n\u7b80\u5355\u679a\u4e3e\u5e94\u8be5\u600e\u4e48\u5e8f\u5217\u5316\uff1f \u5176\u5b9e\u662f\u5e8f\u5217\u5316\u6210case\u5bf9\u5e94\u7684\u540d\u5b57\u548c\u8868\u793a\u7a7aJSON\u7684{}\u7ec4\u6210\u7684\u952e\u503c\u5bf9\uff0c\u6bd4\u5982{&quot;math&quot;:{}}\n\u6709\u5173\u8054\u6570\u636e\u7684\u679a\u4e3e\u5462\uff1f \u90a3\u5c31\u5f97\u81ea\u5df1\u63d0\u4f9bencoder:\ncase url: try container.encode(url, forKey: .url) \u5373\u5bf9\u76f8\u5e94\u7684\u679a\u4e3e\u503c\u8fdb\u884c\u76f8\u5e94\u7684encode\n\n\n\u5e76\u4e14\u81ea\u884cdecode\uff0c\u4f46\u662f\u4e0estruct\uff08\u4e3a\u6bcf\u4e00\u4e2akey\u586b\u503c\uff09\u4e0d\u540c\uff0c\u56e0\u4e3a\u679a\u4e3e\u53d8\u91cf\u53ea\u662f\u4e00\u4e2a\u503c\uff0c\u6240\u4ee5\u662f\u4f9d\u6b21\u5c1d\u8bd5\uff0c\u89e3\u7801\u6210\u529f\u5c31\u8ba4\u5b9a\u662f\u90a3\u4e00\u4e2a\u679a\u4e3e\u503c\n\nif let url = try? container.decode(URL.self, forKey: .url) {\n    self = .url(url)\n} else if ... // \u522b\u7684\u5c1d\u8bd5\n\n// \u6b64\u53e5\u7684\u4f5c\u7528\u662f\u6839\u636e.url\u5bf9\u5e94\u7684\u952e\u540d\uff0c\u53d6\u51fa\u503c\uff0c\u53cd\u5c04\u6210URL\u5bf9\u8c61\uff0c\u5982\u679c\u6210\u529f\uff0c\u90a3\u4e48\u8fd9\u4e2a\u679a\u4e3e\u503c\u662f.url\u65e0\u7591\n// \u800c\u4e14\u5173\u8054\u6570\u636e\u5c31\u662f\u53cd\u5c04\u7684\u7ed3\u679c\n// \u5982\u679c\u5931\u8d25\uff0c\u7ee7\u7eed\u6362\u4e00\u4e2a\u952e\u540d\uff0c\u5c06\u5bf9\u5e94\u7684\u503c\u8f6c\u6210\u5bf9\u5e94\u7684\u7c7b\u578b\uff0c\u4f9d\u6b21\u7c7b\u63a8\n\n\n\u90a3\u4e48\u5982\u4f55\u624b\u52a8decode\u4e00\u4e2a\u539f\u59cb\u7684\u679a\u4e3e\u5462\uff1f\n\u6211\u4eec\u77e5\u9053\u4e0a\u8ff0\u5b9e\u8df5\u662f\u4e3a\u4e86\u53cd\u5c04\u51fa\u5173\u8054\u6570\u636e\uff0c\u5e76\u4e14\u6839\u636e\u80fd\u591f\u6210\u529f\u53cd\u5c04\u5173\u8054\u6570\u636e\u6765\u5224\u65ad\u679a\u4e3e\u7c7b\u578b\n\u539f\u59cb\u679a\u4e3e\u9700\u8981encode\u54ea\u4e2a\u503c\u5462\uff1f-&gt; \u76ee\u524d\u6211\u53ea\u80fd\u505a\u4e00\u4e2a\u7a7astruct\u6765\u5b9e\u73b0\u5e8f\u5217\u5316\u6210{}\u7684\u76ee\u7684 -&gt; \u4e3a\u4e86\u8ddf\u9ed8\u8ba4\u5f62\u6001\u4fdd\u6301\u4e00\u81f4\n\u4e8b\u5b9e\u4e0a\u4f60\u662f\u53ef\u4ee5encode\u6210\u4efb\u610f\u503c\u7684\uff08\u6bd4\u5982100\uff0c&quot;hello&quot;\uff0c\u56e0\u4e3a\u6211\u4eec\u53ea\u5173\u5fc3\u6709\u6ca1\u6709\u8fd9\u4e2a\u952e\uff0c\u6709\u7684\u8bdd\uff0c\u5c31\u662f\u8fd9\u4e2a\u679a\u4e3e\u7c7b\u578b\uff0c\u53ea\u662f{}\u62e5\u6709\u53ef\u8bfb\u6027\n\u4f60encode\u6210\u4ec0\u4e48\u503c\uff0cdecode\u7684\u65f6\u5019\u5bf9\u5bf9\u5e94\u7684\u952e\u5c1d\u8bd5\u53bb\u53cd\u5c04\u56de\u8fd9\u4e2a\u503c\u5c31\u884c\u4e86\n\n\n\n\n\n\u6700\u540e\uff0c\u601d\u8003\u9898\uff1a\n\u4e0a\u9762\u8bf4\u4e86\uff0c\u539f\u751f\u679a\u4e3e\u5e8f\u5217\u5316\u6210\uff1a {&quot;math&quot;:{}}\uff0c\u4e5f\u8bf4\u4e86\uff0c\u5982\u679c\uff0c\u952e\u5bf9\u5e94\u7684\u503c\u5bf9\u539f\u751f\u679a\u4e3e\u5e8f\u5217\u5316\u662f\u6ca1\u610f\u4e49\u7684\uff0c\u53ef\u4ee5\u662f\u4efb\u4f55\u503c\uff0c\u90a3\u4e48\u5bf9\u4e8e{&quot;math&quot;:100}\uff0c\u80fd\u5426\u987a\u5e8f\u5e8f\u5217\u5316\u56de\u5176\u679a\u4e3e\u5f62\u6001.math\u5462\uff1f\n\u7b54\u6848\uff1a\n\u503c\u4e3a100\u62a5\u9519\u4e86\n\u4e8e\u662f\u6211\u6539\u4e3a&quot;&quot;\u6216&quot;other\u201c\u7b49\u5b57\u7b26\u4e32\u6216\u7a7a\u5b57\u7b26\u4e32\uff0c\u89e3\u7801\u7684\u7ed3\u679c\u662fnil\n\n\u4e5f\u5c31\u662f\u8bf4\uff0c\u9ed8\u8ba4\u7684decode\u53ea\u8ba4{}\u800c\u524d\u9762\u6211\u4eec\u77e5\u9053\u4e86\uff0c\u5982\u679c\u662f\u81ea\u5df1\u624b\u5199\uff0c\u5b83\u53ef\u4ee5\u662f\u4efb\u4f55\u503c\uff0c\u5b83\u7684\u610f\u4e49\u4ec5\u4ec5\u662f\u4e2a\u6807\u8bc6\uff0c\u5e76\u4e0d\u4f1a\u53d6\u5b83\u7684\u503c\u3002\u9a8c\u8bc1\uff1aenum NormEnum: Codable {\n    case history, math, geometry\n\n    private enum keyMap: String, CodingKey{\n        case history  = &quot;HIST&quot;\n        case math     = &quot;MATH&quot;\n        case geometry = &quot;GEOM&quot;\n    }\n\n    func encode(to encoder: Encoder) throws {\n        var container = try encoder.container(keyedBy: keyMap.self)\n        switch self{\n        case .history: try container.encode(&quot;&quot;, forKey: .history)\n        case .math: try container.encode(&quot;&quot;, forKey: .math)\n        case .geometry: try container.encode(&quot;&quot;, forKey: .geometry)\n        }\n    }\n\n    init(from decoder: Decoder) throws {\n        let container = try decoder.container(keyedBy: keyMap.self)\n        if let s = try? container.decode(String.self, forKey: .history) {\n            self = .history\n        } else if let s = try? container.decode(String.self, forKey: .math) {\n            self = .math\n        } else {\n            self = .geometry\n        }\n    }\n}\n\n\u4e0a\u9762\u7684\u4ee3\u7801\u4e2d\uff0c\u6211\u5c06\u4e09\u4e2a\u5b57\u6bb5\u5168\u90e8\u7528\u7a7a\u5b57\u7b26\u4e32\u7f16\u7801\uff0c\u5e76\u4e14\u7ed9\u4e86\u4e09\u4e2a\u4e0d\u540c\u7684\u952e\u540d\uff0c\u73b0\u5728\uff0c\u6211\u771f\u5165\u4efb\u610f\u503c\uff0c\u6bd4\u5982&quot;HAHA&quot;\uff0c\u89e3\u7801\u770b\u770b\uff1alet js2 = &quot;{\\&quot;MATH\\&quot;:\\&quot;HAHA\\&quot;}&quot;\nlet js2d = js2.data(using: .utf8)\nlet myobj2 = try? JSONDecoder().decode(NormEnum.self, from: js2d!)\n\n\u7ed3\u679c\u6210\u529f\u8ba4\u51famyobj2\u662f\u4e00\u4e2a.math\u3002\u539f\u7406\u5f53\u7136\u662f\u6211\u7684\u4ee3\u7801\u91cc\u5728\u5c1d\u8bd5\u8f6c\u6210\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u800c\u6ca1\u6709\u9650\u5b9a\u662f\u4ec0\u4e48\u5b57\u7b26\u4e32\u3002", "categories": [{"name": "posts", "slug": "posts", "permalink": "/category/posts/"}], "tags": [{"name": "cs193p", "slug": "cs193p", "permalink": "/tag/cs193p/"}, {"name": "userdefaults", "slug": "userdefaults", "permalink": "/tag/userdefaults/"}, {"name": "core data", "slug": "core data", "permalink": "/tag/core%20data/"}, {"name": "codable", "slug": "codable", "permalink": "/tag/codable/"}, {"name": "cloudkit", "slug": "cloudkit", "permalink": "/tag/cloudkit/"}]}, {"title": "cs193p_2021\u7b14\u8bb0[5]_Property-Wrapper", "date": "2021-10-24T04:00:00-00.00", "path": "/archives/cs193p_2021%E7%AC%94%E8%AE%B0%5B5%5D_Property-Wrapper/", "text": "Property Wrappers\nC#\u4e2d\u7684Attributes\uff0cpython\u4e2d\u7684Decorators, Java\u7684Annonations\uff0c\u7c7b\u4f3c\u7684\u8bbe\u8ba1\u6a21\u5f0f\u3002\nA property wrapper is actually a struct.\n\u8fd9\u4e2a\u7279\u6b8a\u7684struct\u5c01\u88c5\u4e86\u4e00\u4e9b\u6a21\u677f\u884c\u4e3a\u5e94\u7528\u5230\u5b83\u4eecwrap\u7684vars\u4e0a\uff1a\nMaking a var live in the heap (@State)\nMaking a var publish its changes (@Published)\nCausing a View to redraw when a published change is detected (@ObservedObject)\n\n\n\n\u5373\u80fd\u591f\u5206\u914d\u5230\u5806\u4e0a\uff0c\u80fd\u591f\u901a\u77e5\u72b6\u6001\u53d8\u5316\u548c\u80fd\u91cd\u7ed8\u7b49\uff0c\u53ef\u4ee5\u7406\u89e3\u4e3a\u8bed\u6cd5\u7cd6\u3002@Published var emojiArt: EmojiArt = EmojiArt()\n\n// ... is really just this struct ...\nstruct Published {\n    var wrappedValue: EmojiArt\n    var projectedValue: Publisher&lt;EmojiArt, Never&gt;  // i.e. $\n}\n\n// `projected value`\u7684\u7c7b\u578b\u53d6\u51b3\u4e8ewrapper\u81ea\u5df1\uff0c\u6bd4\u5982\u672c\u4f8b\u5c31\u662f\u4e00\u4e2a`Publisher`\n\n// \u6211\u7406\u89e3\u4e3a\u4e00\u4e2a\u5c5e\u6027\u548c\u4e00\u4e2a\u5e7f\u64ad\u5668\n\n// ... and Swift (approximately) makes these vars available to you ...\nvar _emojiArt: Published = Published(wrappedValue: EmojiArt()) \nvar emojiArt: EmojiArt {\n     get { _emojiArt.wrappedValue }\n     set { _emojiArt.wrappedValue = newValue }\n }\n\n\u628aget,set\u76f4\u63a5\u901a\u8fc7$emojiArt(\u5373projectedValue)\u6765\u4f7f\u7528\u5f53\u4e00\u4e2aPublished\u503c\u53d1\u751f\u53d8\u5316\uff1a\nIt publishes the change through its projectedValue ($emojiArt) which is a Publisher.\nIt also invokes objectWillChange.send() in its enclosing ObservableObject.\n\n\u4e0b\u9762\u5217\u7684\u51e0\u79cdProperty wrapper\uff0c\u6211\u4eec\u4e3b\u8981\u5173\u5fc3\u6700\u6838\u5fc3\u7684\u4e24\u4e2a\u6982\u5ff5\uff0cwrappedValue\u548cprojectedValue\u662f\u4ec0\u4e48\u5c31\u884c\u4e86:@State\n\u8fd9\u662f\u7b2c\u4e8c\u6b21\u63d0\u5230\u4e86\uff0c\u5728Property Observers\u4e00\u8282\u91cc\u9884\u544a\u8fc7\uff0c\u57fa\u672c\u4e0a\u70b9@\u7684\uff0c\u5927\u90fd\u4e3aProperty Wrapper\u7684\u5185\u5bb9\u3002\nThe wrappedValue is: anything (but almost certainly a value type).\nWhat it does:\nstores the wrappedValue in the heap;\nwhen it changes, invalidates the View.\n\n\nProjected value (i.e. $): a Binding (to that value in the heap).\n\n@State private var foo: Int\ninit() {\n    _foo = .init(initiaValue: 5)\n}\n\n\u6ce8\u610f_\u548c$\u7684\u533a\u522b\u3002@StateObject &amp; @ObservedObject\n\nThe wrappedValue is: anything that implements the ObservableObject protocol (ViewModels).\nWhat it does:\ninvalidates the View when wrappedValue does objectWillChange.send().\n\n\nProjected value (i.e. $): a Binding (to the vars of the wrappedValue (a ViewModel)).\n\n\n@StateObject V.S. @State\n\n\u4e00\u4e2a\u7c7b\u578b\u662fObservableObjects\uff0c \u4e00\u4e2a\u662fvalue type\n\n\n@StateObject V.S. @ObservedObject\n\n@StateObject is a &quot;source of truth&quot;\uff0c\u4e5f\u5c31\u662f\u8bf4\u53ef\u4ee5\u76f4\u63a5\u8d4b\u503c\uff1a@StateObject var foo = SomeObservableObject()\n\u80fd\u7528\u5728View, APP, Scene\u7b49\u573a\u666f\n\u5982\u679c\u7528\u5728View\u91cc\uff0c\u751f\u547d\u5468\u671f\u4e0eView\u4e00\u81f4\n\n@main\nstruct EmojiArtApp: App {\n    // stateObject, source of truth\n    // defined in the app\n    @StateObject var paletteStore = PaletteStore(named: &quot;default&quot;)\n\n    var body: some Scene {\n    DocumentGroup(newDocument: { EmojiArtDocument() }) { config in\n        EmojiArtDocumentView(document: config.document)\n            .environmentObject(paletteStore)  // passed by environment\n        }\n    }\n}\n\n@Binding\n\nThe wrappedValue is: a value that is bound to something else.\nWhat it does:\ngets/sets the value of the wrappedValue from some other source.\nwhen the bound-to value changes, it invalidates the View.\nForm\u8868\u5355\u5178\u578b\u5e94\u7528\u573a\u666f\uff0c\u6709UI\u53d8\u5316\u7684\u63a7\u4ef6\n\u624b\u52bf\u8fc7\u7a0b\u4e2d\u7684State, \u6216drag\u65f6\u662f\u5426targted\n\u6a21\u6001\u7a97\u53e3\u7684\u72b6\u6001\n\u5206\u5272view\u540e\u5171\u4eab\u72b6\u6001\n\u603b\u4e4b\uff0c\u6570\u636e\u6e90\u53ea\u6709\u4e00\u4e2a(source of the truth)\u7684\u573a\u666f\uff0c\u5c31\u4e0d\u9700\u8981\u7528\u4e24\u4e2a@State\u800c\u7528@Binding,\n\n\nProjected value (i.e. $): a Binding (self; i.e. the Binding itself)\n\nstruct MyView: View {\n      @State var myString = \u201cHello\u201d               // 1\n      var body: View {\n          OtherView(sharedText: $myString)        // 2\n      }\n  }\n  struct OtherView: View {\n      @Binding var sharedText: string             // 3\n      var body: View {\n          Text(sharedText)                        // 4\n          TextField(&quot;shared&quot;, text: $sharedText)  // 5 _myString.projectValue.projectValue\n      }\n}\n\n\n_myString\u662f\u5b9e\u9645\u53d8\u91cf\uff0c\u5305\u542b\u4e00\u4e2awrappedValue\uff0c\u4e00\u4e2aprojectedValue\nmyString\u5c31\u662f_myString.wrappedValue\n$myString\u662f_myString.projectedValue\uff0c\n\u662f\u4e00\u4e2aBinding&lt;String&gt;\uff0c\u4f20\u503c\u548c\u63a5\u503c\u7528\u7684\u5c31\u662f\u5b83\n\u6240\u4ee5\u4f20$myString\u7684\u5730\u65b9\u4e5f\u53ef\u4ee5\u7528_myString.projectedValue\u4ee3\u66ff\uff0c\u5b66\u4e60\u9636\u6bb5\u7684\u8bdd\n\n\n\u8981\u628aprojectedValue\u5c42\u5c42\u4f20\u9012\u4e0b\u53bb\uff0c\u5e76\u4e0d\u662f\u7528\u540c\u4e00\u4e2aprojectedValue\uff0c\u800c\u662f\u8bbe\u8ba1\u6210\u4e86Binding&lt;T&gt;\n\u53c2\u8003\u4e0a\u9762\u4ee3\u7801\u5757\u7684\u7b2c5\u6761\n\n\n\n\u5176\u5b83\n\u4e5f\u53ef\u4ee5\u7ed1\u5b9a\u4e00\u4e2a\u5e38\u91cf\uff1aOtherView(sharedText: .constant(\u201cHowdy\u201d))\ncomputed binding: Binding(get:, set:).\n\n\u6bd4\u5982\u4f60\u7684view\u662f\u4e00\u4e2a\u5c0f\u7ec4\u4ef6\uff0c\u91cc\u9762\u6709\u4e00\u4e2aBinding var user: User\uff0c\u90a3\u4e48\u5728preview\u91cc\u9762\u600e\u4e48\u4f20\u5165\u8fd9\u4e2aUser\u5462\uff1f\u7528\u5e38\u91cf\uff1astatic var preview: some View {\n    myView(user: .constant(User(...)))\n}\n\n@EnvironmenetObject\n\nThe wrappedValue is: ObservableObject obtained via .environmentObject() sent to the View.\nWhat it does: invalidates the View when wrappedValue does objectWillChange.send().\nProjected value (i.e. $): a Binding (to the vars of the wrappedValue (a ViewModel)).\n\n\u4e0e@ObservedObject\u7528\u6cd5\u7a0d\u6709\u70b9\u4e0d\u540c\uff0c\u6709\u5355\u72ec\u7684\u8d4b\u503c\u63a5\u53e3\uff1alet myView = MyView().environmentObject(theViewModel)\n// \u800c@ObservedObject\u662f\u4e00\u4e2a\u666e\u901a\u7684\u5c5e\u6027\nlet myView = MyView(viewModel: theViewModel)\n\n// Inside the View ...\n@EnvironmentObject var viewModel: ViewModelClass \n// ... vs ...\n@ObservedObject var viewModel: ViewModelClass\n\n\nvisible to all views in your body (except modallay presented ones)\n\u591a\u7528\u4e8e\u591a\u4e2aview\u5171\u4eabViewModel\u7684\u65f6\u5019\n\n@Environment\n\n\u4e0e@EnvironmentObject\u5b8c\u5168\u4e0d\u662f\u540c\u4e00\u4e2a\u4e1c\u897f\n\u8fd9\u662fProperty Wrapper\u4e0d\u53ea\u6709\u4e24\u4e2a\u53d8\u91cf\uff08warped..., projected...\uff09\u7684\u7684\u4e00\u4e2a\u5e94\u7528\n\u901a\u8fc7keyPath\u6765\u4f7f\u7528\uff1a@Environment(\\.colorScheme) var colorScheme\nwrappedValue\u7684\u7c7b\u578b\u662f\u901a\u8fc7keyPath\u58f0\u660e\u65f6\u8bbe\u7f6e\u7684\n\nview.environment(\\.colorScheme, .dark)\n\nso:\nThe wrappedValue is: the value of some var in EnvironmentValues.\nWhat it does: gets/sets a value of some var in EnvironmentValues.\nProjected value (i.e. $): none.\n\n// someView pop \u4e00\u4e2a modal \u7684 myView,\u4f20\u9012 environment\nsomeView.sheet(isPresented: myCondition){\n    myView(...init...)\n    .enviroment(\\.colorScheme, colorScheme) \n}\n\n\u9664\u4e86\u6df1\u8272\u6a21\u5f0f\uff0c\u8fd8\u6709\u4e00\u4e2a\u5178\u578b\u7684\u5e94\u7528\u573a\u666f\u5c31\u662f\u7f16\u8f91\u6a21\u5f0f\\.editMode\uff0c\u6bd4\u5982\u70b9\u4e86\u7f16\u8f91\u6309\u94ae\u540e\u3002\nEditButton\u662f\u4e00\u4e2a\u5c01\u88c5\u4e86UI\u548c\u884c\u4e3a\u7684\u63a7\u4ef6\uff0c\u5b83\u53ea\u505a\u4e00\u4ef6\u4e8b\uff0c\u5c31\u662f\u66f4\u6539\\.editmode\u8fd9\u4e2a\u73af\u5883\u53d8\u91cf(\u7684isEditing)\n@Publisher\nIt is an object that emits values and possibly a failure object if it fails while doing so.Publisher&lt;Output, Failure&gt;\n\n\nFailure\u9700\u8981\u5b9e\u73b0Error\uff0c\u5982\u679c\u6ca1\u6709\uff0c\u53ef\u4ee5\u4f20Never\n\n\u8ba2\u9605\n\u4e00\u79cd\u7b80\u5355\u7528\u6cd5\uff0csink:cancellable = myPublisher.sink(\n    receiveCompletion:{resultin...}, //result is a Completion&lt;Failure&gt; enum\n        receiveValue: { thingThePublisherPublishes in . . . }\n  )\n\n\u8fd4\u56de\u4e00\u4e2aCancellable\uff0c\u53ef\u4ee5\u968f\u65f6.cancel()\uff0c\u53ea\u8981\u4f60\u6301\u6709\u8fd9\u4e2acancellable\uff0c\u5c31\u80fd\u968f\u65f6\u7528\u8fd9\u4e2asinkView\u6709\u81ea\u5df1\u7684\u8ba2\u9605\u65b9\u5f0f\uff1a.onReceive(publisher) { thingThePublisherPublishes in\n    // do whatever you want with thingThePublisherPublishes \n}\n\n\n.onReceive will automatically invalidate your View (causing a redraw).\n\u65e2\u7136\u53c2\u6570\u662fpublisher\uff0c\u6240\u4ee5\u662f\u4e00\u4e2abinding\u7684\u53d8\u91cf\uff0c\u5373\u5e26$\u4f7f\u7528\uff1a\n\n.onReceive($aBindData) { bind_data in \n    // my code\n}\n\npublisher\u6765\u6e90\uff1a\n$ in front of vars marked @Published\n\u8fd8\u8bb0\u5f97$\u5c31\u662f\u53d6\u7684projectedValue\u5417\uff1f\n\u4e00\u822c\u7684projectedValue\u662f\u4e00\u4e2aBinding\uff0cPublished\u7684\u662f\u662f\u4e2aPublisher\n\n\nURLSession\u2019s dataTaskPublisher (publishes the Data obtained from a URL)\nTimer\u2019s publish(every:) (periodically publishes the current date and time as a Date)\nNotificationCenter\u2019s publisher(for:) (publishes notifications when system events happen)\n\n\n\u5982\u679c\u4f60\u6709\u4e00\u4e2aObservedObject(Document)\uff0c\u5b83\u91cc\u9762\u6709\u4e00\u4e2a@Publisher(background)\uff0c\u90a3\u4e48\u6ce8\u610f\u4ee5\u4e0b\u4e24\u8005\u7684\u533a\u522b\uff1a\n\ndocument.$background: \u662f\u4e00\u4e2apublisher\n$document.background: \u662f\u4e00\u4e2abinding\n\n\n.onReceive\u53ea\u80fd\u63a5\u6536Publisher\u7684\u63a8\u9001\uff0c\u800c\u4e8b\u5b9e\u4e0a\uff0conChange\uff08\u4e00\u822c\u7528\u4e8e\u63a5\u6536ObservedObject\u6216State)\u540c\u6837\u4e5f\u80fd\u63a5\u6536Publisher\u3002\n", "categories": [{"name": "posts", "slug": "posts", "permalink": "/category/posts/"}], "tags": [{"name": "cs193p", "slug": "cs193p", "permalink": "/tag/cs193p/"}, {"name": "property wrapper", "slug": "property wrapper", "permalink": "/tag/property%20wrapper/"}, {"name": "binding", "slug": "binding", "permalink": "/tag/binding/"}, {"name": "publisher", "slug": "publisher", "permalink": "/tag/publisher/"}]}, {"title": "cs193p_2021\u7b14\u8bb0[4]_Color_Image_Gesture", "date": "2021-10-24T03:00:00-00.00", "path": "/archives/cs193p_2021%E7%AC%94%E8%AE%B0%5B4%5D_Color_Image_Gesture/", "text": "Color, UIColor &amp; CGColor\nColor:\nIs a color-specifier, e.g., .foregroundColor(Color.green).\nCan also act like a ShapeStyle, e.g., .fill(Color.blue).\nCan also act like a View, e.g., Color.white can appear wherever a View can appear.\uff08\u53ef\u4ee5\u5f53\u4f5cview\uff09\n\nUIColor:\nIs used to manipulate colors.\uff08\u4e3b\u6253\u64cd\u63a7\uff09\nAlso has many more built-in colors than Color, including \u201csystem-related\u201d colors.(\u989c\u8272\u66f4\u591a)\nCan be interrogated and can convert between color spaces.\n\nFor example, you can get the RGBA values from a UIColor.\nOnce you have desired UIColor, employ Color(uiColor:) to use it in one of the roles above.CGColor:\nThe fundamental color representation in the Core Graphics drawing system\ncolor.cgColor\n\nImage V.S. UIImage\nImage:\nPrimarily serves as a View.(\u4e3b\u8981\u529f\u80fd\u662fView)\nIs not a type for vars that hold an image (i.e. a jpeg or gif or some such). That\u2019s UIImage.\nAccess images in your Assets.xcassets (in Xcode) by name using Image(_ name: String).\nAlso, many, many system images available via Image(systemName:).\nYou can control the size of system images with .imageScale() View modifier.\nSystem images also are affected by the .font modifier.\nSystem images are also very useful as masks (for gradients, for example).\n\nUIImage\nIs the type for actually creating/manipulating images and storing in vars.\nVery powerful representation of an image.\nMultiple file formats, transformation primitives, animated images, etc.\nOnce you have the UIImage you want, use Image(uiImage:) to display it.\n\nMultithreading\n\n\u591a\u7ebf\u7a0b\u5176\u5b9e\u5e76\u4e0d\u662f\u540c\u65f6\u8fd0\u884c\uff0c\u800c\u662f\u524d\u540e\u53f0\u975e\u5e38\u5feb\u901f\u5730\u5207\u6362\nQueue\u53ea\u662f\u6709\u987a\u5e8f\u6267\u884c\u7684\u4ee3\u7801\uff0c\u5c01\u88c5\u4e86threading\u7684\u5e94\u7528\n\u8fd9\u4e9b\u201c\u4ee3\u7801\u201d\u7528closure\u6765\u4f20\u9012\nmain queue\u552f\u4e00\u80fd\u64cd\u4f5cUI\u7684\u7ebf\u7a0b\n\u4e3b\u7ebf\u7a0b\u662f\u5355\u7ebf\u7a0b\uff0c\u6240\u4ee5\u4e0d\u80fd\u6267\u884c\u5f02\u6b65\u4ee3\u7801\n\n\nbackground queues\u6267\u884c\u4efb\u610f\uff1along-lived, non-UI tasks\n\u53ef\u4ee5\u5e76\u884c\u8fd0\u884c(running in parallel) -&gt; even with main UI queue\n\u53ef\u4ee5\u624b\u52a8\u8bbe\u7f6e\u4f18\u5148\u7ea7\uff0c\u670d\u52a1\u8d28\u91cf(QoS)\u7b49\n\u4f18\u5148\u7ea7\u6c38\u8fdc\u4e0d\u53ef\u80fd\u8d85\u8fc7main queue\n\n\nbase API: GCD (Grand Central Dispatch)\ngetting access to a queue\nplopping a block of code on a queue\n\n\n\nA: Creating a QueueThere are numerous ways to create a queue, but we\u2019re only going to look at two ...DispatchQueue.main // the queue where all UI code must be posted\nDispatchQueue.global(qos: QoS) // a non-UI queue with a certain quality of service qos (quality of service) is one of the following ...\n    .userInteractive    // do this fast, the UI depends on it!\n    .userInitiated  // the user just asked to do this, so do it now\n    .utility    // this needs to happen, but the user didn\u2019t just ask for it\n    .background // maintenance tasks (cleanups, etc.)\n\nB: Plopping a Closure onto a QueueThere are two basic ways to add a closure to a queue ...let queue = DispatchQueue.main //or\nlet queue = DispatchQueue.global(qos:) \nqueue.async { /* code to execute on queue */ }\nqueue.sync { /* code to execute on queue */ }\n\n\u4e3b\u7ebf\u7a0b\u91cc\u6c38\u8fdc\u4e0d\u8981.sync, \u90a3\u6837\u4f1a\u963b\u585eUIDispatchQueue(global: .userInitiated).async {\n    // \u8017\u65f6\u4ee3\u7801\n    // \u4e0d\u963b\u585eUI\uff0c\u4e5f\u4e0d\u80fd\u66f4\u65b0UI\n    // \u5230\u4e3b\u7ebf\u7a0b\u53bb\u66f4\u65b0UI\n    DispatchQueue.main.async {\n        // UI code can go here! we\u2019re on the main queue! \n    }\n}\n\nGestures\n\u624b\u52bf\u662fiOS\u91cc\u7684\u4e00\u7b49\u516c\u6c11// recognize\nmyView.gesture(theGesture) // theGesture must implement the Gesture protocol\n\n// create\nvar theGesture: some Gesture {\n    return TapGesture(count: 2)  // double tap\n}\n\n// discrete gestures\nvar theGesture: some Gesture {\n      return TapGesture(count: 2)\n        .onEnded { /* do something */ }\n}\n\n// \u5176\u5b9e\u5c31\u662f\uff1a\nfunc theGesture() -&gt; some Gesture {\n    tapGesture(count: 2)\n}\n\n// \u201cconvenience versions\u201d\nmyView.onTapGesture(count: Int) { /* do something */ } \nmyView.onLongPressGesture(...) { /* do something */ }\n\n// non-discrete gestures\n\nvar theGesture: some Gesture {\n      DragGesture(...)\n.onEnded { value in /* do something */ }\n\nnon-discrete\u624b\u52bf\u91cc\u4f20\u9012\u7684value\u662f\u4e00\u4e2astate:\nFor a DragGesture, it\u2019s a struct with things like the start and end location of the fingers.\nFor a MagnificationGesture it\u2019s the scale of the magnification (how far the fingers spread out).\nFor a RotationGesture it\u2019s the Angle of the rotation (like the fingers were turning a dial).\n\u8fd8\u53ef\u4ee5\u8ddf\u8e2a\u4e00\u4e2astate: @GestureState var myGestureState: MyGestureStateType = &lt;starting value&gt;\n\n\u552f\u4e00\u53ef\u4ee5\u66f4\u65b0\u8fd9\u4e2amyGestureState\u7684\u673a\u4f1a\uff1avar theGesture: some Gesture {\n     DragGesture(...)\n        .updating($myGestureState) { value, myGestureState, transaction in \n            myGestureState = /* usually something related to value */\n        }\n        .onEnded { value in /* do something */ }\n }\n\n\u6ce8\u610f$\u7684\u7528\u6cd5\u5982\u679c\u4e0d\u9700\u8981\u53bb\u8ba1\u7b97\u4e00\u4e2agestureState\u4f20\u51fa\u53bb\u7684\u8bdd\uff0c\u6709\u4e2aupdating\u7528\u7b80\u7248\uff1a.onChanged { value in\n/* do something with value (which is the state of the fingers) */\n}\n\n\u4e8b\u5b9e\u4e0a\uff0c\u76ee\u524d\u6765\u770bgestureState\u53ea\u505a\u4e86\u4e24\u4ef6\u4e8b\uff1a\n\u628a\u5b9e\u65f6\u624b\u52bf\u5bf9\u5e94\u7684\u503c\u4fdd\u5b58\u8d77\u6765\n\u5728\u624b\u52bf\u7ed3\u675f\u65f6\u590d\u539f\uff08\u5bf9\u4e8e\u7f29\u653e\uff0c\u53d8\u4e3a1\uff0c\u5bf9\u4e8e\u79fb\u52a8\uff0c\u53d8\u4e3a0\uff09\n\u540c\u65f6\uff0c\u5b83\u662f\u53ea\u8bfb\u7684\uff0c\u53ea\u5728.updating\u65b9\u6cd5\u91cc\u6709\u66f4\u65b0\u7684\u673a\u4f1a\n\n\u6240\u4ee5\uff0c\u5982\u679c\u4f60\u7684UI\u548c\u52a8\u753b\u903b\u8f91\uff0c\u7528\u5230\u4e86\u624b\u52bf\u7ed3\u675f\u65f6\u7684\u503c\uff08\u5373\u9700\u8981\u5b83\u590d\u539f\uff09\uff0c\u90a3\u4e48\u4f60\u4e5f\u53ef\u4ee5\u76f4\u63a5\u5728.onEnded\u65b9\u6cd5\u91cc\u624b\u52a8\u628a\u5b83\u8bbe\u56de\u53bb\uff0c\u7b49\u540c\u4e8e\u4f60\u4e5f\u5b9e\u73b0\u4e86\u4f60\u7684gestureState\uff0c\u5e76\u4e14\u6ca1\u6709\u5b83\u90a3\u4e9b\u9650\u5236\u3002Drag and Drop\nItem Provider\n\nThe heart of drag nad drop is the NSItemProvider class.\nIt facilitates the transfer of data between processes (via drag and drop, for example)\nIt facilitates the transfer of a number of data types in iOS, for example:\nNSAttributedString and NSString\nNSURL\nUIImage and UIColor\n\n\npre-Swift\uff0c\u6240\u4ee5\u9700\u8981bridging\uff0c\u6bd4\u5982\uff1aString as NSString\n\n\u7ed3\u5408\u51e0\u4e2a\u8981\u70b9\uff0c\u4e00\u53e5\u8bdd\u5c31\u80fd\u8ba9\u4f60\u7684\u5143\u7d20\u80fd\u88ab\u62d6\u52a8(drag)\uff1aText(emoji).onDrag{ NSItemProvider(object: emoji as NSString)}\n\n\u800c\u63a5\u6536(drop)\u5219\u8981\u590d\u6742\u5f88\u591a\uff1aotherView.onDrop(of: [.plainText], isTarget: nil) {providers, location in return false }\n\n\n\u53c2\u63a5\u6536\u7684\u7c7b\u578b\u7531of\u53c2\u6570\u6307\u5b9a\uff0c\u8fd9\u91cc\u5047\u5b9a\u662f\u6587\u672c\n\u65b9\u6cd5\u91cc\u6700\u7ec8\u8981\u8fd4\u56de\u4e00\u4e2abool\u503c\uff0c\u8868\u793a\u6210\u529f\u63a5\u6536\u4e0e\u5426\uff0c\u6211\u8fd4\u4e86\u4e2afalse\uff0c\u610f\u601d\u662f\u4f60\u80fd\u8ba9\u7269\u4f53\u62d6\u52a8\uff0c\u4f46\u662f\u4e00\u677e\u5f00\u624b\u6307\u5c31\u590d\u539f\u4e86\n\n\u4eceitemprovider\u91cc\u52a0\u8f7d\u5bf9\u8c61\u6709\u6a21\u677f\u4ee3\u7801\uff1aextension Array where Element == NSItemProvider {\n  func loadObjects&lt;T&gt;(ofType theType: T.Type, firstOnly: Bool = false, using load: @escaping (T) -&gt; Void) -&gt; Bool where T: NSItemProviderReading {\n    if let provider = first(where: { $0.canLoadObject(ofClass: theType)}) {\n      provider.loadObject(ofClass: theType) { object, error in\n        if let value = object as? T {\n          DispatchQueue.main.async {\n              load(value)\n          }\n        }\n      }\n      return true\n    }\n    return false\n  }\n\n// and\n// where T: _ObjectiveCBridgeable, T._ObjectiveCType: NSItemProviderReading\n\n\n\u63d0\u4f9b\u4e86\u4e24\u6bb5\u4ee3\u7801\uff0c\u53ef\u4ee5\u770b\u5230\u5176\u5b9e\u5c31\u662f\u5bf9\u8981\u52a0\u8f7d\u7684\u5bf9\u8c61\u7684\u7ea6\u675f\u4e0d\u540c\uff0c\u63d0\u4f9b\u4e86\u5bf9OC\u7684\u517c\u5bb9\n\u6a21\u677f\u4ee3\u7801\u6f14\u793a\u4e86\n\n\u7a33\u5065\u5730\u4ece\u62d6\u62fd\u5bf9\u8c61\u52a0\u8f7d\u5185\u5bb9\uff08canload -&gt; load)\n3. \u771f\u6b63\u7684\u4e1a\u52a1\u903b\u8f91\u5176\u5b9e\u5c31\u662f\u4e3a\u62d6\u8fdb\u6765\u7684\u8fd9\u4e2aview\u9009\u62e9\u4e00\u4e2a\u4f4d\u7f6e\u5b58\u653e\uff08\u6216\u8bfb\u53d6\u5b83\u643a\u5e26\u7684\u6570\u636e\uff09\n4. T.Type\u4f20\u7684\u662f\u7c7b\u522b\u7684.self\uff0c\u6bd4\u5982String.self", "categories": [{"name": "posts", "slug": "posts", "permalink": "/category/posts/"}], "tags": [{"name": "uicolor", "slug": "uicolor", "permalink": "/tag/uicolor/"}, {"name": "uiimage", "slug": "uiimage", "permalink": "/tag/uiimage/"}, {"name": "gesture", "slug": "gesture", "permalink": "/tag/gesture/"}, {"name": "item provider", "slug": "item provider", "permalink": "/tag/item%20provider/"}]}, {"title": "cs193p_2021\u7b14\u8bb0[3]_Animation_Transition", "date": "2021-10-24T02:00:00-00.00", "path": "/archives/cs193p_2021%E7%AC%94%E8%AE%B0%5B3%5D_Animation_Transition/", "text": "Animation\n\nOne way to do animation is by animating a Shape.\nThe other way to do animation is to animate Views via their ViewModifiers.\nOnly changes can be animated\nViewModifier arguments (not all, i.e. fonts)\nShapes\nthe existance of a View in the UI\n\u6bd4\u5982if-else\u548cForEach\n\n\n\n\nYou can only animate changes to Views in containers that are already on screen (CTAAOS).\n\n\u4e24\u4e2agolden rule:\n\u8981\u6709view modifier\u7684\u5c5e\u6027\u53d8\u5316\n\u8981\u5728\u5c4f\u5e55\u4e0a\n\n\u624d\u4f1a\u89e6\u53d1\u52a8\u753b\uff08\u5176\u5b9e\u5c31\u662f\u4e0a\u9762\u7684\u6700\u540e\u4e24\u6761\uff09\n\u8bfe\u7a0b\u7684\u52a8\u753b\u4f8b\u5b50\u91cc\uff0c\u7528\u4e86if-else\u6765\u751f\u6210view\uff0c\u8fd9\u6837\u5bfc\u81f4\u4e86\u65b0\u751f\u6210\u7684view\u4e0d\u4f1a\u89e6\u53d1\u52a8\u753b\n\u6bd4\u5982\u70b9\u5f00\u4e24\u5f20\u724c\uff0c\u65b0\u70b9\u5f00\u7684\u90a3\u5f20\u724c\u7531\u4e8e\u4e4b\u524d\u724c\u7684\u5185\u5bb9\u5e76\u6ca1\u6709\u51fa\u73b0\u5728\u5c4f\u5e55\u4e0a\uff0c\u5bfc\u81f4\u52a8\u753b\u6ca1\u6709\u89e6\u53d1\n\u6240\u4ee5\u628aview\u7684\u7ed3\u6784\u7531if-else\u7684\u751f\u6210\u548c\u9500\u6bc1\u673a\u5236\uff0c\u53d8\u6210\u4e86\u900f\u660e\u5ea6\u5207\u6362\u673a\u5236\n\u5373\u6b63\u9762\u548c\u53cd\u9762\u90fd\u5728\u5c4f\u5e55\u4e0a\uff0c\u53ea\u4e0d\u8fc7\u900f\u660e\u5ea6\u76f8\u53cd\uff0c\u4ee5\u5728\u89c6\u89c9\u4e0a\u8981\u4e48\u662f\u6b63\u9762\u8981\u4e48\u662f\u53cd\u9762\n\u672c\u4ee5\u4e3a\u900f\u660e\u5ea6\u4e3a0\u5c31\u4f1a\u9500\u6bc1\u89c6\u56fe(UIKit\uff1f)\uff0c\u770b\u6837\u5b50\u5e76\u4e0d\u662f\u8fd9\u6837\u7684\uff0c\u5927\u80c6\u7528opacity\u5c31\u597d\u4e86\n\n\n\n\u9690\u5f0f\u8c03\u7528\nText(\u201c\ud83d\udc7b \u201d)\n    .opacity(scary ? 1 : 0)                             // \u666e\u901amodifier, \u5373\u5982\u679c\u6ca1\u6709\u52a8\u753b\uff0c\u4e5f\u9700\u8981\u7684\u72b6\u6001\uff08\u5373\u4ee3\u7801\u4e5f\u4e0d\u4f1a\u5220\uff09\n    .rotationEffect(Angle.degrees(upsideDown ? 180 : 0))    // \u52a8\u753bmodifier\uff0c\u5373\u5b9a\u5236\u7684\u52a8\u753b\u6548\u679c\uff0c\u4e0d\u9700\u8981\u52a8\u753b\u7684\u65f6\u5019\uff0c\u5c31\u4e0d\u9700\u8981\u8fd9\u4e00\u884c\n    .animation(Animation.easeInOut)                         // \u89e6\u53d1\n\n\n\u4e0a\u8ff0\u6240\u6709ViewModifier\u90fd\u4f1a\u88ab\u52a8\u753b\nscary, upsideDown\u7b49\u503c\u6539\u53d8\u65f6\u4e5f\u4f1a\u89e6\u53d1\u52a8\u753b\n\n\n\u9690\u5f0f\u8c03\u7528\u4f1a\u5192\u6ce1\uff08\u6240\u4ee5\u4e0d\u8981\u5bf9\u4e00\u4e2acontainer view\u505a.animation\uff0c\u8fd8\u6709\u5b9a\u4f4d\u7684\u95ee\u9898)\nanimation\u7684\u53c2\u6570\u5c31\u662f\u4e00\u4e2astruct\uff1a duration, delay, repeat, curve...\n\n\u5bf9\u4e8e\u4e0d\u80fd\u52a8\u753b\u7684modifier\uff0c\u770b\u4e00\u4e0b\u8fd9\u4e2a\u5b9e\u4f8b\uff08\u4e0a\u4e3a\u4fee\u6539\u524d\uff0c\u4e0b\u4e3a\u4fee\u6539\u540e\uff09\n\n\u628afont\u8bbe\u4e3a\u5e38\u91cf\uff0c\u628a\u7f29\u653e\u53d8\u6210\u4e00\u4e2ageometric effect\n\u540c\u65f6\u4e5f\u8bf4\u660e.animation()\u4e0d\u6b62\u4f5c\u7528\u4e8e\u5b83\u524d\u9762\u7684\n\n\u663e\u5f0f\u8c03\u7528\nwithAnimation(.linear(duration: 2)) {\n    // do something that will cause ViewModifier/Shape arguments to \nchange somewhere }\n\n\nIt will appear in closures like .onTapGesture.\n\u663e\u5f0f\u52a8\u753b\u4e0d\u4f1a\u8986\u76d6\u6389\u9690\u5f0f\u52a8\u753b\n\u5f88\u5c11\u6709\u5904\u7406\u7528\u6237\u624b\u52bf\u800c\u4e0d\u5305.withAnimation\u7684\n\nTransition\n\n\u8f6c\u573a\uff0c\u4e3b\u8981\u7528\u4e8eview\u7684\u51fa\u73b0\u548c\u6d88\u5931\n\u4e00\u5bf9ViewModifier\uff0c\u4e00\u4e2abefore, \u4e00\u4e2aafter\n\nZStack {\n    if isFaceUp {\n        RoundedRectangle() // default .transition is .opacity \n        Text(\u201c\ud83d\udc7b \u201d).transition(.scale)\n    } else {\n        RoundedRectangle(cornerRadius: 10).transition(.identity)\n    }\n}\n\nUnlike .animation(), .transition() does not get redistributed to a container\u2019s content Views. So putting .transition() on the ZStack above only works if the entire ZStack came/went.(Group and ForEach do distribute .transition() to their content Views, however.)\u610f\u601d\u662f.transition\u5e76\u4e0d\u4f1a\u5411\u4e0b\u4f20\u9012\uff0c\u5982\u679c\u5bf9ZStack\u505a\u8f6c\u573a\uff0c\u53ea\u4f1a\u628a\u6574\u4e2a\u5bb9\u5668\u8fdb\u884c\u8f6c\u573a\u800c\u4e0d\u662f\u91cc\u9762\u7684view\uff08\u89c1\u5b9e\u4f8b\u4e8c\uff09\n\u8f6c\u573a\u53ea\u662f\u4e00\u4e2a\u58f0\u660e\uff0c\u5e76\u6ca1\u6709\u89e6\u53d1\u52a8\u753b\uff08\u5176\u5b9e\u5c31\u662f\u8bbe\u7f6e\u4e86ViewModifier\uff09\n\u6240\u4ee5\u8f6c\u573a\u6ca1\u6709\u9690\u5f0f\u8c03\u7528\n\u53ea\u5bf9CTAAOS\u6709\u7528\n\n.onAppear\u6216.onDisappear\u65f6\uff0ccontainer\u5fc5\u7136\u662f\u5728\u5c4f\u5e55\u4e0a\u7684\uff0c\u6240\u4ee5\u8fd9\u662f\u4e00\u4e2a\u5199.transition\u7684\u597d\u5730\u65b9\uff08\u8bb0\u5f97\u8981withAnimation)built-in transitions:\nAnyTransition.opacity: \u901a\u8fc7.opacity modifier\u6765\u5b9e\u73b0\u6de1\u5165\u6de1\u51fa\nAnyTransition.scale: \u901a\u8fc7.frame modifier\u6765\u5b9e\u73b0\u7f29\u653e\nAnyTransition.offset(CGSize): \u901a\u8fc7.offset\u6765\u5b9e\u73b0\u79fb\u52a8\nAnyTransition.modifier(active:identity:): \u4f60\u63d0\u4f9b\u4e24\u4e2aViewModifier\n\n\u901a\u8fc7AnyTransition.animation(Animation`)\u6765\u5b9a\u5236\u52a8\u753b\u7ec6\u8282\uff1a.transition(.opacity.animation(.linear(duration: 20)))\n\n\u52a8\u753b\u673a\u5236\n\u5176\u5b9e\u5c31\u662f\u7ed9\u51fa\u4e00\u7cfb\u5217\u7684\u6570\u636e\u70b9\uff0c\u7cfb\u7edf\u4f1a\u6839\u636e\u8fd9\u4e9b\u6570\u636e\u70b9\u628a\u65f6\u95f4\u5207\u5206\uff0c\u4f60\u7ed9\u7684\u6570\u636e\u70b9\u8d8a\u591a\uff0c\u5207\u7684\u65f6\u95f4\u5757\u4e5f\u5c31\u8d8a\u591a\uff0c\u800c\u4e14\u7cfb\u7edf\u4f1a\u6839\u636e\u4f60\u7684\u7ebf\u6027\u51fd\u6570\u6765\u51b3\u5b9a\u662f\u5e73\u5747\u8fd8\u662f\u600e\u6837\u53bb\u5207\u5206\u8fd9\u4e9b\u65f6\u95f4\u5757\uff1a\nthe animation system divides the animation duration up into little pieces.\nThe animation system then tells the Shape/ViewModifier the current piece it should show.\nAnd the Shape/ViewModifier makes sure that its code always reflects that.\n\n\u7cfb\u7edf\u901a\u77e5\u53d8\u91cf\u5f53\u524d\u7684\u503c\uff0cUI\u6839\u636e\u8fd9\u4e2a\u503c\u5b9e\u65f6\u7ed8\u5236\u5f53\u524d\u7684View\uff0c\u4e0d\u65ad\u9500\u6bc1\u91cd\u5efa\uff0c\u5c31\u662f\u52a8\u753b\u7684\u8fc7\u7a0b\u3002\u7cfb\u7edf\u662f\u7528\u4e00\u4e2a\u53d8\u91cf\u6765\u901a\u77e5\u8fd9\u4e2a\u8fdb\u5ea6\u7684\uff1aAnimatable protocol\u7684\u552f\u4e00\u6210\u5458\u53d8\u91cf\uff1aanimatableData:var animatableData: Type\n\n\nType\u53ea\u9700\u8981\u6ee1\u8db3VectorArithmetic\u534f\u8bae\uff0c\u5176\u5b9e\u5c31\u662f\u4e00\u4e2a\u53ef\u4ee5\u88ab\u7ec6\u5206\u7684\u503c\uff0c\u57fa\u672c\u4e0a\u662fFloat, Double, CGFloat\uff0c\u4ee5\u53caAnimatablePair(\u5176\u5b9e\u5c31\u662f\u4e24\u4e2aVectorArithmetic)\n\u60f3\u8981\u652f\u6301\u52a8\u753b\u7684Shape, ViewModifier\uff0c\u53ea\u9700\u8981\u5b9e\u73b0Animatable\u534f\u8bae\u5373\u53ef\uff08\u5373\u63d0\u4f9b\u4e00\u4e2aanimatableData\u5c5e\u6027\uff09\n\nBecause it\u2019s communicating both ways, this animatableData is a read-write var.\nThe setting of this var is the animation system telling the Shape/VM which piece to draw.\nThe getting of this var is the animation system getting the start/end points of an animation.\n\n\u5b9e\u4f8b\u4e00\nview modifier\u91cc\u9762\u6709\u4e00\u4e2a\u53d8\u91cfrotation\uff08ZStack, content, rotation3DEffect)\n\u90a3\u4e48\u5916\u5c42\u5728withAnimation{}\u7684\u65f6\u5019\uff0c\u6211\u4eec\u662f\u671f\u671brotation\u7684\u503c\u80fd\u52a8\u8d77\u6765\u7684\n\u5185\u7f6e\u7684viewmodifier\u5f53\u7136\u4f1a\u81ea\u5df1\u52a8\uff0c\u5982opacity\u7b49\n\n\n\u90a3\u4e48\u6211\u4eec\u9996\u5148\u5c31\u8981\u8ba9Cardify conform to Animatable\uff08\u4f8b\u5b50\u4e2d\u7684AnimatableModifer = Animatable + ViewModifer)\n\u7136\u540e\u6211\u4eec\u5c31\u8981\u5b9e\u73b0animatableData, \u56e0\u4e3a\u7cfb\u7edf\u4e8b\u5b9e\u4e0a\u5c31\u662f\u4e0d\u65ad\u53bb\u66f4\u65b0\u8fd9\u4e2adata\u503c\n\u6559\u6750\u91cc\u628a\u5b83\u8fdb\u884c\u4e86\u5c01\u88c5\uff08\u5f53\u7136\u4f60\u4e5f\u53ef\u4ee5\u76f4\u63a5\u7528\u5b83\uff09\uff0c\u8fd9\u53ea\u662f\u601d\u7ef4\u65b9\u5f0f\u4e0a\u7684\u533a\u522b\nanimatedData\u4f1a\u968f\u65f6\u95f4\u53d8\u5316\uff0c\u81ea\u7136\u4f1a\u4e0d\u65adinvalidate view\uff0c\u7136\u540erebuild view\uff0c\u52a8\u753b\u5c31\u4ea7\u751f\u4e86\u3002\n\n\u5b9e\u4f8b\u4e8c\u8bfe\u7a0b\u91cc\u6709\u8fd9\u4e48\u4e2a\u9700\u6c42\uff1a\u5361\u7247\u7531LazyVGrid\u63d0\u4f9b\u5e03\u5c40\uff0c\u4e14\u5361\u7247\u51fa\u73b0\u548c\u6d88\u5931\u7684\u65f6\u5019\u90fd\u8981\u6709\u52a8\u753b\u3002\u51fa\u73b0\u548c\u6d88\u5931\uff1f\u90a3\u5f53\u7136\u5c31\u662fTransition\u7684\u4e8b\u4e86:Card()\n  .transition(AnyTransition.asymmetric(insertion: .scale, \n                                         removal: .opacity)))\n\n\u8fd0\u884c\u65f6\u53d1\u73b0\u6d88\u5931\u7684\u65f6\u5019\u6709\u52a8\u753b\uff0c\u51fa\u73b0\u7684\u52a8\u753b\u5374\u6ca1\u6709\u3002\u539f\u56e0\u662ftransition\u53ea\u4f1a\u5728\u51fa\u73b0\u548c\u6d88\u5931\u65f6\u89e6\u53d1\uff0c\u800c\u6211\u4eec\u7684\u5361\u7247\u662f\u5305\u5728grid\u5bb9\u5668\u91cc\u7684\uff0c\u6240\u4ee5grid\u51fa\u73b0\u5728\u5c4f\u5e55\u4e0a\u7684\u65f6\u5019\uff0c\u5c31\u5e26\u7740\u5361\u7247\u4e00\u8d77\u51fa\u73b0\u4e86\uff0ctransition\u5e76\u4e0d\u4f1a\u5411\u4e0b\u4f20\u9012\uff08\u524d\u6587\u4e5f\u5df2\u7ecf\u8bf4\u8fc7\u4e86\uff0c\u8fd9\u91cc\u521a\u597d\u5370\u8bc1\uff09\u3002\n\u6240\u4ee5\u89e3\u51b3\u65b9\u6cd5\u5f53\u7136\u53ef\u4ee5\u201c\u5ef6\u8fdf\u201d\u5448\u73b0\u8fd9\u4e9b\u5361\u7247\n\u8bfe\u7a0b\u91cc\u7528\u4e86\u53e6\u4e00\u79cd\u65b9\u6cd5\uff0c\u673a\u5236\u5f53\u7136\u4e5f\u662f\u5ef6\u8fdf\uff0c\u4f46\u4e0d\u662f\u90a3\u4e48\u5730\u76f4\u767d\uff1a\n\n\n\u5c31\u662f\u5229\u7528\u4e86.onAppear\u6765\u963b\u65ad\u5bb9\u5668\u548c\u5361\u7247\u7684\u8fde\u7eed\u751f\u6210\uff0c\u800c\u6539\u7528\u5bb9\u5668\u5448\u73b0\u540e\uff0c\u518d\u9010\u4e2a\u201c\u6dfb\u52a0\u201d\u7684\u65b9\u5f0f\uff0c\u8ba9\u6bcf\u4e00\u5f20\u5361\u7247\u90fd\u6709\u4e00\u4e2a\u5355\u72ec\u51fa\u73b0\u7684\u673a\u4f1a\n\u540c\u65f6\u4e5f\u5fc5\u987b\u5229\u7528@State, \u8ba9\u6bcf\u6dfb\u52a0\u4e00\u5f20\u5361\u7247\u90fd\u4f1ainvalidate view\u4e00\u6b21\n\u4e5f\u80fd\u770b\u51fa\uff0canimate\u80fdanimate\u7684\u5c31\u662f\u5c5e\u6027\u548ctransition\n\n\n\u5f53\u7136\uff0c\u8bfe\u7a0b\u6700\u540e\u6539\u6210\u4e86\u201c\u53d1\u724c\u201d\u7684\u673a\u5236\uff0c\u624b\u52a8\u6dfb\u52a0\u5361\u7247\uff0c\u5f7b\u5e95\u963b\u65ad\u4e86\u5361\u7247\u548c\u5bb9\u5668\u4e00\u8d77\u51fa\u73b0\u7684\u573a\u666f\u3002\n\u8fd9\u5c31\u5e26\u6211\u4eec\u6765\u5230\u4e86\u5b9e\u4f8b\u4e09\uff0c\u540c\u4e00\u4e2aview\u5728\u4e0d\u540c\u5bb9\u5668\u95f4\u7684\u52a8\u753b\uff0c\u600e\u4e48\u8ba1\u7b97\u5404\u81ea\u5c3a\u5ea6\u4e0b\u540c\u4e00\u4e2aview\u7684\u4f4d\u7f6e\uff1amatchedGeometryEffect\u5b9e\u4f8b\u4e09\n\u60f3\u8981\u6709\u724c\u4e00\u5f20\u5f20\u53d1\u51fa\u53bb\u7684\u6548\u679c\uff0c\u81ea\u7136\u4f1a\u60f3\u5230\u6dfb\u52a0\u5ef6\u65f6\n\u5b9e\u73b0\u6210\u4e86\u540c\u65f6\u505a\u52a8\u753b\uff0c\u53ea\u4e0d\u8fc7\u8d8a\u5230\u540e\u9762\u7684\u724c\uff0c\u5ef6\u65f6\u8d8a\u957f\uff08\u52a8\u4f5c\u8d8a\u6162\uff09\uff0c\u800c\u4e0d\u662f\u6211\u4eec\u60f3\u8c61\u7684\u5148\u540e\u89e6\u53d1\n\n\u4e3a\u4e86\u8ba9\u4e0d\u540c\u7684\u724c\u53d1\u51fa\u53bb\u65f6\u6709\u7acb\u4f53\u6548\u679c\uff0c\u8fd8\u4ee5index\u4e3a\u4f9d\u636e\u8bbe\u7f6e\u4e86zIndex\uff0c\u6700\u7ec8\u6548\u679c\uff1a", "categories": [{"name": "posts", "slug": "posts", "permalink": "/category/posts/"}], "tags": [{"name": "cs193p", "slug": "cs193p", "permalink": "/tag/cs193p/"}, {"name": "animation", "slug": "animation", "permalink": "/tag/animation/"}, {"name": "transition", "slug": "transition", "permalink": "/tag/transition/"}]}, {"title": "cs193p_2021_\u7b14\u8bb0[2]", "date": "2021-10-24T01:00:00-00.00", "path": "/archives/cs193p_2021_%E7%AC%94%E8%AE%B0%5B2%5D/", "text": "\u672c\u6587\u6d89\u53ca\u5185\u5bb9\uff1aViewModifier, Property Observers, Layout\nViewModifier\n.aspectRatio(2/3) is likely something like .modifier(AspectModifier(2/3)) AspectModifier can be anything that conforms to the ViewModifier protocol ...\u5b83\u53ea\u6709\u4e00\u4e2abody\u65b9\u6cd5\uff1aprotocol ViewModifier {\n    associatedtype Content // this is a protocol\u2019s version of a\u201cdon\u2019t care\u201d \n    func body(content: Content) -&gt; some View {\n        return some View that represents a modification of content }\n}\n\n\n\u5bf9\u4e00\u4e2aview\u8c03\u7528.modifier\u5c31\u662f\u628a\u8fd9\u4e2aview\u4f20\u6210\u4e86\u4e0a\u8ff0body\u65b9\u6cd5\u7684content\n\u800c\u4ece.modifer\u53d8\u6210.cardify\uff0c\u4e0d\u8fc7\u662f\u7528\u4e86extension\uff1a\n\nextension View {\n    func cardify(isFaceUp: Bool) -&gt; some View {\n        return self.modifier(Cardify(isFaceUp: isFaceUp))\n    }\n}\n\nProperty Observers\n\n\u8bed\u6cd5\u957f\u5f97\u50cfcomputed var, \u4f46\u5b8c\u5168\u4e0d\u662f\u4e00\u56de\u4e8b \uff08get, set\u4e4b\u4e8ewillSet, didSet\uff09\nwillSet, didSet\uff0c\u5bf9\u5e94newValue, oldValue\n\n@State\nyour view is Read Only,\u4e3a\u4ec0\u4e48\uff1f\n\u56e0\u4e3aview\u7684\u751f\u547d\u5468\u671f\u8db3\u591f\u77ed\uff0c\u57fa\u672c\u4e0a\u662f\u4e0d\u65ad\u5730\u751f\u6210\u548c\u9500\u6bc1\uff0c\u6839\u672c\u4e0d\u9700\u8981\u201d\u88ab\u6539\u53d8\u201c\n\n\u6240\u4ee5\u6c38\u8fdc\u7528let\n\u6240\u4ee5\u662fstateles\u7684\n\n\u8fd9\u6837\u7684\u7ed3\u6784\u5f88\u7b80\u5355\uff0c\u4efb\u4f55view\u7684\u53d8\u5316\u5176\u5b9e\u5c31\u662f\u91cd\u7ed8\u3002\u4ecd\u7136\u6709\u4e9b\u65f6\u5019\u9700\u8981\u72b6\u6001\uff1a\n\u7f16\u8f91\u8868\u5355\n\u6a21\u6001\u7a97\u53e3\u6216\u901a\u77e5\u7a97\u53e3\u7b49\u4e34\u65f6\u7a97\u53e3\n\u52a8\u753b\u9700\u8981\u8ffd\u8e2a\u52a8\u753b\u8fdb\u5ea6\n\n\u58f0\u660e\uff1a@State private var somethingTemporary: SomeType // this can be of any type\n\n\nprivate \u8868\u793a\u522b\u4eba\u8bbf\u95ee\u4e0d\u5230\n@State\u7684\u7684\u53d8\u5316\u4f1a\u5728\u5fc5\u8981\u65f6\u5f15\u8d77\u91cd\u7ed8 \uff08\u76f8\u5f53\u4e8e\u4e00\u4e2a@ObservedObject\uff09\nview\u4f1a\u4e0d\u65ad\u9500\u6bc1\u548c\u91cd\u5efa -&gt; \u6307\u9488\u4f1a\u6c38\u8fdc\u6307\u5411\u65b0\u7684\u5185\u5b58\u5730\u5740\n\u800cstate\u662f\u5728\u5806\u4e0a\u5206\u914d\u7684\u7a7a\u95f4\n\u6240\u4ee5\u9500\u6bc1\u548c\u91cd\u5efaview\u5e76\u4e0d\u4f1a\u4e22\u5931state\n\u540e\u6587property wrapper\u8be6\u8ff0\n\nLayout\n\nContainer\u63d0\u4f9b\u7a7a\u95f4\nViews\u786e\u5b9a\u81ea\u8eab\u7684\u5927\u5c0f\nContainer\u63d0\u4f9bView\u7684\u4f4d\u7f6e\nContainer\u786e\u5b9a\u81ea\u8eab\u5927\u5c0f\uff08\u7b49\u540c\u4e8e#2)\n\nHStack and VStack\n\u6a2a/\u7eb5\u5411\u6392\u5217\u5143\u7d20(View)\uff0c\u5e76\u63d0\u4f9b\u201c\u5c3d\u53ef\u80fd\u5c0f\u201d\u7684\u7a7a\u95f4\uff0c\u6839\u636e\u5143\u7d20\u6027\u8d28\uff0c\u6709\u4e09\u79cd\u573a\u666f\uff1a\ninflexble view: Image\uff0cfixed size\nslightly more flexible view: Text\uff0c\u9002\u5e94\u6587\u5b57\u7684\u5408\u9002\u5927\u5c0f\nvery flexible view: RoundedRectangle: \u5360\u6ee1\u7a7a\u95f4 -&gt; \u57fa\u672c\u4e0aShape\u90fd\u4f1a\u6709\u591a\u5c11\u7a7a\u95f4\u5360\u591a\u5c11\n\n\n\u4e00\u65e6\u5143\u7d20\u786e\u5b9a\u4e86size\uff0c\u591a\u4f59\u7684\u7a7a\u95f4\u5c31\u4f1a\u7ed9\u4e0b\u4e00\u4e2a\u5143\u7d20\uff0c\u6700\u540every flexible view\u5e73\u5747\u5206\u914d\u5269\u4e0b\u7684\u7a7a\u95f4\n\u6240\u6709\u5143\u7d20\u5927\u5c0f\u786e\u5b9a\uff0c\u5bb9\u5668\u5927\u5c0f\u4e5f\u5c31\u786e\u5b9a\u4e86\uff0c\u5982\u679c\u6709very flexible\u7684\uff0c\u90a3\u4e48\u5bb9\u6613\u672c\u8eab\u4e5f\u662fvery flexible\u7684\n\nremark\uff1a\nSpacer(minLength: CGFloat) \u7a7a\u683c, draw nothing, \u5360\u5c3d\u53ef\u80fd\u591a\u7684\u7a7a\u95f4\nDivider() \u753b\u6761\u5206\u9694\u7ebf\uff0c\u5360\u5c3d\u53ef\u80fd\u5c0f\u7684\u7a7a\u95f4\n.layoutPriority(100) \u7528\u4f18\u5148\u7ea7\u6765\u8868\u793a\u5206\u914d\u7a7a\u95f4\u7684\u987a\u5e8f\uff0c\u9ed8\u8ba4\u503c\u4e3a0\u3002\u540e\u5206\u914d\u8005\u5982\u679c\u6ca1\u6709\u7a7a\u95f4\u4e86\u4f1a\u7528\u7701\u7565\u53f7\u8868\u793a\nHStack(alignment: .leading)\u7528\u6765\u63a7\u5236\u5143\u7d20\u7684\u5bf9\u9f50\n\n\nList, Form, OutlineGroup \u5176\u5b9e\u5c31\u662f really smart VStacks\uff0c\u5373\u672c\u8d28\u4e0a\u5c31\u662f\u4e00\u4e2a\u7eb5\u5411\u6392\u5217\u7684\u5e03\u5c40\u3002\nLazyHStack and LazyVStack\n\nLazy\u7684\u610f\u601d\u662f\u5982\u679c\u5143\u7d20\u5bf9\u5e94\u7684\u4f4d\u7f6e\u6ca1\u6709\u51fa\u73b0\u5728\u5c4f\u5e55\u4e0a\uff0c\u5c31\u4e0d\u4f1a\u6784\u5efaView.\nthey also size themselves to fit their views\n\u524d\u4e24\u6761\u52a0\u4e00\u8d77\uff0c\u5f97\u51fa\u8fd9\u4e2a\u5bb9\u5668\u4e0d\u4f1a\u5c3d\u53ef\u80fd\u591a\u7684\u5360\u7528\u7a7a\u95f4\uff0c\u5373\u4f7f\u542b\u6709very flexible\u7684view -&gt; \u5c3d\u53ef\u80fd\u5c0f\u7684\u7a7a\u95f4\n\u663e\u7136\uff0c\u5b83\u6700\u591a\u51fa\u73b0\u5728ScrollView\u91cc\uff08\u53ea\u6709\u5728\u6709\u9650\u7a97\u53e3\u91cc\u6eda\u52a8\uff0c\u624d\u6709\u53ef\u89c1\u4e0d\u53ef\u89c1\u7684\u5dee\u522b\uff09\n\nScrollview\n\n\u7ed9\u591a\u5c11\u7a7a\u95f4\u5360\u591a\u5c11\u7a7a\u95f4\n\nLazyHGrid and LazyVGrid\n\n\u4e00\u4e2a\u65b9\u5411view\u6570\u91cf\u56fa\u5b9a\uff0c\u53e6\u4e00\u4e2a\u65b9\u5411\u52a8\u6001\u589e\u51cf\uff08scroll\uff09\u7684H/V stack\uff0c\u4ee5\u7ad6\u5411\u7684LazyVGrid\u4e3a\u4f8b\uff1a\n\u786e\u5b9a\u6bcf\u884c\u5143\u7d20\u4e2a\u6570\uff0c\u591a\u5c11\u884c\u7531\u5143\u7d20\u603b\u6570\u51b3\u5b9a\n\u6216\u8005\u786e\u5b9a\u5143\u7d20\u5927\u5c0f\uff0c\u5728\u884c\u65b9\u5411\u94fa\u6ee1\u540e\uff0c\u518d\u5f80\u4e0b\u4e00\u884c\u94fa\nHGrid\u65b9\u5411\u5219\u662f\u5148\u7eb5\u5411\u94fa\u6ee1\uff0c\u518d\u6c34\u5e73\u94fa\n\nZStack\n\nsizes itself to fit its children\ncan be very flexible (if one children is)\n\n\u4e24\u4e2amodifier\u5176\u5b9e\u4e5f\u662f\u7528\u7684ZStack:\n.background\uff0c\u63d2\u5165\u4e00\u4e2aview\u5728\u5e95\u5c42\uff0cstack\u8d77\u6765: Text(&quot;hello&quot;).background(Rectangle().foregroundColor(.red))\n.overlay\uff0c\u8986\u76d6\u5230\u8868\u5c42\u7684zstack: Circle().overlay(Text(&quot;hello&quot;), alignment:.center)\n\nMore\uff1a\n\u4e00\u4e2aview\u662f\u53ef\u4ee5\u9009\u62e9\u4efb\u610fsize\u7684\uff0c\u54ea\u6015\u6bd4\u7ed9\u5b83\u7684\u7a7a\u95f4\u66f4\u5927(\u4ea7\u751f\u88c1\u526a)\n.aspectRatio(2/3, contentMode: .fit)\u5982\u679c\u662f\u5728HStack\u91cc\uff0c\n\u5219\u662f\u628a\u5143\u7d20\u6a2a\u5411\u6392\u5217\u540e\u5f97\u5230\u5bbd\u5ea6\uff0c\u6839\u636e\u5bbd\u5ea6\u8ba1\u7b97\u51fa\u9ad8\u5ea6\uff0c\u5f97\u5230\u5143\u7d20\u5927\u5c0f\n.fit\u8868\u793a\u5b8c\u6574\u663e\u793a\u56fe\u7247\uff08\u5c31\u957f\u8fb9\uff09\uff0c\u77ed\u8fb9\u90e8\u5206\u8865\u6210\u9ed1\u8272\uff0c.fill\u5e94\u8be5\u662f\u5c31\u77ed\u8fb9\uff0c\u957f\u8fb9\u90e8\u5206\u5c31\u88c1\u526a\u4e86\n\n\n\nHStack {\n    ForEach(cards) { card in\n        CardView(card).aspectRatio(2/3, contentMode: .fit)\n    }\n}\n    .foregroundColor(.orange)\n    .padding(10)\n\n\n\u5728\u80fd\u591f\u5206\u914d\u7684\u7a7a\u95f4\u91cc\uff0c\u56db\u8fb9\u5404\u51cf10 -&gt; padding(10)\n\u51cf10\u540e\u7684\u7a7a\u95f4\u91cc\uff0c\u6839\u636easpectRation\u786e\u5b9a\u4e00\u4e2asize\n\u8fd9\u4e2asize\u5e94\u7528\u7ed9CardView\n\u7ec4\u5408\u6210HStack\u7684size\n\n\u603b\u5927\u5c0f\u5c31\u662fHStack\u7684size\u56db\u8fb9\u5404\u52a010\u800cView\u4eec\u5982\u4f55\u77e5\u9053\u80fd\u5360\u591a\u5c11\u7a7a\u95f4\uff1f-&gt; GeometryReaderGeometryReader\nvar body: View {\n    GeometryReader { geometry in\n        ...\n    }\n}\n\n\u53c2\u6570geometry\u662f\u4e00\u4e2aGeometryProxy:struct GeometryProxy {\n    var size: CGSize\n    var safeAreaInsets\uff1a EdgeInsets\n    func frame(in: CoordinateSpace) -&gt; CGRect\n}\n\n\nsize\u8868\u793a\u88ab\u63d0\u4f9b\u4e86\u591a\u5c11\u7684\u7a7a\u95f4\uff08by its container)\n\u5e76\u4e14\u4e0d\u5305\u542bsafe area\uff08\u5982\u5218\u6d77\uff09\n\u5982\u679c\u9700\u8981\u7ed8\u5236\u5230safe area\u91cc\u53bb: ZStack{...}.edgesIgnoringSafeArea([.top])\n\n\u56fe\u4e2d\u6f14\u793a\u7684\u662f\u8bbe\u7f6e\u5361\u7247\u5b57\u4f53\u7684\u5927\u5c0f\uff0c\u5e0c\u671b\u5c3d\u53ef\u80fd\u5730\u586b\u5145\u5361\u7247\uff0cgeometry.size\u80fd\u7ed9\u51fa\u8fd0\u884c\u65f6\u6570\u636e\uff0c\u800c\u65e0\u9700\u786c\u7f16\u7801\u3002", "categories": [{"name": "posts", "slug": "posts", "permalink": "/category/posts/"}], "tags": [{"name": "cs193p", "slug": "cs193p", "permalink": "/tag/cs193p/"}, {"name": "viewmodifier", "slug": "viewmodifier", "permalink": "/tag/viewmodifier/"}, {"name": "property observer", "slug": "property observer", "permalink": "/tag/property%20observer/"}]}, {"title": "cs193p_2021_\u7b14\u8bb0[1]", "date": "2021-10-24T00:00:00-00.00", "path": "/archives/cs193p_2021_%E7%AC%94%E8%AE%B0%5B1%5D/", "text": "2020\u5e74\u770b\u4e86\u4e00\u904d\uff0c\u540e\u6765\u5b66\u6df1\u5ea6\u5b66\u4e60\u53bb\u4e86\uff0c\u7136\u540e\u53d1\u73b02021\u4e5f\u51fa\u6765\u4e86\uff0c\u4ecd\u7136\u662f\u89c6\u9891\u6388\u8bfe\uff08\u5bf9\u6211\u4eec\u6ca1\u533a\u522b\uff09\uff0c\u770b\u5b8c\u540e\u6574\u7406\u4e86\u4e24\u5e74\u8bfe\u7a0b\u7684\u7b14\u8bb0\u3002\u672c\u6587\u6d89\u53ca\u5185\u5bb9\uff1astruct, enum, optional, protocol, viewbuilder, shapestruct and class\n\u62e5\u6709\u5dee\u4e0d\u591a\u7684\u7ed3\u6784\nstored vars\ncomputed vars\nconstant lets\nfunctions\ninitializers\n\ndifferents:\nstruct | class\n-------|------\nValue type | Reference type\nCopied when passed or assigned | Passed around via pointers \nCopy on write | Automatically reference counted \nFunctional programming | Object-oriented programming \nNo inheritance | Inheritance (single) \n\u201cFree\u201d\uff08\u7f3a\u7701\uff09 init initializes ALL vars | \u201cFree\u201d init initializes NO vars \nMutability must be explicitly stated | Always mutable (\u5373\u4f7f\u7528let, \u53ea\u8868\u793a\u4e0d\u4f1a\u6539\u53d8\u6307\u9488)\nYour \u201cgo to\u201d data structure | Used in specific circumstances\nEverything you\u2019ve seen so far is a struct (except View which is a protocol) | The ViewModel in MVVM is always a class (also, UIKit (old style iOS) is class-based)\u6cdb\u578b\uff0c\u51fd\u6570\u7c7b\u578b,\u95ed\u5305\n\n\u5141\u8bb8\u672a\u77e5\u7c7b\u578b\uff0c\u4f46swift\u662f\u5f3a\u7c7b\u578b\uff0c\u6240\u4ee5\u7528\u7c7b\u578b\u5360\u4f4d\u7b26\uff0c\u7528\u4f5c\u53c2\u6570\u65f6\u53c2\u8003.net\u7684\u6cdb\u578b\n\u51fd\u6570\u4e5f\u662f\u4e00\u79cd\u7c7b\u578b\uff0c\u53ef\u4ee5\u5f53\u4f5c\u53d8\u91cf\uff0c\u53c2\u6570\uff0c\u51fa\u73b0\u5728\u53d8\u91cf\uff0c\u53c2\u6570\u7684\u4f4d\u7f6e\nin-line\u98ce\u683c\u7684\u51fd\u6570\u53ebclosure(\u95ed\u5305)\n\nenum\n\n\u679a\u4e3e\u662f\u503c\u7c7b\u578b\n\u679a\u4e3e\u7684\u6bcf\u4e2astate\u90fd\u53ef\u4ee5\u6709associated data\uff08\u7b49\u4e8e\u662f\u628a\u6bcf\u4e2astate\u770b\u6210\u4e00\u4e2aclass/struct\uff0cassociated data\u5c31\u53ef\u4ee5\u7406\u89e3\u4e3a\u5c5e\u6027)\n\nenum FastFoodMenuItem {\n    case hamburger(numberOfPatties: Int)\n    case fries(size: FryOrderSize)\n    case drink(String, ounces: Int) // the unnamed String is the brand, e.g. \u201cCoke\u201d\n    case cookie }\n\nenum FryOrderSize {\n    case large\n    case small }\n\nlet menuItem: FastFoodMenuItem = FastFoodMenuItem.hamburger(patties: 2)\nvar otherItem: FastFoodMenuItem = FastFoodMenuItem.cookie\nvar yetAnotherItem = .cookie // Swift can\u2019t figure this out\n\n\nFryOrderSize\u540c\u65f6\u53c8\u662f\u4e00\u4e2a\u679a\u4e3e\n\u72b6\u6001drink\u62e5\u6709\u4e24\u4e2a\u201c\u5c5e\u6027\u201d\uff0c\u800c\u4e14\u5176\u4e2d\u4e00\u4e2a\u8fd8\u672a\u547d\u540d\n\nbreak and fall through/defaults\nvar menuItem = FastFoodMenuItem.cookie\nswitch menuItem {\n    case .hamburger: break  // break\n    case .fries: print(\u201cfries\u201d)\n    default: print(\u201cother\u201d) // default\n}\n\n\n\u5982\u679c\u628adrink\u5199\u4e0a\uff0c\u4f46\u6ca1\u6709\u65b9\u6cd5\u4f53\uff0c\u5219\u53ebfall through\uff0c\u53ea\u4f1a\u5f80\u540e\u9762\u4e00\u4e2astate fall through\n\u5982\u679c\u6f0f\u5199\u4e86drink\uff0c\u5219\u4f1a\u5339\u914d\u5230default\u9879\uff08cookie\u540c\u7406\uff09\n\nwith associated data\nvar menuItem = FastFoodMenuItem.drink(\u201cCoke\u201d, ounces: 32)\n  switch menuItem {\n      case .hamburger(let pattyCount): print(\u201ca burger with \\(pattyCount) patties!\u201d)\n      case .fries(let size): print(\u201ca \\(size) order of fries!\u201d)\n      case .drink(let brand, let ounces): print(\u201ca \\(ounces)oz \\(brand)\u201d)\n      case .cookie: print(\u201ca cookie!\u201d)\n }\n\n\u53ef\u4ee5\u62e5\u6709\u65b9\u6cd5\n\u8fd9\u5c31\u53ef\u4ee5\u6269\u5c55\u51facomputed varsenum FastFoodMenuItem { ...\n      func isIncludedInSpecialOrder(number: Int) -&gt; Bool {\n          switch self {\n            case .hamburger(let pattyCount): return pattyCount == number\n            case .fries, .cookie: return true // a drink and cookie in every special order \n            case .drink(_, let ounces): return ounces == 16 // &amp; 16oz drink of any kind\n } }\n}\n\nIterable\nconform CaseIterable\u534f\u8bae\u5c31\u80fd\u88ab\u904d\u5386\uff0c\u56e0\u4e3a\u589e\u52a0\u4e86\u4e00\u4e2aallCases\u7684\u9759\u6001\u53d8\u91cf\uff1aenum TeslaModel: CaseIterable {\n      case X\n      case S\n      case Three\n      case Y\n}\nfor model in TeslaModel.allCases {\n    reportSalesNumbers(for: model)\n}\nfunc reportSalesNumbers(for model: TeslaModel) {\n    switch model { ... }\n}\n\nSwiftUI\u5b9e\u4f8b\uff0c LazyVGrid\u4e2d\uff1astruct GridItem {\n    ...\n    enum Size {\n        case adaptive(minimum: CGFloat, maximum: CGFloat = .infinity)\n        case fixed(CGFloat)\n        case flexible(minimum: CGFloat = 10, maximum: CGFloat = .infinity)\n    }\n}\n\n\nassociated data\u8fd8\u80fd\u5e26\u9ed8\u8ba4\u503c\n\u6838\u5fc3\u4f5c\u7528\u662f\u544a\u8bc9\u7cfb\u7edfgriditem\u7684size\u662f\u91c7\u7528\u54ea\u79cd\u65b9\u6848\uff08\u679a\u4e3e\uff09\uff0c\u987a\u4fbf\u8bbe\u7f6e\u4e86\u8fd9\u79cd\u65b9\u6848\u4e0b\u7684\u53c2\u6570\u3002\u6240\u4ee5\u8fd9\u79cd\u573a\u666f\u5728swift\u4e0b\u5b8c\u5168\u53ef\u4ee5\u7528\u679a\u4e3e\u505a\u5230\n\nOptionals\n\u53ef\u9760\u7c7b\u578b\u5176\u5b9e\u5c31\u662f\u4e00\u4e2aEnumenum Optional&lt;T&gt; { // a generic type, like Array&lt;Element&gt; or MemoryGame&lt;CardContent&gt; \n    case none\n    case some(T) // the some case has associated value of type T }\n\n\u5b83\u53ea\u6709\u4e24\u4e2a\u72b6\u6001\uff0c\u8981\u4e48\u662fnone\uff0c\u8981\u4e48\u5c31\u662fis set\u7684\u72b6\u6001\uff0c\u5177\u4f53\u7684\u503c\u5176\u5b9e\u662f\u7ed1\u5b9a\u5230\u4e86associate data\u91cc\u53bb\u4e86\u6240\u4ee5\u4f60\u73b0\u5728\u77e5\u9053\u4e86\u6709\u4e00\u79cd\u53d6\u6cd5\u5176\u5b9e\u5c31\u662f\u4ecesome\u91cc\u9762\u6765\u53d6\u4e86\u3002\u8bed\u6cd5\u7cd6\nvar hello: String?\nvar hello: String? = \u201chello\u201d\nvar hello: String? = nil\n// \u5176\u5b9e\u662f\uff1a\nvar hello: Optional&lt;String&gt; = .none\nvar hello: Optional&lt;String&gt; = .some(\u201chello\u201d)\nvar hello: Optional&lt;String&gt; = .none\n\n\u4f7f\u7528\uff1alet hello: String? = ...\nprint(hello!) \n// \u5176\u5b9e\u662f\uff1a\nswitch hello {\n    case .none: // raise an exception (crash) \n    case .some(let data): print(data)\n}\n\nif let safehello = hello {\n    print(safehello)\n} else {\n    // do something else\n}\n// \u5176\u5b9e\u662f\uff1a\nswitch hello {\n    case .none: { // do something else } \n    case .some(let data): print(data)\n}\n\n// \u8fd8\u6709\u4e00\u79cd\uff1a\n\nlet x: String? = ...\nlet y = x ?? \u201cfoo\u201d\n// \u5176\u5b9e\u662f\uff1a\nswitch x {\n    case .none: y = \u201cfoo\u201d\n    case .some(let data): y = data\n}\n\n\n\u6240\u4ee5\u7528!\u6765\u89e3\u5305\u662f\u4f1a\u62a5\u9519\u7684\u539f\u7406\u5728\u6b64\nguard\u7684\u539f\u7406\u540c\u6837\u662fswitch\n\u9ed8\u8ba4\u503c\u7684\u539f\u7406\u4f60\u5e94\u8be5\u4e5f\u80fd\u731c\u5230\u4e86\n\u4e09\u4e2a\u8bed\u6cd5\u7cd6\uff0c\u5bf9\u5e94\u7684\u5e95\u5c42\u5c31\u662f\u4e00\u53e5switch\uff0c\u5176\u5b9e\u5c31\u662f.none\u65f6\u7684\u4e09\u79cd\u5904\u7406\u65b9\u6848\n\n\u5f53\u7136\uff0c\u8fd8\u53ef\u4ee5chain\u8d77\u6765\nlet x: String? = ...\nlet y = x?foo()?bar?.z// \u5c1d\u8bd5\u8fd8\u539f\u4e00\u4e0b\uff1aswitch x {\n    case .none: y = nil\n    case .some(let xval)::\n        switch xval.foo() {\n            case .none: y = nil\n            case .some(let xfooval):\n                switch xfooval.bar {\n                    case .none: y = nil\n                    case .some(let xfbarval):\n                        y = xfbarval.z\n                }\n        }\n}\n\n\u8bb0\u4f4f\u6bcf\u4e00\u4e2a\u53e5\u53f7\u5bf9\u5e94\u4e00\u4e2aswitch\uff0c\u7136\u540e\u5728.none\u7684\u72b6\u6001\u4e0b\u5b89\u5168\u9000\u51fa\u5c31\u662f?\u7684\u7528\u6cd5\u4e86\u3002@ViewBuilder\n\n\u4efb\u610ffunc\u6216\u53ea\u8bfb\u7684\u8ba1\u7b97\u5c5e\u6027\u90fd\u53ef\u4ee5\u6807\u8bc6\u4e3a@ViewBuilder\uff0c\u4e00\u65e6\u6807\u8bc6\uff0c\u5b83\u91cc\u9762\u7684\u5185\u5bb9\u5c06\u4f1a\u88ab\u89e3\u6790\u4e3aa list of Views\uff08\u4e5f\u4ec5\u4ec5\u662f\u8fd9\u4e2a\uff0c\u6700\u591a\u518d\u52a0\u4e0aif-else\u6765\u9009\u62e9\u662f\u201c\u54ea\u4e9bview\u201d\uff0c\u4e0d\u80fd\u518d\u5b9a\u4e49\u53d8\u91cf\u548c\u5199\u5176\u5b83\u4ee3\u7801\u4e86\uff09\n\u4e00\u4e2a\u5178\u578b\u4f8b\u5b50\u5c31\u662fView\u91cc\u9762\u6263\u51fa\u6765\u7684\u4ee3\u7801(\u6bd4\u5982\u5b50view)\u505a\u6210\u65b9\u6cd5\uff0c\u8fd9\u4e2a\u65b9\u6cd5\u662f\u9700\u8981\u52a0\u4e0a@ViewBuilder\u7684\n\u6216\u8005\u6539\u8bed\u6cd5\n\u6216\u8005\u53ea\u6709\u4e00\u4e2aView\uff0c\u5c31\u4e0d\u4f1a\u4ea7\u751f\u8bed\u6cd5\u6b67\u4e49\uff0c\u4e5f\u662f\u53ef\u4ee5\u4e0d\u52a0@ViewBuilder\u7684\n\n\n\u6240\u4ee5\u4e0d\u9700\u8981return\uff0c\u800c\u5982\u679c\u4f60\u4e0d\u6253\u6807\uff0c\u4e5f\u662f\u53ef\u4ee5\u901a\u8fc7return\u6765\u6784\u5efaview\u7684\n\u4f46\u662f\u5c31\u4e0d\u652f\u6301\u9ed8\u8ba4\u8fd4\u56delist\u6216\u901a\u8fc7if-else\u8fd4view list\u7684\u8bed\u6cd5\u4e86\n\n\n@ViewBuilder\u4e5f\u53ef\u4ee5\u6807\u8bc6\u4e3a\u65b9\u6cd5\u7684\u53c2\u6570\uff0c\u8868\u793a\u9700\u8981\u63a5\u53d7\u4e00\u4e2a\u8fd4\u56deviews\u7684\u51fd\u6570\n\ninit(items: [Item], @ViewBuilder content: @escaping (Item) -&gt; ItemView) {...}\n\n\u540c\u65f6\u4e5f\u6ce8\u610f\u4e00\u4e0b@escaping\uff0c\u51e1\u662f\u51fd\u6570\u8fd4\u56de\u540e\u624d\u53ef\u80fd\u88ab\u8c03\u7528\u7684\u95ed\u5305\uff08\u9003\u9038\u95ed\u5305\uff09\u5c31\u9700\u8981\uff0c\u800c\u6211\u4eec\u7684view\u662f\u5728\u9700\u8981\u7684\u65f6\u5019\u624d\u521b\u5efa\uff0c\u6216\u53cd\u590d\u79fb\u9664\u5e76\u91cd\u5efa\uff08\u91cd\u7ed8\uff09\u7684\uff0c\u663e\u7136\u7b26\u5408\u9003\u9038\u95ed\u5305\u7684\u7279\u5f81\u3002\nviewbuilder\u652f\u6301\u7684\u63a7\u5236\u6d41\u7a0b\u4ee3\u7801\u6307\u7684\u662fif-else\u548cForEach, \u6240\u4ee5for...in...\u662f\u4e0d\u884c\u7684\u3002\nProtocol\n\u63a5\u53e3\uff0c\u534f\u8bae\uff0c\u7ea6\u675f... \u4f7f\u7528\u573a\u666f\uff1a\n\u7528\u4f5c\u7c7b\u578b(Type):\nfunc travelAround(using moveable: Moveable)\nlet foo = [Moveable]\n\n\n\u7528\u4f5c\u63a5\u53e3:\nstruct cardView: View\nclass myGame: ObservableObject\nbehaviors: Identifiable, Hashable, ... Animatable\n\n\n\u7528\u4f5c\u7ea6\u675f\uff1a\n  struct Game where Content: Equtable   // \u7c7b\n  extension Array where Element: Hashable {...}  // \u6269\u5c55\n  init(data: Data) where Data: Collection, Data.Element: Identifiable // \u65b9\u6cd5\nOC\u91cc\u7684delegate\ncode sharing (by extension)\nextension to a protocol\nthis is how Views get forecolor, font and all their other modifiers\nalso `firstIndex(where:) get implemented\nan extension can add default implementation for a func or a var\nthat's how objectWillChange comes from\n\n\nextension\u53ef\u4ee5\u4f5c\u7528\u5230\u6240\u6709\u670d\u4ece\u540c\u4e00\u534f\u8bae\u7684\u5bf9\u8c61\nfunc filter(_ isIncluded: (Element) -&gt; Bool) -&gt; Array\n\u53ea\u4e3aSequence protocol\u5199\u4e86\u4e00\u4efdfilter\u7684\u6269\u5c55\u4ee3\u7801\uff0c\u4f46\u80fd\u4f5c\u7528\u4e8eArray, Range, String, Dictionary\n\u7b49\u4e00\u5207conform to the Sequence protocol\u7684\u7c7b\n\n\n\n\n\nSwiftUI\u7684View protocol\u975e\u5e38\u7b80\u5355\uff0cconform \u4e00\u4e2a\u8fd4\u56desome view\u7684body\u65b9\u6cd5\u5c31\u884c\u4e86\uff0c\u4f46\u662f\u53c8\u4e3a\u5b83\u5199\u4e86\u65e0\u6570extension\uff0c\u6bd4\u5982foregroundColor, padding, etc. \u793a\u610f\u56fe\uff1aGenerics(\u6cdb\u578b)\n\u4e3e\u4f8b\uff1aprotocol Identifiable {\n    associatedtype ID: Hashable\n    var id: ID { get }\n}\n\n\n\u4e0d\u50cfstruct\uff0cprotocol\u5e76\u4e0d\u662f\u7528Identifiable&lt;ID&gt;\u6765\u8868\u793a\u6cdb\u578b\uff0c\u800c\u662f\u5728\u4f5c\u7528\u57df\u5185\u5b9a\u4e49\n\u4e0a\u4f8b\u4e2d\uff0cID\u65e2\u5b9a\u4e49\u4e86\u7c7b\u522b\u522b\u540d\uff0c\u8fd8\u89c4\u8303\u4e86\u7ea6\u675f\n\n\n\u6240\u4ee5\u4f60Identifiable\u7684\u7c7b, \u662f\u9700\u8981\u6709\u4e00\u4e2aHashable\u7684ID\u7684\n\u800cHashable\u7684\u5bf9\u8c61\uff0c\u53c8\u662f\u9700\u8981Equatable\u7684(\u56e0\u4e3ahash\u4f1a\u78b0\u649e\u51fa\u76f8\u540c\u7684\u7ed3\u679c\uff0c\u9700\u8981\u63d0\u4f9b\u68c0\u67e5\u76f8\u7b49\u7684\u65b9\u6cd5)\n-&gt; protocol inheritancee\n\nShape\n\nShape is a protocol that inherits from View.\nIn other words, all Shapes are also Views.\nExamples of Shapes already in SwiftUI: RoundedRectangle, Circle, Capsule, etc.\nby default, Shapes draw themselfs by filling with the current foreground color.\n\nfunc fill&lt;S&gt;(_ whatToFillWith: S) -&gt; some view where S: ShapeStyle\n\nShapeStyle protocol turns a Shape into a View: Color, ImagePaint, AngularGradinet, LinearGradient\u81ea\u5b9a\u4e49shape\u6700\u597d\u7528path(\u7cfb\u7edf\u7684\u5df2\u7ecf\u901a\u8fc7extension\u5b9e\u73b0\u597d\u4e86view\u7684body)\uff1afunc path(in rect: CGRect) -&gt; Path {\n    return a Path \n}\n\n", "categories": [{"name": "posts", "slug": "posts", "permalink": "/category/posts/"}], "tags": [{"name": "cs193p", "slug": "cs193p", "permalink": "/tag/cs193p/"}, {"name": "viewbuilder", "slug": "viewbuilder", "permalink": "/tag/viewbuilder/"}, {"name": "protocol", "slug": "protocol", "permalink": "/tag/protocol/"}]}, {"title": "\u4e00\u5f20\u56fe\u8bf4\u6e05\u5308\u7259\u5229\u7b97\u6cd5\uff08Hungarian-Algorithm\uff09", "date": "2021-10-23T22:00:00-00.00", "path": "/archives/%E4%B8%80%E5%BC%A0%E5%9B%BE%E8%AF%B4%E6%B8%85%E5%8C%88%E7%89%99%E5%88%A9%E7%AE%97%E6%B3%95%EF%BC%88Hungarian-Algorithm%EF%BC%89/", "text": "\u505a\u591a\u76ee\u6807\u8ddf\u8e2a\u7684\u65f6\u5019\u4f1a\u78b0\u5230\u8fd9\u4e2a\u7b97\u6cd5\uff0c\u6bcf\u4e2a\u4eba\u90fd\u6709\u81ea\u5df1\u7684\u8bf4\u6cd5\u8bb2\u6e05\u695a\u8fd9\u4e2a\u7b97\u6cd5\u662f\u5e72\u4ec0\u4e48\u7684\uff1f\u6211\u7684\u8001\u5e08\u5c31\u8ddf\u6211\u8bf4\u8fc7\u662f\u4ec0\u4e48\u7ed9\u5de5\u4eba\u5206\u914d\u6d3b\u5e72\uff08\u5373\u7406\u89e3\u4e3a\u6307\u6d3e\u95ee\u9898\uff09\uff0c\u7f51\u4e0a\u8fd8\u770b\u5230\u6709\u8bf4\u7ea2\u5a18\u5c3d\u53ef\u80fd\u5339\u914d\u591a\u7684\u60c5\u4fa3\u7b49\uff0c\u900f\u8fc7\u8fd9\u4e9b\u611f\u6027\u7406\u89e3\uff0c\u57fa\u672c\u4e0a\u5c31\u80fd\u7406\u89e3\u5927\u6982\u662f\u6700\u5927\u5339\u914d\u7684\u95ee\u9898\u4e86\u3002\u7136\u540e\u52a0\u4e86\u9650\u5236\uff1a\u540e\u6765\u8005\u4f18\u5148\u3002\u5373\u540e\u5339\u914d\u7684\u80fd\u62a2\u6389\u524d\u4eba\u5df2\u5339\u914d\u7684\u5bf9\u8c61\uff0c\u8fd9\u4e2a\u662f\u6709\u6570\u5b66\u4f9d\u636e\u8fd8\u662f\u53ea\u662f\u4e00\u79cd\u5b9e\u73b0\u601d\u8def\u6211\u5c31\u6ca1\u6df1\u7a76\u4e86\u3002\u6211\u7684\u7406\u89e3\u4e0d\u4f1a\u6bd4\u522b\u4eba\u66f4\u9ad8\u7ea7\uff0c\u4e4b\u6240\u4ee5\u80fd\u7528\u4e00\u5f20\u56fe\u8bf4\u6e05\u695a\uff0c\u53ea\u4e0d\u8fc7\u662f\u6211\u4f5c\u56fe\u7684\u65f6\u5019\u53d1\u73b0\u53ef\u4ee5\u628a\u8fc7\u7a0b\u753b\u5728\u4e00\u5f20\u56fe\u91cc\uff0c\u53ea\u9700\u8981\u628a\u56fe\u793a\u6807\u6e05\u695a\u5c31\u597d\u4e86\uff0c\u8fd9\u6837\u5c31\u4e0d\u9700\u8981\u6bcf\u4e00\u6b65\u753b\u4e00\u5f20\u56fe\u4e86\uff0c\u4e00\u65e6\u7406\u89e3\u4e86\uff0c\u54ea\u6015\u5fd8\u4e86\uff0c\u4e00\u7785\u8fd9\u5f20\u56fe\u4e5f\u80fd\u7acb\u523b\u56de\u5fc6\u8d77\u6765\u3002\u5148\u4e0a\u6570\u636e\uff1aimport numpy as np\n\nrelationship_matrix = np.array([\n    [1,1,0,1,0,0,0],\n    [0,1,0,0,1,0,0],\n    [1,0,0,1,0,0,1],\n    [0,0,1,0,0,1,0],\n    [0,0,0,1,0,0,0],\n    [0,0,0,1,0,0,0]\n], dtype=bool)\n\n\u4f60\u53ef\u4ee5\u7406\u89e3\u4e3a6\u4e2a\u5de5\u4eba\uff0c7\u4e2a\u5de5\u4f5c\uff0c6\u4e2a\u7537\u5b69\uff0c7\u4e2a\u5973\u5b69\u7b49\uff0c\u5f53\u7136\uff0c6\u884c7\u5217\uff0c\u8fd9\u4e48\u76f4\u89c2\u7406\u89e3\u4e5f\u662f\u4e00\u70b9\u95ee\u9898\u90fd\u6ca1\u6709\u7684\u3002\u7b97\u6cd5\u5339\u914d\u8fc7\u7a0b\u5982\u4e0b\uff1a\n\n\u7070\u84dd\u7ebf\u5c31\u662f\u88ab\u62a2\u6389\u7684\n\u7eff\u7ebf\u5c31\u662f\u62a2\u593a\u5931\u8d25\u7684\n\u7d2b\u7ebf\u662f\u88ab\u62a2\u4e86\u540e\u627e\u5019\u9009\u6210\u529f\u7684\n\u7ea2\u7ebf\u662f\u4e00\u6b21\u6027\u6210\u529f\u7684\n\n\u5176\u4e2d\u88ab\u62a2\u7684\u548c\u62a2\u593a\u5931\u8d25\u7684\u8fd8\u52a0\u4e86\u5220\u9664\u7ebf\uff0c\u8fd9\u662f\u4e3a\u4e86\u5f3a\u8c03\u3002\u5339\u914d\u6210\u529f\u7684\u5c31\u662f\u7ea2\u7ebf\u548c\u7d2b\u7ebf\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u6211\u4eec\u5339\u914d\u51fa\u6765\u7684\u662f\uff1a[0,1], [1,4], [2,0], [3,2], [4,3]\n\n\u751a\u81f3\u53ef\u4ee5\u8fd9\u4e48\u8868\u793a\u8fd9\u4e2a\u8fc7\u7a0b\uff1a\nx0,y0\nx1,y1\nx2,y0 -&gt; x0,y1 -&gt; x1-&gt;y4 (x2\u62a2x0\u7684,x0\u62a2x1\u7684)\nx3,y2\nx4,y3\nx5,y3 -&gt; x4\u5339\u914d\u4e0d\u5230\u65b0\u7684\uff0c\u62a2\u593a\u5931\u8d25\uff0c-&gt; x5,null\n\n\u6709\u6ca1\u6709\u8bf4\u6e05\u695a\uff1f\u5c31\u4e24\u6b65\uff1a\n\u6839\u636e\u5173\u8054\u8868\u76f4\u63a5\u5efa\u7acb\u5173\u7cfb\n\u5982\u679c\u5f53\u524dC\u5339\u914d\u7684\u5bf9\u8c61\u5df2\u7ecf\u88abB\u5339\u914d\u8fc7\u4e86\uff0c\u90a3\u4e48\u5c1d\u8bd5\u628a\u5b83\u62a2\u8fc7\u6765\uff1a\n\n\nB\u53bb\u627e\u522b\u7684\u5339\u914d\n\u627e\u5230\u4e86(A)\u5c31\u5efa\u7acb\u65b0\u7684\u5339\u914d\n\u5982\u679c\u65b0\u7684\u5339\u914d(A)\u4e5f\u5df2\u7ecf\u88ab\u522b\u4eba(D)\u5339\u914d\u4e86\uff0c\u90a3\u4e48\u90a3\u4e2a\u201c\u522b\u4eba(D)\u201d\u4e5f\u653e\u5f03\u5f53\u524d\u5339\u914d\u53bb\u627e\u522b\u7684\uff08\u9012\u5f52\u8b66\u544a\uff09\n\n\n\u5982\u679c\u627e\u4e0d\u5230\u65b0\u7684\u5339\u914d\uff0c\u90a3\u4e48C\u62a2\u593a\u5931\u8d25\uff0c\u9012\u5f52\u4e2d\u7684D\u4e5f\u540c\u7406\uff0c\u5931\u8d25\u5411\u4e0a\u5192\u6ce1\n\n\n\n\u6ce8\u610f\u9012\u5f52\u600e\u4e48\u5199\u4ee3\u7801\u5c31\u80fd\u5199\u51fa\u6765\u4e86\uff1anx, ny = relationship_matrix.shape    # 6\u4e2ax\uff0c7\u4e2ay\n\n# \u5982\u679cx0\u4e0ey0\u5173\u8054\uff0cx3\u4e5f\u4e0ey0\u5173\u8054\uff0c\u90a3\u4e48x0\u53bb\u627e\u65b0\u7684\u5339\u914d\u65f6\uff0c\u9700\u8981\u628ay0\u8fc7\u6ee4\u6389\n# \u540c\u7406x0\u5982\u679c\u627e\u5230\u4e0b\u4e00\u4e2ay2\uff0cy2\u5df2\u88abx2\u5173\u8054\uff0c\u90a3\u4e48x2\u627e\u65b0\u7684\u5339\u914d\u65f6[y0, y2]\u90fd\u9700\u8981\u8fc7\u6ee4\u6389\n# \u6211\u4eec\u628a\u8fd9\u4e2a\u6570\u7ec4\u5b58\u4e3ay_used\ny_used = np.zeros((ny,), dtype=bool)  # \u5b58y\u662f\u5426\u8fde\u63a5\u4e0a\npath = np.full((ny,), -1, dtype=int)  # \u5b58x\u8fde\u63a5\u7684\u5bf9\u8c61\uff0c\u6ca1\u6709\u4e3a-1\n\ndef find_other_path_and_used(x):\n    for y in range(ny):\n        if relationship_matrix[x, y] and not y_used[y]:\n            y_used[y] = True        # \u5904\u4e8e\u4e89\u593a\u4e2d\u7684y\uff0c\u9700\u8981\u6253\u6807\uff0c\u5728\u540e\u7eed\u7684\u9012\u5f52\u65f6\u8981\u8fc7\u6ee4\u6389\n            if path[y] == -1 or find_other_path_and_used(path[y]):\n                path[y] = x         # \u76f4\u63a5\u8fde\u63a5 \u548c \u62a2\u593a\u6210\u529f\n                return True\n    return False                    # \u62a2\u593a\u5931\u8d25 \u548c \u9ed8\u8ba4\u5931\u8d25\n\nfor x in range(nx):\n    y_used[:] = False  # empty\n    find_other_path_and_used(x)\n\nfor y, x in enumerate(path):\n    if x != -1:\n        print(x, y)\n\n\u771f\u7684\u5199\u4ee3\u7801\u5b9e\u73b0\u7684\u65f6\u5019\uff0c\u96be\u70b9\u53cd\u800c\u662fy_used\u8fd9\u4e2a\uff0c\u7b2c\u4e00\u904d\u4ee3\u7801\u6ca1\u8003\u8651\u8fd9\u4e00\u70b9\uff0c\u5bfc\u81f4\u9012\u5f52\u7684\u65f6\u5019\u6bcf\u6b21\u90fd\u4ece$y_0$\u5f00\u59cb\u800c\u51fa\u73b0\u6b7b\u5faa\u73af\uff0c\u610f\u8bc6\u5230\u540e\u628a\u5904\u4e8e\u4e89\u62a2\u72b6\u6001\u4e2d\u7684y\u6253\u4e2a\u6807\u5c31\u597d\u4e86\u3002scipy\u4e2d\u6709\u4e00\u4e2a\u7b97\u6cd5\u5b9e\u73b0\u4e86Hungarian algorithm\uff1afrom scipy.optimize import linear_sum_assignment\n\n# relationship_matrix\u662f\u4ee3\u4ef7\u77e9\u9635\n# \u6240\u4ee5\u6211\u4eec\u8981\u4ee3\u4ef7\u8d8a\u5c0f\u8d8a\u597d\uff0c\u5c31\u75281\u6765\u51cf\nrows, cols = linear_sum_assignment(1-relationship_matrix) \nlist(zip(rows, cols))\n\n\n[(0, 0), (1, 1), (2, 6), (3, 2), (4, 3), (5, 4)]\n\n\u4e3a\u4ec0\u4e48\u4e0e\u4e0a\u9762\u4e0d\u4e00\u6837\u5462\uff1f\n\uff080\uff0c0\uff09\uff0c\uff081\uff0c1\uff09\u7684\u5339\u914d\u663e\u7136\u4e0d\u662f\u6211\u4eec\u5b9e\u73b0\u7684\u540e\u6765\u8005\u4f18\u5148\n\u4ed6\u628a\u884c\u770b\u6210\u662f\u5de5\u4eba\uff0c\u5217\u770b\u6210\u662f\u4efb\u52a1\uff0c\u6bcf\u4e2a\u5de5\u4eba\u603b\u8981\u5206\u914d\u4e2a\u4efb\u52a1\uff0c\u6240\u4ee5(5,4)\u8fd9\u79cd\u4ee3\u4ef7\u77e9\u9635\u91cc\u6ca1\u6709\u7684\u5173\u8054\u5b83\u4e5f\u505a\u51fa\u6765\u4e86\uff0c\u76ee\u7684\u53ea\u662f\u8ba9\u201c\u603b\u4ee3\u4ef7\u201d\u6700\u5c0f\n\n\n(1-relationship_matrix)[rows, cols]  # \u603b\u4ee3\u4ef7\u4e3a1\n\n\narray([0, 0, 0, 0, 0, 1])\n\n\u4ece\u5b83\u7684\u540d\u5b57\u4e5f\u80fd\u770b\u51fa\u6765\uff0c\u5b83\u662f\u7406\u89e3\u4e3a\u6307\u6d3e\u95ee\u9898\u7684(assignment)", "categories": [{"name": "posts", "slug": "posts", "permalink": "/category/posts/"}], "tags": [{"name": "\u5308\u7259\u5229\u7b97\u6cd5", "slug": "\u5308\u7259\u5229\u7b97\u6cd5", "permalink": "/tag/%E5%8C%88%E7%89%99%E5%88%A9%E7%AE%97%E6%B3%95/"}, {"name": "\u591a\u76ee\u6807\u8ddf\u8e2a", "slug": "\u591a\u76ee\u6807\u8ddf\u8e2a", "permalink": "/tag/%E5%A4%9A%E7%9B%AE%E6%A0%87%E8%B7%9F%E8%B8%AA/"}]}, {"title": "\u674e\u5b8f\u6bc5MACHINE LEARNING 2021 SPRING\u7b14\u8bb0[4]", "date": "2021-10-15T21:29:00-00.00", "path": "/archives/%E6%9D%8E%E5%AE%8F%E6%AF%85MACHINE-LEARNING-2021-SPRING%E7%AC%94%E8%AE%B0-4/", "text": "Adversarial Attack\n\u7ed9\u4f60\u4e00\u5f20\u732b\u7684\u56fe\u7247\uff0c\u91cc\u9762\u52a0\u5165\u5c11\u8bb8\u566a\u97f3\uff0c\u4ee5\u4fdd\u8bc1\u8089\u773c\u770b\u4e0d\u51fa\u6765\u6709\u566a\u97f3\u7684\u5b58\u5728\uff1a\n\u671f\u671b\u5206\u7c7b\u5668\u8ba4\u4e3a\u5b83\u4e0d\u662f\u732b\n\u671f\u671b\u5206\u7c7b\u5668\u8ba4\u4e3a\u5b83\u662f\u4e00\u6761\u9c7c\uff0c\u4e00\u4e2a\u952e\u76d8...\n\n\u6bd4\u5982\u4f60\u60f3\u8981\u6b3a\u9a97\u5783\u573e\u90ae\u4ef6\u8fc7\u6ee4\u5668\n\u627e\u5230\u4e00\u4e2a\u4e0e$x^0$\u975e\u5e38\u8fd1\u7684\u5411\u91cfx\n\u7f51\u7edc\u6b63\u5e38\u8f93\u51fay\n\u771f\u503c\u4e3a$\\hat y$\n$L(x) = -e(y, \\hat y)$\n$x^* = arg\\underset{d(x^0, x) \\leq \\epsilon}{\\rm min}\\ L(x)$ \u5373\u8981\u627e\u5230\u4ee4\u635f\u5931\u6700\u5927\u7684x\n\u8fd9\u91ccL(x)\u6211\u4eec\u53d6\u4e86\u53cd\n$\\epsilon$\u8d8a\u5c0f\u8d8a\u597d\uff0c\u6307\u7684\u662f$x^0$\u8981\u4e0ex\u8d8a\u63a5\u8fd1\u8d8a\u597d\uff08\u6b3a\u9a97\u4eba\u773c\uff09\n\n\n\u5982\u679c\u8fd8\u671f\u671b\u5b83\u8ba4\u6210\u662f$y^{target}$\uff0c\u90a3\u5c31\u518d\u52a0\u4e0a\u4e0e\u5176\u7684\u7684\u635f\u5931\n$L(x) = -e(y, \\hat y) + e(y, y^{target})$\n\u6ce8\u610f\u4e24\u4e2aerror\u662f\u53cd\u7684\uff0c\u4e00\u4e2a\u8981\u6c42\u8d8a\u8fdc\u8d8a\u597d(\u771f\u503c\uff09\uff0c\u4e00\u4e2a\u8981\u6c42\u8d8a\u8fd1\u8d8a\u597d\uff08target)\n\n\u600e\u4e48\u8ba1\u7b97$d(x^0, x) \\leq \\epsilon$\u5462\uff1f\u56fe\u4e0a\u53ef\u77e5\uff0c\u5982\u679c\u90fd\u6539\u53d8\u4e00\u70b9\u70b9\uff0c\u548c\u67d0\u4e00\u4e2a\u533a\u57df\u6539\u52a8\u76f8\u5f53\u5927\uff0c\u53ef\u80fd\u5728L2-norm\u7684\u65b9\u5f0f\u8ba1\u7b97\u51fa\u6765\u662f\u4e00\u6837\u7684\uff0c\u4f46\u662f\u5728L-infinity\u770b\u6765\u662f\u4e0d\u4e00\u6837\u7684\uff08\u5b83\u53ea\u5173\u5fc3\u6700\u5927\u7684\u53d8\u52a8\uff09\u3002\u663e\u7136L-infinity\u66f4\u9002\u5408\u4eba\u773c\u7684\u903b\u8f91\uff0c\u5168\u90e8\u4e00\u8d77\u5fae\u8c03\u4eba\u773c\u4e0d\u80fd\u5bdf\u89c9\uff0c\u5355\u5355\u67d0\u4e00\u5757\u5927\u8c03\uff0c\u4eba\u773c\u662f\u80af\u5b9a\u53ef\u4ee5\u770b\u51fa\u6765\u7684\u3002\u800c\u5982\u679c\u662f\u8bed\u97f3\u7684\u8bdd\uff0c\u53ef\u80fd\u8033\u6735\u5bf9\u7a81\u7136\u67d0\u4e2a\u58f0\u97f3\u7684\u53d8\u5316\u53cd\u800c\u4e0d\u654f\u611f\uff0c\u6574\u4f53\u8bed\u97f3\u98ce\u683c\u53d8\u4e86\u5374\u80fd\u7acb\u523b\u8ba4\u51fa\u8bf4\u8bdd\u7684\u4eba\u58f0\u97f3\u53d8\u4e86\uff0c\u8fd9\u5c31\u8981\u6539\u53d8\u65b9\u6848\u4e86\u3002Attack Approach\n\u5982\u4f55\u5f97\u5230\u8fd9\u4e2ax\u5462\uff1f\u5176\u5b9e\u5c31\u662f\u4e0a\u9762\u7684\u635f\u5931\u51fd\u6570\u3002\u4ee5\u524d\u6211\u4eec\u662f\u4e3a\u4e86train\u6743\u91cd\uff0c\u73b0\u5728train\u7684\u5c31\u662fx\u672c\u8eab\u4e86\u3002\n\u635f\u5931\u8fbe\u5230\u6211\u4eec\u7684\u8981\u6c42 \uff08\u6709\u53ef\u80fd\u8fd9\u65f6\u5019\u4e0e\u539fx\u76f8\u5173\u5f88\u8fdc\uff09\n\u4e0e\u539fx\u7684\u8ddd\u79bb\u8fbe\u5230\u6211\u4eec\u7684\u8981\u6c42, \u600e\u4e48\u505a\uff1f\n\u5176\u5b9e\u5c31\u662f\u4ee5$x^0$\u4e3a\u4e2d\u5fc3\uff0c\u8fb9\u957f\u4e3a$2\\epsilon$\u7684\u77e9\u5f62\u624d\u662f\u671f\u671b\u533a\u57df\n\u5982\u679cupdate\u540e\uff0c$x^t$\u4ecd\u7136\u843d\u5728\u77e9\u5f62\u5916\uff0c\u90a3\u4e48\u5c31\u5728\u77e9\u5f62\u91cc\u627e\u4e00\u4e2a\u79bb\u5b83\u6700\u8fd1\u7684\u70b9\uff0c\u5f53\u4f5c\u672c\u8f6e\u66f4\u65b0\u540e\u7684$x^t$\uff0c\u8fdb\u5165\u4e0b\u4e00\u8f6e\u8fed\u4ee3\n\n\n\nFast Gradient Sign Method(FGSM): https://arxiv.org/abs/1412.6572\n\u76f8\u6bd4\u4e0a\u9762\u7684\u8fed\u4ee3\u65b9\u6cd5\uff0cFGSM\u53ea\u505a\u4e00\u6b21\u66f4\u65b0\n\u5c31\u662f\u6839\u636e\u68af\u5ea6\uff0c\u5224\u65ad\u662f\u6b63\u8fd8\u662f\u8d1f\uff0c\u7136\u540e\u628a\u539fx\u8fdb\u884c\u4e00\u6b21\u52a0\u51cf$\\epsilon$\u7684\u64cd\u4f5c\uff08\u5176\u5b9e\u7b49\u4e8e\u662f\u843d\u5728\u4e86\u77e9\u5f62\u7684\u56db\u4e2a\u70b9\u4e0a\uff09\n\u4e5f\u5c31\u662f\u8bf4\u5b83\u76f4\u63a5\u53d6\u4e86\u56db\u4e2a\u70b9\u4e4b\u4e00\u4f5c\u4e3a$x^0$\n\nWhite Box v.s. Black Box\n\u8bb2\u4e0a\u8ff0\u65b9\u6cd5\u7684\u65f6\u5019\u80af\u5b9a\u90fd\u5728\u7591\u60d1\uff0c\u5206\u7c7b\u5668\u662f\u522b\u4eba\u7684\uff0c\u6211\u600e\u4e48\u53ef\u80fd\u62ff\u5230\u522b\u4eba\u7684\u6a21\u578b\u6765\u8bad\u7ec3\u6211\u7684\u653b\u51fb\u5668\uff1f -&gt; White Box Attack\u90a3\u4e48Black Box Attack\u662f\u600e\u4e48\u5b9e\u73b0\u7684\u5462\uff1f\n\u5982\u679c\u6211\u4eec\u77e5\u9053\u5bf9\u65b9\u7684\u6a21\u578b\u662f\u7528\u4ec0\u4e48\u6570\u636e\u8bad\u7ec3\u7684\u8bdd\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u8bad\u7ec3\u4e00\u4e2a\u7c7b\u4f3c\u7684(proxy network)\n\u5f88\u5927\u6982\u7387\u90fd\u662f\u7528\u516c\u5f00\u6570\u636e\u96c6\u8bad\u7ec3\u7684\n\n\n\u5982\u679c\u4e0d\u77e5\u9053\u7684\u8bdd\u5462\uff1f\u5c31\u53ea\u80fd\u5c1d\u8bd5\u5730\u4e22\u4e00\u4e9b\u6570\u636e\u8fdb\u53bb\uff0c\u89c2\u5bdf\uff08\u8bb0\u5f55\uff09\u5b83\u7684\u8f93\u51fa\uff0c\u7136\u540e\u518d\u7528\u8fd9\u4e9b\u6d4b\u8bd5\u7684\u8f93\u5165\u8f93\u51fa\u6765\u8bad\u7ec3\u81ea\u5df1\u7684proxy network\u4e86\u3002\n\n\none pixel attack\nhttps://arxiv.org/abs/1710.08864\nhttps://youtu.be/tfpKIZIWidA\n\n\nuniversal adversarial attack\n\u4e07\u80fdnoise\nhttps://arxiv.org/abs/1610.08401\n\n\n\u58f0\u97f3\n\u6587\u672c\n\u7269\u7406\u4e16\u754c\n\u6bd4\u5982\u6b3a\u9a97\u4eba\u8138\u8bc6\u522b\u7cfb\u7edf\uff0c\u53bb\u8ba4\u6210\u53e6\u4e00\u4e2a\u4eba\n\u53c8\u6bd4\u5982\u9053\u8def\u73af\u5883\uff0c\u8f66\u724c\u8bc6\u522b\u7b49\uff0c\u4e5f\u53ef\u4ee5\u88ab\u653b\u51fb\n\u8981\u8003\u8651\u6444\u50cf\u5934\u80fd\u8bc6\u522b\u7684\u5206\u8fa8\u7387\n\u8981\u8003\u8651\u8bad\u7ec3\u65f6\u5019\u7528\u7684\u56fe\u7247\u989c\u8272\u4e0e\u771f\u5b9e\u4e16\u754c\u989c\u8272\u4e0d\u4e00\u81f4\u7684\u95ee\u9898\n\n\nAdversarial Reprogramming\nBackdoor in Model\nattack happens at the training phase\nhttps://arxiv.org/abs/1804.00792\nbe careful of unknown dataset...\n\n\n\nDefence\nPassive Defense\uff08\u88ab\u52a8\u9632\u5fa1\uff09\n\u8fdb\u5165network\u524d\u52a0\u4e00\u5c42filter\n\u7a0d\u5fae\u6a21\u7cca\u5316\u4e00\u70b9\uff0c\u5c31\u53bb\u9664\u6389\u7cbe\u5fc3\u8bbe\u8ba1\u7684noise\u4e86\n\u4f46\u662f\u540c\u65f6\u4e5f\u5f71\u54cd\u4e86\u6b63\u5e38\u7684\u56fe\u50cf\n\n\n\u5bf9\u539f\u56fe\u8fdb\u884c\u538b\u7f29\n\u628a\u8f93\u5165\u7528Generator\u91cd\u65b0\u751f\u6210\u4e00\u904d\n\n\u5982\u679c\u653b\u51fb\u90fd\u77e5\u9053\u4f60\u600e\u4e48\u505a\u4e86\uff0c\u5176\u5b9e\u5f88\u597d\u7834\u89e3\uff0c\u5c31\u628a\u4f60\u7684filter\u5f53\u4f5cnetwork\u7684\u4e00\u90e8\u5206\u91cd\u65b0\u5f00\u59cb\u8bbe\u8ba1noise\uff0c\u6240\u4ee5\u53ef\u4ee5\u9009\u62e9\u52a0\u5165\u968f\u673a\u9009\u62e9\u7684\u4e00\u4e9b\u9884\u5904\u7406(\u8ba9\u653b\u51fb\u8005\u4e0d\u53ef\u80fd\u9488\u5bf9\u6027\u5730\u8bad\u7ec3)\uff1aProactive Defense\uff08\u4e3b\u52a8\u9632\u5fa1\uff09\n\u8bad\u7ec3\u7684\u65f6\u5019\u5c31\u8bad\u7ec3\u6bd4\u8f83\u4e0d\u5bb9\u6613\u88ab\u653b\u7834\u7684\u6a21\u578b\u3002\u6bd4\u5982\u8bad\u7ec3\u8fc7\u7a0b\u4e2d\u52a0\u5165noise\uff0c\u628a\u751f\u6210\u7684\u7ed3\u679c\u91cd\u65b0\u6807\u6ce8\u56de\u771f\u503c\u3002\ntraining model\nfind the problem\nfix it\n\n\u6709\u70b9\u7c7b\u4f3c\u4e8eData Augmentation\u4ecd\u7136\u963b\u6321\u4e0d\u4e86\u65b0\u7684\u653b\u51fb\u7b97\u6cd5\uff0c\u5373\u4f60\u5bf9\u6570\u636e\u8fdb\u884caugment\u4e4b\u5916\u7684\u8303\u56f4\u3002Explainable Machine Learning(\u53ef\u89e3\u91ca\u6027)\n\ncorrect answers $\\neq$ intelligent\n\u5f88\u591a\u884c\u4e1a\u4f1a\u8981\u6c42\u7ed3\u679c\u5fc5\u987b\u53ef\u89e3\u91ca\n\u94f6\u884c\uff0c\u533b\u836f\uff0c\u6cd5\u5f8b\uff0c\u9a7e\u9a76....\n\n\n\nLocal ExplanationWhy do you thing this image is a cat?Global ExplanationWhat does a &quot;cat&quot; look like?\n\u906e\u6321\u6216\u6539\u53d8\u8f93\u5165\u7684\u67d0\u4e9b\u90e8\u5206\uff0c\u89c2\u5bdf\u5bf9\u5df2\u77e5\u8f93\u51fa\u7684\u5f71\u54cd\n\uff08\u6bd4\u5982\u62e6\u5230\u67d0\u4e9b\u90e8\u5206\u786e\u5b9e\u8ba4\u4e0d\u51fa\u56fe\u50cf\u662f\u4e00\u6761\u72d7\u4e86\uff09\n\n\n\u906e\u6321\u6216\u6539\u53d8\u8f93\u5165\u7684\u67d0\u4e9b\u90e8\u5206\uff0c\u628a\u4e24\u79cd\u8f93\u51fa\u505aloss\uff0c\u5bf9\u6bd4\u8f93\u5165\u53d8\u5316\u4e0eloss\u53d8\u5316\uff1a\n$|\\frac{\\varDelta e}{\\varDelta x}| \\rightarrow \\frac{\\partial e}{\\partial x_n}$\n\n\n\n\u628a\u4e0a\u8ff0\uff08\u4efb\u4e00\u79cd\uff09\u6bcf\u4e2a\u90e8\u5206\uff08\u50cf\u7d20\uff0c\u5355\u8bcd\uff09\u7684\u5f71\u54cd\u7ed3\u679c\u8f93\u51fa\uff0c\u5c31\u662f\uff1aSaliency MapSaliency Map\n\u56fe1\uff0c2\u5c31\u662f\u4e3a\u4e86\u5206\u8fa8\u5b9d\u53ef\u68a6\u548c\u6570\u7801\u5b9d\u8d1d\uff0c\u4eba\u7c7b\u4e00\u822c\u5f88\u96be\u533a\u5206\u51fa\u6765\uff0c\u4f46\u673a\u5668\u5c45\u7136\u8f7b\u677e\u8fbe\u5230\u4e8698%\u7684\u51c6\u786e\u7387\uff0c\u7ecf\u8fc7\u7ed8\u5236Saliency Map\uff0c\u53d1\u73b0\u5c45\u7136\u5c31\u662f\u56fe\u7247\u7d20\u6750\uff08\u683c\u5f0f\uff09\u7684\u539f\u56e0\uff0c\u4e00\u4e2a\u662fpng\uff0c\u4e00\u4e2a\u662fjpg\uff0c\u9020\u6210\u80cc\u666f\u4e00\u4e2a\u662f\u900f\u660e\u4e00\u4e2a\u662f\u4e0d\u900f\u660e\u7684\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u80fd\u53d1\u73b0\u673a\u5668\u5224\u65ad\u7684\u4f9d\u636e\u4e0d\u662f\u6211\u4eec\u5173\u6ce8\u7684\u672c\u4f53\uff08\u9ad8\u4eae\u90e8\u5206\u5c31\u662f\u5f71\u54cd\u6700\u5927\u7684\u90e8\u5206\uff0c\u671f\u671b\u662f\u5728\u52a8\u7269\u8eab\u4e0a\uff09\u7b2c\u4e09\u5f20\u56fe\u66f4\u53ef\u7b11\uff0c\u673a\u5668\u662f\u5982\u4f55\u5224\u65ad\u8fd9\u662f\u4e00\u53ea\u9a6c\u7684\uff1f\u5c45\u7136\u4e5f\u4e0d\u662f\u9a6c\u7684\u672c\u4f53\uff0c\u800c\u662f\u5de6\u4e0b\u89d2\uff0c\u6807\u8bc6\u56fe\u7247\u51fa\u5904\u7684\u6587\u5b57\uff0c\u53ef\u80fd\u662f\u8bad\u7ec3\u8fc7\u7a0b\u4e2d\u540c\u6837\u7684logo\u8fc7\u591a\uff0c\u9020\u6210\u4e86\u8fd9\u4e2a\u201c\u4eba\u4e3a\u7279\u5f81\u201d\u3002\u89e3\u51b3\u65b9\u6848\uff1aSmooth Gradient\n\u968f\u673a\u7ed9\u8f93\u5165\u56fe\u7247\u52a0\u5165\u566a\u70b9\uff0c\u5f97\u5230saliency map\uff08\u4eec\uff09\uff0c\u7136\u540e\u53d6\u5e73\u5747Integrated gradient(IG)\n\u4e00\u4e2a\u7279\u5f81\u5728\u4ece\u65e0\u5230\u6709\u7684\u9636\u6bb5\uff0c\u68af\u5ea6\u8fd8\u662f\u660e\u663e\u7684\uff0c\u4f46\u662f\u5230\u4e86\u4e00\u5b9a\u7a0b\u5ea6\uff0c\u7279\u5f81\u518d\u589e\u5f3a\uff0c\u5bf9gradient\u5f71\u54cd\u4e5f\u4e0d\u5927\u4e86\uff0c\u6bd4\u5982\u4ece\u7247\u5b50\u6765\u5224\u65ad\u5927\u8c61\uff0c\u5230\u4e86\u4e00\u5b9a\u957f\u5ea6\uff0c\u4e00\u5f20\u56fe\u4e5f\u4e0d\u4f1a\u201c\u66f4\u50cf\u5927\u8c61\u201d\u4e00\u79cd\u601d\u8def\uff1ahttps://arxiv.org/abs/1611.02639global explaination\nWhat does a filter detect?\u5982\u679c\u7ecf\u8fc7\u67d0\u5c42\uff08\u8bad\u7ec3\u597d\u7684\uff09filter\uff0c\u5f97\u5230\u7684feature map\u4e00\u4e9b\u4f4d\u7f6e\u7684\u503c\u7279\u522b\u5927\uff0c\u90a3\u8bf4\u660e\u8fd9\u4e2afilter\u63d0\u53d6\u7684\u5c31\u662f\u8fd9\u7c7b\u7279\u5f81/patten\u3002\u6211\u4eec\u53bb&quot;\u521b\u9020&quot;\u4e00\u5f20\u5305\u542b\u4e86\u8fd9\u79cdpatten\u7684\u56fe\u7247\uff1a$X^* = arg\\ \\underset{X}{\\rm max}\\sum_i\\sum_j a_{ij}$\uff0c\u5373\u8fd9\u4e2a\u56fe\u7247\u662f\u201c\u8bad\u7ec3/learn\u201c\u51fa\u6765\u7684\uff0c\u901a\u8fc7\u627e\u8ba9X\u7684\u6bcf\u4e2a\u5143\u7d20($a_{ij}$)\u5728\u88abfilter\u4e58\u52a0\u540e\u7ed3\u679c\u6700\u5927\u7684\u65b9\u5f0f\u3002 -&gt; gradient ascent\u7136\u540e\u518d\u53bb\u89c2\u5bdf$X^*$\u6709\u4ec0\u4e48\u7279\u5f81\uff0c\u5c31\u57fa\u672c\u4e0a\u53ef\u4ee5\u8ba4\u5b9a\u8fd9\u4e2a\uff08\u8bad\u7ec3\u597d\u7684\uff09filter\u63d0\u53d6\u7684\u662f\u4ec0\u4e48\u6837\u7684patten\u4e86\u3002\n\nadversarial attack \u7c7b\u4f3c\u7684\u539f\u7406\uff0c\u4f46\u8fd9\u662f\u5bf9\u5355filter\u800c\u8a00\u3002\u5982\u679c\u4f60\u60f3\u7528\u540c\u6837\u7684\u601d\u8def\u53bb\u8ba9\u8f93\u51fay\u8d8a\u5927\u8d8a\u597d\uff0c\u5f97\u5230X\uff0c\u770bX\u662f\u4ec0\u4e48\uff0c\u5f97\u5230\u7684X\u5927\u6982\u7387\u90fd\u662f\u4e00\u5806\u566a\u97f3\u3002\u5982\u679c\u80fd\u751f\u6210\u56fe\u50cf\uff0c\u90a3\u662fGAN\u7684\u8303\u7574\u4e86\u3002\n\u4e8e\u662f\uff0c\u5c1d\u8bd5\u518d\u52a0\u4e00\u4e2a\u9650\u5236\uff0c\u5373\u4e0d\u4f46\u8981\u8ba9y\u6700\u5927\uff0c\u8fd8\u8981\u8ba9X\u770b\u8d77\u6765\u6700\u6709\u53ef\u80fd\u50cf\u4e00\u4e2a\u6570\u5b57\uff1a\n$R(X)$: how likely X is a digit\n$X^* = arg\\ \\underset{X}{\\rm max}y_i + \\color{red}{R(X)}$\n$R(X) = -\\sum_{i,j}|X_{i,j}|$ \u6bd4\u5982\u8fd9\u4e2a\u89c4\u5219\uff0c\u671f\u671b\u6bcf\u4e2a\u50cf\u7d20\u8d8a\u9ed1\u8d8a\u597d\n\nDomain Adaptation\nTransfer Learning\u7684\u4e00\u79cd\uff0c\u5728\u8bad\u7ec3\u6570\u636e\u96c6\u548c\u5b9e\u9645\u4f7f\u7528\u7684\u6570\u636e\u96c6\u4e0d\u4e00\u6837\u7684\u65f6\u5019\u3002 https://youtu.be/qD6iD4TFsdQ\u9700\u8981\u4f60\u5bf9target domain\u7684\u6570\u636e\u96c6\u6709\u4e00\u5b9a\u7684\u4e86\u89e3\u3002\u6709\u4e00\u79cd\u6bd4\u8f83\u597d\u7684\u60c5\u51b5\u5c31\u662f\uff0ctarget domain\u65e2\u6709\u6570\u636e\uff0c\u8fd8\u6709\u6807\u6ce8\uff08\u4f46\u4e0d\u662f\u592a\u591a\uff0c\u5982\u679c\u592a\u591a\u7684\u8bdd\u5c31\u4e0d\u9700\u8981source domain\u4e86\uff0c\u76f4\u63a5\u7528target\u6765\u8bad\u7ec3\u5c31\u597d\u4e86\uff09\uff0c\u90a3\u5c31\u50cfbert\u4e00\u6837\uff0c\u53bbfine tune\u7ed3\u679c\uff0c\u8981\u6ce8\u610f\u7684\u662f\u6807\u672c\u91cf\u8fc7\u5c0f\uff0c\u53ef\u80fd\u5f88\u5bb9\u6613overfitting.\u5982\u679ctarget doamin\u6709\u5927\u91cf\u8d44\u6599\uff0c\u4f46\u662f\u6ca1\u6709\u6807\u6ce8\u5462\uff1fDomain Adversarial Training\n\n\u628asource domain\u7684network\u5206\u4e3a\u7279\u5f81\u63d0\u53d6\u5668\uff08\u53d6\u591a\u5c11\u5c42cnn\u53ef\u4ee5\u89c6\u4e3a\u8d85\u53c2\uff0c\u5e76\u4e0d\u4e00\u5b9a\u8981\u53d6\u6240\u6709\u5c42cnn\uff09\u548c\u5206\u7c7b\u5668\n\u7136\u540e\u5728\u7279\u5f81\u53d6\u5c42\u4e4b\u540e\u8ddf\u53e6\u4e00\u4e2a\u5206\u7c7b\u5668\uff0c\u7528\u6765\u5224\u65ad\u56fe\u50cf\u6765\u81ea\u4e8esource\u8fd8\u662ftarget\uff08\u6709\u70b9\u50cfDiscriminator\n\u4e0e\u771f\u503c\u6709\u4e00\u4e2aloss\uff0csource, target\u4e4b\u95f4\u4e5f\u6709\u4e00\u4e2aloss\uff0c\u8981\u6c42\u627e\u5230\u8fd9\u6837\u7684\u53c2\u6570\u7ec4\u5206\u522b\u8ba9\u4e24\u4e2aloss\u6700\u5c0f\nloos\u548c\u4e5f\u5e94\u8be5\u6700\u5c0f\uff08\u56fe\u4e2d\u7528\u7684\u662f\u51cf\uff0c\u4f46\u5176\u5b9e$L_d$\u7684\u671f\u671b\u662f\u8d8b\u8fd1\u4e8e0\uff0c\u4e0d\u7ba1\u662f\u6b63\u8fd8\u662f\u8d1f\u90fd\u662f\u671f\u671b\u8d8a\u5c0f\u8d8a\u597d\uff09\uff08\u4e0d\u5982\u52a0\u4e2a\u7edd\u5bf9\u503c\uff1f\uff09\n\u6bcf\u4e00\u5c0f\u5757\u90fd\u6709\u4e00\u7ec4\u53c2\u6570\uff0c\u662f\u4e00\u8d77\u8bad\u7ec3\u7684\n\u76ee\u7684\u5c31\u662f\u65e2\u8981\u903c\u8fd1\u8bad\u7ec3\u96c6\u7684\u771f\u503c\uff0c\u8fd8\u8981\u8bad\u7ec3\u51fa\u4e00\u4e2a\u7f51\u7edc\u80fd\u6a21\u7cca\u6389source\u548ctarget\u6570\u636e\u96c6\u7684\u5dee\u522b\n\nLimit\n\u5982\u679ctarget\u6570\u636e\u96c6\u5982\u4e0a\u56fe\u5de6\uff0c\u663e\u7136\u7ed3\u679c\u662f\u4f1a\u6bd4\u4e0a\u56fe\u53f3\u8981\u5dee\u4e00\u70b9\u7684\uff0c\u4e5f\u5c31\u662f\u8bf4\u5c3d\u91cf\u8981\u4fdd\u6301\u540c\u5206\u5e03\u3002\u5728\u8fd9\u91cc\u7528\u4e86\u53e6\u4e00\u4e2a\u89d2\u5ea6\uff0c\u5c31\u662f\u8ba9\u6570\u636e\u79bbboundary\u8d8a\u8fdc\u8d8a\u597d\nDecision-boundary Iterative Refinement Training with a Teacher(DIRT-T)\nhttps://arxiv.org/abs/1802.08735\n\n\nMaximum Classifier Discrepancy https://arxiv.org/abs/1712.02560\n\nMore\n\n\u5982\u679csource \u548c target \u91cc\u7684\u7c7b\u522b\u4e0d\u5b8c\u5168\u4e00\u6837\u5462\uff1f\nUniversal domain adaptation\n\n\n\u5982\u679ctarget\u65e2\u6ca1\u6709label\uff0c\u6570\u636e\u91cf\u4e5f\u975e\u5e38\u5c11\uff08\u6bd4\u5982\u5c31\u4e00\u5f20\uff09\u5462\uff1f\nTest Time Training(TTT) https://arxiv.org/abs/1909.13231\n\n\n\nDomain Generalization\nDeep Reinforcement Learning (RL)\n\nEnvironment \u7ed9\u4f60 Observation\nActor \u63a5\u6536\u5165 Observation, \u8f93\u51fa Action\nAction \u53cd\u9988\u7ed9 Environment, \u8ba1\u7b97\u51fa Reward \u53cd\u9988\u7ed9 Actor\n\u8981\u6c42 Reward \u6700\u5927\n\n\u4e0e GAN \u7684\u4e0d\u540c\u4e4b\u5904\uff0c\u4e0d\u7ba1\u662f\u751f\u6210\u5668\u8fd8\u662f\u5224\u522b\u5668\uff0c\u90fd\u662f\u4e00\u4e2anetwork\uff0c\u800cRL\u91cc\u9762\uff0cActor\u548cReward\u90fd\u662f\u9ed1\u76d2\u5b50\uff0c\u4f60\u53ea\u80fd\u770b\u5230\u7ed3\u679c\u3002Policy Gradient\nhttps://youtu.be/W8XF3ME8G2I\n\u5148\u662f\u7528\u5f88\u7c7b\u4f3c\u76d1\u7763\u5b66\u4e60\u7684\u601d\u8def\uff0c\u7ed9\u6bcf\u4e00\u6b65\u7684\u6700\u4f18\uff08\u6216\u6700\u5dee\uff09\u65b9\u6848\u4e00\u4e2alabel\uff0c\u6709label\u5c31\u80fd\u505aloss\u3002\u5148\u628a\u5b83\u53d8\u6210\u4e00\u4e2a\u4e8c\u5206\u7c7b\u7684\u95ee\u9898\u3002\n\u6253\u5206\u8fd8\u53ef\u4ee5\u4e0d\u4ec5\u4ec5\u662f\u201c\u597d\u201d\u6216\u201c\u4e0d\u597d\u201d\uff0c\u8fd8\u53ef\u4ee5\u662f\u4e00\u4e2a\u7a0b\u5ea6\uff0c\u6bd4\u59821.5\u6bd40.5\u7684\u201c\u652f\u6301\u201d\u529b\u5ea6\u8981\u5927\u4e00\u4e9b\uff0c\u800c-10\u663e\u7136\u610f\u5473\u7740\u4f60\u5343\u4e07\u4e0d\u8981\u8fd9\u4e48\u505a\uff0c\u975e\u5e38\u62d2\u7edd\u3002\n\u6bd4\u5982\u67d0\u4e00\u6b65\uff0c\u53ef\u4ee5\u6709\u4e09\u79cd\u8d70\u6cd5\uff0c\u53ef\u4ee5\u7528onehot\u6765\u8868\u793a\uff0c\u5176\u4e2d\u4e00\u79cd\u8d70\u6cd5\u53ef\u4ee5\u662f[1,0,0]$^T$\uff0c\u8868\u793a\u671f\u671b\u7684\u8d70\u6cd5\u662f\u7b2c\u4e00\u79cd\u3002\n\u4f46\u662f\u4e5f\u53ef\u4ee5\u662f[-1,0,0]$^T$\uff0c\u6807\u8bc6\u8fd9\u79cd\u8d70\u6cd5\u662f\u4e0d\u5efa\u8bae\u7684\n\u4e5f\u53ef\u4ee5\u662f[3.5,0,0]$^T$\u7b49\n\u540e\u9762\u4f1a\u75281, -1, 10, 3.5\u8fd9\u6837\u7684scalar\u6765\u8868\u793a\uff0c\u4f46\u8981\u8bb0\u4f4f\u5176\u5b9e\u5b83\u4eec\u662font-hot\u4e2d\u7684\u90a3\u4e2a\u975e\u96f6\u6570\u3002\n\n\u73b0\u5b9e\u4e16\u754c\u4e2d\u5f88\u591a\u573a\u666f\u4e0d\u53ef\u80fd\u6267\u884c\u5b8c\u4e00\u6b65\u540e\u5c31\u83b7\u5f97reward\uff0c\u6216\u8005\u662f\u5168\u5c40\u6700\u4f73\u7684reward\uff08\u6bd4\u5982\u4e0b\u56f4\u68cb\uff09\u3002v1\u4e00\u79cd\u601d\u8def\u662f\uff0c\u6bcf\u4e00\u6b65\u4e4b\u540e\uff0c\u628a\u6e38\u620f/\u68cb\u5c40\u8fdb\u884c\u5b8c\uff0c\u628a\u5f53\u524dreward\u548c\u540e\u7eed\u6240\u6709\u6b65\u9aa4\u7684reward\u52a0\u4e00\u8d77\u505areward -&gt; cumulated reward $\\rightarrow G_t = \\sum_{n=t}^Nr_n$v2\u8fd9\u79cd\u601d\u8def\u4ecd\u7136\u6709\u95ee\u9898\uff0c\u6e38\u620f\u6b65\u9aa4\u8d8a\u957f\uff0c\u5f53\u524d\u6b65\u5bf9\u6700\u7ec8\u6b65\u7684\u5f71\u54cd\u8d8a\u5c0f\u3002\u56e0\u6b64\u5f15\u5165\u4e00\u4e2a\u5c0f\u4e8e1\u7684\u6743\u91cd$\\gamma &lt; 1$: $G_1' = r_1 + \\gamma r_2 + \\gamma^2r_3 + \\cdots$\u8fd9\u6837\u8d8a\u8fdc\u7684\u6743\u91cd\u8d8a\u5c0f\uff1a $G_t' = \\sum_{n=t}^N \\color{red}{\\gamma^{n-t}} r_n$\n\u6ce8\u610f\uff0c\u76ee\u524d\u5f97\u5230\u7684G\u5c31\u662f\u4e3a\u4e86\u7ed9\u6bcf\u4e00\u6b21\u5bf9observation\u8fdb\u884c\u7684action\u505aloss\u7684\u5bf9\u8c61\u3002\nv3\u6807\u51c6\u5316reward\u3002\u4f60\u670910\u5206\uff0c\u662f\u9ad8\u662f\u4f4e\uff1f\u5982\u679c\u6240\u6709\u4eba\u90fd\u662f20\u5206\uff0c\u90a3\u5c31\u662f\u4f4e\u5206\uff0c\u6240\u4ee5\u4e0eG\u505a\u5bf9\u6bd4\u7684\u65f6\u5019\uff0c\u901a\u5e38\u8981\u51cf\u53bb\u4e00\u4e2a\u5408\u9002\u7684\u503cb\uff0c\u8ba9\u5f97\u5206\u7684\u5206\u5e03\u6709\u6b63\u6709\u8d1f\u3002Policy Gradient\u666e\u901a\u7684gradient descent\u662f\u641c\u96c6\u4e00\u904d\u6570\u636e\uff0c\u5c31\u53ef\u4ee5\u8dd1for\u5faa\u73af\u4e86\uff0c\u800cPG\u4e0d\u884c\uff0c\u4f60\u6bcf\u6b21\u5f97\u5230\u68af\u5ea6\u540e\uff0c\u8981\u91cd\u91c7\u4e00\u904d\u6837\uff0c\u5176\u5b9e\u4e5f\u5f88\u597d\u7406\u89e3\uff0c\u4f60\u4e0b\u4e86\u67d0\u4e00\u6b65\uff0c\u7ecf\u8fc7\u540e\u7eed50\u6b65\u540e\uff0c\u8f93\u4e86\uff0c\u4f60\u7684\u4e0b\u4e00\u8f6e\u6d4b\u8bd5\u5e94\u8be5\u662f\u4e0b\u4e00\u76d8\u968f\u673a\u7684\u68cb\uff0c\u800c\u4e0d\u662f\u628a\u66f4\u65b0\u597d\u7684\u53c2\u6570\u518d\u7528\u5230\u540c\u4e00\u76d8\u68cb\u53bb\u3002\u8fd8\u662f\u4e0d\u600e\u4e48\u597d\u7406\u89e3\uff0c\u81f3\u5c11\u8981\u77e5\u9053\uff0c\u6211\u505a\u53c2\u6570\u662f\u4e0d\u4e3a\u4e86\u8bad\u7ec3\u51fa\u8fd9\u4e00\u76d8\u68cb\u662f\u600e\u4e48\u4e0b\u51fa\u6765\u7684\uff0c\u800c\u662f\u6839\u636e\u8fd9\u4e2a\uff08\u5927\u591a\u662f\u8f93\u4e86\u7684\uff09\u7ed3\u679c\uff0c\u4ee5\u53ca\u5b66\u5230\u7684\u68af\u5ea6\uff0c\u53bb\u4e0b\u4e00\u76d8\u65b0\u7684\u68cb\u8bd5\u8bd5\u3002Actor Critic\nCritic:\nGiven actor $\\theta$, how good it is when observing s (and taking action a)\n\nValue function $V^\\theta(s)$:\n\u4f7f\u7528actor $\\theta$\u7684\u65f6\u5019\uff0c\u9884\u6d4b\u4f1a\u5f97\u5230\u591a\u5c11\u7684cumulated reward\n\u5206\u9ad8\u5206\u4f4e\u5176\u5b9e\u8fd8\u662f\u53d6\u51b3\u4e8eactor\uff0c\u540c\u6837\u7684\u5c40\u9762\uff0c\u4e0d\u540c\u7684actor\u80af\u5b9a\u62ff\u7684\u5206\u4e0d\u540c\u3002\n\nMonte-Carlo based approach (MC)\n\u8499\u7279\u5361\u6d1b\u641c\u7d22\uff0c\u6b63\u5e38\u628a\u6e38\u620f\u73a9\u5b8c\uff0c\u5f97\u5230\u76f8\u5e94\u7684G.Temporal-difference approach (TD)\n\u4e0d\u7528\u73a9\u5b8c\u6574\u4e2a\u6e38\u620f\uff0c\u5c31\u7528\u524d\u540e\u65f6\u95f4\u6bb5\u7684\u6570\u636e\u6765\u5f97\u5230\u8f93\u51fa\u3002\n\u5173\u952e\u8bcd\uff1a\n\u6211\u4eec\u65e2\u4e0d\u77e5\u9053v(t+1)\uff0c\u4e5f\u4e0d\u77e5\u9053v(t)\uff0c\u4f46\u786e\u5b9e\u80fd\u77e5\u9053v(t+1)-v(t).\n\n\u8fd9\u4e2a\u4f8b\u5b50\u6ca1\u770b\u61c2\uff0c\u540e\u9762\u4e03\u6b21\u6e38\u620f\u4e3a\u4ec0\u4e48\u6ca1\u6709sa\u4e86\uff1fv3.5\u4e0a\u6587\u63d0\u5230\u7684V\u53ef\u4ee5\u7528\u6765\u4f5c\u66f4\u65e9\u63d0\u5230\u7684b:\n${S_t, a_t}\\ A_t = G_t' - V^\\theta(S_t)$\n\u56de\u987e\u4e00\u4e0b\uff0c$V^\\theta(S_t)$\u662f\u770b\u5230\u67d0\u4e2a\u6e38\u620f\u753b\u9762\u65f6\u7b97\u51fa\u6765\u7684reward\n\u5b83\u5305\u542b$S_t$\u72b6\u6001\u4e0b\uff0c\u540e\u7eed\u5404\u79cd\u6b65\u9aa4\u7684reward\u7684\u5e73\u5747\u503c\n\u800c$G_t'$\u5219\u662f\u8fd9\u4e00\u6b65\u4e0b\u7684rewared\n\u4e24\u4e2a\u6570\u76f8\u51cf\u5176\u5b9e\u5c31\u662f\u770b\u4f60\u7684\u8fd9\u4e00\u6b65\u662f\u6bd4\u5e73\u5747\u6c34\u5e73\u597d\u8fd8\u662f\u5dee\n\u6bd4\u5982\u4f60\u5f97\u5230\u4e86\u4e2a\u8d1f\u503c\uff0c\u4ee3\u8868\u5728\u5f53\u524d\u573a\u666f\u4e0b\uff0c\u8fd9\u4e2aactor\u6267\u884c\u7684\u6b65\u9aa4\u662f\u4f4e\u4e8e\u5e73\u5747\u80dc\u7387\u7684\uff0c\u9700\u8981\u6362\u4e00\u79cd\u8d70\u6cd5\u3002\n\nv43.5\u7248\u4e0b\uff0cG\u53ea\u6709\u4e00\u4e2a\u6837\u672c\uff08\u4e00\u6b21\u6e38\u620f\uff09\u7684\u7ed3\u679c\uff0c\u8fd9\u4e2a\u7248\u672c\u91cc\uff0c\u628ast\u518d\u8d70\u4e00\u6b65\uff0c\u8bd5\u96be$S_{t+1}$\u7684\u5404\u79cd\u8d70\u6cd5\u4e0breward\u7684\u5e73\u5747\u503c\uff0c\u7528\u5b83\u6765\u66ff\u6362G'\uff0c\u800c\u5b83\u7684\u503c\uff0c\u5c31\u662f\u5f53\u524d\u7684reward\u52a0\u4e0at+1\u65f6\u523b\u7684V:\n$r_t + V^\\theta(S_{t+1}) - V^\\theta(S_t)$\n\n\u8fd9\u5c31\u662f\uff1aAdvantage Actor-Critic\n\u5c31\u770b\u56fe\u800c\u8a00\uff0c\u611f\u89c9\u5c31\u662f\u575a\u6301\u8fd9\u4e00\u6b65\u8d70\u5b8c\uff0c\u540e\u7eed\u6240\u6709\u53ef\u80fd\u7684rewawrd\uff0c \u51cf\u53bb\uff0c \u4ece\u8fd9\u4e00\u6b65\u5f00\u59cb\u5c31\u8bd5\u9a8c\u6240\u6709\u8d70\u6cd5\u7684rewardMore:Deep Q Network (DQN)\nhttps://arxiv.org/abs/1710.02298\nhttps://youtu.be/o_g9JUMw1Oc\nhttps://youtu.be/2-zGCx4iv_k\n\nReward Shaping\n\u524d\u9762\u8bf4\u8fc7\u5f88\u591a\u573a\u666f\u8981\u5f97\u5230reward\u975e\u5e38\u56f0\u96be\uff08\u65f6\u95f4\u957f\uff0c\u6b65\u9aa4\u957f\uff0c\u6216\u6839\u672c\u4e0d\u4f1a\u7ed3\u675f\uff09\uff0c\u8fd9\u6837\u7684\u60c5\u51b5\u53ebsparse reward\uff0c\u4eba\u7c7b\u53ef\u4ee5\u5229\u7528\u4e00\u4e9b\u5df2\u77e5\u77e5\u8bc6\u53bb\u4eba\u4e3a\u8bbe\u7f6e\u4e00\u4e9breward\u4ee5\u589e\u5f3a\u6216\u524a\u5f31\u673a\u5668\u7684\u67d0\u4e9b\u884c\u4e3a\u3002\u6bd4\u5982\u6e38\u620f\uff1a\n\u539f\u5730\u4e0d\u52a8\u4e00\u76f4\u6162\u6162\u51cf\u5206\n\u6bcf\u591a\u6d3b\u4e00\u79d2\u4e5f\u6162\u6162\u51cf\u5206\uff08\u8feb\u4f7f\u4f60\u53bb\u83b7\u5f97\u66f4\u9ad8\u7684reward, \u907f\u514d\u5b66\u5230\u6839\u672c\u5c31\u4e0d\u53bb\u6218\u6597\u7684\u65b9\u5f0f\uff09\n\u6bcf\u6389\u4e00\u6b21\u8840\u4e5f\u51cf\u5206\n\u6bcf\u6740\u4e00\u4e2a\u654c\u4eba\u5c31\u52a0\u5206\n\u4ee5\u6b64\u7c7b\u63a8\uff0c\u8fd9\u6837\u5c31\u4e0d\u81f3\u4e8e\u8981\u7b49\u5230\u4e00\u573a\u6bd4\u8d5b\u7ed3\u675f\u624d\u6709\u201c\u4e00\u4e2a\u201dreward\n\n\u53c8\u6bd4\u5982\u8bad\u7ec3\u673a\u68b0\u624b\u628a\u4e00\u5757\u6709\u6d1e\u7684\u6728\u677f\u5957\u5230\u4e00\u6839\u68cd\u5b50\u4e0a\uff1a\n\u79bb\u68cd\u5b50\u8d8a\u8fd1\uff0c\u5c31\u6709\u4e00\u5b9a\u7684\u52a0\u5206\n\u5176\u5b83\u6709\u52a9\u4e8e\u5957\u8fdb\u53bb\u7684\u89c4\u5219\n\n\u8fd8\u53ef\u4ee5\u7ed9\u673a\u5668\u52a0\u4e0a\u597d\u5947\u5fc3\uff0c\u8ba9\u673a\u5668\u770b\u5230\u6709\u7528\u7684\u201c\u65b0\u7684\u4e1c\u897f\u201d\u4e5f\u52a0\u5206\u3002No Reward, learn from demostration\n\u53ea\u6709\u6e38\u620f\u573a\u666f\u624d\u4f1a\u6709\u660e\u786e\u7684reward\uff0c\u5927\u591a\u6570\u73b0\u5b9e\u573a\u666f\u90fd\u662f\u6ca1\u6709reward\u7684\uff0c\u6bd4\u5982\u8bad\u7ec3\u81ea\u52a8\u9a7e\u9a76\u7684\u8f66\uff0c\u6216\u8005\u592a\u8fc7\u6b7b\u677f\u7684reward\u65e2\u4e0d\u80fd\u9002\u5e94\u53d8\u5316\uff0c\u4e5f\u5bb9\u6613\u88ab\u6253\u51fa\u6f0f\u6d1e\uff0c\u6bd4\u5982\u673a\u5668\u4eba\u4e09\u5b9a\u5f8b\u91cc\uff0c\u673a\u5668\u4eba\u4e0d\u80fd\u4f24\u5bb3\u4eba\u7c7b\uff0c\u5374\u6ca1\u6709\u7981\u6b62\u56da\u7981\u4eba\u7c7b\uff0c\u53c8\u6bd4\u5982\u6446\u653e\u76d8\u5b50\uff0c\u5374\u6ca1\u6709\u7ed9\u51fa\u529b\u5ea6\uff0c\u7b49\u76d8\u5b50\u6454\u788e\u4e86\uff0c\u518d\u53bb\u8865\u4e00\u6761\ud84b\udc68\u788e\u76d8\u5b50\u5c31\u8d1freward\u7684\u89c4\u5219\uff0c\u4e5f\u665a\u4e86\uff0c\u7531\u6b64\u5f15\u5165\u6a21\u4eff\u5b66\u4e60\uff1aImitation Learning\n\u7565Life-Long Learning\n\u6301\u7eed\u5b66\u4e60\uff0c\u673a\u5668\u5b66\u4e60\u5230\u4e00\u4e2a\u6a21\u578b\u540e\uff0c\u7ee7\u7eed\u5b66\u4e0b\u4e00\u4e2a\u6a21\u578b\uff08\u4efb\u52a1\uff09\u3002\n\u4e3a\u4ec0\u4e48\u4e0d\u4e00\u4e2a\u4efb\u52a1\u5b66\u4e00\u4e2a\u6a21\u578b\n\u4e0d\u53ef\u80fd\u53bb\u5b58\u50a8\u6240\u6709\u7684\u6a21\u578b\n\u4e00\u4e2a\u4efb\u52a1\u7684\u77e5\u8bc6\u4e0d\u80fd\u8f6c\u79fb\u5230\u53e6\u4e00\u4e2a\u4efb\u52a1\n\n\n\u4e3a\u4ec0\u4e48\u4e0d\u76f4\u63a5\u7528\u8fc1\u79fb\u5b66\u4e60\uff08\u8fc1\u79fb\u5b66\u4e60\u53ea\u5173\u6ce8\u8fc1\u79fb\u540e\u7684\u65b0\u4efb\u52a1\uff09\n\nResearch Directions\nSelective Synaptic Plasticity\n\u9009\u62e9\u6027\u7684\u795e\u7ecf\u7a81\u89e6\u7684\u53ef\u5851\u6027\uff1f\uff08Regularization-based Approach\uff09Catastrophic Forgetting \u707e\u96be\u6027\u7684\u9057\u5fd8\n\u5728\u4efb\u52a11\u4e0a\u5b66\u5230\u7684\u53c2\u6570\uff0c\u5230\u4efb\u52a12\u91cc\u63a5\u7740\u8bad\u7ec3\uff0c\u987a\u7740\u68af\u5ea6\u5230\u4e86\u4efb\u52a12\u7684\u6700\u4f18\u53c2\u6570\uff0c\u663e\u7136\u4e0d\u518d\u662f\u4efb\u52a11\u7684\u505a\u4ee5\u53c2\uff0c\u8fd9\u53eb\u707e\u96be\u6027\u7684\u9057\u5fd8\u4e00\u79cd\u601d\u8def\uff1a\u4efb\u52a12\u91cc\u68af\u5ea6\u8981\u66f4\u65b0\u672a\u5fc5\u8981\u5f80\u4e2d\u5fc3\uff0c\u4e5f\u53ef\u4ee5\u5f80\u4e2d\u4e0b\u65b9\uff0c\u8fd9\u6837\u65e2\u5728\u4efb\u52a12\u7684\u4f4eloss\u533a\u57df\uff0c\u4e5f\u6ca1\u6709\u8dd1\u51fa\u4efb\u52a11\u7684\u4f4eloss\u533a\u57df\uff0c\u5b9e\u73b0\u7684\u65b9\u5f0f\u662f\u627e\u5230\u5bf9\u4e4b\u524d\u4efb\u52a1\u5f71\u54cd\u6bd4\u8f83\u5c0f\u7684\u53c2\u6570\uff0c\u4e3b\u8981\u53bb\u66f4\u65b0\u90a3\u4e9b\u53c2\u6570\u3002\u6bd4\u5982\u4e0a\u56fe\u4e2d\uff0c\u663e\u7136$\\theta_1$\u5bf9\u4efb\u52a11\u7684loss\u5f71\u54cd\u8d8a\u5c0f\uff0c\u4f46\u662f\u66f4\u65b0\u5b83\u4e4b\u540e\u4f1a\u663e\u8457\u5f71\u54cd\u4efb\u52a12\u7684loss\uff0c\u800c$\\theta_2$\u7684\u6539\u52a8\u624d\u662f\u9020\u6210\u4efb\u52a11loss\u53d8\u5927\u7684\u5143\u51f6\u3002Elastic Weight Consolidation(EWC)\nhttps://arxiv.org/abs/1612.00796\n\nSynaptic Intelligence(SI)\nhttps://arxiv.org/abs/1703.04200\n\nMemory Aware Synapses(MAS)\nhttps://arxiv.org/abs/1711.09601\n\nRWalk\nhttps://arxiv.org/abs/1801.10112\n\nSliced Cramer Preservation(SCP)\nhttps://openreview.net/forum?id=BJge3TNKwH\n\nMemory Reply\n\n\u5728\u8bad\u7ec3task1\u7684\u65f6\u5019\uff0c\u540c\u65f6\u8bad\u7ec3\u4e00\u4e2a\u76f8\u5e94\u7684generator\n\u8bad\u7ec3task2\u7684\u65f6\u5019\uff0c\u7528task1\u7684generator\u751f\u6210pseudo-data\uff0c\u4e00\u8d77\u6765\u8bad\u7ec3\u751f\u6210\u65b0\u7684model\n\u540c\u65f6\u4e5f\u8bad\u7ec3\u51fa\u4e00\u4e2atask1&amp;2\u7684generator\n...\n\nNetwork Compress\npruning (\u526a\u679d)\nNetworks ar typically over-parameterized (there is significant redundant weights or neurons)\n\u53ef\u4ee5\u770b\u54ea\u4e9b\u53c2\u6570\u901a\u5e38\u6bd4\u8f83\u5927\uff0c\u6216\u503c\u7684\u53d8\u5316\u4e0d\u5f71\u54cdloss\uff08\u68af\u5ea6\u5c0f\uff09-&gt; \u6743\u91cd\uff0c\u4e3a0\u7684\u6b21\u6570\u5c11 -&gt; \u795e\u7ecf\u5143 \u7b49\u7b49\n\u526a\u679d\u540e\u7cbe\u5ea6\u80af\u5b9a\u662f\u4f1a\u4e0b\u964d\u7684\n\u9700\u8981\u63a5\u7740fine-tune\n\u4e00\u6b21\u4e0d\u8981prune to much\n\u526a\u53c2\u6570\u548c\u526a\u795e\u7ecf\u5143\u6548\u679c\u662f\u4e0d\u4e00\u6837\u7684\n\u526a\u53c2\u6570\u4f1a\u5f71\u54cd\u77e9\u9635\u8fd0\u7b97\uff0c\u7ee7\u800c\u5f71\u54cdGPU\u52a0\u901f\n\n\n\n\u90a3\u4e48\u4e3a\u4ec0\u4e48\u4e0d\u76f4\u63a5train\u4e00\u4e2a\u5c0f\u7684network\u5462\uff1f\n\u5c0f\u7684network\u901a\u5e38\u5f88\u96betrain\u5230\u540c\u6837\u7684\u51c6\u786e\u7387\u3002 \uff08\u5927\u4e50\u900f\u5047\u8bf4\uff09\n\nKnowledge Distillation (\u77e5\u8bc6\u84b8\u998f)\n\u8001\u5e08\u6a21\u578b\u8bad\u7ec3\u51fa\u6765\u7684\u7ed3\u679c\uff0c\u7528\u5b66\u751f\u6a21\u578b\uff08\u5c0f\u6a21\u578b\uff09\u53bb\u6a21\u62df\uff08\u5373\u662f\u6a21\u62df\u6574\u4e2a\u8f93\u51fa\uff0c\u800c\u4e0d\u662f\u6a21\u62df\u5206\u7c7b\u7ed3\u679c\uff09\uff0c\u8ba9\u5c0f\u6a21\u578b\u80fd\u8fbe\u5230\u5927\u6a21\u578b\u540c\u6837\u7684\u7ed3\u679c\u3002\u4e00\u822c\u8fd8\u4f1a\u5728\u8f93\u51fa\u7684softmax\u91cc\u9762\u52a0\u4e0a\u6e29\u5ea6\u53c2\u6570\uff08\u5373\u5e73\u6ed1\u8f93\u51fa\uff0c\u4e0d\u540c\u5927\u5c0f\u7684\u6570\u9664\u4e00\u4e2a\u5927\u4e8e1\u7684\u6570\uff0c\u663e\u7136\u8d8a\u5927\u88ab\u7f29\u5c0f\u7684\u500d\u6570\u4e5f\u8d8a\u5927\uff0c\u6bd4\u5982100/10=10\uff0c\u5c11\u4e8690\uff0c10/10=1, \u53ea\u5c11\u4e869\uff0c\u5dee\u522b\u4e5f\u4ece90\u53d8\u6210\u4e869\uff09(\u6216\u8005\u5174\u8da3\u4e2a\u6781\u7aef\u7684\u4f8b\u5b50\uff0cT\u53d6\u65e0\u7a77\u5927\uff0c\u90a3\u4e48\u6bcf\u4e2a\u8f93\u51fa\u5c31\u57fa\u672c\u76f8\u7b49\u4e86)Parameter Quantization\n\nUsing less bits to represent a value\nWeight clustering\n\u628aweights\u5206\u6210\u9884\u5148\u786e\u5b9a\u597d\u7684\u7c07\uff08\u6216\u6839\u636e\u5206\u5e03\u6765\u786e\u5b9a\uff09\n\u5bf9\u6bcf\u7c07\u53d6\u5747\u503c\uff0c\u7528\u5747\u503c\u4ee3\u66ff\u6574\u4e2a\u7c07\u91cc\u6240\u6709\u7684\u503c\n\n\nrepresent frequent clusters by less bits, represent rare clusters by more bits\nHuffman encoding\n\n\n\n\u6781\u9650\uff0cBinary Weights\uff0c\u7528\u4e24\u4e2abits\u6765\u63cf\u8ff0\u6574\u4e2a\u7f51\u7edc\uff0c\u6269\u5c55\u9605\u8bfb\u3002Depthwise Separable Convolution\n\u56de\u987e\u4e0bCNN\u7684\u673a\u5236\uff0c\u53c2\u6570\u91cf\u662f\uff1a\n\u5377\u79ef\u6838\u7684\u5927\u5c0f x \u8f93\u5165\u56fe\u50cf\u7684\u901a\u9053\u6570 x \u8f93\u51fa\u7684\u901a\u9053\u6570\n($k\\times k$) x in_channel x out_channel\n\n\u800cDepthwise Separable Convolution\u7531\u4e24\u4e2a\u5377\u79ef\u7ec4\u6210\uff1a\nDepthwise Convolution\n\u5f88\u591a\u4eba\u5bf9CNN\u7684\u8bef\u89e3\u521a\u597d\u5c31\u662fDepthwise Convolution\u7684\u6837\u5b50\uff0c\u5373\u4e00\u4e2a\u5377\u79ef\u6838\u5bf9\u5e94\u4e00\u4e2a\u8f93\u5165\u7684channel\uff08\u4e8b\u5b9e\u4e0a\u662f\u4e00\u7ec4\u5377\u79ef\u6838\u5bf9\u5e94\u6240\u6709\u7684\u8f93\u5165channel\uff09\n\u56e0\u6b64\u5b83\u7684\u53c2\u6570\u4e2a\u6570 k x k x in_channel\n\n\nPointWise Convolution\n\u8fd9\u91cc\u662f\u4e3a\u4e86\u8865\u4e0a\u901a\u9053\u4e0e\u901a\u9053\u8fd9\u95f4\u7684\u5173\u7cfb\n\u4e8e\u662f\u7528\u4e86\u4e00\u4e2a1x1\u7684\u6807\u51c6\u5377\u79ef\uff08\u5373\u6bcf\u4e00\u7ec4\u5377\u79ef\u6838\u5bf9\u5e94\u8f93\u5165\u7684\u6240\u6709\u901a\u9053\uff09\n\u8f93\u51fachannel\u4e5f\u7531\u8fd9\u6b21\u5377\u79ef\u51b3\u5b9a\n\u5e94\u7528\u6807\u51c6\u5377\u79ef\u53c2\u6570\u91cf\uff1a(1x1) x in_channel x out_channel\n\n\n\n\u4e24\u4e2a\u53c2\u6570\u91cf\u505a\u5bf9\u6bd4, \u8bbein_channel = I, out_channel = O\n$p_1 = (k\\times k) \\times I \\times O$\n$p_2 = (k\\times k) \\times I + (1\\times 1) \\times I \\times O = (k\\times k) \\times I + I \\times O$\n$\\frac{p_2}{p_1} = \\frac{I\\cdot(k^2 + O)}{I\\cdot{k^2\\cdot O}}\n\n= \\frac{1}{O} + \\frac{1}{k^2} \\approx \\frac{1}{k^2} \n$O\u4ee3\u8868out_channel\uff0c\u5927\u578b\u7f51\u7edc\u91cc256\uff0c512\u6bd4\u6bd4\u7686\u662f\uff0c\u6240\u4ee5\u5b83\u53ef\u4ee5\u5ffd\u7565\uff0c\u90a3\u4e48\u524d\u540e\u53c2\u6570\u91cf\u5c31\u7531$k^2$\u51b3\u5b9a\u4e86\uff0c\u5982\u679c\u662f\u5927\u5c0f\u4e3a3\u7684\u5377\u79ef\u6838\uff0c\u53c2\u6570\u91cf\u5c31\u53d8\u62101/9\u4e86\uff0c\u5df2\u7ecf\u662f\u538b\u7f29\u5f97\u5f88\u53ef\u89c2\u4e86\u3002Low rank approximation\n\u4e0a\u9762\u662f\u5e94\u7528\uff0c\u539f\u7406\u5c31\u662fLow rank approximation\u4ee5\u5168\u8fde\u63a5\u7f51\u7edc\u4e3e\u4f8b\n\u5982\u679c\u4e00\u4e2a\u4e00\u5c42\u7684\u7f51\u7edc\uff0c\u8f93\u5165N\uff0c \u8f93\u51faM\uff0c\u53c2\u6570\u4e3aW\uff0c\u90a3\u4e48\u53c2\u6570\u91cf\u662fMxN\n\u4e2d\u95f4\u63d2\u5165\u4e00\u4e2a\u7ebf\u6027\u5c42K\uff0c\n\u53c2\u6570\u53d8\u6210\uff1aV:N-&gt;K, U:K-&gt;M,\n\u53c2\u6570\u91cf\uff1aNxK + KxM\n\n\n\u53ea\u8981K\u8fdc\u5c0f\u4e8eM\u548cN\uff08\u6bd4\u5982\u6570\u91cf\u7ea7\u90fd\u4e0d\u4e00\u81f4\uff09\uff0c\u90a3\u4e48\u53c2\u6570\u91cf\u662f\u6bd4\u76f4\u63a5MxN\u8981\u5c0f\u5f88\u591a\u7684\n\u8fd9\u4e5f\u9650\u5236\u4e86\u80fd\u591f\u5b66\u4e60\u7684\u53c2\u6570\u7684\u53ef\u80fd\u6027\uff08\u6bd5\u7adf\u539f\u59cb\u53c2\u6570\u91cf\u600e\u4e48\u53d6\u90fd\u884c\uff09\n\u6240\u4ee5\u53ebLow rank approximation\n\n\n\nto learn moreSqueezeNet\nhttps://arxiv.org/abs/1602.07360\n\nMobileNet\nhttps://arxiv.org/abs/1704.04861\n\nShuffleNet\nhttps://arxiv.org/abs/1707.01083\n\nXception\nhttps://arxiv.org/abs/1610.02357\n\nGhostNet\nhttps://arxiv.org/abs/1911.11907\n\nDynamic Computation\n\n\u540c\u4e00\u4e2a\u7f51\u7edc\uff0c\u81ea\u5df1\u6765\u51b3\u5b9a\u8ba1\u7b97\u91cf\uff0c\u6bd4\u5982\u662f\u5728\u4e0d\u540c\u7684\u8bbe\u5907\u4e0a\uff0c\u53c8\u6216\u8005\u662f\u5728\u540c\u8bbe\u5907\u7684\u4e0d\u540c\u65f6\u671f\uff08\u6bd4\u5982\u95f2\u65f6\u548c\u5fd9\u65f6\uff0c\u6bd4\u5982\u7535\u91cf\u5145\u8db3\u548c\u865a\u7535\u65f6\uff09\n\u4e3a\u4ec0\u4e48\u4e0d\u4e3a\u4e0d\u540c\u7684\u573a\u666f\u51c6\u5907\u4e0d\u540c\u7684model\u5462\uff1f\n\u53cd\u800c\u9700\u8981\u66f4\u5927\u7684\u5b58\u50a8\u7a7a\u95f4\uff0c\u4e0e\u95ee\u9898\u8d77\u6e90\uff08\u8d44\u6e90\u74f6\u9888\uff09\u51b2\u7a81\u4e86\u3002\n\n\n\nDynamic Depth\n\u5728\u90e8\u5206layer\u4e4b\u540e\uff0c\u6bcf\u4e00\u5c42\u90fd\u63d2\u4e00\u4e2a\u989d\u5916\u7684layer\uff0c\u63d0\u524d\u505a\u9884\u6d4b\u548c\u8f93\u51fa\uff0c\u7531\u8c03\u7528\u8005\u6839\u636e\u5177\u4f53\u60c5\u51b5\u51b3\u5b9a\u9700\u8981\u591a\u6df1\u7684depth\u6765\u4ea7\u751f\u8f93\u51fa\u3002\u8bad\u7ec3\u7684\u65f6\u5019\u65e2\u8981\u8003\u8651\u7f51\u7edc\u7ec8\u70b9\u7684loss\uff0c\u8fd8\u8981\u8003\u8651\u6240\u6709\u63d0\u524d\u7ed3\u675f\u7684layer\u7684softmax\u7ed3\u679c\uff0c\u52a0\u5230\u4e00\u8d77\u7b97\u4e2a\u5927\u7684LossMulti-Scale Dense Network(MSDNet)\nhttps://arxviv.org/abs/1703.09844\n\nDynamic Width\n\u8bad\u7ec3\u7684\u65f6\u5019\uff08\u540c\u65f6\uff1f\uff09\u5bf9\u4e0d\u540c\u5bbd\u5ea6\uff08\u5373\u795e\u7ecf\u5143\u4e2a\u6570\uff0c\u6216filter\u4e2a\u6570\uff09\u8fdb\u884c\u8ba1\u7b97\uff08\u5168\u90e8\u6df1\u5ea6\uff09\uff0c\u4e5f\u662f\u628a\u6bcf\u79cd\u5bbd\u5ea6\u6700\u540e\u4ea7\u751f\u7684loss\u52a0\u8d77\u6765\u5f53\u4f5c\u603b\u7684Loss\u5728\u4fdd\u7559\u7684\u5bbd\u5ea6\u91cc\uff0c\u53c2\u6570\u662f\u4e00\u6837\u7684\uff08\u6240\u4ee5\u5e94\u8be5\u5c31\u662f\u540c\u4e00\u8f6e\u8bad\u7ec3\u91cc\u7684\u53c2\u6570\u4e86\uff09Slimmable Neural Networks\nhttps://arxiv.org/abs/1812.08928\n\nComputation based on Sample Difficulty\n\u4e0a\u8ff0\u51b3\u5b9a\u91c7\u7528\u4ec0\u4e48\u6837\u7684network/model\u7684\u662f\u4eba\u5de5\u51b3\u5b9a\u7684\uff0c\u90a3\u4e48\u6709\u6ca1\u6709\u8ba9\u673a\u5668\u81ea\u5df1\u51b3\u5b9a\u91c7\u7528\u4ec0\u4e48\u7f51\u7edc\u7684\u5462\uff1f\u6bd4\u5982\u4e00\u5f20\u7b80\u5355\u7684\u56fe\u7247\uff0c\u51e0\u5c42\u6216\u4e00\u5c42\u7f51\u5f20\u5c31\u80fd\u5f97\u5230\u7ed3\u679c\uff0c\u800c\u53e6\u4e00\u5f20\u53ef\u80fd\u524d\u666f\u548c\u6216\u80cc\u666f\u66f4\u590d\u6742\u7684\u56fe\u7247\uff0c\u9700\u8981\u5f88\u591a\u5c42\u624d\u80fd\u6700\u7ec8\u628a\u7279\u5f81\u63d0\u53d6\u51fa\u6765\uff0c\u5e94\u7528\u540c\u4e00\u4e2a\u6a21\u578b\u7684\u8bdd\u5c31\u6709\u70b9\u8d44\u6e90\u6d6a\u8d39\u4e86\u3002\nSkipNet: Learning Dynamic Routing in Convolutional Networks\nRuntime Neural Pruning\nBlockDrop: Dynamic Inference Paths in Residual Networks\n\nMeta Learning\n\n\u5b66\u4e60\u7684\u5b66\u4e60\u3002\n\u4e4b\u524d\u7684machine learning\uff0c\u8f93\u51fa\u662f\u660e\u786e\u7684\u4efb\u52a1\uff0c\u6bd4\u5982\u662f\u4e00\u4e2a\u6570\u5b57\uff0c\u8fd8\u662f\u4e00\u4e2a\u5206\u7c7b\uff1b\u800cmeta-learning\uff0c\u8f93\u51fa\u662f\u4e00\u4e2amodel/network\uff0c\u7528\u8fd9\u4e2amodel\uff0c\u53ef\u4ee5\u53bb\u505amachine learning\u7684\u4efb\u52a1\u3002\n\u5b83\u5c31\u76f8\u5f53\u4e8e\u4e00\u4e2a\u201c\u8fd4\u51fd\u6570\u7684\u51fd\u6570\u201d\nmeta-learning \u5c31\u662f\u8ba9\u673a\u5668\u5b66\u4f1a\u53bb\u67b6\u6784\u4e00\u4e2a\u7f51\u7edc\uff0c\u521d\u59cb\u5316\uff0c\u5b66\u4e60\u7387\u7b49\u7b49 $\\leftarrow \\varPhi$: learnable components\ncategorize meta learning based on what is learnable\n\n\n\n\n\u4e0d\u518d\u6df1\u5165\n", "categories": [{"name": "posts", "slug": "posts", "permalink": "/category/posts/"}], "tags": [{"name": "\u674e\u5b8f\u6bc5", "slug": "\u674e\u5b8f\u6bc5", "permalink": "/tag/%E6%9D%8E%E5%AE%8F%E6%AF%85/"}, {"name": "\u673a\u5668\u5b66\u4e60", "slug": "\u673a\u5668\u5b66\u4e60", "permalink": "/tag/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"}, {"name": "Adversarial Attack", "slug": "Adversarial Attack", "permalink": "/tag/Adversarial%20Attack/"}, {"name": "Imitation Learning", "slug": "Imitation Learning", "permalink": "/tag/Imitation%20Learning/"}, {"name": "Life-Long Learning", "slug": "Life-Long Learning", "permalink": "/tag/Life-Long%20Learning/"}, {"name": "Meta Learning", "slug": "Meta Learning", "permalink": "/tag/Meta%20Learning/"}, {"name": "Knowledge Distillation", "slug": "Knowledge Distillation", "permalink": "/tag/Knowledge%20Distillation/"}]}, {"title": "\u674e\u5b8f\u6bc5MACHINE LEARNING 2021 SPRING\u7b14\u8bb0[3]", "date": "2021-10-14T13:25:00-00.00", "path": "/archives/%E6%9D%8E%E5%AE%8F%E6%AF%85MACHINE-LEARNING-2021-SPRING%E7%AC%94%E8%AE%B0-3/", "text": "CNN\n\nReceptive field\n\n\u4e0d\u7ba1\u662f\u8ba1\u7b97\u673a\uff0c\u8fd8\u662f\u4eba\u8111\uff0c\u53bb\u8ba4\u4e00\u4e2a\u7269\uff0c\u90fd\u662f\u53bb\u5224\u65ad\u7279\u5b9a\u7684patten\uff08\u6240\u4ee5\u5c31\u4f1a\u6709\u9519\u8ba4\u7684\u56fe\u7247\u4ea7\u751f\uff09\uff0c\u8fd9\u4e5f\u8bf4\u660e\uff0c\u5982\u679c\u795e\u7ecf\u7f51\u7edc\u8981\u53bb\u8fa8\u8bc6\u7269\u4f53\uff0c\u662f\u4e0d\u9700\u8981\u6bcf\u4e2a\u795e\u7ecf\u5143\u90fd\u628a\u6574\u5f20\u56fe\u7247\u770b\u4e00\u6b21\u7684\uff0c\u53ea\u9700\u8981\u5173\u6ce8\u4e00\u4e9b\u7279\u5f81\u533a\u57df\u5c31\u597d\u4e86\u3002\uff08\u611f\u53d7\u91ce, Receptive field)\u5982\u679c\u4f60\u4e00\u76f4\u75283x3\uff0c\u4f1a\u4e0d\u4f1a\u770b\u4e0d\u5230\u5927\u7684patten\u5462\uff1f$\\rightarrow$ \u4f1a\u4e5f\u4e0d\u4f1a\u3002\u9996\u5148\uff0c\u5c0f\u7684filter\u5f53\u7136\u662f\u4e0d\u53ef\u80fd\u770b\u5230\u5b83\u7684\u611f\u53d7\u91ce\u4ee5\u5916\u7684\u90e8\u5206\uff0c\u4f46\u662f\uff0c\u795e\u7ecf\u7f51\u7edc\u662f\u591a\u5c42\u67b6\u6784\uff0c\u4f60\u8fd9\u5c42\u7684\u8f93\u51fa\u518d\u88ab\u5377\u4e00\u6b21\uff0c\u8fd9\u65f6\u5019\u6bcf\u4e00\u4e2a\u6570\u5b57\u4ee3\u8868\u7684\u5c31\u662f\u4e4b\u524d\u76849\u4e2a\u50cf\u7d20\u8ba1\u7b97\u7684\u7ed3\u679c\uff0c\u8fd9\u4e00\u8f6e\u76849\u4e2a\u6570\u5b57\u5c31\u662f\u4e0a\u4e00\u5c42\u768481\u4e2a\u50cf\u7d20\uff08\u56e0\u4e3astride\u7684\u539f\u56e0\uff0c\u5927\u90e8\u5206\u662f\u91cd\u590d\u7684\uff09\u7684\u8ba1\u7b97\u7ed3\u679c\uff0c\u6362\u8a00\u4e4b\uff0c\u611f\u53d7\u91ce\u5927\u5927\u589e\u5f3a\u4e86\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u4f60\u53ea\u9700\u8981\u589e\u52a0\u5c42\u6570\uff0c\u5c31\u53ef\u4ee5\u5728\u5c0f\u7684filter\u4e0a\u5f97\u5230\u5927\u7684patten.\nfilter &amp; feature map\n\n\u4ece\u795e\u7ecf\u5143\u89d2\u5ea6\u548c\u5168\u8fde\u63a5\u89d2\u5ea6\u51fa\u53d1\u7684\u8bdd\uff0c\u6bcf\u4e2a\u6846\u5176\u5b9e\u53ef\u4ee5\u6709\u81ea\u5df1\u7684\u53c2\u6570\u7684\uff08\u5373\u4f60\u7528\u4e8664\u6b65\u628a\u6574\u4e2a\u56fe\u7247\u626b\u63cf\u5b8c\u7684\u8bdd\uff0c\u5c31\u670964\u7ec4\u53c2\u6570\uff09\uff0c\u800c\u4e8b\u5b9e\u4e0a\u4e3a\u4e86\u7b80\u5316\u6a21\u578b\uff0c\u53ef\u4ee5\u8ba9\u67d0\u4e9b\u6846\u5bf9\u5e94\u540c\u6837\u7684\u53c2\u6570\uff08\u53c2\u6570\u5171\u4eab\uff09\uff0c\u539f\u56e0\u5c31\u662f\u540c\u4e00\u7279\u5f81\u53ef\u80fd\u51fa\u73b0\u5728\u591a\u4e2a\u4f4d\u7f6e\uff0c\u6bd4\u5982\u4eba\u6709\u4e24\u53ea\u811a\u3002\u518d\u7136\u540e\uff0c\u5b9e\u9645\u4e0a\u6bcf\u4e00\u6b21\u90fd\u662f\u7528\u4e00\u7ec4\u53c2\u6570\u626b\u5b8c\u5168\u56fe\u7684\uff0c\u610f\u601d\u662f\u5728\u6bcf\u4e2a\u89d2\u843d\u90fd\u53ea\u641c\u7d22\u8fd9\u4e00\u4e2a\u7279\u5f81\u3002\u6211\u4eec\u628a\u8fd9\u79cd\u673a\u5236\u53ebfilter\uff0c\u4e00\u4e2afilter\u53ea\u627e\u4e00\u79cd\u7279\u5f81\uff0c\u4e58\u52a0\u51fa\u6765\u7684\u7ed3\u679c\u53ebfeature map\uff0c\u5373\u8fd9\u4e2afilter\u63d0\u53d6\u51fa\u6765\u7684\u7279\u5f81\u56fe\u3002\u56e0\u6b64\uff0c\n\u4f60\u60f3\u63d0\u53d6\u591a\u5c11\u4e2a\u7279\u5f81\uff0c\u5c31\u5f97\u6709\u591a\u5c11\u4e2afilter\n\u8868\u73b0\u51fa\u6765\u5c31\u6210\u4e86\u4f60\u8fd9\u4e00\u5c42\u8f93\u51fa\u6709\u591a\u5c11\u4e2achannel\n\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u4f60\u7684\u56fe\u7247\u8fdb\u6765\u662f3channel\uff0c\u51fa\u6765\u5c31\u662fN\u4e2achannel\u4e86\uff0c\u53d6\u51b3\u4e8e\u4f60\u8bbe\u8ba1\u4e86\u591a\u5c11\u4e2afilter\n\n\nPooling &amp; subsampling\n\n\u7531\u4e8e\u56fe\u50cf\u7684\u89c6\u89c9\u7279\u5f81\uff0c\u4f60\u628a\u5b83\u653e\u5927\u6216\u7f29\u5c0f\u90fd\u80fd\u88ab\u4eba\u773c\u8ba4\u51fa\u6765\uff0c\u56e0\u6b64\u5c31\u4ea7\u751f\u4e86pooling\u8fd9\u79cd\u673a\u5236\uff0c\u53ef\u4ee5\u964d\u4f4e\u6837\u672c\u7684\u5927\u5c0f\uff0c\u8fd9\u4e3b\u8981\u662f\u4e3a\u4e86\u51cf\u5c0f\u8fd0\u7b97\u91cf\u5427\uff08\u786c\u4ef6\u6027\u80fd\u8db3\u591f\u5c31\u53ef\u4ee5\u4e0d\u8003\u8651\u5b83\uff09\u3002\nData Augmentation\n\nCNN\u5e76\u4e0d\u80fd\u8bc6\u522b\u7f29\u653e\u3001\u65cb\u8f6c\u3001\u88c1\u5207\u3001\u7ffb\u8f6c\u8fc7\u7684\u56fe\u7247\uff0c\u56e0\u6b64\u8bad\u7ec3\u6570\u636e\u7684\u589e\u5f3a\u4e5f\u662f\u5fc5\u8981\u7684\u3002AlphaGo\nlayer 1\n\u80fd\u88ab\u5f71\u50cf\u5316\u7684\u95ee\u9898\u5c31\u53ef\u4ee5\u5c1d\u8bd5CNN\uff0c\u56f4\u68cb\u53ef\u4ee5\u770b\u6210\u662f\u4e00\u5f2019x19\u7684\u56fe\u7247\n\u6bcf\u4e00\u4e2a\u4f4d\u7f6e\u88ab\u603b\u7ed3\u51fa\u4e8648\u79cd\u53ef\u80fd\u7684\u60c5\u51b5(\u8d85\u53c21)\n\u6240\u4ee5\u8f93\u5165\u5c31\u662f19x19x48\n\u75280\u6765padding\u621023x23\n\u5f88\u591apatten\u3001\u5b9a\u5f0f\u4e5f\u662f\u5f71\u50cf\u5316\u7684\uff0c\u53ef\u4ee5\u88abfilter\u626b\u51fa\u6765\n\u603b\u7ed3\u51fa5x5\u5927\u5c0f\u7684filter\u5c31\u591f\u7528\u4e86\uff08\u8d85\u53c22\uff09\n\u5c31\u7528\u4e86192\u4e2afitler\uff08\u5373\u6bcf\u4e00\u6b21output\u670948\u5c42channel)\uff08\u8d85\u53c23\uff09\nstride = 1\nReLU\n\nlayer 2-12\npadding\u6210 21x21\n192\u4e2a 3x3 filter with stride = 1\nReLU\n\nlayer 13\n1x1 filter stride = 1\nbias\nsoftmax\n\n\u5176\u4e2d192(\u4e2afilter)\u8fd9\u4e2a\u8d85\u53c2\u5bf9\u6bd4\u4e86128\uff0c256\uff0c384\u7b49\uff0c\u4e5f\u5c31\u662f\u8bf4\u4eba\u7c7b\u5e76\u4e0d\u7406\u89e3\u5b83\u6bcf\u4e00\u6b21\u90fd\u63d0\u53d6\u4e86\u4ec0\u4e48\u7279\u5f81\u3002\nsubsampling\u5bf9\u56f4\u68cb\u4e5f\u6709\u7528\u5417\uff1f \u4e0a\u9762\u7684\u7ed3\u6784\u770b\u51fa\u5e76\u6ca1\u6709\u7528\uff0c\u4e8b\u5b9e\u4e0a\uff0c\u56f4\u68cb\u4f60\u62bd\u6389\u4e00\u884c\u4e00\u5217\u5f71\u54cd\u662f\u5f88\u5927\u7684\u3002\nSelf-Attention\n\u524d\u9762\u8bf4\u7684\u90fd\u662f\u8f93\u5165\u4e3a\u4e00\u4e2a\u5411\u91cf\uff08\u603b\u4f1a\u62c9\u5e73\u6210\u4e00\u7ef4\u5411\u91cf\uff09\uff0c\u5982\u679c\u662f\u591a\u4e2a\u5411\u91cf\u5462\uff1f\u6709\u8fd9\u6837\u7684\u573a\u666f\u5417\uff1f\n\u4e00\u6bb5\u6587\u5b57\uff0c\u6bcf\u4e00\u4e2a\u6587\u5b57\u90fd\u7528one-hot\u6216word-embedding\u6765\u8868\u793a\n\u4e0d\u4f46\u662f\u591a\u4e2a\u5411\u91cf\uff0c\u800c\u4e14\u8fd8\u957f\u77ed\u4e0d\u9f50\n\n\n\u4e00\u6bb5\u8bed\u97f3\uff0c\u6bcf25ms\u91c7\u6837\u5f62\u6210\u4e00\u4e2a\u5411\u91cf\uff0c\u6b65\u957f\u4e3a\u6bcf10ms\u91cd\u590d\u91c7\u6837\uff0c\u5f62\u6210\u5411\u91cf\u5e8f\u5217\n400 sample points (16khz)\n39-dim MFCC\n80-dim filter bank output\n\u53c2\u8003\u4eba\u7c7b\u8bed\u8a00\u5904\u7406\u8bfe\u7a0b\n\n\n\u4e00\u4e2aGraph\u7ec4\u5411\u91cf\uff08\u6bd4\u5982social network)\n\u6bcf\u4e2a\u8282\u70b9\uff08\u6bcf\u4e2a\u4eba\u7684profile\uff09\u5c31\u662f\u4e00\u4e2a\u5411\u91cf\n\n\n\u4e00\u4e2a\u5206\u5b50\u7ed3\u6784\n\u6bcf\u4e2a\u539f\u5b50\u5c31\u662f\u4e00\u4e2aone-hot\n\n\n\n\u8f93\u51fa\u662f\u4ec0\u4e48\u6837\u7684\uff1f\n\u4e00\u4e2a\u5411\u91cf\u5bf9\u5e94\u4e00\u4e2a\u8f93\u51fa\n\u6587\u5b57 -&gt; POS tagging\n\u8bed\u97f3 -&gt; a, a, b, b(\u600e\u4e48\u53bb\u91cd\u4e5f\u53c2\u8003\u4eba\u7c7b\u8bed\u8a00\u5904\u7406\u8bfe\u7a0b)\ngraph -&gt; \u6bcf\u4e2a\u8282\u70b9\u8f93\u51fa\u7279\u6027\uff08\u6bd4\u5982\u6bcf\u4e2a\u4eba\u7684\u8d2d\u4e70\u51b3\u7b56\uff09\n\n\n\u53ea\u6709\u4e00\u4e2a\u8f93\u51fa\n\u6587\u5b57 -&gt; \u60c5\u7eea\u5206\u6790\uff0c\u8206\u60c5\u5206\u6790\n\u8bed\u97f3 -&gt; \u5224\u65ad\u662f\u8c01\u8bf4\u7684\ngraph -&gt; \u8f93\u51fa\u6574\u4e2agraph\u7684\u7279\u6027\uff0c\u6bd4\u5982\u4eb2\u6c34\u6027\u5982\u4f55\n\n\n\u4e0d\u5b9a\u8f93\u51fa\uff08\u7531network\u81ea\u5df1\u51b3\u5b9a\uff09\n\u8fd9\u5c31\u53ebseq2seq\n\u6587\u5b57 -&gt; \u7ffb\u8bd1\n\u8bed\u97f3 -&gt; \u771f\u6b63\u7684\u8bed\u97f3\u8bc6\u522b\n\n\n\nself-attention\u7a0d\u7a0d\u56de\u987e\u4e00\u4e0bself attention\u91cc\u6700\u91cd\u8981\u7684q, k, v\u7684\u90e8\u5206\uff1a\u56fe\u793a\u7684\u662fq2\u4e0e\u6240\u6709\u7684k\u76f8\u4e58\uff0c\u518d\u5206\u522b\u4e0e\u5bf9\u5e94\u7684v\u76f8\u4e58\uff0c\u7136\u540e\u76f8\u52a0\uff0c\u5f97\u5230q2\u5bf9\u5e94\u7684\u8f93\u51fa\uff1ab2\u7684\u8fc7\u7a0b\u3002\u4e0b\u56fe\u5219\u662f\u77e9\u9635\u5316\u540e\u7684\u7ed3\u8bba\uff1a\n\n\u5177\u4f53\u7ec6\u8282\u770b\u4e13\u9898\u771f\u6b63\u8981\u5b66\u7684\uff0c\u5c31\u662f\u56fe\u4e2d\u7684$W^q, W^k, W^v$Multi-head Self-attention\nCNN\u662fSelf-attention\u7684\u7279\u4f8bSelf-attention for Graph\n\u4e86\u89e3\u66f4\u591a\uff1ahttps://youtu.be/eybCCtNKwzATransformer\nTransformer\u662f\u4e00\u4e2aseq2seq\u7684model\u4ee5\u4e0b\u573a\u666f\uff0c\u4e0d\u7ba1\u770b\u4e0a\u53bb\u50cf\u4e0d\u50cf\u662fseq2seq\u7684\u7279\u5f81\uff0c\u90fd\u53ef\u4ee5\u5c1d\u8bd5\u7528seq2seq\uff08trnasformer\uff09\u6765\u201c\u786ctrain\u4e00\u53d1\u201d\nQA\u7c7b\u7684\u95ee\u9898\uff0c\u9001\u8fdb\u53bbquestion + context\uff0c\u8f93\u51faanswer\n\u7ffb\u8bd1\uff0c\u6458\u8981\uff0c\u5dee\u522b\uff0c\u60c5\u611f\u5206\u6790\uff0c\u53ea\u8981\u8bad\u7ec3\u80fd\u5957\u4e0a\u4e0a\u9762\u7684\u683c\u5f0f\uff0c\u5c31\u6709\u53ef\u80fd\n\n\n\u6587\u6cd5\u5256\u6790\uff0c\u9001\u5165\u662f\u53e5\u5b50\uff0c\u8f93\u51fa\u662f\u6811\u72b6\u7684\u8bed\u6cd5\u7ed3\u6784\n\u628a\u6811\u72b6\u7ed3\u6784\u644a\u5e73\uff08\u5176\u5b9e\u5c31\u662f\u591a\u5c42\u62ec\u53f7\uff09\n\u7136\u540e\u5c31\u7528\u8fd9\u4e2a\u5bf9\u5e94\u5173\u7cfb\u6765\u5f53\u6210\u7ffb\u8bd1\u6765\u8bad\u7ec3\uff08\u5373\u628a\u8bed\u6cd5\u5f53\u6210\u7ffb\u8bd1\uff09\n\n\nmulti-label classification\n\u4f60\u4e0d\u80fd\u5728\u505amulti-class classification\u7684\u65f6\u5019\u53d6top-k,\u56e0\u4e3a\u6709\u7684\u5c5e\u4e8e\u4e00\u4e2a\u7c7b\uff0c\u6709\u7684\u5c5e\u4e8e\u4e09\u4e2a\u7c7b\uff0ck\u4e0d\u5b9a\n\u6240\u4ee5\u4f60\u628a\u6bcf\u4e2a\u8f93\u5165\u548cN\u4e2a\u8f93\u51fa\u4e5f\u4e22\u5230seq2seq\u91cc\u53bb\u786ctrain\u4e00\u53d1\uff0c\u7f51\u7edc\u4f1a\u81ea\u5df1\u5b66\u5230\u6bcf\u4e2a\u6587\u7ae0\u5c5e\u4e8e\u54ea\u201c\u4e9b\u201d\u7c7b\u522b\uff08\u4e0d\u5b9a\u4e2a\u6570\uff0c\u4e5f\u50cf\u7ffb\u8bd1\u4e00\u6837\uff09\n\n\nobject dectection\n\u8fd9\u4e2a\u66f4\u532a\u5937\u6240\u601d\uff0c\u611f\u5174\u8da3\u770b\u8bba\u6587\uff1ahttps://arxiv.org/abs/2005.12872(End-to-End Object Detection with Transformers)\n\n\n\nEncoder\nQ, K, V(relavant/similarity), zero padding mask, layer normalization, residual\u7b49, \u5177\u4f53\u770bself-attention\u4e00\u8282\u3002Decoder\nAT v.s. NAT\n\u6211\u4eec\u4e4b\u524d\u7528\u7684decoder\u90fd\u662f\u4e00\u4e2a\u4e00\u4e2a\u5b57\u5730\u9884\u6d4b\uff08\u8f93\u51fa\u7684\uff09\n\u6240\u4ee5\u624d\u6709position-mask\uff08\u7528\u6765\u5c4f\u853d\u5f53\u524d\u4f4d\u7f6e\u540e\u9762\u7684\u5b57\uff09\n\n\u8fd9\u79cd\u53ebAuto Regressive\uff0c\u7b80\u79f0AT,NAT\u5373Non Auto Regressive\u5b83\u4e00\u6b21\u751f\u6210\u8f93\u51fa\u7684\u53e5\u5b50\u3002\u81f3\u4e8eseq2seq\u7684\u8f93\u51fa\u662f\u4e0d\u5b9a\u957f\u7684\uff0c\u5b83\u662f\u600e\u4e48\u5728\u4e00\u6b21\u8f93\u51fa\u91cc\u9762\u786e\u5b9a\u957f\u5ea6\u7684\uff0c\u4e0a\u56fe\u5df2\u7ecf\u7ed9\u51fa\u4e86\u51e0\u79cd\u505a\u6cd5\uff1a\n\u53e6\u505a\u4e00\u4e2apredictor\u6765\u8f93\u51fa\u4e00\u4e2a\u6570\u5b57\uff0c\u8868\u793a\u5e94\u8be5\u8f93\u51fa\u7684\u957f\u5ea6\n\u76f4\u63a5\u7528\u4e00\u4e2a\u8db3\u591f\u957f\u7684\u505a\u8f93\u5165\uff08\u6bd4\u5982300\u4e2a\uff09\uff0c\u90a3\u8f93\u51fa\u4e5f\u5c31\u6709300\u4e2a\uff0c\u53d6\u5230\u7b2c\u4e00\u4e2a\u4e3a\u6b62\n\n\u56e0\u4e3a\u4e0d\u662f\u4e00\u4e2a\u4e00\u4e2a\u751f\u6210\u4e86\uff0c\u597d\u5904\n\u53ef\u4ee5\u5e73\u884c\u8fd0\u7b97\u3002\n\u8f93\u51fa\u7684\u957f\u5ea6\u66f4\u53ef\u63a7\n\n\nNAT\u901a\u5e38\u8868\u73b0\u4e0d\u5982AT\u597d (why? Multi-mmodality)\ndetail: https://youtu.be/jvyKmU4OM3c (Non-Autoregressive Sequence Generation)AT\n\u5728decoder\u91cc\u6700\u521d\u6709\u8ba9\u4eba\u770b\u4e0d\u61c2\u7684\u4e09\u4e2a\u7bad\u5934\u4eceencode\u7684\u8f93\u51fa\u91cc\u6307\u51fa\u6765:\u5176\u5b9e\u8fd9\u5c31\u662fcross attention\u5b83\u5c31\u662f\u628a\u81ea\u5df1\u7b2c\u4e00\u5c42(self-attention\u540e)\u7684\u8f93\u51fa\u4e58\u4e00\u4e2a$W^q$\u5f97\u5230\u7684q\uff0c\u53bb\u8ddfencoder\u7684\u8f93\u51fa\u5206\u522b\u4e58$W^k, W^v$\u5f97\u5230\u7684k\u548cv\u8fd0\u7b97($\\sum q \\times k \\times v$)\u5f97\u5230\u5f53\u524d\u4f4d\u7f6e\u7684\u8f93\u51fa\u7684\u8fc7\u7a0b\u3002\u800c\u4e14\u7814\u7a76\u8005\u4e5f\u5c1d\u8bd5\u8fc7\u5404\u79cdcross attention\u7684\u65b9\u6cd5\uff0c\u800c\u4e0d\u4ec5\u4ec5\u662f\u672c\u6587\u4e2d\u7684\u65e0\u8bba\u54ea\u4e00\u5c42\u90fd\u7528encoder\u6700\u540e\u4e00\u5c42\u7684\u8f93\u51fa\u505aq\u548cv\u8fd9\u4e00\u79cd\u65b9\u6848\uff1aTraining Tips\n\u590d\u5236\u673a\u5236\n\u4e00\u4e9b\u573a\u666f\uff0c\u8bad\u7ec3\u7684\u65f6\u5019\u6ca1\u5fc5\u8981\u53bb\u201c\u751f\u6210\u201d\u9605\u8bfb\u6750\u6599\u91cc\u63d0\u5230\u7684\u4e00\u4e9b\u6982\u5ff5\uff0c\u53ea\u9700\u8981\u628a\u5b83\u201c\u590d\u5236\u201d\u51fa\u6765\u5373\u53ef\uff0c\u6bd4\u5982\u4e0a\u8ff0\u7684\u4eba\u540d\uff0c\u4e13\u6709\u540d\u5b57\uff0c\u6982\u5ff5\u7b49\uff0c\u4ee5\u53ca\u5bf9\u6587\u7ae0\u505a\u6458\u8981\u7b49\u3002\nPointer Network: https://youtu.be/VdOyqNQ9aww\nCopying Mechanism in Seq2Seq https://arxiv.org/abs/1603.06393\n\nGuided Attention\n\u50cf\u8bed\u97f3\u8fd9\u79cd\u8fde\u7eed\u6027\u7684\uff0c\u9700\u8981\u5f3a\u5236\u6307\u5b9a(guide)\u5b83\u7684attention\u987a\u5e8f\uff0c\u76f8\u5bf9\u800c\u8a00\uff0c\u6587\u5b57\u8df3\u8dc3\u611f\u53ef\u4ee5\u66f4\u5927\uff0c\u8bed\u97f3\u4e00\u65e6\u4e0d\u8fde\u7eed\u5c31\u5931\u53bb\u4e86\u53ef\u542c\u6027\u4e86\uff0c\u4e00\u4e9b\u5173\u952e\u5b57\uff1a\nMonotonic Attention\nLocation-aware attention\n\nBeam Search\nOptimizing Evaluation Metrics / BLEU\n\n\u8bad\u7ec3\u7684\u65f6\u5019loss\u7528\u7684\u662fcross entropy\uff0c\u8981\u6c42loss\u8d8a\u5c0f\u8d8a\u597d\uff0c\n\u800c\u5728evaluation\u7684\u65f6\u5019\uff0c\u6211\u4eec\u7528\u7684\u662f\u9884\u6d4b\u503c\u4e0e\u771f\u503c\u7684BLEU score\uff0c\u8981\u6c42score\u8d8a\u5927\u8d8a\u597d\n\u90a3\u4e48\u8d8a\u5c0f\u7684cross entropy loss\u771f\u7684\u80fd\u4ea7\u751f\u8d8a\u9ad8\u7684BLEU score\u5417\uff1f \u672a\u5fc5\n\u90a3\u4e48\u80fd\u4e0d\u80fd\u5728\u8bad\u7ec3\u7684\u65f6\u5019\u4e5f\u7528BLEU score\u5462\uff1f \u4e0d\u884c\uff0c\u5b83\u592a\u590d\u6742\u6ca1\u6cd5\u5fae\u5206\uff0c\u5c31\u6ca1\u6cd5bp\u505a\u68af\u5ea6\u4e86\u3002\n\nExposure bias\n\u8bad\u7ec3\u65f6\u5019\u5e94\u7528\u4e86Teaching force\uff0c\u7528\u4e86\u5168\u90e8\u6216\u90e8\u5206\u771f\u503c\u5f53\u4f5c\u9884\u6d4b\u7ed3\u679c\u6765\u8bad\u7ec3\uff08\u6216\u9632\u6b62\u4e00\u9519\u5230\u5e95\uff09\uff0c\u800ceval\u7684\u65f6\u5019\u786e\u5b9e\u5c31\u662f\u4e00\u9519\u5230\u5e95\u7684\u6a21\u5f0f\u4e86\u3002Self-supervised Learning\n\n\u829d\u9ebb\u8857\u5bb6\u5ead\uff1aelmo, bert, erine...\nbert\u5c31\u662ftransformer\u7684encoder\n\nBert\nGLUE\nGLUE: General Language Understanding Evaluation\u57fa\u672c\u4e0a\u5c31\u662f\u770b\u4ee5\u4e0b\u8fd9\u4e5d\u4e2a\u6a21\u578b\u7684\u5f97\u5206\uff1a\u8bad\u7ec3\uff1a\n\u9884\u6d4bmask\u6389\u7684\u8bcd(masked token prediction)\n\u4e3a\u8bad\u7ec3\u6570\u636e\u96c6\u6dfb\u52a0\u90e8\u5206\u63a9\u7801\uff0c\u9884\u6d4b\u53ef\u80fd\u7684\u8f93\u51fa\n\u7c7b\u4f3cword2vec\u7684C-Bow\n\n\n\u9884\u6d4b\u4e0b\u4e00\u4e2a\u53e5\u5b50\uff08\u5206\u7c7b\uff0c\u6bd4\u5982\u662f\u5426\u76f8\u5173\uff09(next sentence prediction)\n\u5728\u53e5\u9996\u6dfb\u52a0\u7528\u6765\u63a5\u5206\u7c7b\u7ed3\u679c\n\u7528\u6765\u8868\u793a\u53e5\u5b50\u5206\u9694\n\n\n\n\u4e0b\u6e38\u4efb\u52a1\uff08Downstream Task\uff09 &lt;- Fine Tune:\nsequence -&gt; class: sentiment analysis\n\u8fd9\u662f\u9700\u8981\u6709label\u7684\n\u8282\u70b9\u5bf9\u7684linear\u90e8\u5206\u662f\u968f\u673a\u521d\u59cb\u5316\nbert\u90e8\u5206\u662fpre-train\u7684\n\n\nsequence -&gt; sequence(\u7b49\u957f): POS tagging\n2 sequences -&gt; class: NLI(\u4ece\u53e5\u5b50A\u80fd\u5426\u63a8\u51fa\u53e5\u5b50B)(Natural Language Inferencee)\n\u4e5f\u6bd4\u5982\u6587\u7ae0\u4e0b\u9762\u7684\u7559\u8a00\u7684\u7acb\u573a\u5206\u6790\n\u7528\u8f93\u51fa\u5206\u7c7b\u7ed3\u679c\uff0c\u7528\u5206\u9694\u53e5\u5b50\n\n\nExtraction-based Question Answering: \u57fa\u4e8e\u5df2\u6709\u6587\u672c\u7684\u95ee\u7b54\u7cfb\u7edf\n\u7b54\u6848\u4e00\u5b9a\u662f\u51fa\u73b0\u5728\u6587\u7ae0\u91cc\u9762\u7684\n\u8f93\u5165\u6587\u7ae0\u548c\u95ee\u9898\u7684\u5411\u91cf\n\u8f93\u51fa\u4e24\u4e2a\u6570\u5b57(start, end)\uff0c\u8868\u793a\u7b54\u6848\u5728\u6587\u7ae0\u4e2d\u7684\u7d22\u5f15\n\n\n\nQA\u8f93\u51fa\uff1a\u601d\u8def\uff1a\n\u7528inputdocument \u7684\u683c\u5f0f\u628a\u8f93\u5165\u6446\u597d\n\u7528pre-trained\u7684bert\u6a21\u578b\u8f93\u51fa\u540c\u6837\u4e2a\u6570\u7684\u5411\u91cf\n\u51c6\u5907\u4e24\u4e2a\u4e0ebert\u6a21\u578b\u7b49\u957f\u7684\u5411\u91cf\uff08\u6bd4\u5982768\u7ef4\uff09a, b\uff08random initialized)\na\u4e0edocument\u7684\u6bcf\u4e2a\u5411\u91cf\u76f8\u4e58(inner product)\nsoftmax\u540e\uff0c\u627e\u5230\u6700\u5927\u503c\uff0c\u5bf9\u5e94\u7684\u4f4d\u7f6e(argmax)\u5373\u4e3astart index\n\u540c\u6837\u7684\u4e8bb\u518d\u505a\u4e00\u904d\uff0c\u5f97\u5230end index\n\nBert train seq2seq\n\u4e5f\u662f\u53ef\u80fd\u7684\u3002\u5c31\u662f\u4f60\u628a\u8f93\u5165\u201c\u5f04\u574f\u201d\uff0c\u6bd4\u5982\u53bb\u6389\u4e00\u4e9b\u5b57\u8bcd\uff0c\u6253\u4e71\u8bcd\u5e8f\uff0c\u5012\u8f6c\uff0c\u66ff\u6362\u7b49\u4efb\u610f\u65b9\u5f0f\uff0c\u8ba9\u4e00\u4e2adecoder\u628a\u5b83\u8fd8\u539f\u3002 -&gt; BART\u9644\u52a0\u77e5\u8bc6\n\u6709\u7814\u7a76\u4eba\u5458\u7528bert\u53bb\u5206\u7c7bDNA\uff0c\u86cb\u767d\u8d28\uff0c\u97f3\u4e50\u3002\u4ee5DNA\u4e3a\u4f8b\uff0c\u5143\u7d20\u4e3aA,C,G,T,\u5206\u522b\u5bf9\u5e944\u4e2a\u968f\u673a\u8bcd\u6c47\uff0c\u518d\u7528bert\u53bb\u5206\u7c7b\uff08\u7528\u4e00\u4e2a\u82f1\u6587\u7684pre-trained model\uff09\uff0c\u540c\u6837\u7684\u4f8b\u5b50\u7528\u5728\u4e86\u86cb\u767d\u8d28\u548c\u97f3\u4e50\u4e0a\uff0c\u5c45\u7136\u53d1\u73b0\u6548\u679c\u5168\u90e8\u8981\u597d\u4e8e\u201c\u7eaf\u968f\u673a\u201d\u3002\u5982\u679c\u4e4b\u524d\u7684\u5b9e\u9a8c\u8bf4\u660e\u4e86bert\u770b\u61c2\u4e86\u6211\u4eec\u7684\u6587\u7ae0\uff0c\u90a3\u4e48\u8fd9\u4e2a\u8352\u8bde\u7684\u5b9e\u9a8c\uff08\u7528\u5b8c\u5168\u65e0\u5173\u7684\u968f\u610f\u7684\u82f1\u6587\u5355\u8bcd\u4ee3\u66ff\u53e6\u4e00\u5b66\u79d1\u91cc\u9762\u7684\u7c7b\u522b\uff09\u4f3c\u4e4e\u8bc1\u660e\u4e86\u4e8b\u60c5\u6ca1\u6709\u90a3\u4e48\u7b80\u5355\u3002More\n\nhttps://youtu.be/1_gRK9EIQpc\nhttps://youtu.be/Bywo7m6ySlk\n\nMulti-lingual Bert\n\u7565GPT-3\n\u8bad\u7ec3\u662fpredict next token...so it can do generation(\u80fd\u505a\u751f\u6210)\nLanguage Model \u90fd\u80fd\u505ageneration\nhttps://youtu.be/DOG1L9lvsDY\u522b\u7684\u6a21\u578b\u662fpre-train\u540e\uff0c\u518dfine-tune\uff0c GPT-3\u662f\u60f3\u5b9e\u73b0zero-shot\uff0cImage\nSimCLR\nhttps://arxiv.org/abs/2002.05709\nhttps://github.com/google-research/simclr\n\nBYOL\nBootstrap your oown latent\nhttps://arxiv.org/abs/2006.07733\n\nSpeech\n\u5728bert\u4e0a\u6709\u4e5d\u4e2a\u4efb\u52a1(GLUE)\u6765\u5dee\u522b\u6548\u679c\u597d\u4e0d\u597d\uff0c\u5728speech\u9886\u57df\u8fd8\u7f3a\u4e4f\u8fd9\u6837\u7684\u6570\u636e\u5e93\u3002Auto Encoder\n\u4e5f\u662f\u4e00\u79cdself-supervised Learning Framework -&gt; \u4e5f\u53eb pre-train, \u56de\u987e\uff1a\n\u5728\u8fd9\u4e2a\u4e4b\u524d\uff0c\u5176\u5b9e\u6709\u4e2a\u66f4\u53e4\u8001\u7684\u4efb\u52a1\uff0c\u5b83\u5c31\u662fAuto Encoder\n\u7528\u56fe\u50cf\u4e3a\u4f8b\uff0c\u901a\u8fc7\u4e00\u4e2a\u7f51\u7edcencode\u6210\u4e00\u4e2a\u5411\u91cf\u540e\uff0c\u518d\u901a\u8fc7\u4e00\u4e2a\u7f51\u7edc\u89e3\u7801(reconstrucion)\u56de\u8fd9\u5f20\u56fe\u50cf\uff08\u54ea\u6015\u6709\u4fe1\u606f\u7f3a\u5931\uff09\n\u4e2d\u95f4\u751f\u6210\u7684\u90a3\u4e2a\u5411\u91cf\u53ef\u4ee5\u7406\u89e3\u4e3a\u5bf9\u539f\u56fe\u8fdb\u884c\u7684\u538b\u7f29\n\u6216\u8005\u8bf4\u4e00\u79cd\u964d\u7ef4\n\n\u964d\u7ef4\u7684\u8bfe\u7a0b\uff1a\nPCA: https://youtu.be/iwh5o_M4BNU\nt-SNE: https://youtu.be/GBUEjkpoxXc\n\n\u6709\u4e00\u4e2ade-noising\u7684Auto-encoder, \u7ed9\u5165\u7684\u662f\u52a0\u4e86\u566a\u97f3\u7684\u6570\u636e\uff0c\u7ecf\u8fc7encode-decode\u4e4b\u540e\u8fd8\u539f\u7684\u662f\u6ca1\u6709\u52a0\u566a\u97f3\u7684\u6570\u636e\u8fd9\u5c31\u50cf\u52a0\u4e86\u566a\u97f3\u53bb\u8bad\u7ec3bertFeature Disentangle\n\u53bb\u89e3\u91caauto-encoder\u538b\u6210\u7684\u5411\u91cf\u5c31\u53ebFeature Disentagle\uff0c\u6bd4\u5982\u4e00\u6bb5\u97f3\u9891\uff0c\u54ea\u4e9b\u662f\u5185\u5bb9\uff0c\u54ea\u4e9b\u662f\u4eba\u7269\uff1b\u4e00\u6bb5\u6587\u5b57\uff0c\u54ea\u4e9b\u8868\u793a\u8bed\u4e49\uff0c\u54ea\u4e9b\u662f\u8bed\u6cd5\uff1b\u4e00\u5f20\u56fe\u7247\uff0c\u54ea\u4e9b\u8868\u793a\u7269\u4f53\uff0c\u54ea\u4e9b\u8868\u793a\u7eb9\u7406\uff0c\u7b49\u3002\u5e94\u7528\uff1a voice conversion -&gt; \u53d8\u58f0\u5668\u4f20\u7edf\u7684\u505a\u6cd5\u5e94\u8be5\u662f\u6bcf\u4e00\u4e2a\u8bed\u53e5\uff0c\u90fd\u6709\u4e24\u79cd\u8bed\u97f3\u7684\u8d44\u6599\uff0cN\u79cd\u8bed\u8a00/\u8bed\u97f3\u7684\u8bdd\uff0c\u5c31\u9700\u8981N\u4efd\u3002\u6709Feature Disentangle\u7684\u8bdd\uff0c\u53ea\u8981\u6709\u4e24\u79cd\u8bed\u97f3\u7684encoder\uff0c\u5c31\u80fd\u77e5\u9053\u54ea\u4e9b\u662f\u8bed\u97f3\u7279\u5f81\uff0c\u54ea\u4e9b\u662f\u5185\u5bb9\u7279\u5f81\uff0c\u62fc\u8d77\u6765\uff0c\u5c31\u80fd\u7528A\u7684\u8bed\u97f3\u53bb\u8bfbB\u7684\u5185\u5bb9\u3002\u6240\u4ee5\u524d\u63d0\u5c31\u662f\u80fd\u5206\u6790\u538b\u7f29\u51fa\u6765\u7684\u5411\u91cf\u3002Discrete Latent Representation\n\u5982\u679c\u538b\u7f29\u6210\u7684\u5411\u91cf\u4e0d\u662f\u5b9e\u6570\uff0c\u800c\u662f\u4e00\u4e2abinary\u6216one-hot\nbinary: \u6bcf\u4e00\u4e2a\u7ef4\u5ea6\u51e0\u4e4e\u90fd\u6709\u5b83\u7684\u542b\u4e49\uff0c\u6211\u4eec\u53ea\u9700\u8981\u770b\u5b83\u662f0\u8fd8\u662f1\none-hot: \u76f4\u63a5\u53d8\u5206\u7c7b\u4e86\u3002-&gt; unsupervised classification\n\nVQVAE\nVector Quantized Variational Auot-encoder https://arxiv.org/abs/1711.00937\n\nText as Representation\n\nhttps://arxiv.org/abs/1810.02851\n\n\u5982\u679c\u538b\u7f29\u6210\u7684\u4e0d\u662f\u4e00\u4e2a\u5411\u91cf\uff0c\u800c\u4e5f\u662f\u4e00\u6bb5word sequence\uff0c\u90a3\u4e48\u662f\u4e0d\u662f\u5c31\u6210\u4e86summary\u7684\u4efb\u52a1\uff1f \u53ea\u8981encoder\u548cdecoder\u90fd\u662fseq2seq\u7684model-&gt; seq2seq2seq auto-encoder -&gt; unsupervised summarization\u4e8b\u5b9e\u4e0a\u8bad\u7ec3\u7684\u65f6\u5019encoder\u548cdecoder\u53ef\u80fd\u4ea7\u751f\u5f3a\u5173\u8054\uff0c\u8fd9\u4e2a\u65f6\u5019\u5c31\u5f15\u5165\u4e00\u4e2a\u989d\u5916\u7684discriminator\u6765\u4f5c\u5224\u522b:\n\u6709\u70b9\u50cfcycle GAN\uff0c\u4e00\u4e2agenerator\u63a5\u4e00\u4e2adiscriminator\uff0c\u518d\u63a5\u53e6\u4e00\u4e2ageneratorabnormal detection\n\nPart 1: https://youtu.be/gDp2LXGnVLQ\nPart 2: https://youtu.be/cYrNjLxkoXs\nPart 3: https://youtu.be/ueDlm2FkCnw\nPart 4: https://youtu.be/XwkHOUPbc0Q\nPart 5: https://youtu.be/Fh1xFBktRLQ\nPart 6: https://youtu.be/LmFWzmn2rFY\nPart 7: https://youtu.be/6W8FqUGYyDo\n\n", "categories": [{"name": "posts", "slug": "posts", "permalink": "/category/posts/"}], "tags": [{"name": "\u674e\u5b8f\u6bc5", "slug": "\u674e\u5b8f\u6bc5", "permalink": "/tag/%E6%9D%8E%E5%AE%8F%E6%AF%85/"}, {"name": "\u673a\u5668\u5b66\u4e60", "slug": "\u673a\u5668\u5b66\u4e60", "permalink": "/tag/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"}, {"name": "CNN", "slug": "CNN", "permalink": "/tag/CNN/"}, {"name": "\u5377\u79ef\u795e\u7ecf\u7f51\u7edc", "slug": "\u5377\u79ef\u795e\u7ecf\u7f51\u7edc", "permalink": "/tag/%E5%8D%B7%E7%A7%AF%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C/"}, {"name": "GPT", "slug": "GPT", "permalink": "/tag/GPT/"}, {"name": "seq2seq", "slug": "seq2seq", "permalink": "/tag/seq2seq/"}, {"name": "GLUE", "slug": "GLUE", "permalink": "/tag/GLUE/"}, {"name": "Bert", "slug": "Bert", "permalink": "/tag/Bert/"}, {"name": "Transformer", "slug": "Transformer", "permalink": "/tag/Transformer/"}, {"name": "AlphaGo", "slug": "AlphaGo", "permalink": "/tag/AlphaGo/"}, {"name": "self attention", "slug": "self attention", "permalink": "/tag/self%20attention/"}, {"name": "self supervised learning", "slug": "self supervised learning", "permalink": "/tag/self%20supervised%20learning/"}]}, {"title": "\u674e\u5b8f\u6bc5MACHINE LEARNING 2021 SPRING\u7b14\u8bb0[2]", "date": "2021-10-13T19:27:00-00.00", "path": "/archives/%E6%9D%8E%E5%AE%8F%E6%AF%85MACHINE-LEARNING-2021-SPRING%E7%AC%94%E8%AE%B0-2/", "text": "Optimization\n\u771f\u5b9e\u4e16\u754c\u8bad\u7ec3\u6837\u672c\u4f1a\u5f88\u5927\uff0c\n\u6211\u4eec\u5f80\u5f80\u4e0d\u4f1a\u628a\u6574\u4e2a\u6240\u6709\u6570\u636e\u76f4\u63a5\u7b97\u4e00\u6b21loss\uff0c\u6765\u8fed\u4ee3\u68af\u5ea6\uff0c\n\u800c\u662f\u5206\u6210\u5f88\u591a\u5c0f\u4efd(mini-batch)\u6bcf\u4e00\u5c0f\u4efd\u8ba1\u7b97\u4e00\u6b21loss\uff08\u7136\u540e\u8fed\u4ee3\u68af\u5ea6\uff09\n\u4e0b\u4e00\u4e2a\u5c0fbatch\u8ba4\u524d\u4e00\u6b21\u8fed\u4ee3\u7684\u7ed3\u679c\n\u4e5f\u5c31\u662f\u8bf4\uff0c\u5176\u5b9e\u8fd9\u662f\u4e00\u4e2a\u4e0d\u4e25\u8c28\u7684\u8fed\u4ee3\uff0c\u7528\u522b\u4eba\u6570\u636e\u7684\u7ed3\u679c\u6765\u5f53\u6210\u672c\u8f6e\u6570\u636e\u7684\u524d\u63d0\n\u6700\u51c6\u786e\u7684\u5f53\u7136\u662f\u6240\u6709\u6570\u636e\u8ba1\u7b97\u68af\u5ea6\u548c\u8fed\u4ee3\u3002\n\u4e00\u5b9a\u8981\u627e\u8865\u7684\u8bdd\uff0c\u53ef\u4ee5\u8fd9\u4e48\u8ba4\u4e3a\uff1a\n\u5373\u4f7f\u4e00\u4e2a\u5c0fbatch\uff0c\u4e5f\u662f\u53ef\u4ee5\u8bad\u7ec3\u5230\u5408\u7406\u7684\u53c2\u6570\u7684\n\u6240\u4ee5\u524d\u4e00\u4e2abatch\u8bad\u7ec3\u51fa\u6765\u7684\u6570\u636e\uff0c\u662f\u4e00\u5b9a\u7a0b\u5ea6\u4e0a\u5408\u7406\u7684\n\u73b0\u5728\u6362\u4e86\u65b0\u7684\u6570\u636e\uff0c\u4f46\u4fdd\u6301\u4e0a\u4e00\u8f6e\u7684\u53c2\u6570\uff0c\u53cd\u800c\u53ef\u4ee5\u9632\u6b62\u8fc7\u62df\u5408\n\n\n\n\n\nminibatch\u8fd8\u6709\u4e00\u4e2a\u6781\u7aef\u5c31\u662fbatchsize=1\uff0c\u5373\u6bcf\u6b21\u770b\u5b8c\u4e00\u6761\u6570\u636e\u5c31\u4e0e\u771f\u503c\u505aloss\uff0c\u8fd9\u5f53\u7136\u662f\u53ef\u4ee5\u7684\uff0c\u800c\u4e14\u5b83\u975e\u5e38\u5feb\u3002\u4f46\u662f\uff1a\n\u5c0fbatch\u867d\u7136\u5feb\uff0c\u4f46\u662f\u5b83\u975e\u5e38noisy\uff08\u53ca\u6bcf\u4e00\u7b14\u6570\u636e\u90fd\u6709\u53ef\u80fd\u662f\u4e2a\u4f8b\uff0c\u6ca1\u6709\u5176\u5b83\u6570\u636e\u6765\u62b5\u6d88\u5b83\u7684\u5f71\u54cd\uff09\n\u56e0\u4e3a\u6709gpu\u5e73\u884c\u8fd0\u7b97\u7684\u539f\u56e0\uff0c\u53ea\u8981\u4e0d\u662fbatch\u975e\u5e38\u5927\uff08\u6bd4\u598210000\u4ee5\u4e0a\uff09\uff0c\u5176\u5b9emini-batch\u5e76\u4e0d\u6162\n\u5982\u679c\u662f\u5c0f\u6837\u672c\uff0cmini-batch\u53cd\u800c\u66f4\u5feb\uff0c\u56e0\u4e3a\u5b83\u4e00\u6765\u53ef\u4ee5\u5e73\u884c\u8fd0\u7b97\uff0c\u5728\u8ba1\u7b97gradient\u7684\u65f6\u5019\u4e0d\u6bd4\u5c0fbatch\u6162\uff0c\u4f46\u662f\u5b83\u6bd4\u5c0fbatch\u8981\u5c0f\u51e0\u4e2a\u6570\u91cf\u7ea7\u7684update.\n\n\u4ecd\u7136\u6709\u4e2a\u4f46\u662f\uff1a\u5b9e\u9a8c\u8bc1\u660e\u5c0f\u7684batch size\u4f1a\u6709\u66f4\u9ad8\u7684\u51c6\u786e\u7387\u3002\n\u4e24\u4e2alocal minimal\uff0c\u53f3\u8fb9\u90a3\u4e2a\u8ba4\u4e3a\u662f\u4e0d\u597d\u7684\uff0c\u56e0\u4e3a\u5b83\u53ea\u8981\u6709\u4e00\u70b9\u504f\u5dee\uff0c\u4e0e\u771f\u503c\u5c31\u4f1a\u6709\u5de8\u5927\u7684\u5dee\u5f02\u3002\u4f46\u662f\u6ca1\u61c2\u4e3a\u4ec0\u4e48\u5927\u7684batch\u4f1a\u66f4\u5bb9\u6613\u843d\u5728\u53f3\u8fb9\u3002\u8fd9\u662f\u4ec0\u4e48\u95ee\u9898\uff1f\u5176\u5b9e\u662foptimization\u7684\u95ee\u9898\uff0c\u540e\u9762\u4f1a\u7528\u4e00\u4e9b\u65b9\u6cd5\u6765\u89e3\u51b3\u3002Sigmoid -&gt; RelU\n\u524d\u9762\u6211\u4eec\u7528\u4e86soft\u7684\u6298\u7ebf\u6765\u6a21\u62df\u6298\u7ebf\uff0c\u5176\u5b9e\u8fd8\u53ef\u4ee5\u53e0\u52a0\u4e24\u4e2a\u771f\u7684\u6298\u7ebf(ReLU)\uff0c\u8fd9\u624d\u662f\u6211\u4e00\u76f4\u8bf4\u7684\u6574\u6d41\u51fd\u6570\u7684\u540d\u5b57\u7684\u7531\u6765\u3002\u4ed4\u7ec6\u770b\u56fe\uff0cc\u548cc'\u5728\u7b2c\u4e8c\u4e2a\u8f6c\u6298\u7684\u53f3\u8fb9\uff0c\u4e00\u4e2a\u662f\u5411\u65e0\u7a77\u5927\u53d8\uff0c\u4e00\u4e2a\u662f\u5411\u65e0\u7a77\u5c0f\u53d8\uff0c\u53ea\u8981\u627e\u5230\u5408\u7406\u7684\u659c\u7387\uff0c\u5c31\u80fd\u62b5\u6d88\u6389\u4e24\u4e2a\u8d8b\u52bf\uff0c\u53d8\u6210\u4e00\u6761\u76f4\u7ebf\u3002\u5982\u679c\u8981\u7528ReLU\uff0c\u90a3\u4e48\u7b80\u5355\u66ff\u6362\u4e00\u4e0b\uff1a\n$y = b + \\sum_i {\\color{ccdd00}{c_i}} sigmoid(\\color{green}{b_i} + \\sum_j \\color{blue}{w_{ij}} x_j)$\n$y = b + \\sum_{\\color{red}2i} {\\color{ccdd00}{c_i}} \\color{red}{max}(\\color{red}0,\\ \\color{green}{b_i} + \\sum_j \\color{blue}{w_{ij}} x_j)$\n\n\u7ea2\u8272\u7684\u5373\u4e3a\u6539\u52a8\u7684\u90e8\u5206\uff0c\u4e5f\u547c\u5e94\u4e862\u4e2arelu\u624d\u6784\u6210\u4e00\u4e2asigmoid\u7684\u94fa\u57ab\u3002\u628a\u6bcf\u4e00\u4e2aa\u5f53\u6210\u4e4b\u524d\u7684x\uff0c\u6211\u4eec\u53ef\u4ee5\u7ee7\u7eed\u5957\u4e0a\u65b0\u7684w,b,c\u7b49\uff0c\u751f\u6210\u65b0\u7684a-&gt;a'\n\u800c\u5982\u679c\u518d\u53e0\u4e00\u5c42\uff0c\u5728\u8bfe\u7a0b\u91cc\u7684\u8d44\u6599\u91cc\uff0c\u5728\u8bad\u7ec3\u96c6\u4e0aloss\u4ecd\u7136\u80fd\u4e0b\u964d\uff08\u52300.1\uff09\uff0c\u4f46\u662f\u5728\u6d4b\u8bd5\u96c6\u91cc\uff0closs\u53cd\u800c\u4e0a\u5347\u4e86\uff080.44)\uff0c\u8fd9\u610f\u5473\u7740\u5f00\u59cb\u8fc7\u62df\u5408\u4e86\u3002\u8fd9\u5c31\u662f\u53cd\u5411\u4ecb\u7ecd\u795e\u7ecf\u5143\u548c\u795e\u7ecf\u7f51\u7edc\u3002\u5148\u4ecb\u7ecd\u6570\u5b66\u4e0a\u7684\u52a8\u673a\uff0c\u7ec4\u6210\u7f51\u7edc\u540e\u518d\u544a\u8bc9\u4f60\u8fd9\u662f\u4ec0\u4e48\uff0c\u800c\u4e0d\u662f\u4e00\u4e0a\u6765\u5c31\u7ed9\u4f60\u626f\u4ec0\u4e48\u662f\u795e\u7ecf\u5143\u4ec0\u4e48\u662f\u795e\u7ecf\u7f51\u7edc\uff0c\u518d\u6765\u89e3\u91ca\u6bcf\u4e00\u4e2a\u795e\u7ecf\u5143\u5e72\u4e86\u4ec0\u4e48\u3002\u800c\u4f20\u7edf\u7684\u795e\u7ecf\u7f51\u7edc\u8bfe\u7a0b\u91cc\uff0csigmoid\u662f\u5728\u903b\u8f91\u56de\u5f52\u91cc\u624d\u5f15\u5165\u7684\uff0c\u662f\u4e3a\u4e86\u628a\u8f93\u51fa\u9650\u5b9a\u57281\u548c0\u4e4b\u95f4\u3002\u663e\u7136\u8fd9\u91cc\u7684\u76ee\u7684\u4e0d\u662f\u8fd9\u6837\u7684\uff0c\u662f\u4e3a\u4e86\u7528\u8db3\u591f\u591a\u7684sigmoid\u6216relu\u6765\u903c\u8fd1\u771f\u5b9e\u7684\u66f2\u7ebf\uff08\u6298\u7ebf\uff09Framework of ML\n\u901a\u7528\u6b65\u9aa4\uff1a\n\n\u8bbe\u5b9a\u4e00\u4e2a\u51fd\u6570\u6765\u63cf\u8ff0\u95ee\u9898$y = f_\\theta(x)$, \u5176\u4e2d$\\theta$\u5c31\u662f\u6240\u6709\u672a\u77e5\u6570\uff08\u53c2\u6570\uff09\n\u8bbe\u5b9a\u4e00\u4e2a\u635f\u5931\u51fd\u6570$L(\\theta)$\n\u6c42\u8ba9\u635f\u5931\u51fd\u6570\u5c3d\u53ef\u80fd\u5c0f\u7684$\\theta^* = arg\\ \\underset{\\theta}{\\rm min}L(\\theta)$\n\n\u62df\u5408\u4e0d\u4e86\u7684\u539f\u56e0\uff1a\n\n\u8fc7\u5927\u7684loss\u901a\u5e38\u201c\u6697\u793a\u201d\u4e86\u6a21\u578b\u4e0d\u5408\u9002\uff08model bias\uff09\uff0c\u6bd4\u5982\u4e0a\u9762\u7684\u7528\u524d1\u5929\u6570\u636e\u9884\u6d4b\u540e\u4e00\u5929\uff0c\u53ef\u4ee5\u5c1d\u8bd5\u6539\u6210\u524d7\u5929\uff0c\u524d30\u5929\u7b49\u3002\n\u5927\u6d77\u91cc\u635e\u9488\uff0c\u9488\u5176\u5b9e\u4e0d\u5728\u6d77\u91cc\n\n\n\u4f18\u5316\u95ee\u9898\uff0c\u68af\u5ea6\u4e0b\u964d\u4e0d\u5230\u76ee\u6807\u503c\n\u9488\u5728\u5927\u6d77\u91cc\uff0c\u6211\u5374\u6ca1\u6709\u529e\u6cd5\u628a\u5b83\u627e\u51fa\u6765\n\n\n\n\u5982\u4f55\u5224\u65ad\u662floss optimization\u6ca1\u505a\u597d\uff1f\n\u7528\u4e0d\u540c\u6a21\u578b\u6765\u6bd4\u8f83\uff08\u66f4\u7b80\u5355\u7684\uff0c\u66f4\u6d45\u7684\uff09\n\u4e0a\u56fe\u4e2d\uff0c\u4e3a\u4ec0\u4e4856\u5c42\u7684\u8868\u73b0\u8fd8\u4e0d\u598220\u5c42\u5462\uff1f\u662foverfitting\u5417\uff1f\u4e0d\u4e00\u5b9a\u3002\u6211\u4eec\u770b\u4e00\u4e0b\u5728\u8bad\u7ec3\u96c6\u91cc\u7684\u8868\u73b0\uff0c56\u5c42\u5c45\u7136\u4e5f\u4e0d\u598220\u5c42\uff0c\u8fd9\u5408\u7406\u5417\uff1f \u4e0d\u5408\u7406\n\u4f46\u51e120\u5c42\u80fd\u505a\u5230\u7684\uff0c\u591a\u51fa\u768436\u5c42\u53ef\u4ee5\u76f4\u63a5\u5168\u90e8identity\uff08\u5373\u590d\u5236\u524d\u4e00\u5c42\u7684\u8f93\u51fa\uff09\uff0c\u4e5f\u4e0d\u53ef\u80fd\u6bd420\u5c42\u66f4\u5dee\uff08\u795e\u7ecf\u7f51\u7edc\u603b\u53ef\u4ee5\u5b66\u5230\u7684\uff09\n\u8fd9\u65f6\uff0c\u5c31\u662f\u4f60\u7684loss optimization\u6709\u95ee\u9898\u4e86\u3002\u5982\u4f55\u89e3\u51b3overfitting\n\n\u589e\u52a0\u6570\u636e\u91cf\n\u589e\u52a0\u6570\u636e\u91cf\u7684\u7edd\u5bf9\u6570\u91cf\ndata augmentation\u6570\u636e\u589e\u5f3a\uff08\u6bd4\u5982\u53cd\u590d\u968f\u673a\u4ece\u8bad\u7ec3\u96c6\u91cc\u53d6\uff0c\u6216\u8005\u5bf9\u56fe\u50cf\u8fdb\u884c\u65cb\u8f6c\u7f29\u653e\u4f4d\u79fb\u548c\u88c1\u526a\u7b49\uff09\n\n\n\u7f29\u51cf\u6a21\u578b\u5f39\u6027\n\uff08\u4f4e\u6b21\u554a\uff0c\u66f4\u5c11\u7684\u53c2\u6570\u300c\u7279\u5f81\u300d\u554a\uff09\n\u66f4\u5c11\u7684\u795e\u7ecf\u5143\uff0c\u5c42\u6570\u554a\n\u8003\u8651\u5171\u7528\u53c2\u6570\nearly stopping\nregularization\n\u8ba9\u635f\u5931\u51fd\u6570\u4e0e\u6bcf\u4e2a\u7279\u5f81\u7cfb\u6570\u76f4\u63a5\u6302\u52fe\uff0c\u5c31\u53d8\u6210\u4e86\u60e9\u7f5a\u9879\n\u56e0\u4e3a\u5b83\u7684\u503c\u8d8a\u5927\uff0c\u4f1a\u8ba9\u635f\u5931\u51fd\u6570\u8d8a\u5927\uff0c\u8fd9\u6837\u53ef\u4ee5\u201c\u60e9\u7f5a\u201d\u8fc7\u5927\u7684\u6743\u91cd\n\n\ndropout\n\u968f\u673a\u4e22\u5f03\u4e00\u4e9b\u8ba1\u7b97\u7ed3\u679c\n\n\n\n\n\nMissmatch\n\u8bfe\u4e0a\u4e00\u4e2a\u6d4b\u8bd5\uff0c\u9884\u6d4b2/26\u7684\u89c2\u770b\u4eba\u6570\uff08\u5468\u4e94\uff0c\u5386\u53f2\u6570\u636e\u90fd\u662f\u89c2\u770b\u91cf\u4f4e\uff09\uff0c\u4f46\u56e0\u4e3a\u516c\u5f00\u4e86\u8fd9\u4e2a\u6d4b\u8bd5\uff0c\u5f15\u8d77\u5f88\u591a\u4eba\u75af\u72c2\u70b9\u51fb\uff0c\u7ed3\u679c\u9020\u6210\u4e86\u8fd9\u4e00\u5929\u7684\u9884\u6d4b\u7ed3\u679c\u975e\u5e38\u5dee\u3002\u8fd9\u4e2a\u4e0d\u53eboverfitting\uff0c\u800c\u662fmismatch\uff0c\u8868\u793a\u7684\u662f\u8bad\u7ec3\u96c6\u548c\u6d4b\u8bd5\u96c6\u7684\u5206\u5e03\u662f\u4e0d\u4e00\u6837\u7684mismatch\u7684\u95ee\u9898\uff0c\u518d\u600e\u4e48\u589e\u52a0\u6570\u636e\u4e5f\u662f\u4e0d\u53ef\u80fd\u89e3\u51b3\u7684\u3002optimization problems\n\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u6709\u4e24\u4e2a\u95ee\u9898\u6ca1\u6709\u5f97\u5230\u89e3\u51b3\uff1a\nloss optimization\u6709\u95ee\u9898\u600e\u4e48\u89e3\u51b3\n\u5176\u5b9e\u5c31\u662f\u5224\u65ad\u662f\u4e0d\u662fsaddle point\uff08\u978d\u70b9\uff09\n\n\nmismatch\u600e\u4e48\u89e3\u51b3\n\nsaddle point\nhessian\u77e9\u9635\u662f\u4e8c\u6b21\u5fae\u5206\uff0c\u5f53\u4e00\u6b21\u5fae\u5206\u4e3a0\u7684\u65f6\u5019\uff0c\u4e8c\u6b21\u5fae\u5206\u5e76\u4e0d\u4e00\u5b9a\u4e3a0\u3002\u8fd9\u662f\u9898\u773c\u3002\u5bf9\u4e8e\u7ea2\u6760\u5185\u7684\u90e8\u5206\uff0c\u8bbe$\\theta - \\theta^T = v$\uff0c\u6709\uff1a\nfor all v: $v^T H v &gt; 0 \\rightarrow \\theta'$\u9644\u8fd1\u7684$\\theta$\u90fd\u8981\u66f4\u5927\n-&gt; \u786e\u5b9e\u662f\u5728local minima\n\n\nfor all v: $v^T H v &lt; 0 \\rightarrow \\theta'$\u9644\u8fd1\u7684$\\theta$\u90fd\u8981\u66f4\u5c0f\n-&gt; \u786e\u5b9e\u662f\u5728local maxima\n\n\n\u800c\u65f6\u5927\u65f6\u5c0f\uff0c\u8bf4\u660e\u662f\u5728saddle point\n\n\u4e8b\u5b9e\u4e0a\u6211\u4eec\u4e0d\u53ef\u80fd\u53bb\u68c0\u67e5\u6240\u6709\u7684v\uff0c\u8fd9\u91cc\u7528Hessian matrix\u6765\u5224\u65ad\uff1a\n$\\rm H$ is positive definite $\\rightarrow$ all eigen values are positive $\\rightarrow$ local minimal\n$\\rm H$ is negative definite $\\rightarrow$ all eigen values are negative $\\rightarrow$ local maximal\n\n\u7528\u4e00\u4e2a\u5f88\u5783\u573e\u7684\u7f51\u7edc\u4e3e\u4f8b\uff0c\u8f93\u5165\u662f1\uff0c\u8f93\u51fa\u662f1\uff0c\u6709w1, w2\u4e24\u5c42\u7f51\u7edc\u53c2\u6570\uff0c\u56e0\u4e3a\u51fd\u6570\u7b80\u5355\uff0c\u4e24\u6b21\u5fae\u5206\u5f97\u5230\u7684hessian\u77e9\u9635\u8fd8\u662f\u6bd4\u8f83\u7b80\u5355\u76f4\u89c2\u7684\uff1a\n\u7531\u4e8e\u7279\u5f81\u503c\u6709\u6b63\u6709\u8d1f\uff0c\u6211\u4eec\u5224\u65ad\u5728\u4e9b(0, 0)\u8fd9\u4e2acritical point\uff0c\u5b83\u662f\u4e00\u4e2asaddle point.\u5982\u679c\u4f60\u5224\u65ad\u51fa\u5f53\u524d\u7684\u53c2\u6570\u786e\u5b9e\u5361\u5728\u4e86\u978d\u70b9\uff0c\u5b83\u540c\u65f6\u4e5f\u6307\u660e\u4e86update direction!\u56fe\u4e2d\uff0c\n\u5148\u6784\u5efa\u51fa\u4e86\u4e00\u4e2a\u5c0f\u4e8e0\u7684\u7ed3\u679c\uff0c\u4ee5\u4fbf\u627e\u5230\u53ef\u4ee5\u8ba9$L(\\theta)$\u6536\u655b\u7684\u76ee\u6807\n\u8fd9\u4e2a\u7ed3\u679c\u4f9d\u8d56\u4e8e\u627e\u5230\u8fd9\u6837\u4e00\u4e2au\n\u8fd9\u4e2au\u662f$\\theta, \\theta'$\u76f8\u51cf\u7684\u7ed3\u679c\n\u5b83\u8fd8\u662f$H$\u7684eigen vector\n\u5b83\u7684eigen value$\\rightarrow \\lambda$ \u8fd8\u8981\u5c0f\u4e8e0\n\n\n\n\u5b9e\u9645\u4e0a\uff0ceigen value\u662f\u53ef\u4ee5\u76f4\u63a5\u6c42\u51fa\u6765\u7684\uff08\u4e0a\u4f8b\u5df2\u7ecf\u6c42\u51fa\u6765\u4e86\uff09\uff0c\u7531\u5b83\u53ef\u4ee5\u63a8\u51faeigen vector\uff0c\u6bd4\u5982[1, 1]$^T$\uff08\u81ea\u884c\u8865\u76f8\u5173\u8bfe\u7a0b\uff09\uff0c\u5f80\u5f80\u4f1a\u4e00\u5bf9\u591a\uff0c\u5e94\u8be5\u90fd\u662f\u5408\u7406\u7684\uff0c\u6211\u4eec\u987a\u7740\u5171\u4e2d\u4e00\u4e2au\u53bb\u66f4\u65b0$\\theta$\uff0c\u5c31\u53ef\u4ee5\u7ee7\u7eed\u6536\u655bloss\u3002\n\u5b9e\u9645\u4e0d\u4f1a\u771f\u7684\u53bb\u8ba1\u7b97hessian matrix?\nMomentum\n\u4e0d\u7ba1\u662f\u8f83\u4e3a\u5e73\u5766\u7684\u9762\uff0c\u8fd8\u662fsaddle point\uff0c\u5982\u679c\u5c0f\u7403\u4ee5\u56fe\u793a\u7684\u65b9\u5f0f\u6eda\u4e0b\u53bb\uff0c\u771f\u5b9e\u7684\u7269\u7406\u4e16\u754c\u662f\u4e0d\u53ef\u80fd\u505c\u7559\u5728\u90a3\u4e2agradient\u4e3a0\u6216\u63a5\u8fd1\u4e8e0\u7684\u4f4d\u7f6e\u7684\uff0c\u56e0\u4e3a\u5b83\u6709\u201c\u52a8\u91cf\u201d\uff0c\u5373\u60ef\u6027\uff0c\u751a\u81f3\u8fd8\u53ef\u80fd\u6eda\u8fc7local minima\uff0c\u8fd9\u6070\u597d\u662f\u6211\u4eec\u9700\u8981\u7684\u7279\u6027\u3002\n\n\u4e0d\u4f46\u8003\u8651\u5f53\u524d\u68af\u5ea6\uff0c\u8fd8\u8003\u8651\u4e4b\u524d\u7d2f\u79ef\u7684\u503c\uff08\u52a8\u91cf\uff09\uff0c\u8fd9\u4e2a\u4e4b\u524d\uff0c\u662f\u4e4b\u524d\u6240\u6709\u7684\u52a8\u91cf\uff0c\u800c\u4e0d\u662f\u524d\u4e00\u6b65\u7684\uff1a\n$$\n\\begin{aligned}\nm^0 &amp;= 0 \\\nm^1 &amp;= -\\eta g^0 \\\nm^2 &amp;= -\\lambda \\eta g^0 - \\eta g^1 \\\n&amp;\\vdots\n\\end{aligned}\n$$adaptive learning rate\n\u4e0d\u662f\u4ec0\u4e48\u65f6\u5019loss\u5361\u4f4f\u4e86\u5c31\u8bf4\u660e\u5230\u4e86\u6781\u70b9(\u6700\u5c0f\u503c\uff0c\u978d\u70b9\uff0c\u5e73\u5766\u7684\u70b9)\u770b\u4e0b\u9762\u8fd9\u4e2aerror surface\uff0c\u4e24\u4e2a\u53c2\u6570\uff0c\u4e00\u4e2a\u53d8\u52a8\u975e\u5e38\u5e73\u7f13\uff0c\u4e00\u4e2a\u975e\u5e38\u5267\u70c8\uff0c\u5982\u679c\u5e94\u7528\u76f8\u540c\u7684learning rate\uff0c\u8981\u4e48\u53cd\u590d\u6a2a\u8df3\uff08\u8fc7\u5927\uff09\uff0c\u8981\u4e48\u5c31\u518d\u4e5f\u632a\u4e0d\u52a8\u6b65\uff08\u592a\u5c0f\uff09\uff1aAdagrad (Root Mean Square)\n\u4e8e\u662f\u6709\u4e86\u4e0b\u9762\u7684\u4f18\u5316\u65b9\u6cd5\uff0c\u601d\u8def\u4e0el2\u6b63\u5219\u5316\u5dee\u4e0d\u591a\uff0c\u5229\u7528\u4e0d\u540c\u53c2\u6570\u672c\u8eabgradient\u7684\u5927\u5c0f\u6765\u201c\u60e9\u7f5a\u201d\u5b83\u8d77\u5230\u7684\u4f5c\u7528\u3002\n\u8fd9\u91cc\u7528\u7684\u662f\u76f8\u9664\uff0c\u56e0\u4e3a\u6211\u7684\u68af\u5ea6\u8d8a\u5c0f\uff0c\u6b65\u4f10\u5c31\u53ef\u4ee5\u8de8\u5f97\u66f4\u5927\u4e86\u3002\n\u5e76\u4e14\u91c7\u7528\u7684\u662f\u68af\u5ea6\u7684\u5e73\u65b9\u548c(Root Mean Square)\n\n\u56fe\u4e2d\u53ef\u4ee5\u770b\u51fa\u5e73\u7f13\u7684$\\theta_1$\u5c31\u53ef\u4ee5\u5e94\u7528\u5927\u7684\u5b66\u4e60\u7387\uff0c\u53cd\u4e4b\u4ea6\u7136\u3002\u8fd9\u4e2a\u65b9\u6cd5\u5c31\u662fAdagrad\u7684\u7531\u6765\u3002\u4e0d\u540c\u7684\u53c2\u6570\u7528\u4e0d\u540c\u7684\u6b65\u4f10\u6765\u8fed\u4ee3\uff0c\u8fd9\u662f\u4e00\u79cd\u601d\u8def\u3002\u8fd9\u5c31\u89e3\u51b3\u95ee\u9898\u4e86\u5417\uff1f\u770b\u4e0b\u9762\u8fd9\u4e2a\u65b0\u6708\u5f62\u7684error surface\uff0c\u4e0d\u5356\u5173\u5b50\u4e86\uff0c\u8fd9\u4e2a\u4ee5\u524d\u63a5\u89e6\u7684\u66f4\u591a\uff0c\u5373\u68af\u5ea6\u968f\u65f6\u95f4\u7684\u53d8\u5316\u800c\u4e0d\u540c\uff0cRMSProp\n\u8fd9\u4e2a\u65b9\u6cd5\u662f\u627e\u4e0d\u5230\u8bba\u6587\u7684\u3002\u6838\u5fc3\u601d\u60f3\u662f\u5728Adagrad\u505a\u5e73\u65b9\u548c\u7684\u65f6\u5019\uff0c\u7ed9\u4e86\u4e00\u4e2a$\\alpha$\u4f5c\u4e3a\u5f53\u524d\u8fd9\u4e2a\u68af\u5ea6\u7684\u6743\u91cd(0,1)\uff0c\u800c\u628a\u524d\u9762\u4ea7\u751f\u7684$\\sigma$\u76f4\u63a5\u5e94\u7528$(1-\\alpha)$\uff1a\n$\\theta_i^{t+1} \\leftarrow \\theta_i^t - \\frac{\\eta}{\\color{red}{\\sigma_i^t}} g_i^t$\n$\\sigma_i^t = \\sqrt{\\alpha(\\theta_i^{t-1})^2 + (1-\\alpha)(g_i^t)^2}$\n\nAdam: (RMSProp + Momentum)\nLearning Rate Scheduling\n\u7ec8\u4e8e\u6765\u5230\u4e86\u6700\u76f4\u89c2\u7684lr scheduling\u90e8\u5206\uff0c\u4e5f\u662f\u6700\u5bb9\u6613\u7406\u89e3\u7684\uff0c\u968f\u7740\u65f6\u95f4\u7684\u53d8\u5316\uff08\u5982\u679c\u4f60\u62df\u5408\u6709\u6548\u7684\u8bdd\uff09\uff0c\u8d8a\u63a5\u8fd1local minima\uff0clr\u8d8a\u5c0f\u3002\u800cRMSProp\u4e00\u8282\u91cc\u8bf4\u7684lr\u968f\u65f6\u95f4\u53d8\u5316\u5e76\u4e0d\u662f\u8fd9\u4e00\u8282\u91cc\u7684\u968f\u65f6\u95f4\u53d8\u5316\uff0c\u800c\u662f\u8bbe\u5b9a\u4e00\u4e2a\u6743\u91cd\uff0c\u59cb\u7ec8\u8ba9\u5f53\u524d\u7684\u68af\u5ea6\u62e5\u6709\u6700\u9ad8\u6743\u91cd\uff0c\u6ce8\u91cd\u7684\u662f\u5f53\u524d\u4e0e\u8fc7\u5f80\uff0c\u800cschedule\u5219\u8003\u91cf\u7684\u662f\u6709\u8ba1\u5212\u7684\u51cf\u5c0f\u3002\u4e0b\u56fe\u4e2d\uff0c\u5e94\u7528\u4e86adam\u4f18\u5316\u540e\uff0c\u7531\u4e8e\u957f\u4e45\u4ee5\u6765\u6a2a\u5411\u79fb\u52a8\u7d2f\u79ef\u7684\u5c0f\u68af\u5ea6\u4f1a\u7a81\u7136\u7206\u53d1\uff0c\u5f62\u6210\u4e86\u56fe\u4e2d\u7684\u5c40\u9762\uff0c\u5e94\u7528\u4e86scheduling\u540e\uff0c\u4eba\u4e3a\u5728\u8d8a\u9760\u8fd1\u6781\u503c\u5b66\u4e60\u7387\u8d8a\u4f4e\uff0c\u5f88\u660e\u663e\u76f4\u63a5\u5c31\u89e3\u51b3\u4e86\u8fd9\u4e2a\u95ee\u9898\u3002\n\u800cwarm up\u6ca1\u6709\u5728\u539f\u7406\u6216\u76f4\u89c2\u4e0a\u8bb2\u89e3\u66f4\u591a\uff0c\u4e86\u89e3\u4e00\u4e0b\u5427\uff0c\u5b9e\u64cd\u4e0a\u662f\u5f88\u53ef\u884c\u7684\uff0c\u5f88\u591a\u77e5\u540d\u7684\u7f51\u7edc\u90fd\u7528\u4e86\u5b83\uff1a\u8981\u5f3a\u884c\u89e3\u91ca\u7684\u8bdd\uff0c\u5c31\u662fadam\u7684$\\theta$\u662f\u4e00\u4e2a\u57fa\u4e8e\u7edf\u8ba1\u7684\u7ed3\u679c\uff0c\u6240\u4ee5\u8981\u5728\u770b\u4e86\u8db3\u591f\u591a\u7684\u6570\u636e\u4e4b\u540e\u624d\u6709\u610f\u4e49\uff0c\u56e0\u6b64\u91c7\u7528\u4e86\u4e00\u5f00\u59cb\u5c0f\u6b65\u4f10\u518d\u589e\u52a0\u5230\u5927\u6b65\u4f10\u8fd9\u6837\u4e00\u4e2a\u8fc7\u5ea6\uff0c\u62ff\u5230\u8db3\u591f\u7684\u6570\u636e\u4e4b\u540e\uff0c\u624d\u5f00\u59cb\u4e00\u4e2a\u6b63\u5e38\u7684\u4e0d\u65ad\u51cf\u5c0f\u7684schedule\u7684\u8fc7\u7a0b\u3002\u66f4\u591a\u53ef\u53c2\u8003\uff1aRAdam: https://arxiv.org/abs/1908.03265Summary of Optimization\n\u56de\u987e\u4e0bMomentum\uff0c\u5b83\u5c31\u662f\u4e0d\u4f46\u8003\u8651\u5f53\u524d\u7684\u68af\u5ea6\uff0c\u8fd8\u8003\u8651\u4e4b\u524d\u6240\u6709\u7684\u68af\u5ea6\uff08\u52a0\u8d77\u6765\uff09\uff0c\u901a\u8fc7\u6570\u5b66\u8ba1\u7b97\uff0c\u5f53\u7136\u662f\u80fd\u7b97\u51fa\u5b83\u7684\u201d\u52a8\u91cf\u201c\u7684\u3002\u90a3\u4e48\u540c\u6837\u662f\u7d2f\u8ba1\u8fc7\u5f80\u7684\u68af\u5ea6\uff0c\u4e00\u4e2a\u5728\u5206\u6bcd\uff08$\\theta$)\uff0c\u4e00\u4e2a\u5728\u5206\u5b50\uff08momentum)\uff0c\u90a3\u4e0d\u662f\u62b5\u6d88\u4e86\u5417\uff1f\nmomentum\u662f\u76f8\u52a0\uff0c\u4fdd\u7559\u4e86\u65b9\u5411\n$\\sigma$\u662f\u5e73\u65b9\u548c\uff0c\u53ea\u4fdd\u7559\u4e86\u5927\u5c0f\n\nBatch Normalization\n\u6cbf\u7740cost surface\u627e\u5230\u6700\u4f4e\u70b9\u6709\u4e00\u4e2a\u601d\u8def\uff0c\u5c31\u662f\u80fd\u4e0d\u80fd\u628a\u5c71\u201c\u94f2\u5e73\u201d\uff1f\u5373\u628a\u5730\u8c8c\u7531\u5d0e\u5c96\u53d8\u5f97\u5e73\u6ed1\u70b9\uff1f batch normalization\u5c31\u662f\u5176\u4e2d\u4e00\u79cd\u628a\u5c71\u94f2\u5e73\u7684\u65b9\u6cd5\u3002\n\u5176\u5b9e\u5c31\u662f\u4eba\u4e3a\u63a7\u5236\u4e86error\u7684\u8303\u56f4\uff0c\u8ba9\u5b83\u5728\u5404\u4e2afeature\u4e0a\u9762\u7684\u201c\u6570\u91cf\u7ea7\u201d\u57fa\u672c\u4e00\u81f4\uff08\u5747\u503c0\uff0c\u65b9\u5dee1\uff09\uff0c\u8fd9\u6837\u4ea7\u751f\u7684error surface\u4e0d\u4f1a\u51fa\u73b0\u67d0\u53c2\u6570\u5f71\u54cd\u76f8\u5f53\u5c0f\uff0c\u67d0\u4e9b\u5f71\u54cd\u53c8\u76f8\u5f53\u5927\uff0c\u800c\u7eaf\u7cb9\u662f\u56e0\u4e3ainput\u672c\u8eab\u91cf\u7ea7\u4e0d\u540c\u7684\u539f\u56e0\uff08\u6bd4\u5982\u623f\u4ef7\u52a8\u4ee5\u767e\u4e07\u8ba1\uff0c\u800c\u5e74\u4efd\u662f\u4e00\u5e74\u4e00\u5e74\u589e\u7684\uff09error surface\u53ef\u4ee5\u60f3\u8c61\u6210\u6bcf\u4e00\u4e2a\u7279\u5f81\u62e5\u6709\u4e00\u4e2a\u8f74\uff08\u8bfe\u7a0b\u7528\u4e8c\u5230\u4e09\u7ef4\u6f14\u793a\uff09\uff0cBN\u8ba9\u6bcf\u6761\u8f74\u4e0a\u7684ticks\u62e5\u6709\u5dee\u4e0d\u591a\u7684\u5ea6\u91cf\u3002\u7136\u540e\uff0c\u4f60\u628a\u5b83\u4e22\u5230\u6df1\u5c42\u7f51\u7edc\u91cc\u53bb\uff0c\u4f60\u7684\u8f93\u51fa\u7684\u5206\u5e03\u53c8\u662f\u4e0d\u53ef\u63a7\u7684\uff0c\u8981\u63a5\u4e0b\u4e00\u4e2a\u7f51\u7edc\u7684\u8bdd\uff0c\u4f60\u7684\u8f93\u51fa\u53c8\u6210\u4e86\u4e0b\u4e00\u4e2a\u7f51\u7edc\u7684\u8f93\u5165\u3002\u867d\u7136\u4f60\u5728\u8f93\u51fa\u524dnomalization\u8fc7\u4e86\uff0c\u4f46\u662f\u53ef\u80fd\u88ab\u6781\u5927\u548c\u6781\u5c0f\u7684\u6743\u91cdw\u53c8\u7ed9\u53d8\u4e86\u4e86\u6570\u91cf\u7ea7\u4e0d\u540c\u7684\u8f93\u51fa\u518d\u7136\u540e\uff0c\u4e0d\u50cf\u7b2c\u4e00\u5c42\uff0c\u8f93\u5165\u7684\u6570\u636e\u6765\u81ea\u4e8e\u8bad\u7ec3\u8d44\u6599\uff0c\u4e0b\u4e00\u5c42\u7684\u8f93\u5165\u662f\u8981\u5728\u4e0a\u4e00\u5c42\u7684\u8f93\u51fa\u8fdb\u884csigmoid\u4e4b\u540e\u7684\u518d\u7136\u540e\uff0c\u4f60\u53bb\u770b\u770bsigmoid\u51fd\u6570\u7684\u5f62\u72b6\uff0c\u5b83\u5728\u5927\u4e8e\u4e00\u5b9a\u503c\u6216\u5c0f\u4e8e\u4e00\u5b9a\u503c\u4e4b\u540e\uff0c\u5bf9x\u7684\u53d8\u5316\u662f\u975e\u5e38\u4e0d\u654f\u611f\u4e86\uff0c\u8fd9\u6837\u975e\u5e38\u5bb9\u6613\u4e86\u51fa\u73b0\u68af\u5ea6\u6d88\u5931\u7684\u73b0\u8c61\u3002\u4e8e\u662f\uff0c\u51fa\u4e8e\u4ee5\u4e0b\u4e24\u4e2a\u539f\u56e0\uff0c\u6211\u4eec\u90fd\u4f1a\u8003\u8651\u5728\u8f93\u51fa\u540e\u4e5f\u63a5\u4e00\u6b21batch normalization::\n\u5f52\u4e00\u5316\uff08$\\mu=0, \\delta=1$)\n\u628a\u8f93\u5165\u538b\u7f29\u5230\u4e00\u4e2a\uff08sigmoid\u68af\u5ea6\u8f83\u5927\u7684\uff09\u5c0f\u533a\u95f4\u5185\n\n\u7167\u8fd9\u4e2a\u601d\u8def\uff0c\u6211\u4eec\u662f\u9700\u8981\u5728sigmoid\u4e4b\u524d\u8fdb\u884c\u4e00\u6b21BN\u7684\uff0c\u800c\u6709\u7684\u6559\u6750\u4f1a\u544a\u8bc9\u4f60\u4e4b\u524d\u4e4b\u540e\u505a\u90fd\u6ca1\u5173\u7cfb\uff0c\u90a3\u4e48\u4e4b\u540e\u53bb\u505a\u5c31\u4e27\u5931\u4e86\u4ee5\u4e0a\u7b2c\u4e8c\u6761\u7684\u597d\u5904\u3002\u526f\u4f5c\u7528\n\u4ee5\u524d$x_1 \\rightarrow z_1 \\rightarrow a_1$\n\u73b0\u5728$\\tilde z_1$\u662f\u7528\u6240\u6709$z_i$\u7b97\u51fa\u6765\u7684\uff0c\u4e0d\u518d\u662f\u72ec\u7acb\u7684\u4e86\n\n\u540e\u8bb01\u6700\u540e\uff0c\u5b9e\u9645\u8fd8\u4f1a\u628a$\\tilde z_i$\u518d\u8fd9\u4e48\u5904\u7406\u4e00\u6b21\uff1a\n$\\hat z_i = \\gamma \\odot \\tilde z_i + \\beta$\n\n\u4e0d\u8981\u62c5\u5fc3\u53c8\u628a\u91cf\u7ea7\u548c\u504f\u79fb\u90fd\u505a\u56de\u53bb\u4e86\uff0c\u4f1a\u4ee51\u548c0\u4e3a\u521d\u59cb\u503c\u6162\u6162learn\u7684\u3002\u540e\u8bb02\u63a8\u7406\u7684\u65f6\u5019\uff0c\u5982\u679cbatch size\u4e0d\u591f\uff0c\u751a\u81f3\u53ea\u6709\u4e00\u6761\u65f6\uff0c\u600e\u4e48\u53bb\u7b97$\\mu, \\sigma$\u5462\uff1fpytorch\u5728\u8bad\u7ec3\u7684\u65f6\u5019\u4f1a\u8ba1\u7b97moving averageof $\\mu$ and $\\sigma$ of the batches.(\u6bcf\u6b21\u628a\u5f53\u524d\u6279\u6b21\u7684\u5747\u503c\u548c\u5386\u53f2\u5747\u503c\u6765\u8ba1\u7b97\u4e00\u4e2a\u65b0\u7684\u5386\u53f2\u5747\u503c$\\bar \\mu$)\n$\\bar \\mu \\leftarrow p \\bar \\mu + (1-p)\\mu_t$\n\n\u63a8\u7406\u7684\u65f6\u5019\u7528$\\bar \\mu, \\bar \\sigma$\u3002\u6700\u540e\uff0c\u7528\u4e86BN\uff0c\u5e73\u6ed1\u4e86error surface\uff0c\u5b66\u4e60\u7387\u5c31\u53ef\u4ee5\u8bbe\u5927\u4e00\u70b9\u4e86\uff0c\u52a0\u901f\u6536\u655b\u3002Classification\n\u7528\u6570\u5b57\u6765\u8868\u793aclass\uff0c\u5c31\u4f1a\u5b58\u5728\u8ba4\u4e3a1\u8ddf2\u6bd4\u8f83\u8fd1\u4e0e3\u6bd4\u8f83\u8fdc\u7684\u53ef\u80fd\uff08\u4ece\u6570\u5b66\u8fd0\u7b97\u6765\u770b\u4e5f\u786e\u5b9e\u662f\u7684\uff0c\u6bd5\u7adf\u795e\u7ecf\u7f51\u7edc\u5c31\u662f\u4e0d\u65ad\u5730\u4e58\u52a0\u548c\u4e0e\u771f\u503c\u51cf\u505a\u5bf9\u6bd4\uff09\uff0c\u6240\u4ee5\u5f15\u5165\u4e86one-hot\uff0c\u5b83\u7684\u7279\u5f81\u5c31\u662fclass\u4e4b\u95f4\u65e0\u5173\u8054\u3002\u6070\u6070\u662f\u8fd9\u4e2a\u7279\u6027\uff0c\u4f7f\u5f97\u7528one-hot\u6765\u8868\u793a\u8bcd\u5411\u91cf\u7684\u65f6\u5019\u6210\u4e86\u4e00\u4e2a\u8981\u514b\u670d\u7684\u7f3a\u70b9\u3002\u9884\u6d4b\u5355\u8bcd\u786e\u5b9e\u662f\u4e00\u4e2a\u5206\u7c7b\u95ee\u9898\uff0c\u7136\u540e\u8bcd\u4e0e\u8bcd\u4e4b\u95f4\u5374\u5e76\u4e0d\u662f\u65e0\u5173\u7684\uff0c\u6070\u6070\u662f\u6709\u8ddd\u79bb\u8fdc\u8fd1\u7684\u6982\u5ff5\u7684\uff0c\u800c\u628a\u5b83\u8fd8\u539f\u56de\u6570\u5b57\u4e5f\u89e3\u51b3\u4e0d\u4e86\u95ee\u9898\uff0c\u56e0\u4e3a\u5355\u4e2a\u6570\u5b57\u4e0e\u524d\u540e\u7684\u6570\u5b57\u786e\u5b9e\u8fd1\u4e86\uff0c\u4f46\u662f\u7a7a\u95f4\u4e0a\u8fd8\u662f\u53ef\u4ee5\u548c\u5f88\u591a\u6570\u5b57\u63a5\u8fd1\u7684\uff0c\u6240\u4ee5\u5411\u91cf\u8fd8\u662f\u5fc5\u8981\u7684\uff0c\u4e8e\u662f\u53c8\u7ee7\u7eed\u6253\u8865\u4e01\uff0c\u624d\u6709\u4e86\u7a20\u5bc6\u77e9\u9635embedding\u7684\u8bde\u751f\u3002softmax\nsoftmax\u7684\u4e00\u4e2a\u7b80\u5355\u7684\u89e3\u91ca\u5c31\u662f\u4f60\u7684\u771f\u503c\u662f0\u548c1\u7684\u7ec4\u5408(one-hot)\uff0c\u4f46\u4f60\u7684\u9884\u6d4b\u503c\u53ef\u4ee5\u662f\u4efb\u4f55\u6570\uff0c\u56e0\u4e3a\u4f60\u9700\u8981\u628a\u5b83normalize\u5230(0,1)\u7684\u533a\u95f4\u3002\u5f53class\u53ea\u6709\u4e24\u4e2a\u65f6\uff0c\u7528softmax\u548c\u7528sigmoid\u662f\u4e00\u6837\u7684\u3002loss\n\u53ef\u4ee5\u7ee7\u7eed\u7528MeanSquare Error(MSE) $ e = \\sum_i(\\hat y_i - y'_i)^2$\uff0c\u4f46\u66f4\u5e38\u7528\u7684\u662f\uff1aCross-entropy\n$e = - \\sum_i \\hat y_i lny'_i$\nMinimizing cross-entropy is equivalent to maximizing likelihood\nlinear regression\u662f\u60f3\u4ece\u771f\u503c\u4e0e\u9884\u6d4b\u503c\u7684\u5dee\u6765\u5165\u624b\u627e\u5230\u6700\u5408\u9002\u7684\u53c2\u6570\uff0c\u800clogistic regression\u662f\u60f3\u627e\u5230\u4e00\u4e2a\u7b26\u5408\u771f\u503c\u5206\u5e03\u7684\u7684\u9884\u6d4b\u5206\u5e03\u3002\u5728\u5434\u6069\u8fbe\u7684\u8bfe\u7a0b\u91cc\uff0c\u8fd9\u4e2a\u635f\u5931\u51fd\u6570\u662f\u201d\u627e\u51fa\u6765\u7684\u201c\uff1a\n\u9996\u5148\uff0c$\\theta x$\u540e\u7684\u503c\u53ef\u4ee5\u662f\u4efb\u610f\u503c\uff0c\u6240\u4ee5\u518dsigmoid\u4e00\u4e0b\uff0c\u4ee5\u4e0b\u8bb0\u4e3ahx\nhx\u7684\u610f\u601d\u5c31\u662fy\u4e3a1\u7684\u6982\u7387\n\u6211\u9700\u8981\u4e00\u4e2a\u635f\u5931\u51fd\u6570\uff0c\u5e0c\u671b\u5f53\u771f\u503c\u662f0\u65f6\uff0c\u9884\u6d4by\u4e3a1\u7684\u6982\u7387\u7684\u8bef\u5dee\u5e94\u8be5\u4e3a\u65e0\u7a77\u5927\n\u4e5f\u5c31\u662f\u8bf4hx=0\u65f6\uff0c\u635f\u5931\u51fd\u6570\u7684\u7ed3\u679c\u5e94\u8be5\u662f\u65e0\u7a77\u5927\n\u800chx=1\u65f6, \u635f\u5931\u5e94\u8be5\u4e3a0\n\n\n\u540c\u7406\uff0c\u5f53y\u4e3a1\u65f6\uff0chx=0\u65f6\u635f\u5931\u5e94\u8be5\u662f\u65e0\u7a77\u5927\uff0chx=1\u65f6\u635f\u5931\u4e3a0\n\u8fd9\u65f6\u5019\u624d\u544a\u8bc9\u4f60\uff0clog\u51fd\u6570\u521a\u597d\u957f\u8fd9\u6837\uff0c\u8bf7\u56de\u770b\u4e0a\u9762\u7684\u4e24\u5f20\u56fe\n\n\u800c\u522b\u7684\u5730\u65b9\u662f\u544a\u8bc9\u4f60log\u662f\u4e3a\u4e86\u628a\u6982\u7387\u8fde\u4e58\u53d8\u6210\u8fde\u52a0\uff0c\u65b9\u4fbf\u8ba1\u7b97\u3002\u674e\u5b8f\u6bc5\u8fd9\u91cc\u5e72\u8106\u5c31\u76f4\u63a5\u544a\u8bc9\u4f60\u516c\u5f0f\u957f\u8fd9\u6837\u4e86\u3002\u3002\u3002\u8fd9\u91cc\u7ed5\u4e24\u4e2a\u5f2f\u5c31\u597d\u4e86\uff1a\ny=1\u65f6\uff0c\u9884\u6d4by\u4e3a1\u7684\u6982\u7387\u4e3a1\uff0c y=0\u65f6\uff0c\u5e94\u9884\u6d4by=1\u7684\u6982\u7387\u4e3a0\n\u800c\u8fd9\u91cc\u662f\u505a\u635f\u5931\u51fd\u6570\uff0c\u6240\u4ee5\u9884\u6d4b\u5bf9\u4e86\u635f\u5931\u4e3a0\uff0c\u9519\u4e86\u635f\u5931\u65e0\u7a77\u5927\n\u9884\u6d4b\u4e3a1\u7684\u6982\u7387\u5c31\u662fhx\uff0c\u6a2a\u8f74\u4e5f\u662fhx\n\n\n\u8bfe\u7a0b\u91cc\u8bf4softmax\u548ccross entorpy\u7d27\u5bc6\u5230pytorch\u91cc\u76f4\u63a5\u5c31\u628a\u4e24\u8005\u7ed3\u5408\u5230\u4e00\u8d77\u4e86\uff0c\u5e94\u7528cross entropy\u7684\u65f6\u5019\u628asoftmax\u52a0\u5230\u4e86\u4f60\u7684network\u7684\u6700\u540e\u4e00\u5c42\uff08\u4e5f\u5c31\u662f\u8bf4\u4f60\u6ca1\u5fc5\u8981\u624b\u5199\uff09\u3002\u8fd9\u91cc\u8bf4\u7684\u53ea\u662fpytorch\u662f\u8fd9\u4e48\u5904\u7406\u7684\u5417\uff1f----\u662f\u7684\nCE v.s. MSE\n\u6570\u5b66\u8bc1\u660e\uff1ahttp://speech.ee.ntu.edu.tw/~tlkagk/courses/MLDS_2015_2/Lecture/Deep%20More%20(v2).ecm.mp4/index.html\u5355\u770b\u5b9e\u9a8c\u7ed3\u679c\uff0c\u521d\u59cb\u4f4d\u7f6e\u540c\u4e3aloss\u8f83\u5927\u7684\u5de6\u4e0a\u89d2\uff0c\u56e0\u4e3aCE\u6709\u660e\u663e\u7684\u68af\u5ea6\uff0c\u5f88\u5bb9\u6613\u627e\u5230\u53f3\u4e0b\u89d2\u7684\u6781\u503c\uff0c\u4f46\u662fMSE\u5373\u4f7floss\u5de8\u5927\uff0c\u4f46\u662f\u5374\u6ca1\u6709\u68af\u5ea6\u3002\u56e0\u6b64\u5bf9\u4e8e\u903b\u8f91\u56de\u5f52\uff0c\u9009\u62e9\u4ea4\u53c9\u71b5\u4ece\u5b9e\u9a8c\u6765\u770b\u662f\u5408\u7406\u7684\uff0c\u6570\u5b66\u63a8\u5bfc\u8bf7\u770b\u4e0a\u9762\u7684\u94fe\u63a5\u3002", "categories": [{"name": "posts", "slug": "posts", "permalink": "/category/posts/"}], "tags": [{"name": "\u674e\u5b8f\u6bc5", "slug": "\u674e\u5b8f\u6bc5", "permalink": "/tag/%E6%9D%8E%E5%AE%8F%E6%AF%85/"}, {"name": "\u673a\u5668\u5b66\u4e60", "slug": "\u673a\u5668\u5b66\u4e60", "permalink": "/tag/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"}, {"name": "optimization", "slug": "optimization", "permalink": "/tag/optimization/"}, {"name": "RMSProp", "slug": "RMSProp", "permalink": "/tag/RMSProp/"}, {"name": "Adam", "slug": "Adam", "permalink": "/tag/Adam/"}, {"name": "Adagrad", "slug": "Adagrad", "permalink": "/tag/Adagrad/"}, {"name": "Batch Normalization", "slug": "Batch Normalization", "permalink": "/tag/Batch%20Normalization/"}]}, {"title": "\u674e\u5b8f\u6bc5MACHINE LEARNING 2021 SPRING\u7b14\u8bb0[1]", "date": "2021-10-13T02:00:00-00.00", "path": "/archives/%E6%9D%8E%E5%AE%8F%E6%AF%85MACHINE-LEARNING-2021-SPRING%E7%AC%94%E8%AE%B0-1/", "text": "\n\u7eaf\u542c\u8bfe\u65f6\u4e00\u4e9b\u601d\u8def\u548c\u7b14\u8bb0\uff0c\u6ca1\u6709\u6559\u7a0b\u4f5c\u7528\u3002\n\u8fd9\u4e2a\u8bfe\u7a0b\u540e\u9762\u5c31\u6bd4\u8f83\u6c34\u4e86\uff0c\u5927\u91cf\u7684\u5168\u662f\u4ecb\u7ecd\u6027\u7684\u4e1c\u897f\uff0c\u4e5f\u7f57\u5217\u4e86\u5927\u91cf\u7684\u65e2\u5f80\u8bfe\u7a0b\u548c\u8bba\u6587\uff0c\u5982\u679c\u4f60\u5728\u5de5\u4f5c\u8fc7\u7814\u7a76\u4e2d\u78b0\u5230\u4e86\u5b83\u63d0\u8fc7\u7684\u573a\u666f\u6216\u95ee\u9898\uff0c\u5012\u662f\u53ef\u4ee5\u628a\u5b83\u4f5c\u7d22\u5f15\u7528\u3002\nLinear Model\nPiecewise Linear\n\u7ebf\u6027\u6a21\u578b\u6c38\u8fdc\u53ea\u6709\u4e00\u6761\u76f4\u7ebf\uff0c\u90a3\u4e48\u5bf9\u4e8e\u6298\u7ebf\uff08\u66f2\u7ebf\uff09\uff0c\u80fd\u600e\u6837\u66f4\u597d\u5730\u5efa\u6a21\u5462\uff1f\u8fd9\u91cc\u8003\u8651\u4e00\u79cd\u65b9\u6cd5\uff0c\n\u7528\u4e00\u4e2a\u5e38\u6570\u52a0\u4e00\u4e2a\u6574\u6d41\u51fd\u6570\n\u5373\u5de6\u53f3\u4e24\u4e2a\u9608\u503c\u5916y\u503c\u4e0d\u968fx\u503c\u53d8\u5316\uff0c\u9608\u503c\u5185\u624d\u662f\u7ebf\u6027\u53d8\u5316\uff08\u5929\u751f\u5c31\u62e5\u6709\u4e24\u4e2a\u6298\u89d2\uff09\u3002\n\n\n\u6bcf\u4e00\u4e2a\u8f6c\u6298\u70b9\u52a0\u4e00\u4e2a\u65b0\u7684\u6574\u6d41\u51fd\u6570\n\n\u5982\u4e0b\uff1a\n\u5982\u679c\u662f\u66f2\u7ebf\uff0c\u4e5f\u53ef\u4ee5\u8fd1\u4f3c\u5730\u7406\u89e3\u4e3a\u6570\u4e2a\u6298\u7ebf\u6784\u6210\u7684\uff08\u53d6\u51b3\u4e8e\u8fd1\u4f3c\u7684\u7cbe\u5ea6\uff09\uff0c\u800c\u84dd\u8272\u7684\u6574\u6d41\u51fd\u6570\u4e0d\u597d\u8868\u793a\uff0c\u4e8b\u5b9e\u4e0a\u6709sigmoid\u51fd\u6570\u4e0e\u5b83\u975e\u5e38\u63a5\u8fd1\uff08\u5b83\u662f\u66f2\u7ebf\uff09\uff0c\u6240\u4ee5\u84dd\u7ebf\u53c8\u53ef\u4ee5\u53eb\uff1aHard Sigmoid\u6240\u4ee5\uff0c\u6700\u7ec8\u6210\u4e86\u4e00\u4e2a\u5e38\u6570(bias)\u548c\u6570\u4e2asigmoid\u51fd\u6570\u6765\u903c\u8fd1\u771f\u5b9e\u7684\u66f2\u7ebf\u3002\u540c\u65f6\uff0c\u6bcf\u4e00\u4e2a\u8f6c\u6298\u70b9i\u4e0as\u51fd\u6570\u7684\u5177\u4f53\u5f62\u72b6\uff08\u6bd4\u5982\u6709\u591a\u659c\u591a\u9ad8\uff09\uff0c\u5c31\u7531\u4e00\u4e2a\u65b0\u7684\u7ebf\u6027\u53d8\u6362\u6765\u63a7\u5236\uff1a$b_i + w_ix_n$\uff0c\u628ai\u4e0a\u7d2f\u79ef\u7684\u7ebf\u6027\u53d8\u6362\u7d2f\u52a0\uff0c\u5c31\u5f97\u5230\u4e0e$x_n$\u6700\u53ef\u80fd\u903c\u8fd1\u7684\u66f2\u7ebf\u3002\u4e0b\u56fe\u6f14\u793a\u4e863\u4e2a\u8f6c\u6298\u70b9\u7684\u60c5\u51b5\uff1a\u81f3\u6b64\uff0c\u4e00\u4e2a\u7b80\u5355\u7684\u5bf9b,w\u4f9d\u8d56\u7684\u51fd\u6570\u53d8\u6210\u4e86\u5bf9\uff08$w_i, b_i, c_i$)\u548c, x, b\u7684\u4f9d\u8d56\uff0c\u5373\u591a\u4e86\u5f88\u591a\u53d8\u91cf\u3002\n$y = b + wx_1$\n$y = b + \\sum_i c_i sigmoid(b_i + w_i x_{\\color{red} 1})$\n\n\u6ce8\u610f\u8fd9\u4e2a$x_1$\uff0c\u5373\u53ea\u8f6c\u4e86\u4e00\u4e2ax\u5c31\u8981\u5806\u4e00\u4e2asum\uff0c\u800c\u76ee\u524d\u4e5f\u53ea\u662f\u6f14\u793a\u4e86\u53ea\u6709\u4e00\u4e2a\u7279\u5f81\u7684\u60c5\u51b5\u3002\u5982\u679c\u66f4\u590d\u6742\u4e00\u70b9\u7684\u6a21\u578b\uff0c\u6bcf\u6b21\u4e0d\u662f\u770b\u4e00\u4e2ax\uff0c\u800c\u770bn\u4e2ax\uff0c\uff08\u6bd4\u5982\u5229\u7528\u524d7\u5929\u7684\u89c2\u770b\u6570\u636e\u6765\u9884\u6d4b\u7b2c8\u5929\u7684\uff0c\u90a3\u4e48\u5efa\u6a21\u7684\u65f6\u5019\u5c31\u662f\u6bcf\u4e00\u4e2a\u6570\u90fd\u8981\u4e0e\u524d7\u5929\u7684\u6570\u636e\u5efa\u7acbw\u548cb\u7684\u5173\u7cfb\uff09\uff1a\n\u5176\u5b9e\u5c31\u662f\u7531\u4e00\u4e2afeature\u53d8\u6210\u4e86n\u4e2afeature\u4e86\uff0c\u4e00\u822c\u7684\u6559\u6750\u4f1a\u7528\u4e0d\u540c\u7684feature\u6765\u8bb2\u89e3\uff08\u6bd4\u5982\u5f71\u54cd\u623f\u4ef7\u7684\u9664\u4e86\u65f6\u95f4\uff0c\u8fd8\u6709\u9762\u79ef\uff0c\u5730\u6bb5\u7b49\u7b49\uff09\uff0c\u800c\u8fd9\u91cc\u53ea\u662f\u589e\u52a0\u4e86\u5929\u6570\uff0c\u53ef\u80fd\u4f1a\u8ba9\u4eba\u6ca1\u6709\u7acb\u523b\u5f04\u6e05\u695a\u4e24\u8005\u5176\u5b9e\u662f\u540c\u4e00\u4e2a\u4e1c\u897f\u3002\u5176\u5b9e\u5c31\u662fx1, x2, x3...\u4e0d\u7ba1\u5b83\u4eec\u5bf9\u5e94\u7684\u662f\u540c\u4e00\u7c7b\u7279\u5f81\uff0c\u800c\u662f\u5b8c\u5168\u4e0d\u540c\u7684\u591a\u4e2a\u89d2\u5ea6\u7684\u7279\u5f81\u3002\n\u73b0\u5728\u5c31\u6709\u4e00\u5806$wx$\u4e86\n$y = b + \\sum_j w_j x_j$\n\u73b0\u5728\u5c31\u53d8\u6210\u4e86(\u6ce8\u610f\uff0c\u5176\u5b9e\u5c31\u662f\u628a\u52a0\u53f7\u53f3\u8fb9\u5b8c\u6574\u4ee3\u5165\uff09\uff1a\n$y = b + \\sum_i c_i sigmoid(b_i + \\color{red}{\\sum_j w_{ij} x_j})$\n\n\u5c55\u5f00\u8ba1\u7b97\uff0c\u518d\u6839\u636e\u7279\u5f81\uff0c\u53c8\u53ef\u4ee5\u770b\u56de\u77e9\u9635\u4e86\uff08\u800c\u4e0d\u662f\u4ece\u77e9\u9635\u51fa\u53d1\u6765\u601d\u8003\uff09\uff1a\u77e9\u9635\u8fd0\u7b97\u7ed3\u679c\u4e3a(r)\uff0c\u518dsigmoid\u540e\uff0c\u8bbe\u7ed3\u679c\u4e3aa:\n$a_i = c_i \\sigma(r_i)$\n$y = b + \\sum_i a_i$ c \u548c a\u8981\u4e58\u52a0\uff0c\u4ecd\u7136\u53ef\u4ee5\u77e9\u9635\u5316\uff08\u5176\u5b9e\u662f\u5411\u91cf\u5316\uff09\uff1a\n$y = b + c^T a$\uff0c \u628a\u4e0a\u9762\u7684\u5c55\u5f00\u56de\u53bb\uff1a\n$y = b + c^T \\sigma(\\bold b + W x)$\n\u524d\u540e\u4e24\u4e2ab\u662f\u4e0d\u540c\u7684\uff0c\u4e00\u4e2a\u662f\u6570\u503c\uff0c\u4e00\u4e2a\u662f\u5411\u91cf\n\n\n\n\u8fd9\u91cc\uff0c\u6211\u4eec\u628a\u76ee\u524d\u6240\u6709\u7684\u201c\u672a\u77e5\u6570\u201d\u5168\u90e8\u62c9\u5e73\u62fc\u6210\u4e86\u4e00\u4e2a\u5411\u91cf $\\theta$\uff1a\n\u8fd9\u91cc\uff0c\u5982\u679c\u628a$c^T$\u5199\u6210W'\u4f60\u4f1a\u53d1\u73b0\uff0c\u6211\u4eec\u5df2\u7ecf\u63a8\u5bfc\u51fa\u4e86\u4e00\u4e2a2\u5c42\u7684\u795e\u7ecf\u7f51\u7edc\uff1a\u4e00\u4e2a\u9690\u5c42\uff0c\u4e00\u4e2a\u8f93\u51fa\u5c42\uff1a\nb+wx \u662f\u7b2c\u4e00\u5c42 \u5f97\u5230a\n\u5bf9a\u8fdb\u884c\u4e00\u6b21sigmoid\uff08\u522b\u7684\u6559\u6750\u91cc\u4f1a\u8bf4\u662f\u6fc0\u6d3b\uff09\u5f97\u5230a'\n\u628aa'\u5f53\u4f5c\u8f93\u5165\uff0c\u518d\u8fdb\u884c\u4e00\u6b21 b+wx (\u8fd9\u5c31\u662f\u9690\u5c42\u4e86)\n\u5f97\u5230\u7684\u8f93\u51fa\u5c31\u662f\u7f51\u7edc\u7684\u8f93\u51fao\n\n\n\u8fd9\u91cc\u5728\u7528\u53e6\u4e00\u4e2a\u89d2\u5ea6\u6765\u5c1d\u8bd5\u89e3\u91ca\u795e\u7ecf\u7f51\u7edc\uff0c\u6fc0\u6d3b\u51fd\u6570\u7b49\uff0c\u4f46\u8981\u6ce8\u610f\uff0csigmoid\u7684\u5f15\u5165\u539f\u672c\u662f\u53bb\u201d\u5bf9\u7740\u6298\u7ebf\u63cf\u201c\u7684\uff0c\u4e5f\u5c31\u662f\u8bf4\u662f\u4eba\u4e3a\u9009\u62e9\u7684\uff0c\u800c\u8fd9\u91cc\u4ecd\u7136\u53d8\u6210\u4e86\u673a\u5668\u53bb\u201d\u5b66\u4e60\u201c\uff0c\u5373\u6ca1\u6709\u544a\u8bc9\u5b83\u54ea\u4e9b\u5730\u65b9\u662f\u8f6c\u6298\u70b9\u3002\u4e5f\u5c31\u662f\u8bf4\u6709\u70b9\u9677\u5165\u4e86\u7528\u673a\u5668\u5b66\u4e60\u89e3\u91ca\u673a\u5668\u5b66\u4e60\u7684\u60c5\u51b5\u3002\n\n\u4f46\u662f\u5982\u679c\u662f\u7eaf\u66f2\u7ebf\uff0c\u90a3\u4e48\u5176\u5b9e\u662f\u53ef\u4ee5\u65e0\u6570\u4e2asigmoid\u6765\u7ec4\u5408\u7684\uff0c\u5c31\u4e0d\u5b58\u5728\u8981\u53bb\u62df\u5408\u67d0\u4e9b\u201c\u7279\u5b9a\u7684\u70b9\u201d\uff0c\u90a3\u6837\u53ea\u8981\u627e\u5230\u6700\u5408\u9002\u201c\u6570\u91cf\u201d\u7684sigmoig\u5c31\u884c\u4e86\uff08\u56e0\u4e3a\u4efb\u4f55\u4e00\u4e2a\u70b9\u90fd\u53ef\u4ee5\u7b97\u662f\u6298\u70b9\uff09\nLoss\nloss \u6ca1\u4ec0\u4e48\u53d8\u5316\uff0c\u4ecd\u65e7\u662f\u4e00\u5806$\\theta$\u4ee3\u5165\u540e\u6c42\u7684\u503c\u4e0ey\u7684\u5dee\uff0c\u6c42\u548c\u3002\u5e76\u671f\u671b\u627e\u5230\u4f7floss\u6700\u5c0f\u5316\u7684$\\theta$\uff1a$\\bold \\theta = arg\\ \\underset{\\theta}{min}\\ L$", "categories": [{"name": "posts", "slug": "posts", "permalink": "/category/posts/"}], "tags": [{"name": "\u674e\u5b8f\u6bc5", "slug": "\u674e\u5b8f\u6bc5", "permalink": "/tag/%E6%9D%8E%E5%AE%8F%E6%AF%85/"}, {"name": "\u673a\u5668\u5b66\u4e60", "slug": "\u673a\u5668\u5b66\u4e60", "permalink": "/tag/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"}, {"name": "linear model", "slug": "linear model", "permalink": "/tag/linear%20model/"}, {"name": "classicfication", "slug": "classicfication", "permalink": "/tag/classicfication/"}, {"name": "back propagation", "slug": "back propagation", "permalink": "/tag/back%20propagation/"}, {"name": "sigmoid", "slug": "sigmoid", "permalink": "/tag/sigmoid/"}, {"name": "relu", "slug": "relu", "permalink": "/tag/relu/"}]}, {"title": "\u300aDeep Learning with Python\u300b\u7b14\u8bb0[7]", "date": "2021-10-12T22:17:00-00.00", "path": "/archives/Deep-Learning-with-Python-Notes-7/", "text": "Generative deep learning\nOur perceptual modalities, our language, and our artwork all have statistical structure. Learning this structure is what deep-learning algorithms excel at.Machine-learning models can learn the statistical latent space of images, music, and stories, and they can thensample from this space, creating new artworks with characteristics similar to those the model has seen in its training data.Text generation with LSTM\nLanguage model\n\u5f88\u591a\u5730\u65b9\u90fd\u5728\u6309\u81ea\u5df1\u7684\u7406\u89e3\u5b9a\u4e49language model\uff0c\u8fd9\u672c\u4e66\u5b9a\u4e49\u5f88\u660e\u786e\uff0c\u80fd\u4e3a\u6839\u636e\u524d\u6587\u9884\u6d4b\u4e0b\u4e00\u4e2a\u6216\u591a\u4e2atoken\u5efa\u7acb\u6982\u7387\u6a21\u578b\u7684\u7f51\u7edc\u3002\nany network that can model the probability of the next token given the previous ones is called a language model.\n\n\u6240\u4ee5\u9996\u5148\uff0c\u5b83\u662f\u4e00\u4e2anetwork\n\u5b83\u505a\u7684\u4e8b\u662fmodel\u4e00\u4e2aprobability\n\u5185\u5bb9\u662fthe next token\n\u6761\u4ef6\u662fprevious tokens\n\n\u4e00\u65e6\u4f60\u6709\u4e86\u8fd9\u6837\u4e00\u4e2alanguage model\uff0c\u4f60\u5c31\u80fdsample from it\uff0c\u8fd9\u5c31\u662f\u524d\u9762\u7b14\u8bb0\u91cc\u7684sample from lantent space, \u7136\u540egenerate\u4e86\u3002greedy sampling and stochastic sampling\n\u5982\u679c\u6839\u636e\u6982\u7387\u6a21\u578b\u6bcf\u6b21\u90fd\u9009\u201c\u6700\u53ef\u80fd\u201d\u7684\u8f93\u51fa\uff0c\u5728\u8fde\u8d2f\u6027\u4e0a\u88ab\u8bc1\u660e\u662f\u4e0d\u597d\u7684\uff0c\u800c\u4e14\u4e5f\u4e27\u5931\u4e86\u521b\u9020\u6027\uff0c\u6240\u4ee5\u8fd8\u662f\u7ed9\u4e86\u4e00\u5b9a\u7684\u968f\u673a\u6027\u80fd\u9009\u5230\u201c\u4e0d\u90a3\u4e48\u53ef\u80fd\u201d\u7684\u8f93\u51fa\u3002\u56e0\u4e3a\u4eba\u7c7b\u601d\u7ef4\u672c\u8eab\u4e5f\u662f\u8df3\u8dc3\u7684\u3002\u8003\u8651\u4e24\u4e2a\u8f93\u51fa\u4e0b\u4e00\u4e2atoken\u65f6\u7684\u6781\u7aef\u60c5\u51b5\uff1a |  |  | \n------- | ------- | ------- | -------\n\u7eaf\u968f\u673a\uff0c\u6240\u6709\u53ef\u9009\u8bcd\u7684\u6982\u7387\u662f\u5747\u7b49\u7684 | \u6beb\u65e0\u610f\u4e49 | max entropy | \u521b\u9020\u6027\u9ad8\ngreedy sampling | \u6beb\u65e0\u751f\u8da3 | minimum entropy | \u53ef\u9884\u6d4b\u6027\u9ad8\u5b9e\u73b0\u65b9\u5f0f\uff1asoftmax temperature\u9664\u4e00\u4e2a\u6e29\u5ea6\uff0c\u5982\u679c\u6e29\u5ea6\u5927\u4e8e1\uff0c\u90a3\u4e48\u6e29\u5ea6\u8d8a\u5927\uff0c\u88ab\u9664\u6570\u7f29\u5e45\u5ea6\u5c31\u8d8a\u5927\uff08\u8fd9\u6837\u6e29\u5dee\u5c31\u8d8a\u5c0f\uff0c\u5206\u5e03\u4f1a\u66f4\u5e73\u5747\uff09-&gt; \u504f\u5411\u4e86\u7eaf\u968f\u673a\u7684\u6982\u7387\u7ed3\u6784\uff08\u5747\u7b49\uff09import numpy as np\ndef reweight_distribution(original_distribution, temperature=0.5):\n    distribution = np.log(original_distribution) / temperature\n    distribution = np.exp(distribution)\n    return distribution / np.sum(distribution)\n\n\u5199\u6210\u516c\u5f0f\n$\n\\frac{e^{\\frac{log(d)}{T}}}{\\sum e^{\\frac{log(d)}{T}}}\n$\n\u8fd9\u662f\u5bf9\u6e29\u5ea6\u548csigmoid\u505a\u4e86\u878d\u5408\uff1a\n\u4e00\u4e2a\u662f\u5bf9\u76ee\u6807\u5206\u5e03\u53d6\u81ea\u7136\u5bf9\u6570\u540e\u9664\u6e29\u5ea6\u518d\u5f53\u6210e\u7684\u6307\u6570\u7ed9\u5e42\u56de\u53bb\uff08\u5982\u679c\u4e0d\u9664\u6e29\u5ea6\uff0c\u90a3\u5c31\u662f\u5148log\u518de\uff0c\u7b49\u4e8e\u662f\u539f\u6570\uff09\n\u6807\u51c6\u7684sigmoid\u65b9\u7a0b\n\n\n\u8fd9\u91cc\u56de\u987e\u4e00\u4e2a\u6982\u5ff5\uff1aSampling from a space\n\u4e66\u91cc\u5927\u91cf\u7528\u4e86\u8fd9\u4e2a\u6982\u5ff5\uff0c\u7ed3\u5408\u4ee3\u7801\uff0c\u5176\u5b9e\u5c31\u662f\u4e00\u4e2apredict\u51fd\u6570\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u4e00\u822c\u4eba\u7406\u89e3\u7684\u201c\u9884\u6d4b\uff0c\u63a8\u7406\u201d\uff0c\u662f\u4ece\u4e1a\u52a1\u903b\u8f91\u65b9\u9762\u6765\u7406\u89e3\uff0c\u4f5c\u8005\u66f4\u613f\u610f\u4ece\u7edf\u8ba1\u5b66\u548c\u7ebf\u6027\u4ee3\u6570\u89d2\u5ea6\u6765\u7406\u89e3\u3002\u4e24\u79cd\u8bad\u7ec3\u65b9\u6cd5\uff1a\n\u6bcf\u6b21\u7528N\u4e2a\u5b57\uff0c\u6765\u9884\u6d4b\u7b2cN+1\u4e2a\u5b57\uff0c\u5373output\u53ea\u67091\u4e2a(voc_size, 1)\uff0c\u8bad\u7ec3\u7684\u662flanguage model\n\u6bcf\u6b21\u7528N\u4e2a\u5b57(a, b), \u6765\u9884\u6d4b(a+1, b+1)\uff0c output\u6709N\u4e2a(voc_size, N)\uff0c\u8bad\u7ec3\u7684\u662f\u7279\u5b9a\u7684\u4efb\u52a1\uff0c\u6bd4\u5982\u5199\u8bd7\uff0c\u4f5c\u97f3\u4e50\n\n\u8fc7\u7a0b\uff1a\n\u51c6\u5907\u6570\u636e\uff0cX\u4e3a\u4e00\u7ec4\u53e5\u5b50\uff0cY\u4e3a\u6bcf\u4e00\u4e2a\u53e5\u5b50\u5bf9\u5e94\u7684\u4e0b\u4e00\u4e2a\u5b57\uff08\u5168\u90e8\u5411\u91cf\u5316\uff09\n\u642d\u5efa\u4e00\u4e2aLSTM + Dense \u7684\u7f51\u7edc\uff0c\u8f93\u51fa\u6839\u636e\u5177\u4f53\u60c5\u51b5\u8981\u4e48\u4e3a1\uff0c\u8981\u4e48\u4e3aN\n\u6bcf\u4e00\u4e2aepoch\u91cc\u5747\u8fdb\u884c\u9884\u6d4b\uff08\u5982\u679c\u4e0d\u662f\u4e3a\u4e86\u770b\u8fc7\u7a0b\uff0c\u6709\u5fc5\u8981\u5417\uff1f\u6211\u4eec\u8981\u6700\u540e\u4e00\u8f6e\u7684\u9884\u6d4b\u4e0d\u5c31\u884c\u4e86\uff1f\uff09\n\u8fdb\u884c\u4e00\u6b21fit(\u5c31\u662ftrain)\uff0c\u5f97\u5230\u4f18\u5316\u540e\u7684\u53c2\u6570\n\u968f\u673a\u53d6\u4e00\u6bb5\u6587\u672c\uff0c\u7528\u4f5c\u79cd\u5b50\uff08\u7528\u6765\u751f\u6210\u7b2c\u4e00\u4e2a\u5b57\uff09\n\u8ba1\u7b97\u751f\u6210\u591a\u5c11\u4e2a\u5b57\uff0c\u5c31\u5f00\u59cbfor\u5faa\u73af\n\u5411\u91cf\u5316\u5f53\u524d\u7684\u79cd\u5b50\uff08\u4f1a\u8d8a\u6765\u8d8a\u957f\uff09\npredict\uff0c\u5f97\u5230\u6bcf\u4e2a\u5b57\u7684\u6982\u7387\nsoftmax temperature\uff0c\u5e73\u6ed1\u6982\u7387\uff0c\u53d6\u51fanext_token\nnext_token\u8f6c\u56de\u6587\u672c\uff0c\u9644\u52a0\u5230seed\u540e\u9762\n\n\n\n\n\nDeepDream\n\u770b\u4e86\u4e00\u904d\uff0c\u4e0d\u611f\u5174\u8da3\u3002\u6838\u5fc3\u601d\u8def\u8ddf\u89c6\u89c9\u5316filter\u7684\u601d\u8def\u662f\u4e00\u6837\u7684\uff1agradient ascent\n\u4ece\u5bf9\u6bcf\u4e2alayer\u91cc\u7684\u5355\u4e2afilter\u505a\u68af\u5ea6\u4e0a\u5347\u53d8\u6210\u4e86\u5bf9\u6574\u4e2alayer\u505a\u68af\u5ea6\u4e0a\u5347\n\u4e0d\u518d\u4ece\u968f\u673a\u566a\u58f0\u5f00\u59cb\uff0c\u800c\u662f\u4ece\u4e00\u5f20\u771f\u5b9e\u56fe\u7247\u5f00\u59cb\uff0c\u5b9e\u73b0\u8fd9\u4e9blayer\u91cc\u5bf9\u56fe\u7247\u5f71\u54cd\u6700\u5927\u7684patterns\u7684distorting\n\nNeural style transfer\nNeural style transfer consists of applying the style of a reference image to a target image while conserving the content of the target image.\n\u4e24\u4e2a\u5bf9\u8c61\uff1areference, target image\n\u4e24\u4e2a\u6982\u5ff5\uff1astyle\u548ccontent\n\n\u5bf9B\u7684content\u5e94\u7528A\u7684style\uff0c\u6211\u4eec\u53ef\u4ee5\u7406\u89e3\u4e3a\u201c\u7b14\u5237\u201d\uff0c\u6216\u8005\u7528\u524d\u4e9b\u5e74\u7684\u6d41\u884c\u5e94\u7528\u6765\u89e3\u91ca\uff1a\u628a\u4e00\u526f\u753b\u6c34\u5f69\u5316\uff0c\u6216\u6cb9\u753b\u5316\u3002\u628astyle\u5206\u89e3\u4e3a\u4e0d\u540cspatial scales\u4e0a\u7684\uff1a\u7eb9\u7406\uff0c\u989c\u8272\uff0c\u548cvisual pattern\u60f3\u7528\u6df1\u5ea6\u5b66\u4e60\u6765\u5c1d\u8bd5\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u9996\u5148\u81f3\u5c11\u5f97\u5b9a\u4e49\u635f\u5931\u51fd\u6570\u662f\u4ec0\u4e48\u6837\u7684\u3002If we were able to mathematically define content and style, then an appropriate loss function to minimize would be the following:loss = distance(style(reference_image) - style(generated_image)) +\n        distance(content(original_image) - content(generated_image))\n\n\u5373\u5bf9\u65b0\u56fe\u800c\u8a00\uff0c\u7eb9\u7406\u8981\u65e0\u9650\u9760\u8fd1A\uff0c\u5185\u5bb9\u8981\u65e0\u9650\u9760\u8fd1B\u3002\nthe content loss\n\u56fe\u50cf\u5185\u5bb9\u5c5e\u4e8e\u9ad8\u7ea7\u62bd\u8c61\uff0c\u56e0\u6b64\u53ea\u9700\u8981top layers\u53c2\u4e0e\u5c31\u884c\u4e86\uff0c\u5b9e\u9645\u5e94\u7528\u4e2d\u53ea\u53d6\u4e86\u6700\u9876\u5c42\n\n\nthe style loss\n\u5e94\u7528Gram matrix\nthe inner product of the feature maps of a given layer\ncorrelations between the layer's feature\n\u9700\u8981\u751f\u6210\u56fe\u548c\u53c2\u8003\u56fe\u7684\u6bcf\u4e00\u4e2a\u5bf9\u5e94\u7684layer\u62e5\u6709\u76f8\u540c\u7684\u7eb9\u7406(same textures at different spatial scales)\uff0c\u56e0\u6b64\u9700\u8981\u6240\u6709\u7684layer\u53c2\u4e0e\n\n\n\n\n\n\u4ece\u8fd9\u91cc\u5e94\u8be5\u4e5f\u80fd\u5224\u65ad\u51fa\u8981\u642d\u5efa\u7f51\u7edc\u7684\u8bdd\uff0cinput\u81f3\u5c11\u7531\u4e09\u90e8\u5206\uff08\u4e09\u5f20\u56fe\u7247\uff09\u6784\u6210\u4e86\u3002demo\ninput\u4e3a\u53c2\u8003\u56fe\uff0c\u76ee\u6807\u56fe\uff0c\u548c\u751f\u6210\u56fe\uff08\u5360\u4f4d\uff09\uff0cconcatenate\u6210\u4e00\u4e2atensor\n\u7528VGG19\u6765\u505a\u7279\u5f81\u63d0\u53d6\n\u8ba1\u7b97loss\n\u7528\u751f\u6210\u56fe\u548c\u76ee\u6807\u56fe\u7684top_layer\u4ee5L2 norm\u8ddd\u79bb\u505aloss\n\u7528\u751f\u6210\u56fe\u548c\u53c2\u8003\u56fe\u7684every layer\u4ee5L2 Norm\u505aloss\u5e76\u7d2f\u52a0\n\u5bf9\u751f\u6210\u56fe\u504f\u79fb1\u50cf\u7d20\u505aregularization loss\uff08\u5177\u4f53\u770b\u4e66\uff09\n\u4e0a\u8ff0\u4e09\u7ec4loss\u7d2f\u52a0\uff0c\u4e3a\u4e00\u8f6e\u7684loss\n\n\n\u7528loss\u8ba1\u7b97\u5bf9input(\u5373\u4e09\u8054\u56fe)\u7684\u68af\u5ea6\n\nGenerating images\n\nSampling from a latent space of images to create entirely new images\n\u719f\u6089\u7684\u53e5\u5f0f\u53c8\u6765\u4e86\u3002\u6838\u5fc3\u601d\u60f3\uff1a\nlow-dimensional latent space of representations\n\u4e00\u822c\u662f\u4e2avector space\nany point can be mapped to a realistic-looking image\n\n\nthe module capable of realizing this mapping, can take point as input, then output an image, this called:\ngenerator -&gt; GAN\ndecoder -&gt; VAE\n\n\n\nVAE v.s. GAN\nVAEs are great for learning latent spaces that are well structured\nGANs generate images that can potentially be highly realistic, but the latent space they come from may not have as much structure and continuity.\n\nVAE\uff08variational autoencoders\uff09\ngiven a latent space of representations, or an embedding space, certain directions in the space may encode interesting axes of variation in the original data. -&gt; inspired by concept space\u6bd4\u5982\u5305\u542b\u4eba\u8138\u7684\u6570\u636e\u96c6\u7684latent space\u91cc\uff0c\u662f\u5426\u4f1a\u5b58\u5728smile vectors\uff0c\u5b9a\u4f4d\u8fd9\u6837\u7684vector\uff0c\u5c31\u53ef\u4ee5\u4fee\u6539\u56fe\u7247\uff0c\u8ba9\u5b83projecting\u5230\u8fd9\u4e2alatent space\u91cc\u53bb\u3002Variational autoencodersVariational autoencoders are a kind of generative model that\u2019s especially appropriate for the task of image editing via concept vectors.They\u2019re a modern take on autoencoders (a type of network that aims to encodean input to a low-dimensional latent space and then decode it back) that mixes ideas from deep learning with Bayesian inference.\nVAE\u628a\u56fe\u7247\u89c6\u4f5c\u9690\u85cf\u7a7a\u95f4\u7684\u53c2\u6570\u8fdb\u884c\u7edf\u8ba1\u8fc7\u7a0b\u7684\u7ed3\u679c\u3002\n\u53c2\u6570\u5c31\u662f\u8868\u793a\u4e00\u79cd\u6b63\u6001\u5206\u5e03\u7684mean\u548cvariance\uff08\u5b9e\u9645\u53d6\u7684log_variance)\n\u7528\u8fd9\u4e2a\u5206\u5e03\u53ef\u4ee5\u8fdb\u884c\u91c7\u6837(sample)\n\u6620\u5c04\u56deoriginal image\n\n\nAn encoder module turns the input samples input_img into two parameters in a latent space of representations, z_mean and z_log_variance.\nYou randomly sample a point z from the latent normal distribution that\u2019s assumed to generate the input image, via $z = z_mean + e^{z_log_variance} \\times \\epsilon$, where $\\epsilon$ is a random tensor of small values.\nA decoder module maps this point in the latent space back to the original input image.\n\n\nBecause epsilon is random, the process ensures that every point that\u2019s close to the latent location where you encoded input_img (z-mean) can be decoded to something similar to input_img, thus forcing the latent space to be continuously meaningful.\n\n\u6240\u4ee5VAE\u751f\u6210\u7684\u56fe\u7247\u662f\u53ef\u89e3\u91ca\u7684\uff0c\u6bd4\u5982\u5728latent space\u4e2d\u8ddd\u79bb\u76f8\u8fd1\u7684\u4e24\u70b9\uff0cdecode\u51fa\u6765\u7684\u56fe\u7247\u76f8\u4f3c\u5ea6\u4e5f\u5c31\u5f88\u9ad8\u3002\n\u591a\u7528\u4e8e\u7f16\u8f91\u56fe\u7247\uff0c\u5e76\u4e14\u80fd\u751f\u6210\u52a8\u753b\u8fc7\u7a0b\uff08\u56e0\u4e3a\u662f\u8fde\u7eed\u7684\uff09\n\n\u4f2a\u4ee3\u7801(\u4e0d\u7b97\uff0c\u53ef\u4ee5\u8bf4\u662f\u9aa8\u5e72\u4ee3\u7801\uff09\uff1az_mean, z_log_variance = encoder(input_img)\nz = z_mean + exp(z_log_variance) * epsilon  # sampling\nreconstructed_img = decoder(z)\nmodel = Model(input_img, reconstructed_img)\n\nVAE encoder networkimg_shape = (28, 28, 1)\nbatch_size = 16\nlatent_dim = 2\n\nx = layers.Conv2D(32, 3, padding=&#39;same&#39;, activation=&#39;relu&#39;)(input_img)\nx = layers.Conv2D(64, 3, padding=&#39;same&#39;, activation=&#39;relu&#39;, strides=(2, 2))(x)\nx = layers.Conv2D(64, 3, padding=&#39;same&#39;, activation=&#39;relu&#39;)(x)\nx = layers.Conv2D(64, 3, padding=&#39;same&#39;, activation=&#39;relu&#39;)(x)\nshape_before_flattening = K.int_shape(x)\nx = layers.Flatten()(x)\nx = layers.Dense(32, activation=&#39;relu&#39;)(x)\nz_mean = layers.Dense(latent_dim)(x)\nz_log_var = layers.Dense(latent_dim)(x)\n\n\n\u53ef\u89c1\u662f\u4e00\u4e2a\u6807\u51c6\u7684multi-head\u7684\u7f51\u7edc\n\u53ef\u89c1\u6240\u8c13\u7684latent space\uff0c\u5176\u5b9e\u5c31\u662ftransforming\u540e\u7684\u7ed3\u679c\nencode\u7684\u76ee\u7684\u662f\u56de\u5f52\u51fa\u4e24\u4e2a\u53c2\u6570\uff08\u672c\u4f8b\u662f\u4e24\u4e2a2\u7ef4\u53c2\u6570\uff09\n\u4e24\u4e2a\u53c2\u6570\u4e00\u4e2a\u7406\u89e3\u4e3amean, \u4e00\u4e2a\u7406\u89e3\u4e3alog_variance\n\ndecoder\u8fc7\u7a0b\u5c31\u662f\u5bf9mean\u548cvar\u968f\u673a\u91c7\u6837\uff08\u5f97\u5230z)\uff0c\u7136\u540e\u4e0d\u65ad\u4e0a\u91c7\u6837(Conv2DTranspose)\u5f97\u5230\u5f62\u72b6\u4e0e\u6e90\u56fe\u4e00\u81f4\u7684\u8f93\u51fa(\u5f97\u5230z_decode)\u7684\u8fc7\u7a0b\u3002\nz_decode\u8ddfz\u505aBCE loss\n\u8fd8\u8981\u52a0\u4e00\u4e2aregularization loss\u9632\u6b62overfitting\n\n\n\u6b64\u5904\u8bf7\u770b\u4e66\uff0c\u6f14\u793a\u4e86\u81ea\u5b9a\u4e49\u7684loss\u3002\u56e0\u4e3akeras\u9ad8\u5ea6\u5c01\u88c5\uff0c\u6240\u4ee5\u5404\u79cd\u5728\u5c01\u88c5\u4e4b\u5916\u7684\u81ea\u5b9a\u4e49\u7684\u7528\u6cd5\u5c24\u5176\u503c\u5f97\u5173\u6ce8\u3002\u6bd4\u5982\u8fd9\u91cc\uff0c\u81ea\u5b9a\u4e49\u4e86loss\u4e4b\u540e\uff0cModel\u548cfit\u91cc\u5c31\u4e0d\u9700\u8981\u4f20Y\uff0ccompile\u65f6\u4e5f\u4e0d\u9700\u8981\u4f20loss\u4e86\u3002\n\nloss\u662f\u5728\u6700\u540e\u4e00\u5c42layer\u91cc\u8ba1\u7b97\u7684\uff0c\u5e76\u4e14\u901a\u8fc7\u4e00\u4e2alayer\u65b9\u6cd5add_loss\uff0c\u628aloss\u548cinput\u901a\u77e5\u7ed9\u4e86network\uff08\u5982\u679c\u4f60\u60f3\u77e5\u9053\u6ce8\u5165\u70b9\u7684\u8bdd\uff09\n\u4f7f\u7528\u6a21\u578b\u7684\u8bdd\uff0c\u5c31\u662f\u751f\u6210\u4e24\u7ec4\u968f\u673a\u6570\uff0c\u5f53\u6210mean\u548clog_variance\uff0c\u89c2\u5bdfdecode\u4e4b\u540e\u7684\u7ed3\u679c\u3002GAN\nGenerative adversarial network\u53ef\u4ee5\u521b\u4f5c\u4ee5\u5047\u4e71\u771f\u7684\u56fe\u7247\u3002\u901a\u8fc7\u8bad\u7ec3\u6700\u597d\u7684\u9020\u5047\u548c\u548c\u6700\u597d\u7684\u9274\u522b\u8005\u6765\u8fbe\u5230\u201c\u521b\u9020\u201d\u8d8a\u6765\u8d8a\u903c\u8fd1\u4eba\u7c7b\u521b\u4f5c\u7684\u4f5c\u54c1\u3002\nGenerator network: Takes as input a random vector (a random point in the latent space), and decodes it into a synthetic image\nDiscriminator network (or adversary): Takes as input an image (real or synthetic), and predicts whether the image came from the training set or was created by the generator network.\n\ndeep convolutional GAN (DCGAN)\na GAN where the generator and discriminator are deep convnets.\nIn particular, it uses a Conv2DTranspose layer for image upsampling in the generator.\n\n\u8bad\u7ec3\u751f\u6210\u5668\u662f\u51b2\u7740\u80fd\u8ba9\u9274\u522b\u5668\u5c3d\u53ef\u80fd\u9274\u522b\u4e3a\u771f\u7684\u65b9\u5411\u7684\uff1athe generator is trained to fool the discriminator\u3002\n\u8fd9\u53e5\u8bdd\u5176\u5b9e\u6697\u542b\u4e86\u4e00\u4e2a\u524d\u63d0\uff0c\u4e0b\u9762\u4f1a\u8bf4\uff0c\u5c31\u662f\u6b64\u65f6discriminator\u662f\u786e\u5b9a\u7684\u3002\u5373\u5728\u786e\u5b9a\u7684\u9274\u522b\u80fd\u529b\u4e0b\uff0c\u5c3d\u53ef\u80fd\u53bb\u62df\u5408generator\u7684\u8f93\u51fa\uff0c\u8ba9\u5b83\u80fd\u901a\u8fc7\u5f53\u524d\u9274\u522b\u5668\u7684\u6d4b\u8bd5\u3002\n\u4e66\u4e2d\u8bf4\u8bad\u7ec3DCGAN\u5f88\u590d\u6742\uff0c\u800c\u4e14\u5f88\u591atrick, \u8d85\u53c2\u9760\u7684\u662f\u7ecf\u9a8c\u800c\u4e0d\u662f\u7406\u8bba\u652f\u6491\uff0c\u6458\u6284\u5e76\u7b14\u8bb0a bag of tricks\u5982\u4e0b\uff1a\nWe use tanh as the last activation in the generator, instead of sigmoid, which is more commonly found in other types of models.\nWe sample points from the latent space using a normal distribution (Gaussian distribution), not a uniform distribution.\nStochasticity is good to induce robustness. Because GAN training results in a dynamic equilibrium, GANs are likely to get stuck in all sorts of ways. Introducing randomness during training helps prevent this. We introduce randomness in two ways:\nby using dropout in the discriminator\nand by adding random noise to the labels for the discriminator.\n\n\nSparse gradients can hinder GAN training. In deep learning, sparsity is often a desirable property, but not in GANs. Two things can induce gradient sparsity: max pooling operations and ReLU activations.\nInstead of max pooling, we recommend using strided convolutions for downsampling(\u7528\u6b65\u957f\u5377\u79ef\u4ee3\u66ffpooling),\nand we recommend using a LeakyReLU layer instead of a ReLU activation. It\u2019s similar to ReLU, but it relaxes sparsity constraints by allowing small negative activation values.\n\n\nIn generated images, it\u2019s common to see checkerboard artifacts(stirde\u548ckernel size\u4e0d\u5339\u914d\u5343\u4e07\u7684) caused by unequal coverage of the pixel space in the generator.\nTo fix this, we use a kernel size that\u2019s divisible by the stride size whenever we use a strided Conv2DTranpose or Conv2D in both the generator and the discriminator.\n\n\n\nTrain\nDraw random points in the latent space (random noise).\nGenerate images with generator using this random noise.\nMix the generated images with real ones.\nTrain discriminator using these mixed images, with corresponding targets:\neither \u201creal\u201d (for the real images) or \u201cfake\u201d (for the generated images).\n\u6240\u4ee5\u9274\u522b\u5668\u662f\u5355\u72ec\u8bad\u7ec3\u7684\uff08\u524d\u9762\u7b14\u8bb0\u94fa\u57ab\u8fc7\u4e86\uff09\n\u4e0b\u9762\u5c31\u662ftrain\u6574\u4e2aDCGAN\u4e86\uff1a\n\n\nDraw new random points in the latent space.\nTrain gan using these random vectors, with targets that all say \u201cthese are real images.\u201d This updates the weights of the generator (only, because the discriminator is frozen inside gan) to move them toward getting the discriminator to predict \u201cthese are real images\u201d for generated images: this trains the generator to fool the discriminator.\n\u53eatrain\u7f51\u7edc\u91cc\u7684generator\ndiscriminator\u4e0d\u8bad\u7ec3\uff0c\u56e0\u4e3a\u662f\u8981\u7528\u201c\u5df2\u7ecf\u8bad\u7ec3\u5230\u76ee\u524d\u7a0b\u5ea6\u7684\u201ddiscriminator\u6765\u505a\u4e0b\u9762\u7684\u4efb\u52a1\n\u4efb\u52a1\u5c31\u662f\u53ea\u9001\u5165\u4f2a\u9020\u56fe\uff0c\u5e76\u58f0\u660e\u6240\u6709\u56fe\u90fd\u662f\u771f\u7684\uff0c\u53bb\u8ba9generator\u751f\u6210\u80fd\u903c\u8fd1\u8fd9\u4e2a\u58f0\u660e\u7684\u56fe\ngenerator\u5c31\u662f\u8fd9\u4e48\u8bad\u7ec3\u51fa\u6765\u7684\u3002\n\u6240\u4ee5\u5b9e\u9645\u4ee3\u7801\u662f\u4e00\u6b21epoch\u662f\u7531train\u4e00\u4e2adiscriminator\u548ctrain\u4e00\u4e2aGAN\u7ec4\u6210.\n\n\n\n\u56e0\u4e3a\u9274\u522b\u5668\u548c\u751f\u6210\u5668\u662f\u4e00\u8d77\u8bad\u7ec3\u7684\uff0c\u56e0\u6b64\u524d\u51e0\u8f6e\u751f\u6210\u7684\u80af\u5b9a\u662f\u566a\u97f3\uff0c\u4f46\u524d\u51e0\u8f6e\u9274\u522b\u5668\u4e5f\u662f\u778e\u9274\u522b\u7684\u3002", "categories": [{"name": "posts", "slug": "posts", "permalink": "/category/posts/"}], "tags": [{"name": "deep learning", "slug": "deep learning", "permalink": "/tag/deep%20learning/"}, {"name": "\u6df1\u5ea6\u5b66\u4e60", "slug": "\u6df1\u5ea6\u5b66\u4e60", "permalink": "/tag/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/"}, {"name": "keras", "slug": "keras", "permalink": "/tag/keras/"}, {"name": "cv", "slug": "cv", "permalink": "/tag/cv/"}, {"name": "nlp", "slug": "nlp", "permalink": "/tag/nlp/"}, {"name": "tensorflow", "slug": "tensorflow", "permalink": "/tag/tensorflow/"}, {"name": "gan", "slug": "gan", "permalink": "/tag/gan/"}, {"name": "lstm", "slug": "lstm", "permalink": "/tag/lstm/"}, {"name": "language mode", "slug": "language mode", "permalink": "/tag/language%20mode/"}, {"name": "rnn", "slug": "rnn", "permalink": "/tag/rnn/"}, {"name": "heatmap", "slug": "heatmap", "permalink": "/tag/heatmap/"}, {"name": "dropout", "slug": "dropout", "permalink": "/tag/dropout/"}, {"name": "machine learning", "slug": "machine learning", "permalink": "/tag/machine%20learning/"}]}, {"title": "\u300aDeep Learning with Python\u300b\u7b14\u8bb0[6]", "date": "2021-10-03T18:29:00-00.00", "path": "/archives/Deep-Learning-with-Python-Notes-6/", "text": "Advanced deep-learning best practices\n\u8fd9\u4e00\u7ae0\u662f\u4ecb\u7ecd\u4e86\u66f4\u591a\u7684\u7f51\u7edc\uff08\u4ecekeras\u7684\u5c01\u88c5\u7279\u6027\u51fa\u53d1\uff09\u7ed3\u6784\u548c\u6a21\u5757\uff0c\u4ee5\u53cabatch normalization, model ensembling\u7b49\u77e5\u8bc6\u3002beyond Sequential model\n\u524d\u9762\u4ecb\u7ecd\u7684\u90fd\u662fSequential\u6a21\u578b\uff0c\u5c31\u662f\u4e00\u4e2a\u63a5\u4e00\u4e2a\u5730layer\u524d\u540e\u5806\u53e0\uff0c\u73b0\u5b9e\u4e2d\u6709\u5f88\u591a\u573a\u666f\u5e76\u4e0d\u662f\u4e00\u8fdb\u4e00\u51fa\u7684\uff1a\nmulti-input model\n\n\u5047\u8bbe\u4e3a\u4e8c\u624b\u8863\u7269\u4f30\u4ef7\uff1a\n\u683c\u5f0f\u5316\u7684\u5143\u6570\u636e\uff08\u54c1\u724c\uff0c\u6027\u522b\uff0c\u5e74\u9f84\uff0c\u6b3e\u5f0f\uff09: one-hot, dense\n\u5546\u54c1\u7684\u6587\u5b57\u63cf\u8ff0\uff1aRNN or 1D convnet\n\u56fe\u7247\u5c55\u793a\uff1a2D convnet\n\u6bcf\u4e2ainput\u7528\u9002\u5408\u81ea\u5df1\u7684\u7f51\u7edc\u505a\u8f93\u51fa\uff0c\u7136\u540e\u5408\u5e76\u8d77\u6765\u4f5c\u4e3a\u4e00\u4e2ainput\uff0c\u56de\u5f52\u4e00\u4e2a\u4ef7\u683c\n\n\nmulti-output model (multi-head)\n\n\u4e00\u822c\u7684\u68c0\u6d4b\u5668\u901a\u5e38\u5c31\u662f\u591a\u5934\u6a21\u578b\uff0c\u56e0\u4e3a\u65e2\u8981\u56de\u5f52\u5bf9\u8c61\u7c7b\u522b\uff0c\u8fd8\u8981\u56de\u5f52\u51fa\u5bf9\u8c61\u7684\u4f4d\u7f6e\ngraph-like model\n\n\u8fd9\u4e2a\u540d\u5b57\u5f88\u597d\u5730\u5f62\u5bb9\u4e86\u505a\u6df1\u5ea6\u5b66\u4e60\u65f6\u770b\u522b\u4eba\u7684\u7f51\u7edc\u662f\u4ec0\u4e48\u6837\u7684\u65b9\u5f0f\uff1a\u770b\u56fe\u3002\u73b0\u4ee3\u7684SOTA\u7684\u7f51\u7edc\u5f80\u5f80\u65e2\u6df1\u4e14\u590d\u6742\uff0c\u800c\u7f51\u7edc\u7ed3\u6784\u753b\u51fa\u6765\u4e5f\u4e0d\u518d\u662f\u4e00\u6761\u7ebf\u6216\u51e0\u4e2a\u7b80\u5355\u5206\u652f\uff0c\u8fd9\u672c\u4e66\u5e72\u8106\u628a\u5b83\u4eec\u53eb\u56fe\u5f62\u7f51\u7edc\uff1aInception, Residual\u4e3a\u4e86\u80fd\u67b6\u6784\u8fd9\u4e9b\u590d\u6742\u7684\u7f51\u7edc\uff0ckeras\u4ecb\u7ecd\u4e86\u65b0\u7684\u8bed\u6cd5\uff0c\u5148\u770b\u770b\u600e\u4e48\u91cd\u5199Sequential:seq_model = Sequential()\nseq_model.add(layers.Dense(32, activation=&#39;relu&#39;, input_shape=(64,)))\nseq_model.add(layers.Dense(32, activation=&#39;relu&#39;))\nseq_model.add(layers.Dense(10, activation=&#39;softmax&#39;))\n\n# \u91cd\u5199\ninput_tensor = Input(shape=(64,))\nx = layers.Dense(32, activation=&#39;relu&#39;)(input_tensor)\nx = layers.Dense(32, activation=&#39;relu&#39;)(x)\noutput_tensor = layers.Dense(10, activation=&#39;softmax&#39;)(x)\nmodel = Model(input_tensor, output_tensor)\n\nmodel.summayr()\n\n\u6211\u4eec\u81ea\u5df1\u5b9e\u73b0\u8fc7\u9759\u6001\u56fe\uff0c\u6700\u7ec8\u53bb\u6267\u884c\u7684\u65f6\u5019\u80fd\u4ece\u5c3e\u8ffd\u6eaf\u5230\u5934\uff0c\u5e76\u4ece\u5934\u6765\u5f00\u59cb\u8ba1\u7b97\uff0c\u8fd9\u91cc\u4e5f\u662f\u4e00\u6837\u7684\uff1a\ninput, output\u662fTensor\u7c7b\uff0c\u6240\u4ee5\u6709\u5b8c\u6574\u7684\u5c42\u6b21\u4fe1\u606f\noutput\u5f80\u4e0a\u8ffd\u6eaf\uff0c\u6700\u7ec8\u6eaf\u5230\u7f3a\u5c11\u4e00\u4e2ainput\n\u8fd9\u4e2ainput\u6070\u597d\u4e5f\u662fModel\u7684\u6784\u9020\u51fd\u6570\u4e4b\u4e00\uff0c\u95ed\u73af\u4e86\u3002\n\n\u4e66\u91cc\u8bf4\u7684\u66f4\u7b80\u5355\uff0coutput\u662finput\u4e0d\u65adtransforming\u7684\u7ed3\u679c\u3002\u5982\u679c\u4f20\u4e00\u4e2a\u6ca1\u6709\u8fd9\u4e2a\u5173\u7cfb\u7684input\u8fdb\u53bb\uff0c\u5c31\u4f1a\u62a5\u9519\u3002demo\u7528\u4e00\u4e2aQA\u7684\u4f8b\u5b50\u6765\u6f14\u793a\u591a\u8f93\u5165\uff08\u4e00\u4e2a\u95ee\u53e5\uff0c\u4e00\u6bb5\u8d44\u6599\uff09\uff0c\u8f93\u51fa\u4e3a\u7b54\u6848\u5728\u8d44\u6599\u65f6\u7684\u7d22\u5f15\uff08\u7b80\u5316\u4e3a\u5355\u4e2a\u8bcd\uff0c\u6240\u4ee5\u53ea\u6709\u4e00\u4e2a\u8f93\u51fa\uff09text_input = Input(shape=(None,), dtype=&#39;int32&#39;, name=&#39;text&#39;)\nembedded_text = layers.Embedding(\n    64, text_vocabulary_size)(text_input)\nencoded_text = layers.LSTM(32)(embedded_text)  # lstm \u5904\u7406\u8d44\u8baf\nquestion_input = Input(shape=(None,), dtype=&#39;int32&#39;, name=&#39;question&#39;)\n\n\nembedded_question = layers.Embedding(\n    32, question_vocabulary_size)(question_input)\nencoded_question = layers.LSTM(16)(embedded_question) # lstm \u5904\u7406\u95ee\u53e5\n\nconcatenated = layers.concatenate([encoded_text, encoded_question], axis = -1)  # \u7ad6\u5411\u62fc\u63a5\uff08\u5373\u4e0d\u589e\u52a0\u5185\u5bb9\u53ea\u589e\u52a0\u6570\u91cf\uff09\nanswer = layers.Dense(answer_vocabulary_size,\n                      activation=&#39;softmax&#39;)(concatenated)\nmodel = Model([text_input, question_input], answer)\nmodel.compile(optimizer=&#39;rmsprop&#39;,\n              loss=&#39;categorical_crossentropy&#39;,\n              metrics=[&#39;acc&#39;])\n\n\u8fd9\u91cc\u662f\u628a\u7b54\u6848\u76f4\u63a5\u7ed9\u56de\u5f52\u51fa\u6765\u4e86(one-hot)\uff0c\u5982\u679c\u662f\u7ed9\u51fa\u7b54\u6848\u7684\u9996\u5c3e\u4f4d\u7f6e\uff0c\u90a3\u80af\u5b9a\u53ea\u80fd\u7528\u7d22\u5f15\u4e86\u3002demo\u591a\u5934\u8f93\u51fa\u7684\uff1a# \u7ebf\u6027\u56de\u5f52\nage_prediction = layers.Dense(1, name=&#39;age&#39;)(x)\n# \u903b\u8f91\u56de\u5f52\nincome_prediction = layers.Dense(num_income_groups, activation=&#39;softmax&#39;, name=&#39;income&#39;)(x)\n# \u4e8c\u5143\u903b\u8f91\u56de\u5f52\ngender_prediction = layers.Dense(1, activation=&#39;sigmoid&#39;, name=&#39;gender&#39;)(x)\nmodel = Model(posts_input,\n              [age_prediction, income_prediction, gender_prediction])\n\n\u68af\u5ea6\u56de\u5f52\u8981\u6c42loss\u662f\u4e00\u4e2a\u6807\u91cf\uff0ckeras\u63d0\u4f9b\u4e86\u65b9\u6cd5\u5c06\u4e09\u4e2aloss\u52a0\u8d77\u6765\uff0c\u540c\u65f6\u4e3a\u4e86\u91cf\u7eb2\u7edf\u4e00\uff0c\u8fd8\u7ed9\u4e86\u6743\u91cd\u53c2\u6570\uff1amodel.compile(optimizer=&#39;rmsprop&#39;,\nloss=[&#39;mse&#39;, &#39;categorical_crossentropy&#39;, &#39;binary_crossentropy&#39;], loss_weights=[0.25, 1., 10.])\n\nDirected acyclic graphs of layers\n\u6709\u5411\u65e0\u73af\u56fe\u3002\u53ef\u4ee5\u7406\u89e3\u4e3a\u6700\u7ec8\u4e0d\u4f1a\u56de\u5230\u51fa\u53d1\u70b9\u3002\u73b0\u5728\u4f1a\u4ecb\u7ecd\u7684\u662f\u51e0\u4e2aModules\uff0c\u610f\u601d\u662f\u53ef\u4ee5\u628a\u5b83\u5f53\u6210\u4e00\u4e2alayer\uff0c\u6765\u6784\u9020\u4f60\u7684\u7f51\u7edc/\u6a21\u578b\u3002Inception Modules\n\ninspired by network-in-network\n\u5bf9\u540c\u4e00\u4e2a\u8f93\u5165\u505a\u4e0d\u540c\uff08\u5c42\u6570/\u6df1\u5ea6\uff09\u7684\u5377\u79ef\uff08\u4fdd\u8bc1\u6700\u7ec8\u76f8\u540c\u7684\u4e0b\u91c7\u6837\u7ef4\u5ea6\uff09\uff0c\u6700\u540e\u5408\u5e76\u4e3a\u4e00\u4e2a\u8f93\u51fa\n\u56e0\u4e3a\u5377\u79ef\u7684\u6df1\u5ea6\u4e0d\u5c3d\u76f8\u540c\uff0c\u5b66\u5230\u7684\u7a7a\u95f4\u7279\u5f81\u4e5f\u6709\u7c97\u6709\u7ec6\n\nResidual Connections\n\n\u6709\u4e9b\u5730\u65b9\u53ebshortcut\n\u7528\u7684\u662f\u76f8\u52a0\uff0c\u4e0d\u662fconcatenate, \u5982\u679c\u5f62\u72b6\u53d8\u4e86\uff0c\u5bf9earlier activation\u505alinear transformation\n\u89e3\u51b3vanishing gradients and representational bottlenecks\nadding residual connections to any model that has more than 10 layers is likely to be beneficial.\n\nrepresentational bottlenecks\u5e8f\u5217\u6a21\u578b\u65f6\uff0c\u6bcf\u4e00\u5c42\u7684\u8868\u793a\u90fd\u6765\u81ea\u4e8e\u524d\u4e00\u5c42\uff0c\u5982\u679c\u524d\u4e00\u5c42\u5f88\u5c0f\uff0c\u6bd4\u5982\u7ef4\u5ea6\u8fc7\u4f4e\uff0c\u90a3\u4e48\u643a\u5e26\u7684\u4fe1\u606f\u91cf\u4e5f\u88ab\u538b\u7f29\u5f97\u5f88\u6709\u9650\u4e86\uff0c\u6574\u4e2a\u6a21\u578b\u90fd\u4f1a\u88ab\u8fd9\u4e2a\u201c\u74f6\u9888\u201d\u9650\u5236\u3002\u6bd4\u5982\u97f3\u9891\u4fe1\u53f7\u5904\u7406\uff0c\u964d\u7ef4\u5c31\u662f\u964d\u9891\uff0c\u6bd4\u5982\u52300-15kHz\uff0c\u4f46\u662f\u4e0b\u6e38\u4efb\u52a1\u4e5f\u6ca1\u6cd5recover dropped frequencies\u4e86\u3002\u6240\u6709\u7684\u635f\u5931\u90fd\u662f\u6c38\u4e45\u7684\u3002Residual connections, by reinjecting earlier information downstream, partially solve this issue for deep-learning models.\uff08\u53c8\u4e00\u6b21\u5f3a\u8c03reinject\uff09Lyaer weight sharihng\n\u5728\u7f51\u7edc\u7684\u4e0d\u540c\u4f4d\u7f6e\u7528\u540c\u4e00\u4e2alayer\uff0c\u5e76\u4e14\u53c2\u6570\u4e5f\u76f8\u540c\u3002\u7b49\u4e8e\u5171\u4eab\u4e86\u76f8\u540c\u7684\u77e5\u8bc6\uff0c\u76f8\u540c\u7684\u8868\u793a\uff0c\u4ee5\u53ca\u662f\u540c\u65f6(simultaneously)\u8bad\u7ec3\u7684\u3002\u4e00\u4e2a\u8bed\u4e49\u76f8\u4f3c\u5ea6\u7684\u4f8b\u5b50\uff0c\u8f93\u5165\u662fA\u548cB\u8fd8\u662fB\u548cA\uff0c\u662f\u4e00\u6837\u7684\uff08\u5373\u53ef\u4ee5\u4e92\u6362\uff09\u3002\u67b6\u6784\u7f51\u7edc\u7684\u65f6\u5019\uff0c\u7528LSTM\u6765\u5904\u7406\u53e5\u5b50\uff0c\u9700\u8981\u505a\u4e24\u4e2aLSTM\u5417\uff1f\u5f53\u7136\u53ef\u4ee5\uff0c\u4f46\u662f\u4e5f\u53ef\u4ee5\u53ea\u505a\u4e00\u4e2aLSTM\uff0c\u5206\u522b\u5582\u5165\u4e24\u4e2a\u53e5\u5b50\uff0c\u5408\u5e76\u4e24\u4e2a\u8f93\u51fa\u6765\u505a\u5206\u7c7b\u3002\u5c31\u662f\u8003\u8651\u5230\u8fd9\u79cd\u4e92\u6362\u6027\uff0c\u65e2\u7136\u80fd\u4e92\u6362\uff0c\u4e5f\u5c31\u662f\u8fd9\u4e2alayer\u4e5f\u80fd\u5e94\u7528\u53e6\u4e00\u4e2a\u53e5\u5b50\uff0c\u56e0\u6b64\u5c31\u4e0d\u5fc5\u8981\u518d\u65b0\u5efa\u4e00\u4e2aLSTM.Models as layers\n\u8bb2\u4e86\u4e24\u70b9\uff1a\nmodel\u4e5f\u53ef\u4ee5\u5f53layer\u4f7f\u7528\n\u591a\u5904\u4f7f\u7528\u540c\u4e00\u4e2amodel\u4e5f\u662f\u5171\u4eab\u53c2\u6570\uff0c\u5982\u4e0a\u4e00\u8282\u3002\n\n\u4e3e\u4e86\u4e2a\u53cc\u6444\u50cf\u5934\u7528\u4ee5\u611f\u77e5\u6df1\u5ea6\u7684\u4f8b\u5b50\uff0c\u6bcf\u4e2a\u6444\u50cf\u5934\u90fd\u7528\u4e00\u4e2aXception\u7f51\u7edc\u63d0\u53d6\u7279\u5f81\uff0c\u4f46\u662f\u53ef\u4ee5\u5171\u7528\u8fd9\u4e2a\u7f51\u7edc\uff0c\u56e0\u4e3a\u62cd\u7684\u662f\u540c\u6837\u7684\u5185\u5bb9\uff0c\u53ea\u9700\u8981\u5904\u7406\u4e24\u4e2a\u6444\u50cf\u5934\u62cd\u5230\u7684\u5185\u5bb9\u7684\u5dee\u522b\u5c31\u80fd\u5b66\u4e60\u5230\u6df1\u5ea6\u4fe1\u606f\u3002\u56e0\u4e3a\u5e0c\u671b\u662f\u7528\u540c\u6837\u7684\u7279\u5f81\u63d0\u53d6\u673a\u5236\u7684\u3002\u90fd\u662f\u873b\u8713\u70b9\u6c34\u3002More Advanced\nBatch Normalization\n\n\u7b2c\u4e00\u53e5\u8bdd\u5c31\u662f\u8bf4\u4e3a\u4e86\u8ba9\u6837\u672c\u6570\u636e\u770b\u8d77\u6765\u66f4\u76f8\u4f3c\uff0c\u8bf4\u660e\u8fd9\u662f\u521d\u8877\u3002\n\u7136\u540e\u662f\u80fd\u66f4\u597d\u5730\u6cdb\u5316\u5230\u672a\u77e5\u6570\u636e\uff08\u540c\u6837\u4e5f\u662f\u56e0\u4e3abn\u540e\u5c31\u66f4\u76f8\u4f3c\u4e86\uff09\n\u6df1\u5ea6\u7f51\u7edc\u4e2d\u6bcf\u4e00\u5c42\u4e4b\u540e\u4e5f\u9700\u8981\u505a\n\u8fd8\u6709\u4e00\u4e2a\u4e66\u91cc\u6ca1\u8bb2\u5230\u7684\u539f\u56e0\uff0c\u5c31\u662f\u628a\u503c\u79fb\u5230\u6fc0\u6d3b\u51fd\u6570\u7684\u68af\u5ea6\u5927\u7684\u533a\u57df\uff08\u6bd4\u59820\u9644\u8fd1\uff09\uff0c\u5426\u5219\u8fc7\u5927\u8fc7\u5c0f\u7684\u503c\u5728\u6fc0\u6d3b\u51fd\u6570\u7684\u66f2\u7ebf\u91cc\u90fd\u662f\u51e0\u4e4e\u6ca1\u6709\u68af\u5ea6\u7684\u4f4d\u7f6e\n\n\n\u5185\u90e8\u7528\u7684\u6307\u6570\u79fb\u52a8\u5e73\u5747(exponential moving average)\n\u4e00\u4e9b\u5c42\u6570\u975e\u5e38\u6df1\u7684\u7f51\u7edc\u5fc5\u987b\u7528BN\uff0c\u50cfresnet 50, 101, 152, inception v3, xception\u7b49\n\nDepthwise Separable Convolution\n\u4e4b\u524d\u7684\u5377\u79ef\uff0c\u4e0d\u7ba1\u6709\u591a\u5c11\u4e2alayer\uff0c\u90fd\u662f\u653e\u5230\u77e9\u9635\u91cc\u4e00\u6b21\u8ba1\u7b97\u7684\uff0cDSC\u628a\u6bcf\u4e00\u4e2alayer\u62c6\u5f00\uff0c\u5355\u72ec\u505a\u5377\u79ef\uff08\u4e0d\u5171\u4eab\u53c2\u6570\uff09\uff0c\u56e0\u4e3a\u6ca1\u6709\u4e00\u4e2a\u5de8\u5927\u7684\u77e9\u9635\uff0c\u53d8\u6210\u4e86\u51e0\u4e2a\u5c0f\u77e9\u9635\u4e58\u6cd5\uff0c\u53c2\u6570\u91cf\u4e5f\u5927\u5927\u53d8\u5c11\u4e86\u3002\n\u5bf9\u4e8e\u5c0f\u6837\u672c\u5f88\u6709\u6548\n\u5bf9\u4e8e\u5927\u89c4\u6a21\u6570\u636e\u96c6\uff0c\u5b83\u53ef\u4ee5\u6210\u4e3a\u91cc\u9762\u7684\u56fa\u5b9a\u7ed3\u6784\u7684\u6a21\u5757\uff08\u5b83\u4e5f\u662fXception\u7684\u57fa\u7840\u67b6\u6784\u4e4b\u4e00\uff09\n\n\nIn the future, it\u2019s likely that depthwise separable convolutions will completely replace regular convolutions, whether for 1D, 2D, or 3D applications, due to their higher representational efficiency.\n?!!Model ensembling\n\nEnsembling consists of pooling together the predictions of a set of different models, to produce better predictions.\n\u671f\u671b\u6bcf\u4e00\u4e2agood model\u62e5\u6709part of the truth(\u90e8\u5206\u7684\u771f\u76f8)\u3002\u76f2\u4eba\u6478\u8c61\u7684\u4f8b\u5b50\uff0c\u6ca1\u6709\u54ea\u4e2a\u76f2\u4eba\u62e5\u6709\u76f4\u63a5\u611f\u77e5\u4e00\u5934\u8c61\u7684\u80fd\u529b\uff0c\u673a\u5668\u5b66\u4e60\u53ef\u80fd\u5c31\u662f\u8fd9\u6837\u4e00\u4e2a\u76f2\u4eba\u3002\nThe key to making ensembling work is the diversity of the set of classifiers -&gt; \u5173\u952e\u662f\u8981\u201c\u591a\u6837\u6027\u201d\u3002 Diversity is what makes ensembling work.\n\u5343\u4e07\u4e0d\u8981\u53bbensembling\u540c\u6837\u7684\u7f51\u7edc\u4ec5\u4ec5\u6539\u53d8\u521d\u59cb\u5316\u800c\u53bbtrain\u591a\u6b21\u7684\u7ed3\u679c\u3002\n\u6bd4\u8f83\u597d\u7684\u5b9e\u8df5\u6709ensemble tree-based models(random forests, gradient-boosted trees) \u548c\u6df1\u5ea6\u795e\u7ecf\u7f51\u7edc\n\u4ee5\u53cawide and deep category of models, blending deep learning with shallow learning.\n\n\u540c\u6837\u662f\u873b\u8713\u70b9\u6c34\u3002", "categories": [{"name": "posts", "slug": "posts", "permalink": "/category/posts/"}], "tags": [{"name": "deep learning", "slug": "deep learning", "permalink": "/tag/deep%20learning/"}, {"name": "\u6df1\u5ea6\u5b66\u4e60", "slug": "\u6df1\u5ea6\u5b66\u4e60", "permalink": "/tag/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/"}, {"name": "keras", "slug": "keras", "permalink": "/tag/keras/"}, {"name": "cv", "slug": "cv", "permalink": "/tag/cv/"}, {"name": "nlp", "slug": "nlp", "permalink": "/tag/nlp/"}, {"name": "tensorflow", "slug": "tensorflow", "permalink": "/tag/tensorflow/"}, {"name": "gan", "slug": "gan", "permalink": "/tag/gan/"}, {"name": "lstm", "slug": "lstm", "permalink": "/tag/lstm/"}, {"name": "language mode", "slug": "language mode", "permalink": "/tag/language%20mode/"}, {"name": "rnn", "slug": "rnn", "permalink": "/tag/rnn/"}, {"name": "heatmap", "slug": "heatmap", "permalink": "/tag/heatmap/"}, {"name": "dropout", "slug": "dropout", "permalink": "/tag/dropout/"}, {"name": "machine learning", "slug": "machine learning", "permalink": "/tag/machine%20learning/"}]}, {"title": "\u300aDeep Learning with Python\u300b\u7b14\u8bb0[5]", "date": "2021-09-27T13:29:00-00.00", "path": "/archives/Deep-Learning-with-Python-Notes-5/", "text": "Deep learning for text and sequences\n\u7a7a\u95f4\u4e0a\u7684\u5e8f\u5217\uff0c\u65f6\u95f4\u4e0a\u7684\u5e8f\u5217\u7ec4\u6210\u7684\u6570\u636e\uff0c\u6bd4\u5982\u6587\u672c\uff0c\u89c6\u9891\uff0c\u5929\u6c14\u6570\u636e\u7b49\uff0c\u4e00\u822c\u7528recurrent neural network(RNN)\u548c1D convnets\n\u5176\u5b9e\u5f88\u591a\u540d\u8bcd\uff0c\u5305\u62ecconvnets\uff0c\u6211\u5e76\u6ca1\u6709\u5728\u522b\u7684\u5730\u65b9\u770b\u5230\u8fc7\uff0c\u597d\u50cf\u5c31\u662f\u4f5c\u8005\u81ea\u5df1\u53d1\u660e\u7684\uff0c\u4f46\u8fd9\u4e9b\u4e0d\u91cd\u8981\uff0c\u77e5\u9053\u5b83\u63cf\u8ff0\u7684\u662f\u4ec0\u4e48\u5c31\u53ef\u4ee5\u4e86\uff0c\u4e0d\u4e00\u5b9a\u8981\u516c\u8ba4\u672f\u8bed\u3002\n\u901a\u7528\u573a\u666f\uff1a\n[\u5206\u7c7b: \u6587\u672c\u5206\u7c7b] Document classification and timeseries classification, such as identifying the topic of an article or the author of a book\n[\u5206\u7c7b: \u6587\u672c\u6bd4\u8f83] Timeseries comparisons, such as estimating how closely related two documents or two stock tickers are\n[\u5206\u7c7b: \u751f\u6210] Sequence-to-sequence learning, such as decoding an English sentence into French\n[\u5206\u7c7b: \u60c5\u611f\u5206\u6790]Sentiment analysis, such as classifying the sentiment of tweets or movie reviews as positive or negative\n[\u56de\u5f52: \u9884\u6d4b]Timeseries forecasting, such as predicting the future weather at a certain location, given recent weather data\n\n\u6211\u753b\u86c7\u6dfb\u8db3\u5730\u52a0\u4e86\u662f\u5206\u7c7b\u95ee\u9898\u8fd8\u662f\u56de\u5f52\u95ee\u9898.\nnone of these deeplearning models truly understand text in a human sense\nDeep learning for natural-language processing is pattern recognition applied to words, sentences, and paragraphs, in much the same way that computer vision is pattern recognition applied to pixels.tokenizer\n\u56fe\u50cf\u7528\u50cf\u7d20\u4e0a\u7684\u989c\u8272\u6765\u6570\u5b57\u5316\uff0c\u90a3\u6587\u5b57\u4e5f\u628a\u4ec0\u4e48\u6570\u5b57\u5316\u5462\uff1f\n\u62c6\u5206\u4e3a\u8bcd\uff0c\u628a\u6bcf\u4e2a\u8bcd\u8f6c\u5316\u6210\u5411\u91cf\n\u62c6\u5206\u4e3a\u5b57\uff08\u6216\u5b57\u7b26\uff09\uff0c\u628a\u6bcf\u4e2a\u5b57\u7b26\u8f6c\u5316\u4e3a\u5411\u91cf\n\u628a\u5b57\uff08\u8bcd\uff09\u4e0e\u524dn\u4e2a\u5b57\uff08\u8bcd\uff09\u7ec4\u5408\u6210\u5355\u5143\uff0c\u8f6c\u5316\u4e3a\u5411\u91cf\uff0c\uff08\u7c7b\u4f3c\u6ed1\u7a97\uff09\uff0cN-Grams\n\nall of above are tokens, and breaking text into such tokens is called tokenization. These vectors, packed into sequence tensors, are fed into deep neural networks.N-grams\u8fd9\u79cd\u751f\u6210\u7684token\u662f\u65e0\u5e8f\u7684\uff0c\u5c31\u50cf\u4e00\u4e2a\u888b\u5b50\u88c5\u4e86\u4e00\u5806\u8bcd\uff1abag-of-words: a set of tokens rather than a list of sequence.\u6240\u4ee5\u53e5\u5b50\u7ed3\u6784\u4fe1\u606f\u4e22\u5931\u4e86\uff0c\u66f4\u9002\u5408\u7528\u4e8e\u6d45\u5c42\u7f51\u7edc\u3002\u4f5c\u4e3a\u4e00\u79cdrigid, brittle\uff08\u50f5\u786c\u7684\uff0c\u8106\u5f31\u7684\uff09\u7279\u5f81\u5de5\u7a0b\u65b9\u5f0f\uff0c\u6df1\u5ea6\u5b66\u4e60\u91c7\u7528\u591a\u5c42\u7f51\u7edc\u6765\u63d0\u53d6\u7279\u5f81\u3002vectorizer\ntoken -&gt; vector:\none-hot encoding\ntoken/word embedding (word2vec)\n\none-hot\n\n\u4ee5token\u603b\u6570\u91cf\uff08\u4e00\u822c\u5c31\u662f\u5b57\u5178\u5bb9\u91cf\uff09\u4e3a\u7ef4\u5ea6\n\u4e00\u822c\u65e0\u5e8f\uff0c\u6240\u4ee5\u751f\u6210\u7684\u65f6\u5019\u53ea\u9700\u8981\u6309\u51fa\u73b0\u987a\u5e8f\u7f16\u7d22\u5f15\u5c31\u597d\u4e86\n\u6709\u65f6\u5019\u4e5f\u5f80\u5f80\u4f34\u968f\u4e22\u5f03\u4e0d\u5e38\u7528\u8bcd\uff0c\u4ee5\u51cf\u5c0f\u7ef4\u5ea6\n\u4e5f\u53ef\u4ee5\u5728\u5b57\u7b26\u7ef4\u5ea6\u7f16\u7801\uff08\u7ef4\u5ea6\u66f4\u4f4e\uff09\n\u4e00\u4e2a\u5c0f\u6280\u5de7\uff0c\u5982\u679c\u7d22\u5f15\u6570\u5b57\u8fc7\u5927\uff0c\u53ef\u4ee5\u628a\u5355\u8bcdhash\u5230\u56fa\u5b9a\u7ef4\u5ea6(\u672a\u8ddf\u8fdb)\n\n\u7279\u70b9/\u95ee\u9898\uff1a\nsparse\nhigh-dimensional, \u6bd4\u5982\u51e0\u5343\u51e0\u4e07\nno spatial relationship\nhardcoded\n\nword embeddings\n\nDense\nLower-dimensional\uff0c\u6bd4\u5982128\uff0c256...\nSpatial relationships (\u8bed\u4e49\u63a5\u8fd1\u7684\u5411\u91cf\u7a7a\u95f4\u4e0a\u4e5f\u63a5\u8fd1)\nLearned from data\n\nto obtain word embeddings:\n\u5f53\u6210\u8bad\u7ec3\u53c2\u6570\u4e4b\u4e00(\u4ee5Embedding\u5c42\u7684\u8eab\u4efd)\uff0c\u8ddf\u7740\u8bad\u7ec3\u4efb\u52a1\u4e00\u8d77\u8bad\u7ec3\npretrained word embeddings\nWord2Vec(2013, google)\nCBOW\nSkip-Gram\n\n\nGloVe(2014, Stanford))\n\u524d\u63d0\u662f\u8bed\u8a00\u73af\u5883\u5dee\u4e0d\u591a\uff0c\u4e0d\u540c\u5b66\u79d1/\u4e13\u4e1a/\u884c\u4e1a\u91cc\u7684\u8bcd\u7684\u5173\u7cfb\u662f\u5b8c\u5168\u4e0d\u540c\u7684\nGloVe\u4ecewikipedia\u548c\u5f88\u591a\u901a\u7528\u8bed\u6599\u5e93\u91cc\u8bad\u7ec3\uff0c\u53ef\u4ee5\u5c1d\u8bd5\u5728\u8bb8\u591a\u975e\u4e13\u4e1a\u573a\u666f\u91cc\u4f7f\u7528\u3002\n\n\n\n\n\nkeras\u52a0\u8f7d\u8bad\u7ec3\u8bcd\u5411\u91cf\u7684\u65b9\u5f0f\uff1amodel.layers[0].set_weights([embedding_matrix])\nmodel.layers[0].trainable = False\n\npytorch\uff1a# TEXT, LABEL\u4e3atorchtext\u7684Field\u5bf9\u8c61\nfrom torchtext.vocab import Vectors\nvectors=Vectors(name=&#39;./sgns.sogou.word&#39;) #\u4f7f\u7528\u9884\u8bad\u7ec3\u7684\u8bcd\u5411\u91cf\uff0c\u7ef4\u5ea6\u4e3a300Dimension\nTEXT.build_vocab(train, vectors=vectors) #\u6784\u5efa\u8bcd\u5178\nLABEL.build_vocab(train)\n\nvocab_size = len(TEXT.vocab)\nvocab_vectors = TEXT.vocab.vectors.numpy() #\u51c6\u5907\u597d\u9884\u8bad\u7ec3\u8bcd\u5411\u91cf\n\nself.embedding = nn.Embedding(num_embeddings=vocab_size\uff0c embedding_dim=embedding_size)\n\n# \u4e0a\u9762\u662f\u4e3a\u4e86\u56de\u987e\uff0c\u771f\u6b63\u7528\u6765\u505a\u5bf9\u6bd4\u7684\u662f\u4e0b\u9762\u8fd9\u4e24\u53e5\nself.embedding.weight.data.copy_(torch.from_numpy(vocab_vectors))\nself.embedding.weight.requires_grad = False\n\n\n\u9884\u8bad\u7ec3\u8bcd\u5411\u91cf\u4e5f\u53ef\u4ee5\u7ee7\u7eed\u8bad\u7ec3\uff0c\u4ee5\u5f97\u5230task-specific embedding\nRecurrent neural networks(RNN)\nsequence, time series\u7c7b\u7684\u6570\u636e\uff0c\u5929\u7136\u4f1a\u53d7\u5230\u524d\u540e\u6570\u636e\u7684\u5f71\u54cd\uff0cRNN\u901a\u8fc7\u5c06\u5f53\u524dtoken\u8ba1\u7b97\u7684\u65f6\u5019\u5f15\u5165\u4e0a\u4e00\u4e2atoken\u7684\u8ba1\u7b97\u7ed3\u679c\uff08\u53cd\u5411\u7684\u8bdd\u5c31\u80fd\u83b7\u5f97\u4e0b\u4e00\u4e2atoken\u7684\u7ed3\u679c\uff09\u4ee5\u83b7\u53d6\u4e0a\u4e0b\u6587\u7684\u4fe1\u606f\u3002\u524d\u9762\u78b0\u5230\u7684\u7f51\u7edc\uff0c\u6570\u636e\u6d88\u8d39\u5b8c\u5c31\u5f80\u524d\u8d70\uff08\u6309\u6211\u8fd9\u79cd\u8bf4\u6cd5\uff0c\u540e\u9762\u8fd8\u6709\u5f88\u591a\u201c\u7b49\u7740\u4e8c\u6b21\u6d88\u8d39\u7684\u201d\u6a21\u5757\uff0c\u6bd4\u5982inception, resdual\u7b49\u7b49\uff09\uff0c\u53eb\u505afeedforward network\u3002\u663e\u7136\uff0cRNN\u4e2d\uff0c\u4e00\u4e2atoken\u4ea7\u751f\u8f93\u51fa\u540e\u5e76\u4e0d\u662f\u76f4\u63a5\u4e22\u7ed9\u4e0b\u4e00\u5c42\uff0c\u800c\u662f\u8fd8\u590d\u5236\u4e86\u4e00\u4efd\u4e22\u7ed9\u4e86\u540c\u5c42\u7684\u4e0b\u4e00\u4e2atoken. \u8fd9\u6837\uff0c\u5f53\u524dtoken\u7684output\u6210\u4e86\u4e0b\u4e00\u4e2atoken\u7684state\u3002\n\u56e0\u4e3a\u4e00\u4e2aoutput\u5176\u5b9e\u542b\u6709\u201c\u524d\u9762\u201c\u6240\u6709\u7684\u4fe1\u606f\uff0c\u4e00\u822c\u53ea\u9700\u8981\u6700\u540e\u4e00\u4e2aoutput\n\u5982\u679c\u662f\u5806\u53e0\u591a\u5c42\u7f51\u7edc\uff0c\u5219\u9700\u8981\u8fd4\u56de\u6240\u6709output\n\n\u5e8f\u5217\u8fc7\u957f\u68af\u5ea6\u5c31\u6d88\u5931\u4e86\uff0c\u6240\u8c13\u7684\u9057\u5fd8 \uff08\u63a8\u5bfc\u89c1\u53e6\u4e00\u7bc7\u7b14\u8bb0\uff0c\uff09  -&gt; LSTM, GRULong Short-Term Memory(LSTM)\n\n\u60f3\u8c61\u6709\u4e00\u6839\u4f20\u9001\u5e26\u7a7f\u8fc7sequence\n\u540c\u4e00\u7ec4input\u548cstate\u4f1a\u8fdb\u884c\u4e09\u6b21\u76f8\u540c\u7684\u7ebf\u6027\u53d8\u6362\uff0c\u6709\u6ca1\u6709\u8054\u60f3\u5230transformer\u7528\u540c\u4e00\u4e2a\u8f93\u51fa\u53bb\u751f\u6210q, k, v\uff1f\n\noutput_t = activation(dot(state_t, Uo) + dot(input_t, Wo) + dot(C_t, Vo) + bo)\ni_t = activation(dot(state_t, Ui) + dot(input_t, Wi) + bi) \nf_t = activation(dot(state_t, Uf) + dot(input_t, Wf) + bf) \nk_t = activation(dot(state_t, Uk) + dot(input_t, Wk) + bk)\n\nc_t+1 = i_t * k_t + c_t * f_t  # \u4ecd\u7136\u6709q\uff0ck\uff0cv\u7684\u610f\u601d\uff08i,k\u4e92\u4e58\uff0c\u52a0\u4e0af\uff0c \u751f\u6210\u65b0c\uff09\n\n\n\u4e0d\u8981\u53bb\u8003\u8651\u54ea\u4e2a\u662f\u9057\u5fd8\u95e8\uff0c\u8bb0\u5fc6\u95e8\uff0c\u8fd8\u662f\u8f93\u51fa\u95e8\uff0c\u6700\u7ec8\u662f\u7531weights\u51b3\u5b9a\u7684\uff0c\u800c\u4e0d\u662f\u8bbe\u8ba1\u3002\nJust keep in mind what the LSTM cell is meant to do:\nallow past information to be reinjected at a later time, thus fighting the vanishing-gradient problem.\n\u5173\u952e\u8bcd\uff1areinjectdropout\n\u4e0d\u7ba1\u662fkeras\u8fd8\u662fpytorch\uff0c\u90fd\u5e2e\u4f60\u9690\u85cf\u4e86dropout\u7684\u5751\u3002 \u4f60\u80fd\u770b\u5230\u5e94\u7528\u8fd9\u4e9b\u6846\u67b6\u7684\u65f6\u5019\uff0c\u662f\u9700\u8981\u4f60\u628adropout\u4f20\u8fdb\u53bb\u7684\uff0c\u800c\u4e0d\u662f\u624b\u52a8\u63a5\u4e00\u4e2adropoutlayer\uff0c\u539f\u56e0\u662f\u9700\u8981\u5728\u5e8f\u5217\u6bcf\u4e00\u4e2a\u8282\u70b9\u4e0a\u5e94\u7528\u540c\u6837\u7684dropout mask\u624d\u80fd\u8d77\u4f5c\u7528\uff0c\u4e0d\u7136\u5c31\u4f1a\u8d77\u5230\u53cd\u4f5c\u7528\u3002keras\u5c01\u88c5\u5f97\u8981\u590d\u6742\u4e00\u70b9\uff1amodel.add(layers.GRU(32,\n                    dropout=0.2,\n                    recurrent_dropout=0.2,\n                    input_shape=(None, float_data.shape[-1])))\n\nstacking recurrent layers\n\u524d\u9762\u8bf4\u8fc7\uff0c\u8bbe\u8ba1\u597d\u7684\u6a21\u578b\u7684\u4e00\u4e2a\u5224\u65ad\u4f9d\u636e\u662f\u81f3\u5c11\u8ba9\u6a21\u578b\u80fd\u8dd1\u5230overfitting\u3002\u5982\u679c\u5230\u4e86overfitting\uff0c\u8868\u73b0\u8fd8\u4e0d\u662f\u5f88\u597d\uff0c\u90a3\u4e48\u53ef\u4ee5\u8003\u8651\u589e\u52a0\u6a21\u578b\u5bb9\u91cf\uff08\u53e0\u66f4\u591a\u5c42\uff0c\u4ee5\u53ca\u62d3\u5bbdlayer\u7684\u8f93\u51fa\u7ef4\u5ea6\uff09\u5806\u53e0\u591a\u5c42\u5c31\u9700\u8981\u7528\u5230\u6bcf\u4e2a\u8282\u70b9\u4e0a\u7684\u8f93\u51fa\uff0c\u800c\u4e0d\u53ea\u5173\u5fc3\u6700\u540e\u4e00\u4e2a\u8f93\u51fa\u4e86\u3002Bidriectional\nkeras\u5947\u8469\u7684bidirectional\u8bed\u6cd5\uff1amodel.add(layers.Bidirectional(layers.LSTM(32)))\n\n\u5176\u5b9e\u8fd9\u662f\u8bbe\u8ba1\u6a21\u5f0f\u5728\u7c7b\u7684\u5c01\u88c5\u4e0a\u7684\u5178\u578b\u5e94\u7528\uff0c\u5584\u7528\u7ee7\u627f\u548c\u591a\u6001\uff0c\u65e0\u4fb5\u5165\u5730\u6269\u5c55\u7c7b\u7684\u65b9\u6cd5\u548c\u5c5e\u6027\uff0c\u800c\u4e0d\u662f\u4e0d\u65ad\u9b54\u6539\u539f\u4ee3\u7801\uff0c\u52a0\u53c2\u6570\uff0c\u6539API\u3002\u4f46\u5728\u811a\u672c\u8bed\u8a00\u98ce\u683c\u91cc\u7684\u73af\u5883\u91cc\uff0c\u8fd9\u4e48\u73a9\u5c31\u6709\u70b9\u683c\u683c\u4e0d\u5165\u4e86\u3002Sequence processing with convnets\n\n\u5377\u79ef\u7528\u5230\u5e8f\u5217\u4e0a\u53bb\u4e5f\u662f\u53ef\u4ee5\u7684\n\u4e00\u4e2a\u5411\u91cf\u53ea\u8868\u793a\u4e00\u4e2atoken\uff0c\u5982\u679c\u628atoken\u7684\u5411\u91cf\u6253\u65ad\u5c31\u8fdd\u80cc\u4e86token\u662f\u6700\u5c0f\u5355\u5143\u7684\u521d\u8877\uff0c\u6240\u4ee5\u5e8f\u5217\u4e0a\u7684\u5377\u79ef\uff0c\u4e0d\u53ef\u80fd\u50cf\u56fe\u7247\u4e0a\u4e24\u4e2a\u65b9\u5411\u53bb\u6ed1\u7a97\u4e86\u3002(Conv1D\u7684\u7531\u6765)\n\u4e00\u4e2a\u5377\u79ef\u6838\u7b49\u4e8e\u63d0\u53d6\u4e86n\u4e2a\u5173\u8054\u7684\u4e0a\u4e0b\u6587\uff08\u6709\u70b9\u7c7b\u4f3cn-grams\uff09\uff0c\u5806\u53e0\u5f97\u591f\u6df1\u611f\u53d7\u91ce\u66f4\u5927\uff0c\u53ef\u80fd\u5f97\u5230\u66f4\u5927\u7684\u4e0a\u4e0b\u6587\u3002\n\u4f46\u4ecd\u7136\u7406\u89e3\u4e3afilter\u5728\u5168\u53e5\u91cc\u63d0\u53d6\u5c40\u90e8\u7279\u5f81\n\n\u5f52\u6855\u7ed3\u5e95\uff0c\u56fe\u7247\u7684\u6700\u5c0f\u5355\u5143\u662f\u4e00\u4e2a\u50cf\u7d20\uff08\u4e00\u4e2a\u6570\u5b57\uff09\uff0c\u800c\u5e8f\u5217\uff08\u6211\u4eec\u8fd9\u91cc\u8bf4\u6587\u672c\uff09\u7684\u6700\u5c0f\u5355\u5143\u662ftoken\uff0c\u800ctoken\u53c8\u88ab\u6211\u4eec\u5b9a\u4e49\u4e3avector\uff08\u4e00\u7ec4\u6570\u5b57\uff09\u4e86\uff0c\u90a3\u4e48\u5377\u79ef\u6838\u5c31\u9650\u5236\u5728\u81f3\u5c11\u8981\u8fbe\u5230\u6700\u5c0f\u5355\u5143(vector)\u7684\u7ef4\u5ea6\u4e86\u3002Combining CNNs and RNNs to process long sequences\n\u5377\u79ef\u80fd\u901a\u8fc7\u52a0\u6df1\u7f51\u7edc\u83b7\u53d6\u66f4\u5927\u7684\u611f\u53d7\u91ce\uff0c\u4f46\u4ecd\u7136\u662f\u201c\u4f4d\u7f6e\u65e0\u5173\u201d\u7684\uff0c\u56e0\u4e3a\u6bcf\u4e2afilter\u672c\u5c31\u662f\u5728\u6574\u4e2a\u5e8f\u5217\u91cc\u641c\u7d22\u76f8\u540c\u7684\u7279\u5f81\u3002\u4f46\u662f\u5b83\u786e\u5b9e\u63d0\u53d6\u51fa\u4e86\u7279\u5f81\uff0c\u662f\u5426\u53ef\u628a\u4f4d\u7f6e\u5173\u7cfb\u7b49\u4e0a\u4e0b\u6587\u7684\u4f5c\u4e1a\u4ea4\u7ed9\u4e0b\u6e38\u4efb\u52a1RNN\u505a\u5462\uff1f\u4e0d\u4f46\u5b9e\u73b0\uff0c\u800c\u4e14\u5806\u53e0\u4e24\u79cd\u7f51\u7edc\uff0c\u8fd8\u53ef\u4ee5\u628a\u6570\u636e\u96c6\u505a\u5f97\u66f4\u5927\uff08CNN\u662f\u77e9\u9635\u8fd0\u7b97\uff0c\u8fd8\u80fd\u7528GPU\u52a0\u901f\uff09\u3002", "categories": [{"name": "posts", "slug": "posts", "permalink": "/category/posts/"}], "tags": [{"name": "deep learning", "slug": "deep learning", "permalink": "/tag/deep%20learning/"}, {"name": "\u6df1\u5ea6\u5b66\u4e60", "slug": "\u6df1\u5ea6\u5b66\u4e60", "permalink": "/tag/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/"}, {"name": "keras", "slug": "keras", "permalink": "/tag/keras/"}, {"name": "cv", "slug": "cv", "permalink": "/tag/cv/"}, {"name": "nlp", "slug": "nlp", "permalink": "/tag/nlp/"}, {"name": "tensorflow", "slug": "tensorflow", "permalink": "/tag/tensorflow/"}, {"name": "gan", "slug": "gan", "permalink": "/tag/gan/"}, {"name": "lstm", "slug": "lstm", "permalink": "/tag/lstm/"}, {"name": "language mode", "slug": "language mode", "permalink": "/tag/language%20mode/"}, {"name": "rnn", "slug": "rnn", "permalink": "/tag/rnn/"}, {"name": "heatmap", "slug": "heatmap", "permalink": "/tag/heatmap/"}, {"name": "dropout", "slug": "dropout", "permalink": "/tag/dropout/"}, {"name": "machine learning", "slug": "machine learning", "permalink": "/tag/machine%20learning/"}]}, {"title": "\u300aDeep Learning with Python\u300b\u7b14\u8bb0[4]", "date": "2021-09-22T10:03:00-00.00", "path": "/archives/Deep-Learning-with-Python-Notes-4/", "text": "Deep learning for computer vision\nConvolution Network\nThe convolution operation extracts patches from its input feature map and applies the same transformation to all of these patches, producing an output feature map.\nconvolution layers learn local patterns(\u5c40\u90e8\u7279\u5f81)\nThe patterns they learn are translation invariant.\uff08\u5c40\u90e8\u7279\u5f81\u53ef\u5728\u56fe\u7247\u522b\u7684\u5730\u65b9\u91cd\u590d\uff09\n\u6709\u7684\u6559\u6750\u91cc\u4f1a\u8bf4\u6bcf\u4e2a\u6ed1\u7a97\u4e00\u4e2a\u7279\u5f81\uff0c\u7136\u540e\u5f15\u5165\u53c2\u6570\u5171\u4eab\u624d\u8bb2\u5230\u4e00\u4e2a\u7279\u5f81\u5176\u5b9e\u53ef\u4ee5\u7528\u5728\u6240\u6709\u6ed1\u7a97\n\n\nThey can learn spatial hierarchies of patterns(\u4f4e\u7ea7\u7279\u5f81\u5806\u53e0\u6210\u9ad8\u7ea7\u7279\u5f81)\ndepth axis no longer stand for specific colors as in RGB input; rather, they stand for filters(\u8868\u793a\u56fe\u7247\u65f6\uff0c3\u4e2a\u901a\u9053\u6709\u539f\u59cb\u542b\u4e49\uff0c\u5377\u79ef\u5f00\u59cb\u540e\u901a\u9053\u53ea\u8868\u793afilter\u4e86)\nvalid and same convolution\uff08\u52a0\u4e0d\u52a0padding\u8ba9filter\u5728\u6700\u540e\u4e00\u4e2a\u50cf\u7d20\u65f6\u4e5f\u80fd\u8ba1\u7b97\uff09\nstride\uff0c\u6ed1\u7a97\u6b65\u957f\nmax-pooling or average-pooling\nusually 2x2 windows by stride 2 -&gt; \u4e0b\u91c7\u6837(downsample)\n\u66f4\u5927\u7684\u611f\u53d7\u91ce\n\u66f4\u5c0f\u7684\u8f93\u51fa\n\u4e0d\u662f\u552f\u4e00\u7684\u4e0b\u91c7\u6837\u65b9\u5f0f\uff08\u6bd4\u5982\u5728\u5377\u79ef\u4e2d\u4f7f\u7528stride\u4e5f\u53ef\u4ee5\uff09\n\u4e00\u822c\u7528max\u800c\u4e0d\u662faverage(\u5bfb\u627e\u6700\u5f3a\u7684\u8868\u73b0)\n\n\n\u5c0f\u6570\u636e\u96c6\ndata augmenetation(\u65cb\u8f6c\u5e73\u8861\u7f29\u653eshear\u7ffb\u8f6c\u7b49)\n\u4e0d\u80fd\u4ea7\u751f\u5f53\u524d\u6570\u636e\u96c6\u4e0d\u5b58\u5728\u7684\u4fe1\u606f\n\u6240\u4ee5\u4ecd\u9700\u8981dropout\n\n\npretrained network(\u9002\u7528\u901a\u7528\u7269\u4f53)\nfeature extraction\nfine-tuneing\n\n\n\n\n\nUsing a pretrained convnet\nA pretrained network is a saved network that was previously trained on a large dataset typically on a large-scale image-classification task.Feature extraction\nFeature extraction consists of using the representations learned by a previous network to extract interesting features from new samples. These features are then run through a new classifier, which is trained from scratch.\n\u5373\u53ea\u4f7f\u7528\u522b\u7684\u5927\u578b\u6a21\u578b\u63d0\u53d6\u7684representations\uff08\u7279\u5f81\uff09\uff0c\u6765\u6784\u5efa\u81ea\u5df1\u7684\u5206\u7c7b\u5668\u3002\n\u539f\u672c\u6a21\u578b\u7684\u5206\u7c7b\u5668\u4e0d\u4f46\u662f\u4e3a\u7279\u5b9a\u4efb\u52a1\u5199\u7684\uff0c\u800c\u4e14\u57fa\u672c\u4e0a\u4e27\u5931\u4e86\u4f4d\u7f6e\u548c\u7a7a\u95f4\u4fe1\u606f\uff0c\u53ea\u4fdd\u7559\u4e86\u5bf9\u8be5\u4efb\u52a1\u4e0a\u7684presence probability.\n\u6700\u521d\u7684\u5c42\u4e00\u822c\u53ea\u80fd\u63d0\u53d6\u5230\u7ebf\uff0c\u8fb9\u7f18\uff0c\u989c\u8272\u7b49\u4f4e\u7ea7\u7279\u5f81\uff0c\u518d\u5f80\u540e\u4f1a\u805a\u5408\u51fa\u4e00\u4e9b\u7eb9\u7406\uff0c\u66f4\u9ad8\u7684\u5c42\u5c31\u53ef\u80fd\u4f1a\u53e0\u52a0\u51fa\u4e00\u4e9b\u773c\uff0c\u8033\u7b49\u62bd\u8c61\u7684\u7279\u5f81\uff0c\u6240\u4ee5\u4f60\u7684\u8bc6\u522b\u5bf9\u8c61\u4e0epretrained\u6570\u636e\u6e90\u5dee\u522b\u5f88\u5927\u7684\u65f6\u5019\uff0c\u5c31\u9700\u8981\u8003\u8651\u628a\u6700\u5c3e\u5df4\u7684\u51e0\u5c42layer\u4e5f\u820d\u5f03\u6389\u3002\uff08e.g. VGG16\u6700\u540e\u4e00\u5c42\u63d0\u53d6\u4e86512\u4e2afeature map\uff09\n\u4e24\u79cd\u7528\u6cd5\uff1a\n\u8dd1\u4e00\u6b21\u9884\u8bad\u7ec3\u6a21\u578b\u4f60\u9009\u4e2d\u7684\u90e8\u5206\uff0c\u628a\u53c2\u6570\u5b58\u8d77\u6765\uff08$\\leftarrow$\u9519\uff09\uff0c\u628a\u8f93\u51fa\u5f53\u4f5cdataset\u4f5c\u4e3a\u81ea\u5df1\u6784\u5efa\u7684\u5206\u7c7b\u5668\u7684input\u3002\n\u5feb\uff0c\u7701\u8d44\u6e90\uff0c\u4f46\u662f\u9700\u8981\u628a\u6570\u636e\u96c6\u56fa\u5b9a\u4f4f\uff0c\u7b49\u4e8e\u6ca1\u6cd5\u505adata augmentation\n\u8dd1\u9884\u8bad\u7ec3\u6a21\u578b\u65f6\u4e0d\u9700\u8981\u8ba1\u7b97\u68af\u5ea6(freeze)\n\u5176\u5b9e\u5e94\u7528\u9884\u8bad\u7ec3\u6a21\u578b\u5c31\u7b49\u4e8e\u522b\u4eba\u7684\u9884\u5904\u7406\u6570\u636e\u96c6\uff0c\u800c\u771f\u5b9e\u7684\u6a21\u578b\u53ea\u6709\u4e00\u4e2a\u5c0f\u5206\u7c7b\u5668\n\n\n\u5408\u5e76\u5230\u81ea\u5b9a\u4e49\u7684\u7f51\u7edc\u4e2d\u5f53\u6210\u666e\u901a\u7f51\u7edc\u8bad\u7ec3\n\u6162\uff0c\u4f46\u662f\u80fd\u505a\u6570\u636e\u589e\u5e7f\u4e86\n\u9700\u624b\u52a8\u8bbe\u7f6e\u6765\u81ea\u9884\u8bad\u7ec3\u6a21\u578b\u7684\u68af\u5ea6\u4e0d\u9700\u8981\u8ba1\u7b97\u68af\u5ea6\n\n\n\n\n\n\n\u6ce8\uff1a\u8fd9\u91cc\u4e3a\u4ec0\u4e48\u5355\u72ec\u8dd1\u9884\u8bad\u7ec3\u6a21\u578b\u4e0d\u80fd\u6570\u636e\u589e\u5e7f\u5462\uff1f\n\n\u6559\u6750\u7528\u7684\u662fkeras, \u5b83\u5904\u7406\u6570\u636e\u7684\u65b9\u5f0f\u662f\u505a\u4e00\u4e2ageneraotr\uff0c\u53ea\u8981\u4f60\u7ed9\u5b9a\u6570\u636e\u589e\u5e7f\u7684\u89c4\u5219\uff08\u53c2\u6570\uff09\uff0c\u54ea\u6015\u53ea\u6709\u4e00\u5f20\u56fe\uff0c\u5b83\u4e5f\u662f\u53ef\u4ee5\u65e0\u7a77\u65e0\u5c3d\u5730\u7ed9\u4f60\u751f\u6210\u4e0b\u4e00\u5f20\u7684\u3002\u6240\u4ee5\u6bcf\u4e00\u6b21\u8bad\u7ec3\u90fd\u80fd\u6709\u65b0\u7684\u6570\u636e\u5582\u5230\u7f51\u7edc\u91cc\u3002\u8fd9\u662f\u51fa\u4e8e\u5185\u5b58\u8003\u8651\uff0c\u4e0d\u9700\u8981\u771f\u7684\u628a\u6570\u636e\u5168\u90e8\u52a0\u8f7d\u5230\u5185\u5b58\u91cc\u3002\n\n\u800c\u5982\u679c\u4f60\u662f\u4e00\u4e2a\u56fa\u5b9a\u7684\u6570\u636e\u96c6\uff0c\u6bd4\u5982\u51e0\u4e07\u6761\uff0c\u90a3\u4e48\u4f60\u628a\u6240\u6709\u7684\u6570\u636e\u8dd1\u4e00\u904d\u628a\u8fd9\u4e2a\u7ed3\u679c\u5f53\u6210\u6570\u636e\u96c6\uff08\u5168\u653e\u5728\u5185\u5b58\u91cc\uff09\uff0c\u90a3\u4e5f\u4e0d\u662f\u4e0d\u53ef\u4ee5\u5728\u8fd9\u4e00\u6b65\u7528\u6570\u636e\u589e\u5e7f\u3002\nFine-tuning\nFine-tuning consists of unfreezing a few of the top layers of a frozen model base used for feature extraction, and jointly training both the newly added part of the model (in this case, the fully connected classifier) and these top layers. This is called fine-tuning because it slightly adjusts the more abstract representations of the model being reused, in order to make them more relevant for the problem at hand.\u524d\u9762\u7684feature extraction\u65b9\u5f0f\uff0c\u4f1a\u628a\u9884\u8bad\u7ec3\u7684\u6a21\u578b\u4f60\u9009\u4e2d\u7684layers\u7ed9freeze\u6389\uff0c\u5373\u4e0d\u8ba1\u7b97\u68af\u5ea6\u3002\u8fd9\u91cc\u4e4b\u6240\u4ee5\u53ebfine-tuning\uff0c\u610f\u601d\u5c31\u662f\u4f1a\u628a\u6700\u540e\u51e0\u5c42(top-layers)\u7ed9unfreezing\u6389\uff0c\u8fd9\u6837\u7684\u597d\u5904\u662f\u4fdd\u7559\u4f4e\u7ea7\u7279\u5f81\uff0c\u91cd\u65b0\u8bad\u7ec3\u9ad8\u7ea7\u7279\u5f81\uff0c\u8fd8\u4fdd\u7559\u4e86\u539f\u6765\u5927\u578b\u6a21\u578b\u7684\u7ed3\u6784\uff0c\u4e0d\u9700\u8981\u81ea\u884c\u6784\u5efa\u3002\n\u4f46\u662f\uff1a it\u2019s only possible to fine-tune the top layers of the convolutional base once the classifier on top has already been trained. \u9884\u8bad\u7ec3\u6a21\u578b\u6ca1\u6709frezze\u4f4f\u7684\u8bddloss\u5c06\u4f1a\u5f88\u5927\uff0c\u6240\u4ee5\u53d8\u6210\u4e86\u5148train\u4e00\u4e2a\u5927\u4f53\u5dee\u4e0d\u591a\u7684classifier\uff0c\u518d\u8054\u5408\u8d77\u6765train\u4e00\u904d\u9ad8\u7ea7\u7279\u5f81\u548cclassifier:\n\nAdd your custom network on top of an already-trained base network.\nFreeze the base network.\nTrain the part you added. (\u7b2c\u4e00\u6b21train)\nUnfreeze some layers in the base network.\nJointly train both these layers and the part you added.\uff08\u7b2c\u4e8c\u6b21train\uff09\n\n\u4f46\u5343\u4e07\u522b\u628a\u6240\u6709\u5c42\u90fdunfrezze\u6765\u8bad\u7ec3\u4e86\n\u4f4e\u7ea7\u7279\u5f81\u90fd\u4e3a\u8fb9\u7f18\u548c\u989c\u8272\uff0c\u65e0\u9700\u91cd\u65b0\u8bad\u7ec3\n\u5c0f\u6570\u636e\u91cf\u8bad\u7ec3\u5927\u578b\u6a21\u578b\uff0cmodel capacity\u76f8\u5f53\u5927\uff0c\u975e\u5e38\u5bb9\u6613\u8fc7\u62df\u5408\n\nVisualizing what convents learn\n\u5e76\u4e0d\u662f\u6240\u6709\u7684\u6df1\u5ea6\u5b66\u4e60\u90fd\u662f\u9ed1\u76d2\u5b50\uff0c\u81f3\u5c11\u5bf9\u56fe\u50cf\u7684\u5377\u79ef\u7f51\u7edc\u4e0d\u662f -&gt; representations of visual concepts, \u4e0b\u9762\u4ecb\u7ecd\u4e09\u79cd\u89c6\u89c9\u5316\u548c\u53ef\u89e3\u91ca\u6027\u7684representations\u7684\u65b9\u6cd5\u3002Visualizing intermediate activations\n\u5c31\u662f\u628a\u6bcf\u4e2a\u4e2d\u95f4\u5c42(\u57fa\u672c\u4e0a\u662f&quot;\u5377\u79ef+\u6c60\u5316+\u6fc0\u6d3b\u201c)\u53ef\u89c6\u5316\u51fa\u6765\uff0cThis gives a view into how an input is decomposed into the different filters learned by the network.from keras import models\nlayer_outputs = [layer.output for layer in model.layers[:8]] activation_model = models.Model(inputs=model.input, outputs=layer_outputs)\n\nactivations = activation_model.predict(img_tensor)\n\nimport matplotlib.pyplot as plt\nplt.matshow(first_layer_activation[0, :, :, 4], cmap=&#39;viridis&#39;)\n\n# \u6ce8\u610f\u4f7f\u7528\u7684\u662fmatshow\u800c\u4e0d\u662fshow\n\n\u4ee5\u4e0a\u4ee3\u7801\u662f\u5229\u7528\u4e86keras\u7684Model\u7279\u6027\uff0c\u5c06\u6240\u6709layers\u7684\u8f93\u51fa\u644a\u5e73\uff08\u5c31\u662f\u505a\u4e86\u4e00\u4e2a\u591a\u5934\u7684\u6a21\u578b\uff09\uff0c\u7136\u540e\u518d\u987a\u4fbf\u53d6\u4e86\u7b2c4\u548c\u7b2c7\u4e2afeature map\u753b\u51fa\u6765\uff0c\u53ef\u4ee5\u770b\u5230\uff0c\u56fe\u4e00\u611f\u5174\u8da3\u7684\u662f\u5bf9\u89d2\u7ebf\uff0c\u56fe\u4e8c\u63d0\u53d6\u7684\u662f\u84dd\u8272\u7684\u4eae\u70b9\u3002\u7ed3\u6784\u5316\u8fd9\u4e9b\u8f93\u51fa\uff0c\u53ef\u4ee5\u786e\u4fe1\u521d\u59cblayer\u786e\u5b9e\u63d0\u53d6\u7684\u662f\u7b80\u5355\u7279\u5f81\uff0c\u8d8a\u5f80\u540e\u8d8a\u9ad8\u7ea7\uff08\u62bd\u8c61\uff09\u3002A deep neural network effectively acts as an information distillation(\u4fe1\u606f\u84b8\u998f) pipeline, with raw data going in (in this case, RGB pictures) and being repeatedly transformed so that irrelevant information is filtered out (for example, the specific visual appearance of the image), and useful information is magnified and refined (for example, the class of the image).\n\u5173\u952e\u8bcd\uff1a\u6709\u7528\u7684\u4fe1\u606f\u88ab\u4e0d\u65ad\u653e\u5927\u548c\u5f3a\u5316\n\u4e66\u91cc\u4e3e\u4e86\u4e2a\u6709\u8da3\u7684\u4f8b\u5b50\uff0c\u8981\u4f60\u753b\u4e00\u8f86\u81ea\u884c\u8f66\u3002\u4f60\u753b\u51fa\u6765\u7684\u5e76\u4e0d\u662f\u4e00\u8f86\u5145\u6ee1\u7ec6\u8282\u7684\u5355\u8f66\uff0c\u800c\u5f80\u5f80\u662f\u4f60\u62bd\u8c61\u51fa\u6765\u7684\u5355\u8f66\uff0c\u4f60\u4f1a\u7528\u57fa\u672c\u7684\u7ebf\u6761\u52fe\u52d2\u51fa\u4f60\u5bf9\u5355\u8f66\u7279\u5f81\u7684\u7406\u89e3\uff0c\u6bd4\u5982\u9f99\u5934\uff0c\u8f6e\u5b50\u7b49\u5173\u952e\u90e8\u4ef6\uff0c\u4ee5\u53ca\u76f8\u5bf9\u4f4d\u7f6e\u3002\u753b\u5bb6\u4e3a\u4ec0\u4e48\u80fd\u753b\u5f97\u53c8\u771f\u5b9e\u53c8\u597d\u770b\uff1f\u90a3\u5c31\u662f\u4ed6\u4eec\u771f\u7684\u4ed4\u7ec6\u89c2\u5bdf\u4e86\u5355\u8f66\uff0c\u4ed6\u4eec\u7ed8\u753b\u7684\u65f6\u5019\u7528\u7684\u5e76\u4e0d\u662f\u7279\u5f81\uff0c\u800c\u662f\u4e00\u5207\u7ec6\u8282\uff0c\u7136\u800c\u5bf9\u4e8e\u6ca1\u6709\u53d7\u8fc7\u8bad\u7ec3\u7684\u666e\u901a\u4eba\u6765\u8bf4\uff0c\u5f80\u5f80\u53ea\u80fd\u7528\u7b80\u5355\u51e0\u7b14\u52fe\u52d2\u51fa\u8111\u6d77\u4e2d\u7684\u5355\u8f66\u7684\u6837\u5b50\uff08\u5176\u5b9e\u5e76\u4e0d\u662f\u6837\u5b50\uff0c\u800c\u662f\u7279\u5f81\u7684\u7ec4\u5408\uff09Visualizing convnet filters\n\u901a\u8fc7\u5f3a\u5316filter\u5bf9\u8f93\u51fa\u7684\u53cd\u5e94\u5e76\u7ed8\u5236\u51fa\u6765\uff0c\u8fd9\u662f\u4ece\u6570\u5b66\u65b9\u6cd5\u4e0a\u76f4\u63a5\u89c2\u5bdffilter\uff0c\u770b\u4ec0\u4e48\u6700\u80fd\u201c\u523a\u6fc0\u201d\u4e00\u4e2afilter\uff0c\u7528\u201d\u68af\u5ea6\u4e0a\u5347\u201c\u6700\u80fd\u4f53\u73b0\u8fd9\u79cd\u601d\u8def\uff1a\u628aoutput\u5f53\u6210loss\uff0c\u7528\u68af\u5ea6\u4e0a\u5347\uff08\u6bcf\u6b21\u4fee\u6539input_image\uff09\u8bad\u7ec3\u51fa\u6765\u7684output\u5c31\u662f\u8fd9\u4e2afilter\u7684\u6781\u7aef\u60c5\u51b5\uff0c\u53ef\u4ee5\u8ba4\u4e3a\u8fd9\u4e2afilter\u5176\u5b9e\u662f\u5728\u63d0\u53d6\u4ec0\u4e48\uff08responsive to\uff09\uff1afrom keras.applications import VGG16\nfrom keras import backend as K\nmodel = VGG16(weights=&#39;imagenet&#39;, include_top=False)\nlayer_name = &#39;block3_conv1&#39;\nfilter_index = 0\nlayer_output = model.get_layer(layer_name).output\nloss = K.mean(layer_output[:, :, :, filter_index])  # output\u5c31\u662floss\n\ngrads = K.gradients(loss, model.input)[0] # \u5bf9input\u6c42\u5fae\u5206\ngrads /= (K.sqrt(K.mean(K.square(grads))) + 1e-5)\n\niterate = K.function([model.input], [loss, grads])\nimport numpy as np\n# \u7406\u89e3\u9759\u6001\u56fe\u7684\u7528\u6cd5\nloss_value, grads_value = iterate([np.zeros((1, 150, 150, 3))])\n\ninput_img_data = np.random.random((1, 150, 150, 3)) * 20 + 128.\nstep = 1.\nfor i in range(40):\n    loss_value, grads_value = iterate([input_img_data])\n    input_img_data += grads_value * step  # \u68af\u5ea6\u4e0a\u5347\n\n\u6309\u4e0a\u8ff0\u4ee3\u7801\u7684\u601d\u8def\u7ed3\u6784\u5316\u8f93\u51fa\u5e76\u7ed8\u56fe\uff1a\u4ece\u7ebf\u6761\u5230\u7eb9\u7406\u5230\u7269\u4ef6\uff08\u773c\u775b\uff0c\u6bdb\u76ae\uff0c\u53f6\u5b50\uff09\neach layer in a convnet learns a collection of filters such that their inputs can be expressed as a combination of the filters.\n\nThis is similar to how the Fourier transform decomposes signals onto a bank of cosine functions.\n\u7528\u5085\u91cc\u53f6\u53d8\u6362\u6765\u7c7b\u6bd4\u5377\u79ef\u7f51\u7edc\u6bcf\u4e00\u5c42\u5c31\u662f\u628ainput\u8868\u793a\u6210\u4e00\u7cfb\u5217\u7279\u5f81\u7684\u7ec4\u5408\u3002Visualizing heatmaps of class activation\nwhich parts of a given image led a convnet to its final classification decision. \u5373\u56fe\u50cf\u6709\u54ea\u4e00\u90e8\u5206\u5bf9\u6700\u7ec8\u7684\u51b3\u7b56\u8d77\u4e86\u4f5c\u7528\u3002\nclass activation map (CAM) visualization,\nGrad-CAM: Visual Explanations from Deep Networks via Gradient-based Localization.\u201d\n\n\nyou\u2019re weighting a spatial map of \u201chow intensely the input image activates different channels\u201d by \u201chow important each channel is with regard to the class,\u201d resulting in a spatial map of \u201chow intensely the input image activates the class.\n\u89e3\u8bfb\u4e0a\u9762\u8fd9\u53e5\u8bdd\uff1a\u4e0d\u540cchannels\uff08\u7279\u5f81\uff09\u5bf9\u56fe\u50cf\u7684\u6fc0\u6d3b\u7684\u5f3a\u5ea6\n+\n\u6bcf\u4e2a\u7279\u5f81\u5bf9(\u9274\u5b9a\u4e3a\uff09\u8be5\u7c7b\u522b\u7684\u91cd\u8981\u7a0b\u5ea6\n=\n\u8be5\u201c\u7c7b\u522b\u201d\u5bf9\u56fe\u50cf\u7684\u6fc0\u6d3b\u7684\u5f3a\u5ea6\u4e00\u5f20\u4e24\u53ea\u4e9a\u6d32\u8c61\u7684\u4f8b\u56fe\uff0c\u4f7f\u7528VGG16\u6765\u505a\u5206\u7c7b\uff0c\u5f97\u523092.5%\u7684\u7f6e\u4fe1\u5ea6\u7684\u4e9a\u6d32\u8c61\u7684\u5224\u65ad\uff0c\u4e3a\u4e86visualize\u54ea\u4e2a\u90e8\u5206\u624d\u662f\u201c\u6700\u50cf\u4e9a\u6d32\u8c61\u201d\u7684\uff0c\u4f7f\u7528Grad-CAM\u5904\u7406\uff1afrom keras.applications.vgg16 import VGG16\nmodel = VGG16(weights=&#39;imagenet&#39;)\nafrican_e66lephant_output = model.output[:, 386]  # \u4e9a\u6d32\u8c61\u5728IMGNET\u7684\u7c7b\u522b\u662f386\nlast_conv_layer = model.get_layer(&#39;block5_conv3&#39;) # top conv layer\n\ngrads = K.gradients(african_elephant_output, last_conv_layer.output)[0] \npooled_grads = K.mean(grads, axis=(0, 1, 2))\niterate = K.function([model.input],\n                     [pooled_grads, last_conv_layer.output[0]])\npooled_grads_value, conv_layer_output_value = iterate([x])\nfor i in range(512):\n    conv_layer_output_value[:, :, i] *= pooled_grads_value[i]\nheatmap = np.mean(conv_layer_output_value, axis=-1)\n\n\u53e0\u52a0\u5230\u539f\u56fe\u4e0a\u53bb\uff08\u7528cv2\u878d\u5408\u4e24\u5f20\u56fe\u7247\uff0c\u5373\u76f8\u540c\u7ef4\u5ea6\u7684\u6570\u7ec4\u4ee5\u4e0d\u540c\u6743\u91cd\u9010\u50cf\u7d20\u76f8\u52a0\uff09\uff1a", "categories": [{"name": "posts", "slug": "posts", "permalink": "/category/posts/"}], "tags": [{"name": "deep learning", "slug": "deep learning", "permalink": "/tag/deep%20learning/"}, {"name": "\u6df1\u5ea6\u5b66\u4e60", "slug": "\u6df1\u5ea6\u5b66\u4e60", "permalink": "/tag/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/"}, {"name": "keras", "slug": "keras", "permalink": "/tag/keras/"}, {"name": "cv", "slug": "cv", "permalink": "/tag/cv/"}, {"name": "nlp", "slug": "nlp", "permalink": "/tag/nlp/"}, {"name": "tensorflow", "slug": "tensorflow", "permalink": "/tag/tensorflow/"}, {"name": "gan", "slug": "gan", "permalink": "/tag/gan/"}, {"name": "lstm", "slug": "lstm", "permalink": "/tag/lstm/"}, {"name": "language mode", "slug": "language mode", "permalink": "/tag/language%20mode/"}, {"name": "rnn", "slug": "rnn", "permalink": "/tag/rnn/"}, {"name": "heatmap", "slug": "heatmap", "permalink": "/tag/heatmap/"}, {"name": "dropout", "slug": "dropout", "permalink": "/tag/dropout/"}, {"name": "machine learning", "slug": "machine learning", "permalink": "/tag/machine%20learning/"}]}, {"title": "\u300aDeep Learning with Python\u300b\u7b14\u8bb0[3]", "date": "2021-09-18T17:25:00-00.00", "path": "/archives/Deep-Learning-with-Python-Notes-3/", "text": "Fundamentals of machine learning\n\nSupervised learning\nbinary classification\nmulticlass classificaiton\nscalar regression\nvector regression\uff08\u6bd4\u5982bounding-box)\nSequence generation (\u6458\u8981\uff0c\u7ffb\u8bd1...)\nSyntax tree prediction\nObject detection (\u4e00\u822cbounding-box\u7684\u5750\u6807\u4ecd\u7136\u662f\u56de\u5f52\u51fa\u6765\u7684)\nImage segmentation\n\n\nUnsupervised learing\n\u662f\u6570\u636e\u5206\u6790\u7684\u57fa\u7840\uff0c\u5728\u76d1\u7763\u5b66\u4e60\u524d\u4e5f\u5e38\u5e38\u9700\u8981\u7528\u65e0\u76d1\u7763\u5b66\u4e60\u6765\u66f4\u597d\u5730\u201c\u7406\u89e3\u201d\u6570\u636e\u96c6\n\u4e3b\u8981\u6709\u964d\u7ef4(Dimensionality reduction)\u548c\u805a\u7c7b(clustering)\n\n\nSelf-supervised learning\n\u5176\u5b9e\u8fd8\u662f\u76d1\u7763\u5b66\u4e60\uff0c\u56e0\u4e3a\u5b83\u4ecd\u9700\u8981\u4e0e\u67d0\u4e2atarget\u505a\u6bd4\u8f83\n\u5f80\u5f80\u534a\u76d1\u7763\uff08\u81ea\u76d1\u7763\uff09\u5b66\u4e60\u4ecd\u7136\u6709\u5c0f\u91cf\u6709\u6807\u7b7e\u6570\u636e\u96c6\uff0c\u5728\u6b64\u57fa\u7840\u4e0a\u8bad\u7ec3\u7684\u4e0d\u5b8c\u5584\u7684model\u7528\u6765\u5bf9\u65e0\u6807\u7b7e\u7684\u6570\u636e\u8fdb\u884c\u6253\u6807\uff0c\u5faa\u73af\u4e2d\u5bf9\u65e0\u6807\u7b7e\u6570\u636e\u6253\u6807\u7684\u53ef\u9760\u5ea6\u5c31\u8d8a\u6765\u8d8a\u9ad8\uff0c\u8fd9\u6837\u603b\u4f53\u6570\u636e\u96c6\u7684\u53ef\u9760\u5ea6\u4e5f\u8d8a\u6765\u8d8a\u9ad8\u4e86\u3002\u6709\u70b9\u50cf\u751f\u6210\u5bf9\u6297\u7f51\u7edc\u91cc\u751f\u6210\u5668\u548c\u8fa8\u522b\u5668\u4e00\u540c\u5728\u8bad\u7ec3\u8fc7\u7a0b\u4e2d\u5b8c\u5584\u3002\nautoencoders\n\n\nReinforcement learning\nan agent receives information about its environment and learns to choose actions that will maximize some reward.\n\u53ef\u4ee5\u7528\u8bad\u7ec3\u72d7\u6765\u7406\u89e3\n\u5de5\u4e1a\u754c\u7684\u5e94\u7528\u9664\u4e86\u6e38\u620f\u5c31\u662f\u673a\u5668\u4eba\u4e86\n\n\n\nData preprocessing\n\nvectorization\nnormalization (small, homogenous)\nhandling missing values\n\u9664\u975e0\u6709\u7279\u522b\u7684\u542b\u4e49\uff0c\u4e0d\u7136\u4e00\u822c\u53ef\u4ee5\u5bf9\u7f3a\u5931\u503c\u88650\n\u4f60\u4e0d\u80fd\u4fdd\u8bc1\u6d4b\u8bd5\u96c6\u6ca1\u6709\u7f3a\u5931\u503c\uff0c\u5982\u679c\u8bad\u7ec3\u96c6\u6ca1\u770b\u5230\u8fc7\u7f3a\u5931\u503c\uff0c\u90a3\u4e48\u5c06\u4e0d\u4f1a\u5b66\u5230\u5ffd\u7565\u7f3a\u5931\u503c\n\u590d\u5236\u4e00\u4e9b\u8bad\u7ec3\u6570\u636e\u5e76\u4e14\u968f\u673adrop\u6389\u4e00\u4e9b\u7279\u5f81\n\n\n\n\nfeature extraction\nmaking a problem easier by expressing it in a simpler way. It usually requires understanding the problem in depth.\nBefore deep learning, feature engineering used to be critical, because classical shallow algorithms didn\u2019t have hypothesis spaces rich enough to learn useful features by themselves. (\u53c8\u89c1\u5047\u8bbe\u7a7a\u95f4)\n\u4f46\u662f\u597d\u7684\u7279\u5f81\u4ecd\u7136\u80fd\u8ba9\u4f60\u5728\u5904\u7406\u95ee\u9898\u4e0a\u66f4\u4f18\u96c5\u3001\u66f4\u7701\u8d44\u6e90\uff0c\u4e5f\u80fd\u51cf\u5c0f\u5bf9\u6570\u636e\u96c6\u89c4\u6a21\u7684\u4f9d\u8d56\u3002\n\n\n\nOverfitting and underfitting\n\nMachine learning is the tension between optimization and generalization.\noptimization\u8981\u6c42\u4f60\u5728\u8bad\u7ec3\u8fc7\u7684\u6570\u636e\u96c6\u4e0a\u80fd\u8fbe\u5230\u6700\u597d\u7684\u6548\u679c\ngeneralization\u5219\u5e0c\u671b\u4f60\u5728\u6ca1\u89c1\u8fc7\u7684\u6570\u636e\u4e0a\u6709\u597d\u7684\u6548\u679c\n\u5982\u679c\u8bad\u7ec3\u96c6\u4e0aloss\u5c0f\uff0c\u6d4b\u8bd5\u96c6\u4e0a\u4e5f\u5c0f\uff0c\u8bf4\u660e\u8fd8\u6709\u4f18\u5316(optimize)\u7684\u4f59\u5730 -&gt; underfitting\u770bloss\njust keep training\n\n\n\u5982\u679c\u9a8c\u8bc1\u96c6\u4e0ageneralization stop improving(\u6cdb\u5316\u4e0d\u518d\u8fdb\u6b65\uff0c\u4e00\u822c\u770b\u8861\u91cf\u6307\u6807\uff0c\u6bd4\u5982\u51c6\u786e\u7387) -&gt; overfitting\n\n\u89e3\u51b3overfitting\u7684\u601d\u8def\uff1a\nthe best solution is get more trainging data\nthe simple way is to reduce the size of the model\n\u6a21\u578b\u5bb9\u91cf(capacity)\u8db3\u591f\u5927\uff0c\u5c31\u8db3\u591f\u5bb9\u6613\u8bb0\u4f4finput\u548ctarget\u7684\u6620\u5c04\uff0c\u6ca1\u63a8\u7406\u4ec0\u4e48\u4e8b\u4e86\n\n\nadd constraints -&gt; weight regularization\nadd dropout\n\nRegularization\nOccam\u2019s razor\ngiven two explanations for something, the explanation most likely to be correct is the simplest one\u2014the one that makes fewer assumptions.\n\u5373\u4e3a\u4f20\u8bf4\u4e2d\u5982\u65e0\u5fc5\u8981\uff0c\u52ff\u589e\u5b9e\u4f53\u7684\u5965\u5361\u59c6\u5243\u5200\u539f\u7406\uff0c\u8fd9\u662f\u5728\u827a\u672f\u521b\u4f5c\u9886\u57df\u7684\u7ffb\u8bd1\uff0c\u6211\u4eec\u8fd9\u91cc\u8fd8\u662f\u76f4\u8bd1\u7684\u597d\uff0c\u5373\u80fd\u89e3\u91ca\u4e00\u4ef6\u4e8b\u7684\u5404\u79cd\u7406\u89e3\u4e2d\uff0c\u8d8a\u7b80\u5355\u7684\uff0c\u5047\u8bbe\u6761\u4ef6\u8d8a\u5c11\u7684\uff0c\u5f80\u5f80\u662f\u6700\u6b63\u786e\u7684\uff0c\u5f15\u7533\u5230\u673a\u5668\u5b66\u4e60\uff0c\u5c31\u662f\u5982\u4f55\u5b9a\u4e49\u4e00\u4e2asimple modelA simple model in this context is:\na model where the distribution of parameter values has less entropy\nor a model with fewer parameters\n\n\u5b9e\u64cd\u5c31\u662f\uff0c\u5c31\u662f\u8feb\u4f7f\u9009\u62e9\u90a3\u4e9b\u503c\u6bd4\u8f83\u5c0f\u7684weights\uff0cwhich makes the distribution of weight values more regular. This is called weight regularization\u3002\u8fd9\u4e2a\u89e3\u91ca\u662f\u6211\u76ee\u524d\u770b\u5230\u7684\u6700regularization\u8fd9\u4e2a\u540d\u5b57\u6700\u597d\u7684\u89e3\u91ca\uff0c\u201c\u6b63\u5219\u5316\u201d\u4e09\u4e2a\u5b57\u90fd\u8ba4\u8bc6\uff0c\u6839\u672c\u6ca1\u4eba\u77e5\u9053\u8fd9\u4e09\u4e2a\u5b57\u662f\u4ec0\u4e48\u610f\u601d\uff0c\u7ffb\u8bd1\u4e86\u8ddf\u6ca1\u756a\u4e00\u6837\uff0c\u800c\u4f7f\u5206\u5e03\u66f4\u201c\u5e38\u89c4\u5316\uff0c\u6b63\u89c4\u5316\u201d\uff0c\u597d\u50cf\u66f4\u6709\u89e3\u91ca\u6027\u3002\u522b\u7684\u6559\u6750\u91cc\u8fd8\u4f1a\u544a\u8bc9\u4f60\u8fd9\u91cc\u662f\u5bf9\u5927\u7684\u6743\u91cd\u7684\u60e9\u7f5a\uff08\u8bbe\u8ba1\u635f\u5931\u51fd\u6570\u52a0\u4e0a\u81ea\u8eab\u6743\u91cd\u540e\uff0c\u6743\u91cd\u8d8a\u5927\uff0closs\u4e5f\u5c31\u8d8a\u5927\uff0c\u8fd9\u5c31\u662f\u5bf9\u5927\u6743\u91cd\u7684\u60e9\u7f5a\uff09\nL1 regularization\u2014The cost added is proportional to the absolute value of the weight coefficients (the L1 norm of the weights).\nL2 regularization\u2014The cost added is proportional to the square of the value of the weight coefficients (the L2 norm of the weights).\n\nL2 regularization is also called weight decayin the context of neural networks. Don\u2019t let the different name confuse you: weight decay is mathematically the same as L2 regularization.\n\u53ea\u9700\u8981\u5728\u8bad\u7ec3\u65f6\u6dfb\u52a0\u6b63\u5219\u5316\nDropout\nrandomly dropping out (setting to zero) a number of output features of the layer during training.dropout\u7684\u4f5c\u8005Geoff Hinton\u89e3\u91cadropout\u7684\u7075\u611f\u6765\u6e90\u4e8e\u94f6\u884c\u529e\u4e8b\u51fa\u7eb3\u7684\u4e0d\u505c\u66f4\u6362\u548c\u79fb\u52a8\u7684\u9632\u6b3a\u8bc8\u673a\u5236\uff0c\u53ef\u80fd\u8ba4\u4e3a\u4e00\u6b21\u6b3a\u8bc8\u7684\u6210\u529f\u5b9e\u65bd\u9700\u8981\u5458\u5de5\u7684\u914d\u5408\uff0c\u6240\u4ee5\u5c31\u5c3d\u91cf\u964d\u4f4e\u8fd9\u79cd\u914d\u5408\u7684\u53ef\u80fd\u6027\u3002\u4e8e\u662f\u4ed6\u4e3a\u4e86\u9632\u6b62\u795e\u7ecf\u5143\u4e5f\u80fd\u805a\u5728\u4e00\u8d77\u201d\u5bc6\u8c0b\u201d\uff0c\u5c1d\u8bd5\u968f\u673a\u53bb\u6389\u4e00\u4e9b\u795e\u7ecf\u5143\u3002\u4ee5\u53ca\u5bf9\u8f93\u51fa\u6dfb\u52a0\u566a\u58f0\uff0c\u8ba9\u6a21\u578b\u66f4\u96be\u8bb0\u4f4f\u67d0\u4e9bpatten\u3002The universal workflow of machine learning\n\nDefining the problem and assembling a dataset\nWhat will your input data be?\nWhat are you trying to predict?\nWhat type of problem are you facing?\nYou hypothesize that your outputs can be predicted given your inputs.\nYou hypothesize that your available data is sufficiently informative to learn the relationship between inputs and outputs.\nJust because you\u2019ve assembled exam- ples of inputs X and targets Y doesn\u2019t mean X contains enough information to predict Y.\n\n\nChoosing a measure of success\naccuracy? Precision and recall? Customer-retention rate?\nbalanced-classification problems,\naccuracy and area under the receiver operating characteristic curve (ROC AUC)\n\n\nclass-imbalanced problems\nprecision and recall.\n\n\nranking problems or multilabel classification\nmean average precision\n\n\n...\n\n\nDeciding on an evaluation protocol\nMaintaining a hold-out validation set\u2014The way to go when you have plenty of data\nDoing K-fold cross-validation\u2014The right choice when you have too few samples for hold-out validation to be reliable\nDoing iterated K-fold validation\u2014For performing highly accurate model evaluation when little data is available\n\n\nPreparing your data\ntensor\u5316\uff0c\u5411\u91cf\u5316\uff0c\u5f52\u4e00\u5316\u7b49\nmay do some feature engineering\n\n\nDeveloping a model that does better than a baseline\nbaseline:\n\u57fa\u672c\u4e0a\u662f\u7528\u7eaf\u968f\u673a(\u6bd4\u5982\u624b\u5199\u6570\u5b57\u8bc6\u522b\uff0c\u968f\u673a\u731c\u6d4b\u4e3a10%)\uff0c\u548c\u7eaf\u76f8\u5173\u6027\u63a8\u7406\uff08\u6bd4\u5982\u7528\u524d\u51e0\u5929\u7684\u6e29\u5ea6\u9884\u6d4b\u4eca\u5929\u7684\u6e29\u5ea6\uff0c\u56e0\u4e3a\u6e29\u5ea6\u53d8\u5316\u662f\u8fde\u7eed\u7684\uff09\uff0c\u4e0d\u7528\u4efb\u4f55\u673a\u5668\u5b66\u4e60\u505a\u51fabaseline\n\n\nmodel:\nLast-layer activation\nsigmoid, relu\u7cfb\u5217\uff0c \u7b49\u7b49\n\n\nLoss function\n\u76f4\u63a5\u7684\u9884\u6d4b\u503c\u771f\u503c\u7684\u5dee\uff0c\u5982MSE\n\u5ea6\u91cf\u4ee3\u7406\uff0c\u5982crossentropy\u662fROC AUC\u7684proxy metric\n\n\n\n\nOptimization configuration\nWhat optimizer will you use? What will its learning rate be? In most cases, it\u2019s safe to go with rmsprop and its default learning rate.\n\n\nScaling up: developing a model that overfits\n\u901a\u8fc7\u589e\u52a0layers, \u589e\u52a0capacity\uff0c\u589e\u52a0training epoch\u6765\u52a0\u901foverfitting\uff0c\u4ece\u800c\u518d\u901a\u8fc7\u51cf\u6a21\u578b\u548c\u52a0\u7ea6\u675f\u7b49\u4f18\u5316\n\n\nRegularizing your model and tuning your hyperparameters\nAdd dropout.\nTry different architectures: add or remove layers.\nAdd L1 and/or L2 regularization.\nTry different hyperparameters (such as the number of units per layer or the learning rate of the optimizer) to find the optimal configuration.\nOptionally, iterate on feature engineering: add new features, or remove features that don\u2019t seem to be informative.\n\n\n\n\n\n\n\n\n  Problem type\n  Last-layer activation\n  Loss function\n\n\n\n\n  Binary classification\n  sigmoid\n  binary_crossentropy\n\n\n  Multiclass, single-label classification\n  softmax\n  categorical_crossentropy\n\n\n  Multiclass, multilabel classification\n  sigmoid\n  binary_crossentropy\n\n\n  Regression to arbitrary values\n  None\n  mse\n\n\n  Regression to values between 0 and 1\n  sigmoi\n  mse or binary_crossentropy\n\n\n\n", "categories": [{"name": "posts", "slug": "posts", "permalink": "/category/posts/"}], "tags": [{"name": "deep learning", "slug": "deep learning", "permalink": "/tag/deep%20learning/"}, {"name": "\u6df1\u5ea6\u5b66\u4e60", "slug": "\u6df1\u5ea6\u5b66\u4e60", "permalink": "/tag/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/"}, {"name": "keras", "slug": "keras", "permalink": "/tag/keras/"}, {"name": "cv", "slug": "cv", "permalink": "/tag/cv/"}, {"name": "nlp", "slug": "nlp", "permalink": "/tag/nlp/"}, {"name": "tensorflow", "slug": "tensorflow", "permalink": "/tag/tensorflow/"}, {"name": "gan", "slug": "gan", "permalink": "/tag/gan/"}, {"name": "lstm", "slug": "lstm", "permalink": "/tag/lstm/"}, {"name": "language mode", "slug": "language mode", "permalink": "/tag/language%20mode/"}, {"name": "rnn", "slug": "rnn", "permalink": "/tag/rnn/"}, {"name": "heatmap", "slug": "heatmap", "permalink": "/tag/heatmap/"}, {"name": "dropout", "slug": "dropout", "permalink": "/tag/dropout/"}, {"name": "machine learning", "slug": "machine learning", "permalink": "/tag/machine%20learning/"}]}, {"title": "\u300aDeep Learning with Python\u300b\u7b14\u8bb0[2]", "date": "2021-09-15T00:00:00-00.00", "path": "/archives/Deep-Learning-with-Python-Notes-2/", "text": "Getting started with neural networks\nAnatomy of a neural network\n\nLayers, which are combined into a network (or model)\nlayers: \u5e38\u89c1\u7684\u6bd4\u5982\u5377\u79ef\u5c42\uff0c\u6c60\u5316\u5c42\uff0c\u5168\u8fde\u63a5\u5c42\u7b49\nmodels: layers\u6784\u6210\u7684\u7f51\u7edc\uff0c\u6216\u591a\u4e2alayers\u6784\u6210\u7684\u6a21\u5757\uff08\u7528\u6a21\u5757\u7ec4\u6210\u7f51\u7edc\uff09\nTwo-branch networks\nMultihead networks\nInception blocks, residual blocks etc.\n\n\nThe topology of a network defines a hypothesis space\n\u672c\u4e66\u53cd\u590d\u5f3a\u8c03\u7684\u5c31\u662f\u8fd9\u4e2ahypothesis space\uff0c\u4e00\u5b9a\u8981\u7406\u89e3\u8fd9\u4e2a\u601d\u7ef4\uff1a\nBy choosing a network topology, you constrain your space of possibilities (hypothesis space) to a specific series of tensor operations, mapping input data to output data.\uff08network\u7684\u9009\u62e9\u7ea6\u675f\u4e86tensor\u53d8\u6362\u7684\u6b65\u9aa4\uff09\n\u6240\u4ee5\u5982\u679c\u9009\u62e9\u4e86\u4e0d\u597d\u7684network\uff0c\u53ef\u80fd\u5bfc\u81f4\u4f60\u5728\u9519\u8bef\u7684hyposhesis space\u91cc\u641c\u7d22\uff0c\u4ee5\u81f4\u4e8e\u6548\u679c\u4e0d\u597d\u3002\n\n\n\n\nThe input data and corresponding targets\nThe loss function (objective function), which defines the feedback signal used for learning\nThe quantity that will be minimized during training.\nIt represents a measure of success for the task at hand.\n\u591a\u5934\u7f51\u7edc\u6709\u591a\u4e2aloss function\uff0c\u4f46\u57fa\u4e8egradient-descent\u7684\u7f51\u7edc\u53ea\u5141\u8bb8\u6709\u4e00\u4e2a\u6807\u91cf\u7684loss\uff0c\u56e0\u6b64\u9700\u8981\u628a\u5b83\u5408\u5e76\u8d77\u6765\uff08\u76f8\u52a0\uff0c\u5e73\u5747...\uff09\n\n\nThe optimizer, which determines how learning proceeds\nDetermines how the network will be updated based on the loss function.\nIt implements a specific variant of stochastic gradient descent (SGD).\n\n\n\nClassifying movie reviews: a binary classification example\n\u4e00\u4e2a\u4e8c\u5143\u5206\u7c7b\u7684\u4f8b\u5b50\u60c5\u611f\u5206\u6790/\u60c5\u7eea\u5224\u65ad\uff0c\u6570\u636e\u6e90\u662fIMDB\u7684\u5f71\u8bc4\u6570\u636e.\u7406\u89e3hidden\u7684\u7ef4\u5ea6how much freedom you\u2019re allowing the network to have when learning internal representations. \u5373\u5b66\u4e60\u8868\u793a\uff08\u522b\u7684\u5730\u65b9\u901a\u5e38\u53eb\u63d0\u53d6\u7279\u5f81\uff09\u7684\u81ea\u7531\u5ea6\u3002\u76ee\u524d\u63d0\u51fa\u4e86\u67b6\u6784\u7f51\u7edc\u7684\u65f6\u5019\u7684\u4e24\u4e2a\u95ee\u9898\uff1a\n\u591a\u5c11\u4e2a\u9690\u5c42\n\u9690\u5c42\u9700\u8981\u591a\u5c11\u4e2a\u795e\u7ecf\u5143\uff08\u5373\u7ef4\u5ea6\uff09\n\n\u540e\u9762\u7684\u7ae0\u8282\u4f1a\u4ecb\u7ecd\u4e00\u4e9b\u539f\u5219\u3002\u6fc0\u6d3b\u51fd\u6570\u674e\u5b8f\u6bc5\u7684\u8bfe\u7a0b\u91cc\uff0c\u4ece\u7528\u6574\u6d41\u51fd\u6570\u6765\u903c\u8fd1\u975e\u7ebf\u6027\u65b9\u7a0b\u7684\u65b9\u5f0f\u6765\u5f15\u5165\u6fc0\u6d3b\u51fd\u6570\uff0c\u4e5f\u5c31\u662f\u8bf4\u5728\u674e\u5b8f\u6bc5\u7684\u8bfe\u7a0b\u91cc\uff0c\u6fc0\u6d3b\u51fd\u6570\u662f\u56e0\uff0c\u63a8\u51fa\u6765\u7684\u516c\u5f0f\u662f\u679c\uff0c\u5f53\u7136\u4e00\u822c\u7684\u6559\u6750\u90fd\u4e0d\u662f\u8fd9\u4e2a\u89d2\u5ea6\uff0c\u90fd\u662f\u6709\u4e86\u7ebf\u6027\u65b9\u7a0b\uff0c\u518d\u53bb\u544a\u8bc9\u4f60\uff0c\u8fd9\u6837\u8fd8\u4e0d\u591f\uff0c\u9700\u8981\u4e00\u4e2aactivation\u3002\u672c\u4e66\u4e5f\u4e00\u6837\uff0c\u544a\u8bc9\u4f60\uff0c\u5982\u679c\u53ea\u6709wX+b\uff0c\u90a3\u4e48\u53ea\u6709\u7ebf\u6027\u53d8\u6362\uff0c\u8fd9\u6837\u4f1a\u5bfc\u81f4\u5bf9hypothesis space\u7684\u6781\u5927\u7684\u9650\u5236\uff0c\u4e3a\u4e86\u6269\u5c55\u5b83\u7684\u7a7a\u95f4\uff0c\u5c31\u5f15\u5165\u4e86\u975e\u7ebf\u6027\u7684\u540e\u7eed\u5904\u7406\u3002\u603b\u4e4b\uff0c\u90fd\u662f\u5728\u81ea\u5df1\u7684\u903b\u8f91\u4f53\u7cfb\u5185\u7684\u3002\u672c\u4e66\u7684\u903b\u8f91\u4f53\u7cfb\u5c31\u662fhypothesis space\uff0c\u4f60\u60f3\u8981\u6709\u89e3\uff0c\u5c31\u662f\u5728\u8fd9\u4e2a\u7a7a\u95f4\u91cc\u3002\u7f51\u7edc\u7ed3\u6784from keras import models\nfrom keras import layers\nmodel = models.Sequential()\nmodel.add(layers.Dense(16, activation=&#39;relu&#39;, input_shape=(10000,)))\nmodel.add(layers.Dense(16, activation=&#39;relu&#39;))\nmodel.add(layers.Dense(1, activation=&#39;sigmoid&#39;))\n\nentropyCrossentropy is a quantity from the field of Information Theory\uff08\u4fe1\u606f\u8bba\uff09 that measures the distance between probability distributions\u3002in this case, between the ground-truth distribution and your predictions.keras\u98ce\u683c\u7684\u8bad\u7ec3\u5176\u5b9e\u5c31\u662f\u6a21\u4eff\u4e86scikit learn\u7684\u98ce\u683c\u3002\u5bf9\u5feb\u901f\u5b9e\u9a8c\u975e\u5e38\u53cb\u597d\uff0c\u7f3a\u70b9\u5c31\u662f\u5c01\u88c5\u8fc7\u4e8e\u4e25\u91cd\uff0c\u4e0d\u5229\u4e8e\u8c03\u8bd5\uff0c\u4f46\u8fd9\u5176\u5b9e\u4e0d\u662f\u95ee\u9898\uff0c\u8c01\u4e5f\u4e0d\u4f1a\u53ea\u7528keras\u3002# \u6f14\u793a\u7528\u7c7b\u540d\u548c\u5b57\u7b26\u4e32\u5206\u522b\u505a\u53c2\u6570\u7684\u65b9\u5f0f\nmodel.compile(optimizer=&#39;rmsprop&#39;,\n            loss=&#39;binary_crossentropy&#39;,\n            metrics=[&#39;accuracy&#39;])\n\nfrom keras import optimizers\nmodel.compile(optimizer=optimizers.RMSprop(lr=0.001),\n            loss=&#39;binary_crossentropy&#39;,\n            metrics=[&#39;accuracy&#39;])\n\nfrom keras import losses\nfrom keras import metrics\nmodel.compile(optimizer=optimizers.RMSprop(lr=0.001),\n            loss=losses.binary_crossentropy,\n            metrics=[metrics.binary_accuracy])\n\nmodel.compile(optimizer=&#39;rmsprop&#39;,\n              loss=&#39;binary_crossentropy&#39;,\n              metrics=[&#39;acc&#39;])\n\n# train\nhistory = model.fit(partial_x_train,\n                    partial_y_train,\n                    epochs=20,\n                    batch_size=512,\n                    validation_data=(x_val, y_val))\n\n\u540e\u7eed\u4f18\u5316\uff0c\u5c31\u662f\u5bf9\u6bd4train\u548cvalidate\u9636\u6bb5\u7684loss\u548caccuracy\uff0c\u627e\u5230overfit\u7684\u8282\u70b9\uff08\u6bd4\u5982\u662f\u7b2cN\u8f6e\uff09\uff0c\u7136\u540e\u91cd\u65b0\u8bad\u7ec3\u5230\u7b2cN\u8f6e\uff08\u6216\u8005\u76f4\u63a5\u7528\u7b2cN\u8f6e\u751f\u6210\u7684\u6a21\u578b\uff0c\u5982\u679c\u6709\uff09\uff0c\u7528\u8fd9\u4e2a\u6a21\u578b\u6765\u9884\u6d4b\u6ca1\u6709\u4eba\u5de5\u6807\u6ce8\u7684\u6570\u636e\u3002\u6838\u5fc3\u5c31\u662f\u8981\u8bad\u7ec3\u5230\u660e\u663e\u7684overfit\u4e3a\u6b62\u3002\u8fd9\u662f\u7b2c\u4e00\u4e2a\u4f8b\u5b50\u7684\u5185\u5bb9\uff0c\u6240\u4ee5\u662f\u544a\u8bc9\u4f60\u600e\u4e48\u7528\u8fd9\u4e2a\u7b80\u5355\u7684\u7f51\u7edc\u6765\u8fdb\u884c\u9884\u6d4b\uff0c\u800c\u4e0d\u662f\u7acb\u5373\u7740\u773c\u600e\u4e48\u53bb\u89e3\u51b3overfit.\u7b2c\u4e00\u4e2a\u5c0f\u7ed3\n\u6570\u636e\u9700\u8981\u9884\u5904\u7406\u6210tensor, \u4e86\u89e3\u51e0\u79cdtensor\u5316\uff0c\u6216vector\u5316\u7684\u65b9\u5f0f\n\u5806\u53e0\u5168\u8fde\u63a5\u7f51\u7edc(Dense)\uff0c\u4ee5\u53caactivation\uff0c\u5c31\u80fd\u89e3\u51b3\u5f88\u591a\u5206\u7c7b\u95ee\u9898\n\u4e8c\u5143\u5206\u7c7b\u7684\u95ee\u9898\u901a\u5e38\u5728Dense\u540e\u63a5\u4e00\u4e2asigmoid\u51fd\u6570\n\u5f15\u5165\u4e8c\u5143\u4ea4\u53c9\u71b5(BCE)\u4f5c\u4e3a\u4e8c\u5143\u5206\u7c7b\u95ee\u9898\u7684loss\n\u7528\u4e86rmsprop\u4f18\u5316\u5668\uff0c\u6682\u65f6\u6ca1\u6709\u8fc7\u591a\u4ecb\u7ecd\u3002\u8fd9\u4e9b\u4f18\u5316\u5668\u90fd\u662f\u4e3a\u4e86\u89e3\u51b3\u80fd\u4e0d\u80fd\u627e\u5230\u5c40\u90e8\u6781\u503c\u800c\u8fdb\u884c\u7684\u52aa\u529b\uff0c\u5177\u4f53\u53ef\u770b\u4e0a\u4e00\u7bc7\u674e\u5b8f\u6bc5\u7684\u7b14\u8bb0\n\u4f7f\u7528overfit\u4e4b\u524d\u7684\u90a3\u4e00\u4e2a\u6a21\u578b\u6765\u505a\u9884\u6d4b\n\nClassifying newswires: a multiclass classification example\n\u8fd9\u6b21\u7528\u8def\u900f\u793e\u7684\u65b0\u95fb\u6765\u505a\u591a\u5206\u7c7b\u7684\u4f8b\u5b50\uff0c\u7ed9\u6bcf\u7bc7\u65b0\u95fb\u6807\u8bb0\u7c7b\u522b\u3002\u9884\u5904\u7406\uff0c\u4e00\u4e9b\u8981\u70b9:\n\u4e0d\u4f1a\u91c7\u7528\u6240\u6709\u7684\u8bcd\u6c47\uff0c\u6240\u4ee5\u9884\u5904\u7406\u65f6\uff0c\u6839\u636e\u8bcd\u9891\uff0c\u53ea\u9009\u4e86\u524d1000\u4e2a\u8bcd\n\u7528\u7d22\u5f15\u6765\u5b9e\u73b0\u6587\u5b57-\u6570\u5b57\u7684\u5bf9\u5e94\n\u7528one-hot\u6765\u5b9e\u73b0\u6570\u5b57-\u5411\u91cf\u7684\u5bf9\u5e94\n\u7406\u89e3\u4ec0\u4e48\u662f\u5e8f\u5217\uff08\u5176\u5b9e\u5c31\u662f\u4e00\u53e5\u8bdd\uff09\n\u6240\u4ee5\u53e5\u5b50\u6709\u957f\u6709\u77ed\uff0c\u4e3a\u4e86\u77e9\u9635\u7684\u6279\u91cf\u8ba1\u7b97\uff08\u5373\u591a\u4e2a\u53e5\u5b50\u540c\u65f6\u5904\u7406\uff09\uff0c\u9700\u8981\u201c\u5bf9\u9f50\u201d\uff08\u88650\u548c\u622a\u65ad\uff09\n\u7406\u89e3\u7a20\u5bc6\u77e9\u9635(word-embedding)\u4e0e\u7a00\u758f\u77e9\u9635(one-hot)\u7684\u533a\u522b\uff08\u8fd9\u91cc\u6ca1\u6709\u8bb2\uff0c\u7528\u7684\u662fone-hot)\n\n\u7f51\u7edc\u548c\u8bad\u7ec3\n\u7f51\u7edc\u7ed3\u6784\u4e0d\u53d8\uff0c\u6bcf\u5c42\u7684\u795e\u7ecf\u5143\u4e3a(64, 64, 46)\n\u524d\u9762\u589e\u52a0\u4e86\u795e\u7ecf\u5143\uff0c16\u4e2a\u7279\u5f81\u5bf9\u8bed\u8a00\u6765\u8bf4\u5e94\u8be5\u662f\u4e0d\u591f\u7684\uff09\n\u6700\u540e\u4e00\u5c42\u75311\u53d8\u6210\u4e8646\uff0c\u56e0\u4e3a\u4e8c\u5143\u7684\u8f93\u51fa\u53ea\u9700\u8981\u4e00\u4e2a\u6570\u5b57\uff0c\u800c\u591a\u5143\u8f93\u51fa\u662f\u7528one-hot\u8868\u793a\u7684\u5411\u91cf\uff0c\u6700\u6709\u53ef\u80fd\u7684\u7c7b\u522b\u5728\u8fd9\u4e2a\u5411\u91cf\u91cc\u62e5\u6709\u6700\u5927\u7684\u503c\u3002\n\n4\u3002 \u635f\u5931\u51fd\u6570\u4e3acategorial_crossentropy\uff0c\u8fd9\u5728\u522b\u7684\u6559\u6750\u91cc\u5e94\u8be5\u5c31\u662f\u666e\u901a\u7684CE.\u65b0\u77e5\u8bc6\n\u4ecb\u7ecd\u4e86\u4e00\u79cd\u4e0d\u7528one-hot\u800c\u76f4\u63a5\u7528\u6570\u5b57\u8868\u793a\u771f\u503c\u7684\u65b9\u6cd5\uff0c\u4f46\u662f\u6ca1\u6709\u6539\u53d8\u7f51\u7edc\u7ed3\u6784\uff08\u5373\u6700\u540e\u4e00\u5c42\u4ecd\u7136\u8f93\u51fa46\u7ef4\uff0c\u800c\u4e0d\u662f\u56e0\u4e3a\u4f60\u7528\u4e86\u4e00\u4e2a\u6807\u91cf\u800c\u53ea\u8f93\u51fa\u4e00\u7ef4\u3002\n\u770b\u6765\u5b83\u4ec5\u4ec5\u5c31\u662f\u4e00\u4e2a\u8bed\u6cd5\u7cd6\uff08loss\u51fd\u6570\u9009\u62e9sparse_categorial_crossentropy\u5c31\u884c\u4e86\uff09\n\n\n\u5c1d\u8bd5\u628a\u7b2c2\u5c42\u753164\u6539\u4e3a4\uff0c\u53d8\u6210bottleneck\uff0c\u6f14\u793a\u4f60\u670946\u7ef4\u7684\u6570\u636e\u8981\u8f93\u51fa\u7684\u8bdd\uff0c\u524d\u9762\u7684\u5c42\u6570\u6216\u5c11\u4f1a\u9020\u6210\u4fe1\u606f\u538b\u7f29\u8fc7\u4e8e\u4e25\u91cd\u4ee5\u81f4\u4e8e\u4e22\u5931\u7279\u5f81\u3002\n\nPredicting house prices: a regression example\n\u8fd9\u91cc\u7528\u4e86\u9884\u6d4b\u623f\u4ef7\u7684Boston Hosing Price\u6570\u636e\u96c6\u3002\u4e0e\u5434\u6069\u8fbe\u7684\u8bfe\u7a0b\u4e00\u6837\uff0c\u4e5f\u6070\u597d\u662f\u5728\u8fd9\u4e2a\u4f8b\u5b50\u91cc\u5f15\u5165\u4e86\u5bf9input\u7684normalize\uff0c\u7406\u7531\u4e5f\u4ec5\u4ec5\u662f\u7b80\u5355\u7684\u628a\u91cf\u7eb2\u62c9\u5e73\u3002\u73b0\u5728\u6211\u4eec\u5e94\u8be5\u8fd8\u77e5\u9053Normalize\u8fd8\u80fd\u8ba9\u6570\u636e\u5728\u8fdb\u5165\u6fc0\u6d3b\u51fd\u6570\u524d\uff0c\u628a\u503c\u9650\u5b9a\u5728\u6fc0\u6d3b\u51fd\u6570\u7684\u68af\u5ea6\u654f\u611f\u533a\u3002\u6b64\u5916\uff0c\u4e00\u4e2a\u77e5\u8bc6\u70b9\u5c31\u662f\u4f60\u5bf9\u8bad\u7ec3\u96c6\u8fdb\u884cNormalize\u7528\u7684\u5747\u503c\u548c\u6807\u51c6\u5dee\uff0c\u662f\u76f4\u63a5\u7528\u5728\u6d4b\u8bd5\u96c6\u4e0a\u7684\uff0c\u800c\u4e0d\u662f\u5404\u8ba1\u7b97\u5404\u7684\uff0c\u53ef\u4ee5\u7406\u89e3\u4e3a\u4fdd\u6301\u8bad\u7ec3\u96c6\u7684\u201c\u5206\u5e03\u201d\u3002\n\u8fd9\u4e5f\u662fscikit learn\u91ccfit_tranform\u548c\u76f4\u63a5\u7528transform\u7684\u539f\u56e0\u3002\n\n\u5bf9scalar\u8fdb\u884c\u9884\u6d4b\u662f\u4e0d\u9700\u8981\u8fdb\u884c\u6fc0\u6d3b\uff08\u5373\u65e0\u9700\u628a\u8f93\u51fa\u538b\u7f29\u5230\u548c\u4e3a1\u7684\u6982\u7387\u7a7a\u95f4\uff09\nloss\u4e5f\u76f4\u89c2\u5f88\u591a\uff0c\u5c31\u662fpredict\u4e0etarget\u7684\u5dee\uff08\u53d6\u5e73\u65b9\uff0c\u96642\uff0c\u9664\u6279\u91cf\u7b49\u90fd\u662f\u8f85\u52a9\uff09\uff0c\u9884\u6d4b\u4e0e\u76f4\u503c\u7684\u5dee\u624d\u662f\u6838\u5fc3\u3002\n\n", "categories": [{"name": "posts", "slug": "posts", "permalink": "/category/posts/"}], "tags": [{"name": "deep learning", "slug": "deep learning", "permalink": "/tag/deep%20learning/"}, {"name": "\u6df1\u5ea6\u5b66\u4e60", "slug": "\u6df1\u5ea6\u5b66\u4e60", "permalink": "/tag/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/"}, {"name": "keras", "slug": "keras", "permalink": "/tag/keras/"}, {"name": "cv", "slug": "cv", "permalink": "/tag/cv/"}, {"name": "nlp", "slug": "nlp", "permalink": "/tag/nlp/"}, {"name": "tensorflow", "slug": "tensorflow", "permalink": "/tag/tensorflow/"}, {"name": "gan", "slug": "gan", "permalink": "/tag/gan/"}, {"name": "lstm", "slug": "lstm", "permalink": "/tag/lstm/"}, {"name": "language mode", "slug": "language mode", "permalink": "/tag/language%20mode/"}, {"name": "rnn", "slug": "rnn", "permalink": "/tag/rnn/"}, {"name": "heatmap", "slug": "heatmap", "permalink": "/tag/heatmap/"}, {"name": "dropout", "slug": "dropout", "permalink": "/tag/dropout/"}, {"name": "machine learning", "slug": "machine learning", "permalink": "/tag/machine%20learning/"}]}, {"title": "\u300aDeep Learning with Python\u300b\u7b14\u8bb0[1]", "date": "2021-09-12T00:00:00-00.00", "path": "/archives/Deep-Learning-with-Python-Notes-1/", "text": "\u672c\u6765\u662f\u6253\u7b97\u8d81\u8fd9\u4e2a\u65f6\u95f4\u597d\u597d\u770b\u770b\u82b1\u4e66\u7684\uff0c\u524d\u51e0\u7ae0\u770b\u4e0b\u6765\u786e\u5b9e\u89c9\u5f97\u83b7\u76ca\u532a\u6d45\uff0c\u4f46\u770b\u4e0b\u53bb\u5c31\u53d1\u73b0\u8ddf\u4e0d\u4e0a\u4e86\uff0c\u7279\u522b\u662f\u62b1\u7740\u6025\u529f\u8fd1\u5229\u7684\u5fc3\u6001\u7684\u8bdd\uff0c\u76ee\u524d\u4e5f\u6c89\u4e0d\u4e0b\u53bb\u771f\u7684\u4e00\u8282\u8282\u5403\u900f\u5730\u5f80\u4e0b\u770b\u3002\u8fd9\u7c7b\u4e66\u7ec8\u5f52\u4e0d\u662f\u5165\u95e8\u6559\u6750\uff0c\u662f\u9700\u8981\u4f60\u6709\u8fc7\u4e00\u5b9a\u7684\u79ef\u7d2f\u540e\u518d\u56de\u8fc7\u5934\u6765\u770b\u7684\u3002\u4e8e\u662f\u60f3\u5230\u4e86\u300aDeep Learning with Python\u300b\uff0c\u5fd8\u8bb0\u8fd9\u672c\u4e66\u600e\u4e48\u6765\u7684\u4e86\uff0c\u4f46\u662f\u5728\u522b\u7684\u5730\u65b9\u770b\u5230\u4e86\u6709\u4eba\u63a8\u8350\uff0c\u8bf4\u662fKeras\u7684\u4f5c\u8005\u5199\u7684\u975e\u5e38\u597d\u7684\u4e00\u672c\u5165\u95e8\u4e66\uff0c\u7ffb\u4e86\u524d\u9762\u51e0\u5341\u9875\u540e\u53d1\u73b0\u5c45\u7136\u8ddf\u8fdb\u53bb\u4e86\uff0c\u4e0d\u8be5\u8bb2\u7684\u5730\u65b9\u6ca1\u8bb2\u6bd4\u5982\u6570\u5b66\u7ec6\u8282\uff0c\u800c\u4e14\u601d\u8def\u4e5f\u6781\u5176\u7edf\u4e00\uff0c\u4ece\u5934\u8d2f\u7a7f\u5230\u5c3e\uff08\u6bd4\u5982representations, latent space,  hypothesis space\uff09\uff0c\u6211\u89c9\u5f97\u5f88\u53d7\u7528\u3002\u4e09\u767e\u591a\u9875\u5168\u82f1\u6587\uff0c\u5c45\u7136\u4e5f\u6ca1\u67e5\u51e0\u4e2a\u5355\u8bcd\u5c31\u8fd9\u4e48\u770b\u5b8c\u4e86\uff0c\u4ee5\u524d\u770b\u6587\u6863\u6700\u591a\u5341\u6765\u9875\uff0c\u4e5f\u7b97\u4e00\u4e2a\u7a81\u7834\u4e86\uff0c\u53ef\u89c1\u5176\u5b9e\u8fd8\u662f\u4e00\u4e2a\u8010\u5fc3\u7684\u95ee\u9898\u3002\u770b\u5b8c\u540e\u4e66\u4e0a\u505a\u4e86\u5f88\u591a\u7b14\u8bb0\uff0c\u4e8e\u662f\u987a\u7740\u7b14\u8bb0\u8bfb\u4e86\u7b2c\u4e8c\u904d\uff0c\u987a\u4fbf\u5c31\u628a\u7b14\u8bb0\u7ed9\u7535\u5b50\u5316\u4e86\u3002\u4e0d\u662f\u6559\u7a0b\uff0c\u4e0d\u662f\u5bfc\u8bfb\u3002Fundamentals of deep learning\n\u6838\u5fc3\u601d\u60f3\uff1a\nlearng useful representations of input data\nwhat\u2019s a representation?At its core, it\u2019s a different way to look at data\u2014to represent or encode data.\n\u7b80\u5355\u56de\u987e\u6df1\u5ea6\u5b66\u4e60\u4e4b\u4e8e\u4eba\u5de5\u667a\u80fd\u7684\u5386\u53f2\uff0c\u6bcf\u672c\u4e66\u90fd\u4f1a\u5199\uff0c\u4f46\u6bcf\u672c\u4e66\u91cc\u90fd\u6709\u4f5c\u8005\u81ea\u5df1\u7684\u4fa7\u91cd\uff1a\nArtificial intelligence\nMachine learning\nMachine learning is tightly related to mathematical statistics, but it differs from statistics in several important ways.\nmachine learning tends to deal with large, complex datasets (such as a dataset of millions of images, each consisting of tens of thousands of pixels)\nclassical statistical analysis such as Bayesian analysis would be impractical(\u4e0d\u5207\u5b9e\u9645\u7684).\nIt\u2019s a hands-on discipline in which ideas are proven empirically more often than theoretically.\uff08\u5de5\u7a0b/\u5b9e\u8df5\u5927\u4e8e\u7406\u8bba\uff09\n\n\n\u662f\u4e00\u79cdmeaningfully transform data\nMachine-learning models are all about finding appropriate representations for their input data\u2014transformations of the data that make it more amenable to the task at hand, such as a classification task.\n\u5bfb\u627e\u66f4\u6709\u4ee3\u8868\u6027\u7684representation, \u901a\u8fc7:(coordinate change, linear projections, tranlsations, nonlinear operations)\n\u53ea\u4f1a\u5728hypothesis space\u91cc\u5bfb\u627e\n\u4ee5\u67d0\u79cd\u53cd\u9988\u4e3a\u4fe1\u53f7\u4f5c\u4e3a\u4f18\u5316\u6307\u5bfc\n\n\n\n\nDeep learning\nMachine Learing\u7684\u5b50\u96c6\uff0c\u4e00\u79cd\u65b0\u7684learning representation\u7684\u65b0\u65b9\u6cd5\n\u867d\u7136\u53eb\u795e\u7ecf\u7f51\u7edc(neural network)\uff0c\u4f46\u5b83\u65e2\u975eneural\uff0c\u4e5f\u4e0d\u662fnetwork\uff0c\u66f4\u5408\u7406\u7684\u540d\u5b57\uff1a\nlayered representations learning and hierarchical representations learning.\n\n\n\u76f8\u5bf9\u5c11\u7684\u5c42\u6570\u7684\u5b9e\u73b0\u53ebshallow learning\n\n\n\nBefore deep learning\n\nProbabilistic modeling\nthe earliest forms of machine learning,\nstill widely used to this day.\nOne of the best-known algorithms in this category\n\n\n\n\n\nis the Naive Bayes algorithm(\u6734\u7d20\u8d1d\u53f6\u65af)\n    * \u6761\u4ef6\u6982\u7387\uff0c\u628a\u89c4\u5219\u7406\u89e3\u4e3a\u201c\u6761\u4ef6\u201d\uff0c\u5224\u65ad\u6982\u7387\uff0c\u6bd4\u5982\u5783\u573e\u90ae\u4ef6\u3002\n        * A closely related model is the logistic regression\nEarly neural networks\nin the mid-1980s, multiple people independently rediscovered the Backpropagation algorithm\nThe first successful practical application of neural nets came in 1989 from Bell Labs -&gt; LeNet\n\n\nKernel methods\nKernel methods are a group of classification algorithms(\u6838\u65b9\u6cd5\u662f\u4e00\u7ec4\u5206\u7c7b\u7b97\u6cd5)\nthe best known of which is the support vector machine (SVM).\nSVMs aim at solving classification problems by finding good decision boundaries between two sets of points belonging to two different categories.\n\u5148\u628a\u6570\u636e\u6620\u5c04\u5230\u9ad8\u7ef4\uff0cdecision boundary\u8868\u793a\u4e3ahyperplane\n\u6700\u5927\u5316\u6bcf\u4e2a\u7c7b\u522b\u91cc\u79bbhyperplane\u6700\u8fd1\u7684\u70b9\u5230hyperplane\u7684\u8ddd\u79bb:maximizing the margin\n\n\nThe technique of mapping data to a high-dimensional representation \u975e\u5e38\u6d88\u8017\u8ba1\u7b97\u8d44\u6e90\uff0c\u5b9e\u9645\u4f7f\u7528\u7684\u662f\u6838\u51fd\u6570(kernel function):\n\u4e0d\u628a\u6bcf\u4e2a\u70b9\u8f6c\u6362\u5230\u9ad8\u7ef4\uff0c\u800c\u53ea\u662f\u8ba1\u7b97\u6bcf\u4e24\u4e2a\u70b9\u5728\u9ad8\u7ef4\u4e2d\u7684\u8ddd\u79bb\n\u6838\u51fd\u6570\u662f\u624b\u5de5\u8bbe\u8ba1\u7684\uff0c\u4e0d\u662f\u5b66\u4e60\u7684\n\n\nSVM\u5728\u5206\u7c7b\u95ee\u9898\u4e0a\u662f\u7ecf\u5178\u65b9\u6848\uff0c\u4f46\u96be\u4ee5\u6269\u5c55\u5230\u5927\u578b\u6570\u636e\u96c6\u4e0a\n\u5bf9\u4e8eperceptual problems(\u611f\u77e5\u7c7b\u7684\u95ee\u9898)\u5982\u56fe\u50cf\u5206\u7c7b\u6548\u679c\u4e5f\u4e0d\u597d\n\u5b83\u662f\u4e00\u4e2ashallow method\n\u9700\u8981\u4e8b\u5148\u624b\u52a8\u63d0\u53d6\u6709\u7528\u7279\u5f81(feature enginerring)-&gt; difficult and  brittle\uff08\u8106\u5f31\u7684\uff09\n\n\n\n\n\n\nDecision trees, random forests, and gradient boosting machines\nRandom Forest\nyou could say that they\u2019re almost always the second-best algorithm for any shallow machine-learning task.\n\n\ngradient boosting machines (1st):\na way to improve any machine-learning model by iteratively training new models that specialize in addressing the weak points of the previous models.\n\n\n\n\n\nWhat makes deep learning different\nit completely automates what used to be the most crucial step in a machine-learning workflow: feature engineering. \u6709\u4eba\u8ba4\u4e3a\u8fd9\u53eb\u7a77\u4e3e\uff0c\u601d\u8def\u4e0a\u6709\u70b9\u50cf\uff0c\u81f3\u5c11\u5f97\u5230\u7279\u5f81\u7684\u8fc7\u7a0b\u4e0d\u662f\u9760\u89c2\u5bdf\u548c\u5206\u6790\u3002feature engineering\nmanually engineer good layers of representations for their data\n", "categories": [{"name": "posts", "slug": "posts", "permalink": "/category/posts/"}], "tags": [{"name": "deep learning", "slug": "deep learning", "permalink": "/tag/deep%20learning/"}, {"name": "\u6df1\u5ea6\u5b66\u4e60", "slug": "\u6df1\u5ea6\u5b66\u4e60", "permalink": "/tag/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/"}, {"name": "keras", "slug": "keras", "permalink": "/tag/keras/"}, {"name": "cv", "slug": "cv", "permalink": "/tag/cv/"}, {"name": "nlp", "slug": "nlp", "permalink": "/tag/nlp/"}, {"name": "tensorflow", "slug": "tensorflow", "permalink": "/tag/tensorflow/"}, {"name": "gan", "slug": "gan", "permalink": "/tag/gan/"}, {"name": "lstm", "slug": "lstm", "permalink": "/tag/lstm/"}, {"name": "language mode", "slug": "language mode", "permalink": "/tag/language%20mode/"}, {"name": "rnn", "slug": "rnn", "permalink": "/tag/rnn/"}, {"name": "heatmap", "slug": "heatmap", "permalink": "/tag/heatmap/"}, {"name": "dropout", "slug": "dropout", "permalink": "/tag/dropout/"}, {"name": "machine learning", "slug": "machine learning", "permalink": "/tag/machine%20learning/"}]}, {"title": "\u51e0\u5927\u6392\u5e8f\u7b97\u6cd5python\u5b9e\u73b0", "date": "2021-08-23T00:00:00-00.00", "path": "/archives/%E5%87%A0%E5%A4%A7%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95python%E5%AE%9E%E7%8E%B0/", "text": "\u5192\u6ce1\u6392\u5e8f\n\u5192\u6ce1\u6392\u5e8f\u57fa\u7840\u539f\u7406\u662f\u6bcf\u4e00\u8f6e\u90fd\u8ba9\u6700\u5927\u7684\u503c\u79fb\u5230\u6700\u53f3\u8fb9\uff0c\u4e00\u53e5\u8bdd\u5c31\u591f\u4e86\u3002\u5982\u679c\u60f3\u5c0f\u4f18\u5316\u4e00\u4e0b\uff0c\u53ef\u4ee5\u5728\u6bcf\u4e00\u8f6e\u8fc7\u540e\u90fd\u628a\u6700\u540e\u4e00\u4e2a\uff08\u5df2\u7ecf\u662f\u6700\u5927\u7684\u503c\uff09\u6392\u9664\u51fa\u53bb\uff0c\u8fd9\u79cd\u6211\u628a\u5b83\u79f0\u4e4b\u4e3a\u201c\u538b\u7f29\u8fb9\u754c\u201c\uff0c\u5728\u4e0b\u9762\u7684\u51e0\u79cd\u6392\u5e8f\u7b97\u6cd5\u91cc\u90fd\u6709\u53cd\u590d\u63d0\u53ca\u3002\u800c\u4e14\u4e4b\u6240\u4ee5\u8bf4\u4f18\u5316\uff0c\u5c31\u662f\u4e0d\u505a\u4e5f\u884c\uff0c\u5982\u679c\u53ea\u662f\u60f3\u6f14\u793a\u7b97\u6cd5\u6838\u5fc3\u601d\u60f3\u7684\u8bdd\u3002def bubble_sort(arr):\n    for i in range(1, len(arr)):\n        for j in range(len(arr)-i):\n            if arr[j] &gt; arr[j+1]:\n                arr[j], arr[j+1] = arr[j+1], arr[j]\n    return arr\nbubble_sort([0, 2, 1, 3, 5, 1, 1])\n\nouput:\n[0, 1, 1, 1, 2, 3, 5]\n\n\u5feb\u901f\u6392\u5e8f\n\u9009\u51fa\u4e00\u4e2a\u5408\u9002\u7684\uff08\u6216\u4efb\u610f\u7684\uff09\u4e2d\u503c(pivot\uff09\uff0c\u628a\u6bd4\u5b83\u5927\u7684\u548c\u5c0f\u7684\u5206\u5217\u5230\u4e24\u8fb9\uff0c\u518d\u5bf9\u4e24\u8fb9\u8fdb\u884c\u4e0a\u8ff0\u5206\u7c7b\u7684\u9012\u5f52\u64cd\u4f5c\u3002\u5b9e\u9645\u64cd\u4f5c\u4e2d\u5f80\u5f80\u4f1a\u9009\u5b9a\u4e86pivot\u540e\uff0c\u4ece\u53f3\u5f80\u5de6\u641c\u5c0f\u6570\uff0c\u4ece\u5de6\u5f80\u53f3\u641c\u5927\u6570\uff0c\u4ee5\u89c4\u907fpivot\u672c\u8eab\u8fc7\u5927\u6216\u8fc7\u5c0f\u65f6\uff0c\u5982\u679c\u9009\u5b9a\u7684\u65b9\u5411\u4e0d\u5bf9\uff0c\u53ef\u80fd\u6bcf\u4e00\u6b21\u90fd\u9700\u8981\u628a\u6574\u4e2a\u6570\u7ec4\u51e0\u4e4e\u904d\u5386\u5b8c\u624d\u627e\u5230\u5408\u9002\u7684\u6570\u7684\u60c5\u51b5\u3002again\uff0c\u8fd9\u53ea\u662f\u4f18\u5316\uff0c\u5982\u679c\u4e0d\u8003\u8651\u8fd9\u4e9b\uff0c\u90a3\u4e48\u6838\u5fc3\u601d\u60f3\u662f\u975e\u5e38\u7b80\u5355\u7684\uff1adef q_sort(arr):\n    if len(arr) &lt;= 1:\n        return arr\n    pivot = arr.pop()\n    left  = [item for item in arr if item &lt;= pivot]\n    right = [item for item in arr if item &gt; pivot]\n    return q_sort(left) + [pivot] + q_sort(right)\n\n\u8fd9\u4e2a\u4e0d\u4f46\u5b9e\u73b0\u4e86\uff08\u4e2d\u503c+\u4e24\u4fa7+\u9012\u5f52\uff09\u7684\u601d\u8def+\u6ca1\u6709\u4efb\u4f55\u4f18\u5316\uff0c\u6548\u679c\u5df2\u7ecf\u51fa\u5947\u7684\u597d\u4e86\uff01\u4f46\u7f51\u4e0a\u6f14\u793a\u7684\u90fd\u662f\u4e0b\u9762\u8fd9\u79cd\u82b1\u6d3b\uff0c\u4ece\u4e24\u4fa7\u6765\u538b\u7f29\u5907\u9009\u533a\u57df\uff08\u538b\u7f29\u7684\u610f\u601d\u662f\u6392\u597d\u4e86\u7684\u533a\u57df\u5c31\u4e0d\u8981\u7ba1\u4e86\uff09\uff0c\u4e0b\u9762\u5217\u4e86\u4e2a\u8868\u683c\u6765\u6f14\u793a\u8fc7\u7a0b\uff0c\u770b\u5927\u5bb6\u662f\u4e0d\u662f\u80fd\u8f7b\u677e\u770b\u61c2\u5feb\u6392\u7684\u4e24\u4e2a\u6838\u5fc3\u673a\u5236\uff1a\u6807\u7ea2\u4f4d\uff0c\u548c\u8fb9\u754c\u538b\u7f29\u3002\u8bf4\u660e\u5982\u4e0b\uff1a\n\u4efb\u610f\u5199\u4e2a\u6570\u7ec4[6,7,3,2,14,9]\uff0c\u4efb\u53d6\u4e00\u4e2a\u6570\u4e3apivot\uff0c\u5c31\u7b2c1\u4e2a\u5427\uff086\uff09\uff0c\n\u5de6\u7bad\u5934\u8868\u793a\u4ece\u53f3\u5f80\u5de6\u627e\u7b2c\u4e00\u4e2a\u5c0f\u4e8epivot\u7684\u503c\uff0c\u53f3\u7bad\u5934\u8868\u793a\u4ece\u5de6\u5f80\u53f3\u627e\u7b2c\u4e00\u4e2a\u5927\u4e8epivot\u7684\u503c\n\u7ea2\u8272\u4ee3\u8868\u6807\u7ea2\u4f4d\uff0c\u5e9f\u4f4d\uff0c\u5373\u5f53\u524d\u4f4d\u627e\u5230\u672c\u8f6e\u7b26\u5408\u8981\u6c42\u7684\u503c\uff0c\u4f46\u632a\u5230\u4e24\u4fa7\u53bb\u4e86\uff0c$\\color{red}{\u4e0b\u4e00\u8f6e\u7684\u7b26\u5408\u6761\u4ef6\u7684\u503c\u5e94\u8be5\u653e\u5165\u8fd9\u4e2a\u6807\u7ea2\u4f4d\u91cc}$\n\u62ec\u53f7\u91cc\u7684\u8868\u793a\u662f\u8fd9\u4e00\u8f6e\u8be5\u4f4d\u7f6e\u8d4b\u7684\u65b0\u503c\uff0c\u5b83\u6765\u81ea\u4e8e\u6807\u7ea2\u4f4d\uff0c\u540c\u65f6\uff0c\u62ec\u53f7\u7684\u4f4d\u7f6e\u4e5f\u5c31\u662f\u4e0a\u4e00\u8f6e\u7684\u6807\u7ea2\u4f4d\n\u5212\u6389\u7684\u8868\u793a\u5df2\u7ecf\u538b\u7f29\u4e86\u5de6\u53f3\u8fb9\u754c\uff0c\u4e0b\u4e00\u8f6e\u5c31\u4e0d\u8981\u5728\u8fd9\u4e9b\u6570\u91cc\u9762\u9009\u4e86\uff08\u4e3a\u4e86\u89c6\u89c9\u7b80\u6d01\uff0c\u6807\u7ea2\u4f4d\u5c31\u4e0d\u5212\u4e86\uff09\n\n$$\n\\require{cancel}\n\\begin{array}{c|cccccc|l}\nindex&amp;0&amp;1&amp;2&amp;3&amp;4&amp;5&amp;\\\\\n\\hline\narray&amp;\\color{red}6&amp;7&amp;3&amp;2&amp;14&amp;9\\\\\n\\underleftarrow{\\small\u627e\u5c0f\u6570}&amp;\\cancel{(2)}&amp;7&amp;3&amp;\\color{red}2&amp;\\cancel{14}&amp;\\cancel{9}&amp;\u627e\u52302\uff0c\u653e\u5230\u7d22\u5f150\\\\\n\\underrightarrow{\\small\u627e\u5927\u6570}&amp;\\cancel{2}&amp;\\color{red}7&amp;3&amp;(7)&amp;\\cancel{14}&amp;\\cancel{9}&amp;\u627e\u52307\uff0c\u653e\u5230\u7d22\u5f153\\\\\n\\underleftarrow{\\small\u627e\u5c0f\u6570}&amp;\\cancel{2}&amp;(3)&amp;\\color{red}3&amp;\\cancel{7}&amp;\\cancel{14}&amp;\\cancel{9}&amp;\u627e\u52303\uff0c\u653e\u5230\u7d22\u5f152\\\\\n&amp;2&amp;3&amp;(6)&amp;7&amp;14&amp;9&amp;(1,2)\u7d22\u5f15\u95f4\u5df2\u6ca1\u6709\u5927\u4e8e6\u7684\u6570\uff0c\u6392\u5e8f\u5b8c\u6210\uff0c\u56de\u586b6\n\\end{array}\n$$\n\n\u6ce8\u610f\u7b2c1\u6b21\u4ece\u53f3\u5f80\u5de6\u627e\u6bd46\u5c0f\u7684\u6570\u65f6\uff0c\u627e\u52302\uff0c\u53f3\u8fb9\u768414\uff0c9\u5c31\u53ef\u4ee5\u5168\u90e8\u5212\u6389\u4e86\uff0c\u56e0\u4e3a\u6211\u6c38\u8fdc\u662f\u5728\u75286\u5728\u5de6\u53f3\u67e5\u627e\uff0c\u8fd9\u4e00\u6b21pass\u4e86\uff0c\u540e\u9762\u6c38\u8fdc\u4f1apass\n\n\n\u8fd9\u6837\u8fb9\u754c\u538b\u7f29\u5f97\u975e\u5e38\u5feb\uff0c\u8fd9\u5c31\u662f\u79f0\u4e4b\u4e3a\u201c\u5feb\u901f\u201d\u6392\u5e8f\u7684\u539f\u56e0\u5427\uff1f\n\n\n\u76ee\u524d\u53ea\u5b8c\u6210\u4e00\u6b21\u5206\u5272\uff08\u5373\u63096\u4e3a\u6807\u8bc6\u5207\u5206\u5de6\u53f3\uff09\uff0c\u63a5\u4e0b\u6765\u7528\u540c\u6837\u7684\u903b\u8f91\u9012\u5f526\u5de6\u8fb9\u7684[2]\u548c\u53f3\u8fb9\u7684[7,14,9]\u6392\u5e8f\u5373\u53ef\n\n\n\u6240\u4ee5\u5feb\u6392\u5c313\u4e2a\u90e8\u5206\uff0c\u4e00\u4e2a\u4e3b\u4f53\uff0c\u6267\u884c\u4e00\u6b21\u5206\u5272\uff0c\u7136\u540e\u5bf9\u5206\u5272\u540e\u7684\u4e24\u4e2a\u6570\u7ec4\u5206\u522b\u9012\u5f52\u56de\u53bb\uff0c\u8fd9\u6837\u4ee3\u7801\u600e\u4e48\u5199\u4e5f\u51fa\u6765\u4e86\uff1a\n\ndef q_sort(array, start, end):\n    # \uff08left\uff0c right\uff09\u7528\u6765\u4fdd\u5b58\u4e0d\u65ad\u7f29\u5c0f\u7684\u67e5\u627e\u6570\u7ec4\u7d22\u5f15\u754c\u9650\n    #  \u6211\u4e0a\u9762\u6a21\u62df\u7684\u8fc7\u7a0b\u91cc\uff0c\u5c31\u662f\u5212\u6389\u7684\u6570\u5b57\u7684\u5de6\u53f3\u8fb9\u754c\n    left, right = start, end\n    index = start\n    pivot = array[start]\n\n    while left &lt; right:\n        # \u4ece\u53f3\u5f80\u5de6\u9009\u5c0f\u4e8epivot\u7684\u6570\n        matched = False # \u6807\u8bc6\u8fd9\u4e00\u8f6e\u6709\u6ca1\u6709\u627e\u5230\u5408\u9002\u7684\u6570\uff08\u5982\u679c\u6ca1\u627e\u5230\u5176\u5b9e\u8bf4\u660e\u6392\u5e8f\u5df2\u7ecf\u5b8c\u6210\uff09\n        for i in reversed(range(left+1, right+1)): # \u53bb\u5934\uff0c\u542b\u5c3e, \u53cd\u5e8f\n            if array[i] &lt;= pivot:\n                array[index] = array[i]\n                right = i  # \u4ece\u53f3\u5230\u5de6\u6bd4\u5230\u7b2ci\u4e2a\u624d\u6709\u6bd4pivot\u5c0f\u7684\u6570\uff0c\u90a3\u4e48i\u53f3\u4fa7\u5168\u5927\u4e8epivot\uff0c\u4e0b\u6b21\u53ef\u4ee5\u7f29\u5c0f\u8303\u56f4\u4e86\n                index = i\n                matched = True\n                break\n        if not matched:\n            break  # \u53f3\u4fa7\u6ca1\u6709\u627e\u5230\u66f4\u5c0f\u7684\u6570\uff0c\u8bf4\u660e\u5269\u4f59\u6570\u7ec4\u5168\u662f\u5927\u6570\uff0c\u5df2\u7ecf\u6392\u5b8c\u4e86\n\n        left += 1 # \u627e\u5230\u4e86\u586b\u5165\u65b0\u6570\u540e\u5c31\u987a\u79fb\u4e00\u4f4d\n        matched = False\n        # \u4ece\u5de6\u5f80\u53f3\u9009\u5927\u4e8epivot\u7684\u6570\n        for i in range(left, right): # \u6709\u5934\u65e0\u5c3e\n            if array[i] &gt; pivot:\n                array[index] = array[i]\n                left = i # \u6b64\u65f6i\u5de6\u4fa7\u4e5f\u6ca1\u6709\u6bd4pivot\u5927\u7684\u6570\uff0c\u4e0b\u6b21\u518d\u627e\u4e5f\u53ef\u4ee5\u5ffd\u7565\u4e86\uff0c\u4e5f\u6807\u8bb0\u4e0b\u7f29\u5c0f\u8303\u56f4\n                index = i\n                matched = True\n                break;\n        if not matched:\n            break\n        right -= 1\n    array[index] = pivot # \u628a\u6807\u7ea2\u4f4d\u8bbe\u4e3apivot\n\n    # \u5f00\u59cb\u9012\u5f52\u5904\u7406\u5de6\u53f3\u5207\u7247\n    if start &lt; index-1:\n        q_sort(array, start, index-1)\n    if end &gt; index+1:\n        q_sort(array, index+1, end)\n\n    return array\n\narr = [0, 2, 1, 3, 5, 1, 1]\n# \u6211\u5c01\u88c5\u65f6\u4e3a\u4e86\u517c\u5bb9\u9012\u5f52\uff0c\u8981\u4eba\u4e3a\u4f20\u5165start, end\uff0c\u8fdb\u5165\u51fd\u6570\u65f6\u81ea\u884c\u8ba1\u7b97\u4e00\u4e0b\u597d\u4e86\nq_sort(arr, 0, len(arr)-1)\n\noutput\n[0, 1, 1, 1, 2, 3, 5]\n\n\u5806\u6392\u5e8f\n\n\u5176\u5b9e\u5c31\u662f\u628a\u6570\u5b57\u6446\u6210\u4e8c\u53c9\u6811\uff0c\u77e5\u9053\u4e8c\u53c9\u6811\u662f\u5565\u5c31\u884c\uff0c\u6216\u8005\u770b\u4e0b\u9762\u7684\u52a8\u56fe\n\u6bcf\u5f53\u4e00\u4e2a\u6570\u5b57\u6392\u5165\u5806\u4e2d\u7684\u65f6\u5019\uff0c\u90fd\u4e0e\u7236\u8282\u70b9\u6bd4\u4e00\u4e0b\u5927\u5c0f\uff0c\u5982\u679c\u5927\u4e8e\u7236\u8282\u70b9\uff0c\u5219\u4e0e\u7236\u8282\u70b9\u4ea4\u6362\u4f4d\u7f6e\n\n\n\u4e0d\u4e0e\u5144\u5f1f\u8282\u70b9\u6bd4\u8f83\uff0c\u5373\u5144\u5f1f\u8282\u70b9\u4e4b\u95f4\u6682\u4e0d\u6392\u5e8f\n\n\n\u4ea4\u6362\u5230\u7236\u8282\u70b9\u540e\u518d\u8ddf\u5f53\u524d\u4f4d\u7f6e\u7684\u7236\u8282\u70b9\u6bd4\u8f83\uff0c\u5982\u6b64\u5f80\u590d\uff0c\u81f3\u5230\u6839\u8282\u70b9\uff08\u9012\u5f52\u8b66\u544a\uff09\n\u4e00\u8f6e\u6446\u5b8c\u540e\uff0c\u6700\u5927\u7684\u6570\u80af\u5b9a\u5df2\u7ecf\u4e0a\u6d6e\u5230\u6839\u8282\u70b9\u4e86\uff0c\u628a\u5b83\u4e0e\u6700\u672b\u7684\u4e00\u4e2a\u6570\u5b57\u8c03\u6362\u4f4d\u7f6e\uff08\u8fd9\u4e2a\u6570\u5b57\u662f\u4e00\u4e2a\u76f8\u5bf9\u5c0f\uff0c\u4f46\u4e0d\u4e00\u5b9a\u662f\u6700\u5c0f\u7684\uff09\uff0c\u7136\u540e\u628a\u6700\u5927\u7684\u8fd9\u4e2a\u6570\u4ece\u5806\u91cc\u79fb\u9664\uff08\u5df2\u7ecf\u786e\u8ba4\u662f\u6700\u5927\u7684\uff0c\u4f4d\u7f6e\u4e5f\u5c31\u786e\u8ba4\u4e86\uff0c\u4e0d\u518d\u53c2\u4e0e\u6bd4\u8f83\uff09\n\u5b9e\u73b0\u7684\u65f6\u5019\uff0c\u56e0\u4e3a\u6709\u201c\u627e\u7236/\u5b50\u8282\u70b9\u6bd4\u5927\u5c0f\u201d\u8fd9\u6837\u7684\u903b\u8f91\uff0c\u663e\u7136\u53ef\u4ee5\u76f4\u63a5\u7528\u4e0a\u4e8c\u53c9\u6811\u7684\u6027\u8d28\uff0c\u4e0d\u8981\u81ea\u5df1\u53bb\u89c2\u5bdf\u6216\u5f52\u7eb3\u4e86\u3002\n\n\u52a8\u56fe\u6bd4\u8f83\u957f\uff0c\u8010\u5fc3\u770b\u4e0b\uff1a\n\u5728\u5b9e\u73b0\u6bcf\u4e00\u8f6e\u7684\u904d\u5386\u6570\u5b57\u8f83\u5927\u7684\u90a3\u4e2a\u5b50\u8282\u70b9\u5e76\u4ea4\u6362\u6570\u5b57\u7684\u8fc7\u7a0b\u4e2d\uff0c\u6211\u4e4b\u524d\u7528\u7684\u662f\u9012\u5f52\uff0c\u5728\u5c0f\u6570\u636e\u91cf\u987a\u5229\u901a\u8fc7\uff0c\u4f46\u4e0a\u4e07\u6761\u6570\u636e\u65f6\u78b0\u5230\u4e86RecursionError: maximum recursion depth exceeded in comparison, \u67e5\u8be2\u672c\u673a\u8fed\u4ee3\u5927\u5c0f\u8bbe\u7f6e\u4e3a1000\uff0c\u4f46\u8bbe\u5230\u51e0\u5341\u4e07\u5c31\u4e0d\u8d77\u4f5c\u7528\u4e86\uff08\u867d\u7136\u4e0d\u62a5\u9519\uff09\uff0c\u4e8e\u662f\u6539\u6210\u4e86while\u5faa\u73af\uff0c\u4ee3\u7801\u51e0\u4e4e\u6ca1\u53d8\uff0c\u4f46\u662f\u79d2\u8fc7\u4e86\u3002\n\u9012\u5f52\u53ea\u662f\u8ba9\u4ee3\u7801\u770b\u8d77\u6765\u7b80\u6d01\u800c\u725b\u903c\uff0c\u5e76\u6ca1\u6709\u521b\u9020\u4ec0\u4e48\u65b0\u7684\u4e1c\u897f\uff0cwhile\u80fd\u884c\u90a3\u5c31\u7b97\u8fc7\u4e86\u5427\u3002\u4f46\u662f\u4ee3\u7801\u5f00\u59cbdirty\u4e86\u8d77\u6765\uff0c\u5927\u91cf\u7684\u4ee3\u7801\u5728\u63a7\u5236\u8fb9\u754c\u548c\u63cf\u8ff0\u573a\u666f\uff0c\u663e\u7136\u6709\u4e9b\u6761\u4ef6\u53ef\u80fd\u662f\u5197\u4f59\u7684\uff0c\u6211\u6ca1\u6709\u5f88\u597d\u5730\u5408\u5e76\u8fd9\u4e9b\u8fb9\u754c\u548c\u6761\u4ef6\u5bfc\u81f4if\u592a\u591a\uff0c\u8fd9\u662f\u4e2a\u4e0d\u597d\u7684\u6f14\u793a\uff0c\u4f46\u4e09\u4e2a\u6838\u5fc3\u51fd\u6570\u8fd8\u662f\u9610\u91ca\u4e86\u8fd9\u79cd\u7b97\u6cd5\u7684\u601d\u8def\uff1a\n\u6446\u6210\u6811\uff08\u5806\uff09\n\u4eceleaf\u5230root\u5192\u6ce1 (child\u53bb\u6bd4parent)\n\u4eceroot\u5230leaf\u5192\u6ce1 (parent\u53bb\u6bd4child)\n\n# helper\nget_parent_index = lambda i : max((i - 1) // 2, 0)\nget_child_index  = lambda i : 2 * i + 1\n\ndef heap_sort(arr):\n    heapify(arr)                    # \u521d\u6392\n    siftDown(arr, 0, len(arr)-1)    # \u6574\u7406\n    return arr\n\ndef heapify(arr):\n    index = 1\n    while index &lt; len(arr):\n        p_index = get_parent_index(index)\n        parent  = arr[p_index]\n        child   = arr[index]\n        if child &gt; parent:\n            arr[p_index], arr[index] = arr[index], arr[p_index]\n            siftUp(arr, p_index)\n        index += 1\n    return arr\n\ndef siftUp(arr, c_index):\n    p_index = get_parent_index(c_index)\n    parent  = arr[p_index]\n    leaf    = arr[c_index]\n    if parent &lt; leaf:\n        arr[p_index], arr[c_index] = arr[c_index], arr[p_index]\n    if p_index &gt; 0:\n        siftUp(arr, p_index)\n\ndef siftDown(arr, start, end):\n    &#39;&#39;&#39;\n    1. \u4ea4\u6362\u9996\u5c3e\u4e24\u4e2a\u6570\uff0c\u8fd9\u6837\u5c3e\u6570\u5c31\u53d8\u6210\u4e86\u6700\u5927\n    2. \u8ddf\u4e24\u4e2a\u5b50\u8282\u70b9\u4e2d\u8f83\u5927\u7684\u6bd4\u8f83\uff0c\u5e76\u8fed\u4ee3\uff0c\u9012\u5f52\u4e0b\u53bb\n    &#39;&#39;&#39;\n    while start &lt; end:\n        if start == 0:\n            arr[0], arr[end] = arr[end], arr[0]\n        left_i  = get_child_index(start)\n        if left_i &gt;= end: \n            # \u5b50\u7ed3\u70b9\u662fend\uff0c\u5c31\u4e0d\u8981\u6bd4\u4e86\uff0c\u628a\u5f53\u524d\u8282\u70b9\u8bbe\u4e3a\u65b0end\n            start = 0\n            end -= 1\n            continue\n        else:\n            right_i = left_i + 1\n            index = left_i\n            if right_i &lt; end:\n                # \u53f3\u8fb9\u6ca1\u6709\u5230end\u7684\u8bdd\uff0c\u53d6\u51fa\u503c\u6bd4\u5927\u5c0f\n                # \u5e76\u4e14\u628a\u4e0b\u4e00\u8f6e\u7684start\u8bbe\u4e3a\u9009\u4e2d\u7684\u5b50\u8282\u70b9\n                index = left_i if arr[left_i] &gt; arr[right_i] else right_i\n            parent  = arr[start]\n            if parent &lt; arr[index]:\n                arr[start], arr[index] = arr[index], arr[start]\n        # \u5982\u679c\u5de6\u53f6\u5b50\u5df2\u7ecf\u88ab\u6807\u8bb0\u4e3aend  (\u5df2\u63d0\u524dreturn)\n        # \u5982\u679c\u53f3\u8fb9\u53f6\u5b50\u88ab\u6807\u8bb0\u4e3aend\n        # \u5982\u679c\u4e0b\u4e00\u4e2a\u7d22\u5f15\u88ab\u6807\u8bb0\u4e3aend\n        # \u90fd\u8868\u793a\u672c\u8f6e\u904d\u5386\u5df2\u7ecf\u5230\u5e95, end\u5f80\u524d\u79fb\u4e00\u4f4d\u5373\u53ef\n        if right_i &gt;= end or (end - right_i) == 1:\n            start = 0 # \u7528start=0\u8868\u793a\u9700\u8981\u8fdb\u884c\u4e00\u6b21\u9996\u5c3e\u66ff\u6362\u518d\u4ece\u5934\u5230\u5c3e\u79fb\u52a8\u4e00\u6b21\n            end -= 1\n        else:\n            # \u5426\u5219\u8fdb\u5165\u4e0b\u4e00\u4e2a\u5faa\u73af\n            # \u8d77\u70b9\u5c31\u662f\u7528\u6765\u8ddf\u7236\u7ea7\u505a\u6bd4\u8f83\u7684\u7d22\u5f15\n            # \u7ec8\u70b9\u4e0d\u53d8\n            start = index\n\nif __name__ == &quot;__main__&quot;:\n    import numpy as np\n    import time\n#     np.random.seed(7)\n#     length = 20000\n#     arr = list(np.random.randint(0, length*5, size=(length,)))\n    arr = list(&quot;65318724&quot;)\n    start = time.time()\n    s = heap_sort(arr)\n    print(time.time()-start, &#39;\\n&#39;, s[:100])\n\noutput\n4.696846008300781e-05 \n ['1', '2', '3', '4', '5', '6', '7', '8']\n\n\u5f52\u5e76\u6392\u5e8f\n\u8fd9\u6b21\u5148\u770b\u56fe\u5427\uff0c\u770b\u4f60\u80fd\u603b\u7ed3\u51fa\u5565\uff1a\n\n\u7b2c\u4e00\u6b65\u662f\u628a\u6570\u7ec4\u6253\u6563\u540e\u4e24\u4e24\u6392\u5e8f\uff0c\u5b9e\u73b0\u6bcf\u4e00\u7ec4\uff082\u4e2a\u5143\u7d20\uff09\u662f\u6392\u597d\u5e8f\u7684\n\u7b2c\u4e8c\u6b65\u4ecd\u7136\u662f\u4e24\u4e24\u6392\u5e8f\uff0c\u4f46\u662f\u628a\u524d\u9762\u6392\u5e8f\u597d\u7684\u6bcf\u4e24\u4e2a\u7ec4\u6210\u4e00\u4e2a\u7ec4\uff1a\n\n\n\u8fd9\u6837\u6bcf\u7ec4\u5c31\u67092\u4e2a\u6570\u4e86\uff0c\u4f46\u7ec4\u6570\u5c31\u51cf\u534a\u4e86\n\u6bcf\u4e00\u7ec4\u62ff\u51fa\u5f53\u524d\u6700\u524d\u9762\u7684\u6570\u51fa\u6765\u6bd4\u8f83\uff0c\u6bcf\u6b21\u63111\u4e2a\u6700\u5c0f\u7684\uff0c\u79fb\u51fa\u6765\n\u5269\u4e0b\u7684\u7ec4\u91cc\u6570\u5b57\u6709\u591a\u6709\u5c11\uff0c\u4ecd\u7136\u6bd4\u8f83\u7ec4\u91cc\u9762\u6392\u6700\u524d\u7684\u90a3\u4e2a\uff08\u56e0\u4e3a\u6bcf\u7ec4\u5df2\u7ecf\u4ece\u5c0f\u5230\u5927\u6392\u597d\u4e86\uff0c\u6700\u524d\u9762\u90a3\u4e2a\u5c31\u662f\u7ec4\u91cc\u6700\u5c0f\u7684\uff09\n\u6240\u4ee5\u4ee3\u7801\u91cc\u80fd\u8ddf\u8e2a\u4e24\u4e2a\u7ec4\u91cc\u5f53\u524d\u7684\u201c\u6700\u524d\u7684\u7d22\u5f15\u201d\u662f\u591a\u5c11\u5c31\u884c\u4e86\n\n\n\u7ee7\u7eed\u5408\u5e76\uff0c\u5355\u4ece\u7406\u8bba\u4e0a\u4f60\u4e5f\u80fd\u53d1\u73b0\uff0c\u6bcf\u7ec4\u7684\u6570\u5b57\u4e2a\u6570\u4f1a\u8d8a\u6765\u8d8a\u591a\uff0c\u7ec4\u6570\u5374\u8d8a\u6765\u8d8a\u5c11\uff0c \u663e\u7136\uff0c\u6700\u7ec8\u4f1a\u5f52\u5e76\u6210\u4e00\u4e2a\u7ec4\uff0c\u800c\u4e14\u5df2\u7ecf\u662f\u6392\u597d\u5e8f\u4e86\u7684\u3002\n\n\u8fd9\u5c31\u662f\u5f52\u5e76\u540d\u5b57\u7684\u7531\u6765\u3002\u540e\u9762\u8fd8\u6709\u4e00\u79cd\u5e0c\u5c14\u7b97\u6cd5\uff0c\u6b63\u597d\u662f\u5b83\u7684\u76f8\u53cd\uff0c\u5373\u6253\u5f97\u8d8a\u6765\u8d8a\u6563\uff0c\u6563\u6210\u6bcf\u7ec4\u53ea\u6709\u4e00\u4e2a\u5143\u7d20\u7684\u65f6\u5019\uff0c\u6392\u5e8f\u4e5f\u6392\u597d\u4e86\uff0c\u770b\u5230\u90a3\u4e00\u8282\u7684\u65f6\u5019\u6ce8\u610f\u5bf9\u6bd4\u3002import math\ndef merge_sort(arr):\n    &#39;&#39;&#39;\n    \u6bcf\u4e00\u8f6e\u6bd4\u8f83\u7684\u65f6\u5019\u662f\u628a\u9009\u4e2d\u7684\u5143\u7d20\u586b\u5230\u53e6\u4e00\u4e2a\u6570\u7ec4\u91cc\n    \u4e3a\u4e86\u51cf\u5c11\u5185\u5b58\u6d88\u8017\uff0c\u5c31\u5faa\u73af\u7528\u4e24\u4e2a\u6570\u7ec4\n    \u6211\u4eec\u7528\u4ea4\u66ff\u8bbe\u7f6ei\u548cj\u4e3a0\u548c1\u6765\u5b9e\u73b0\u8fd9\u4e2a\u903b\u8f91\n    &#39;&#39;&#39;\n    start    = 0\n    step     = 1\n    length   = len(arr) - 1\n    lists    = [arr, []]\n    i, j     = 0, 1\n    while step &lt; length:\n        compare(lists[i], start, step, length, lists[j])\n        step *= 2\n        i, j  = j, i\n    return lists[i]\n\ndef gen_indexs(start, step, length):\n    &#39;&#39;&#39;\n    \u6839\u636e\u5de6\u8fb9\u754c\u548c\u6b65\u957f\u786e\u5b9a\u672c\u8f6e\u62ff\u6765\u6bd4\u8f83\u7684\u4e24\u4e2a\u6570\u7ec4\u7684\u8fb9\u754c\n    &#39;&#39;&#39;\n    left_end    = start + step - 1\n    right_start = min(start + step, length)\n    right_end   = min(right_start + step - 1, length)\n    return start, left_end, right_start, right_end\n\n\ndef compare(arr, start, step, length, result):\n    result.clear()\n    left_start, left_end, right_start, right_end \\\n                = gen_indexs(start, step, length)\n    left_index  = 0  # \u7ec4\u5185\u7d22\u5f15(0, step-1)\n    right_index = 0\n    while left_start &lt;= length:\n        left    = left_start + left_index\n        right   = min(right_start + right_index, length)\n        l_done  = False\n        r_done  = False\n        if arr[left] &lt; arr[right]:\n            result.append(arr[left])\n            left_index += 1\n            left   = left_start + left_index\n            l_done = left == right_start\n        else:\n            result.append(arr[right])\n            right_index += 1\n            r_done = (right_start + right_index) &gt; right_end\n        if l_done or r_done:\n            if l_done:\n                # \u5de6\u8fb9\u6ca1\u6570\u4e86\uff0c\u53f3\u8fb9\u7684\u6570\u5168\u585e\u5230result\u91cc\u53bb\n                result += arr[right:right_end]\n                result.append(arr[right_end])\n            else:\n                # \u53f3\u8fb9\u6ca1\u6570\u4e86\uff0c\u5de6\u8fb9\u5269\u4e0b\u7684\u6570\u5168\u585e\u5230result\u91cc\u53bb\n                result += arr[left:right_start]\n            left_start, left_end, right_start, right_end \\\n                        = gen_indexs(right_end+1, step, length)\n            left_index  = 0\n            right_index = 0\n\nif __name__ == &quot;__main__&quot;:\n    import numpy as np\n    import time\n#     np.random.seed(7)\n#     length = 20000\n#     arr = list(np.random.randint(0, length*5, size=(length,)))\n    arr = [1,6,17,5,2,9,3,1,22,9,8,0,7,65]#,2,13,4,6,17,33,8,0,4,17,22]\n    start = time.time()\n    s = merge_sort(arr)\n    print(time.time()-start, s[:100])\n\noutput\n5.626678466796875e-05\n[0, 1, 1, 2, 3, 5, 6, 7, 8, 9, 9, 17, 22, 65]\n\n\u4ee5\u4e0a\u662f\u6211\u5bf9\u7740\u52a8\u753b\u5b9e\u73b0\u7684\u4e00\u4e2a\u7248\u672c\uff0c\u5f88\u7e41\u7410\uff0c\u800c\u4e14\u53ea\u662f\u76f4\u89c2\u5730\u628a\u52a8\u753b\u6f14\u793a\u4e86\u4e00\u904d\uff0c\u5373\u5148\u4e24\u4e24\u7ec4\u5408\uff0c\u5bf9\u6bd4\uff0c\u518d\u56db\u56db\u5bf9\u6bd4\uff0c\u76f4\u5230\u6700\u540e\u53ea\u6709\u4e24\u4e2a\u5927\u6570\u7ec4\uff0c\u6bd4\u4e00\u6b21\u3002\u76f4\u5230\u6211\u770b\u5230\u8fd9\u4e2a\u601d\u8def\uff0c\u6211\u628a\u5b83\u5b9e\u73b0\u51fa\u6765\u5982\u4e0b\uff1adef mergesort(arr, start=0, end=None):\n    end = end or len(arr)\n    if end - start &gt; 1:\n        mid = (start + end + 1) // 2\n        mergesort(arr, start, mid) # left\n        mergesort(arr, mid, end) # right\n        sort(arr, start, mid, end) \n        # \u6700\u91cc\u5c42\uff1a([0:1],[1:2]) -&gt; (start, mid, end) \u4e3a(0,1,2)\n        # \u6240\u4ee5\u9000\u51fa\u6761\u4ef6\u662f end - start &gt; 1\n\ndef sort(arr, left, mid, right):\n    p1 = left\n    p2 = mid\n    temp = [] # \u672c\u8f6e\u6392\u5e8f\u7684\u7ed3\u679c\n    # \u5de6\u53f3\u4e24\u4e2a\u6570\u7ec4\u5206\u522b\u6309\u987a\u5e8f\u53d6\u51fa\u6700\u524d\u4e00\u4e2a\u6765\u6bd4\u8f83\u5927\u5c0f\n    # \u5c0f\u6570\u62ff\u5230\u4e34\u65f6\u6570\u7ec4\u91cc\u53bb\uff0c\u6e38\u6807\u52a01\n    while p1 &lt; mid and p2 &lt; right:\n        if arr[p2] &gt; arr[p1]:\n            temp.append(arr[p1])\n            p1 += 1\n        else:\n            temp.append(arr[p2])\n            p2 += 1\n    # \u4e0d\u7ba1\u662f\u5de6\u8fb9\u8fd8\u662f\u53f3\u8fb9\uff0c\u5269\u4e0b\u7684\u90fd\u662f\u5df2\u7ecf\u6392\u597d\u7684\uff08\u5927\u6570\uff09\uff0c\u76f4\u63a5\u63a5\u5230\u6570\u7ec4\u540e\u9762\n    if p1 &lt; mid:\n        temp += arr[p1:mid]\n    elif p2 &lt; right:\n        temp += arr[p2:right]\n\n    arr[left:right] = temp\n\nsort\u90e8\u5206\u6ca1\u53d8\uff0c\u8fd8\u662f\u4e24\u8fb9\u6bd4\u8f83\uff0c\u6c38\u8fdc\u53d6\u5c0f\u7684\u4e00\u4e2a\uff0c\u76f4\u5230\u6392\u6210\u4e00\u6392\u53d8\u6210\u4e00\u7ec4\u3002\u4e3b\u4f53\u53d8\u6210\u4e86mergesort()\u7684\u9012\u5f52\u3002\u7528\u6587\u5b57\u63cf\u8ff0\u7684\u8bdd\uff0c\u5c31\u662f\u8fd9\u4e2a\u65b9\u6cd5\u5c31\u505a\u4e86\u4e00\u4ef6\u4e8b\uff1a\u628a\u5f53\u524d\u6570\u7ec4\u5de6\u53f3\u5206\u5f00\uff0c\u7136\u540e\u7528\u6c38\u8fdc\u53d6\u6700\u524d\u4e00\u4e2a\u6765\u5f53\u6700\u5c0f\u503c\u7684\u65b9\u5f0f\uff08sort\u65b9\u6cd5\uff09\u5b8c\u6210\u6392\u5e8f\u3002\n\u7b49\u4e8e\u662f\u76f4\u63a5\u5c31\u8d70\u5230\u4e86\u6211\u5b9e\u73b0\u7684\u65b9\u6cd5\u7684\u6700\u540e\u4e00\u6b65\uff0c\u800c\u7528\u9012\u5f52\u7684\u65b9\u5f0f\uff0c\u8ba9\u66f4\u5c0f\u7684\u5355\u5143\u5b8c\u6210\u6392\u5e8f\uff0c\u6bd4\u5982\u6bcf8\u4e2a\uff0c\u6bcf4\u4e2a\uff0c\u6bcf2\u4e2a\uff0c\u771f\u5b9e\u53d1\u751f\u6392\u5e8f\u7684\u65f6\u5019\uff0c\u4ecd\u7136\u662f\u6211\u5199\u7684\u4ee3\u7801\u7684\u7b2c\u4e00\u5c42\uff0c\u5c31\u662f\u4e24\u4e24\u6392\u5e8f\u3002\u4f46\u662f\u4ee3\u7801\u7b80\u6d01\u62bd\u8c61\u597d\u591a\u3002\u5982\u679c\u628a\u9012\u5f52\u7406\u89e3\u4e3a\u5f02\u6b65\u7684\u8bdd\uff1aawait sort_lert()\nawait sort_right()\nsort(left, right)\n\n\u5373\u4ee3\u7801\u771f\u8d70\u5230\u7b2c3\u884c\u4e86\u7684\u8bdd\uff0c\u6240\u6709\u7684\u6570\u636e\u5df2\u7ecf\u6392\u597d\u5e8f\u4e86\u57fa\u6570\u6392\u5e8f\n\u770b\u56fe\uff0c\u4e3a\u4ec0\u4e48\u4ece\u4e2a\u4f4d\u5411\u9ad8\u4f4d\u4f9d\u6b21\u6392\u8fc7\u53bb\u4e3a\u4ec0\u4e48\u5c31\u80fd\u4fdd\u8bc1\u540e\u9762\u9ad8\u4f4d\u7684\u6392\u5e8f\u4e0d\u4f1a\u5f71\u54cd\u4f4e\u5e8f\u7684\uff0c\u76f4\u89c2\u6765\u7406\u89e3\u7684\u8bdd\uff0c\u5c31\u662f\n\u5982\u679c\u9ad8\u4f4d\u6570\u5b57\u4e0d\u4e00\u6837\uff0c\u90a3\u4e48\u4f4e\u4f4d\u987a\u5e8f\u662f\u6ca1\u610f\u4e49\u7684\uff0c\u6309\u9ad8\u4f4d\u5927\u5c0f\u6392\u5373\u53ef\n\u5982\u679c\u9ad8\u4f4d\u6570\u5b57\u4e00\u6837\uff0c\u90a3\u4e48\u4f4e\u4f4d\u5df2\u7ecf\u6392\u597d\u5e8f\u4e86\n\u6309\u8fd9\u4e2a\u903b\u8f91\u7531\u4f4e\u4f4d\u5411\u9ad8\u4f4d\u6392\uff0c\u6309\u5f52\u7eb3\u6cd5\uff0c\u53ef\u4ee5\u63a8\u5230\u9002\u7528\u666e\u904d\u60c5\u51b5\u7684\n\n\u8fd9\u91cc\u5c31\u6709\u4e00\u4e2a\u903b\u8f91bug\u4e86\uff0c\u6211\u672c\u6765\u5c31\u662f\u8981\u6839\u636e\u5927\u5c0f\u6392\u5e8f\u6bd4\u59821\u4e07\u4e2a\u6570\u5b57\uff0c\u7ed3\u679c\u4f60\u8bf4\u8981\u5148\u628a\u8fd91\u4e07\u4e2a\u6570\u5b57\u6839\u636e\u4e2a\u4f4d\u6570\u5927\u5c0f\u6392\u4e00\u904d\uff0c\u518d\u6839\u636e\u5341\u4f4d\u6570\u5927\u5c0f\u6392\u4e00\u904d\uff0c\u6211\u65e0\u6570\u6b21\u5730\u6392\u8fd91\u4e07\u4e2a\u6570\u5b57\uff0c\u4e3a\u4f55\u4e0d\u76f4\u63a5\u6309\u5927\u5c0f\u628a\u5b83\u6392\u597d\u7b97\u4e86\u5462\uff1f\u8fd9\u5c31\u662f\u8fd9\u4e2a\u7b97\u6cd5\u5b58\u5728\u7684\u610f\u4e49\u5427\uff0c\u6839\u636e\u4f4d\u6570\u6392\u5e8f\u6570\u6b21\u5feb\u7684\u5f88\uff0c\u56e0\u4e3a\u4f60\u4e0d\u9700\u8981\u6392\u5b83\uff0c\u4f60\u53ea\u9700\u8981\u505a10\u4e2a\u5bb9\u5668\uff0c\u7f16\u53f7\u4e3a0-9\uff0c\u4f60\u8981\u6392\u5e8f\u7684\u4f4d\u6570\u4e0a\uff0c\u6570\u5b57\u662f\u51e0\u5c31\u628a\u6574\u4e2a\u6570\u5b57\u4e22\u5230\u5bf9\u5e94\u7f16\u53f7\u7684\u5bb9\u5668\u91cc\uff0c\u81ea\u7136\u5c31\u5b9e\u73b0\u4e86\u6392\u5e8f\uff0c\u56e0\u4e3a0-9\u672c\u8eab\u5c31\u662f\u4e2a\u6392\u597d\u4e86\u5e8f\u7684\u6570\u7ec4\u3002\n\u4f60\u751a\u81f3\u53ef\u4ee5\u7528\u5b57\u5178\uff0ckey\u5c31\u662f0\u52309\uff0c\u4f46\u6570\u7ec4\u5929\u751f\u81ea\u5e26\u4e86\u6570\u5b57Index\uff0c\u4f55\u4e50\u800c\u4e0d\u4e3a\uff1f\n\u6f14\u793a\uff1a385, 17, 45, 26, 72, 1265, \u7528\u4e2a\u4f4d\u6570\u5b57\u6392\u5e8f\uff0c\u6392\u597d\u540e\u7684\u5bb9\u5668\uff08\u6570\u7ec4\uff09\u5e94\u8be5\u662f\uff1a[\n    [],\n    [],\n    [72],\n    [],\n    [],\n    [835, 45, 1265],\n    [26],\n    [17],\n    [],\n    []\n]\n\n\u5176\u5b9e\u8fd9\u4e5f\u662f\u6392\u5e8f\uff0c\u548c\u63a5\u4e0b\u6765\u8981\u8bb2\u7684\u63d2\u5165\u6392\u5e8f\u5f88\u50cf\u3002\u5b83\u6ca1\u6709\u67e5\u627e\u7684\u8fc7\u7a0b\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a0\u3002\u4e0a\u9762\u5267\u900f\u7684shell\u6392\u5e8f\u8fd8\u6ca1\u8bb2\uff0c\u53c8\u5267\u900f\u4e86\u53e6\u4e00\u4e2a\u3002\u522b\u7684\u5c31\u6ca1\u5565\u597d\u8bf4\u7684\u4e86\uff0c\u7531\u4f4e\u4f4d\u5230\u9ad8\u4f4d\u5faa\u73af\u5c31\u662f\u4e86\u3002def get_number(num, index):\n    &#39;&#39;&#39;\n    \u63d0\u53d6\u6307\u5b9a\u4f4d\u6570\u6570\u5b57\u7684\u65b9\u6cd5\uff1a\n    \u4e2a\u4f4d\uff1a527 % 10^1 // 10^0 = 7\n    \u5341\u4f4d\uff1a527 % 10^2 // 10^1 = 2\n    \u767e\u4f4d\uff1a527 % 10^3 // 10^2 = 5\n    \u5343\u4f4d\uff1a527 % 10^4 // 10^3 = 0\n    &#39;&#39;&#39;\n    return num % 10**(index+1) // 10**index\n\ndef digit_length(number):\n    import math\n    return 1 if abs(number) &lt; 10 else int(math.log10(abs(number)) + 1)\n\ndef digit_sort(arr, index):\n    &#39;&#39;&#39;\n    \u5bf9\u7b2cindex\u4e2a\u6570\u5b57\u8fdb\u884c\u6392\u5e8f\n    &#39;&#39;&#39;\n    results = []\n    for i in range(11):\n        results.append([]) # [[]] * 10 \u4f1a\u9020\u6210\u5f15\u7528\u4f20\u9012\n    for num in arr:\n        i = get_number(num, index)\n        results[i].append(num)\n    return [digit for sublist in results for digit in sublist]  # flatten the 2-d array\n\ndef radix_sort(arr):\n    length = digit_length(max(arr)) # \u6f14\u793a\u5982\u4f55\u4ece\u6570\u5b66\u4e0a\u53d6\u5f97\u6570\u5b57\u7684\u957f\u5ea6\uff08\u51e0\u5341\u4e07\u6b21\u8fed\u4ee3\u6548\u7387\u53ea\u6709\u6beb\u7c73\u7ea7\u7684\u5dee\u522b\uff09\n    for i in range(length):\n        arr = digit_sort(arr, i)\n    return arr\n\nif __name__ == &quot;__main__&quot;:\n    import numpy as np\n    import time\n#     np.random.seed(7)\n#     length = 20000\n#     arr = list(np.random.randint(0, length*50, size=(length,)))\n    arr = [954,354,309,411]\n    start = time.time()\n    s = radix_sort(arr)\n    print(time.time()-start, s[:100])\n\noutput:\n0.0008242130279541016\n[309, 354, 411, 954]\n\n\u63d2\u5165\u6392\u5e8f\n\u51c6\u5907\u4e00\u4e2a\u7a7a\u6570\u7ec4\uff0c\u4f9d\u6b21\u628a\u539f\u6570\u7ec4\u7684\u6bcf\u4e00\u4e2a\u6570\u63d2\u5165\u5230\u8be5\u6570\u7ec4\u91cc\u7684\u9002\u5f53\u4f4d\u7f6e\u3002\u4e0a\u9762\u8bf4\u7684\u57fa\u6570\u6392\u5e8f\u91cc\u7684\u6309\u4f4d\u521d\u6392\u5c31\u6709\u70b9\u7c7b\u4f3c\u63d2\u5165\u6392\u5e8f\uff0c\u53ea\u4e0d\u8fc7\u57fa\u6570\u6392\u5e8f\u91cc\u4e0d\u9700\u8981\u6bd4\u8f83\u5927\u5c0f\uff08\u5373235\uff0c 15\uff0c 1375\uff09\u8fd9\u6837\u7684\u6570\uff0c\u5982\u679c\u770b\u4e2a\u4f4d\uff0c\u90fd\u662f\u5728\u7d22\u5f155\u7684\u4f4d\u7f6e\uff0c\u4e14\u65e0\u5e8f\uff09\uff0c\u800c\u4e14\u63d2\u5165\u7684\u4f4d\u7f6e\u662f\u56fa\u5b9a\u7684\uff0c\u6240\u4ee5\u6ca1\u6709\u65f6\u95f4\u590d\u6742\u5ea6\u3002\u800c\u63d2\u5165\u6392\u5e8f\u5219\u5b9e\u5b9e\u5728\u5728\u5730\u8981\u5728\u6392\u5165\u7684\u6570\u7ec4\u91cc\u904d\u5386\u624d\u80fd\u627e\u5230\u6b63\u786e\u7684\u63d2\u5165\u4f4d\u7f6e\uff0c\u8d8a\u6392\u5230\u540e\u9762\uff0c\u65b0\u6570\u7ec4\u5c31\u8d8a\u957f\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e5f\u5c31\u8d8a\u6765\u8d8a\u5927\u4e86\u3002def insert_sort(arr):\n    rst = arr[0:1]\n    for i in arr[1:]:\n        found = False\n        for idx, j in enumerate(rst):\n            if j &gt; i:\n                rst.insert(idx, i) # \u6392\u5230\u7b2c\u4e00\u4e2a\u6bd4\u5b83\u5927\u7684\u524d\u9762\n                found = True\n                break;\n        if not found:\n            rst.append(i)\n    return rst\n\ninsert_sort([1,34,5,6,9,0])\n\noutput\n[0, 1, 5, 6, 9, 34]\n\n\u5e0c\u5c14\u6392\u5e8f\n\n\u5f52\u5e76\u6392\u5e8f\u662f\u5316\u6574\u4e3a\u96f6\uff0c\u4e24\u4e24\u6bd4\u8f83\u540e\u518d\u7ec4\u5408\uff0c\u5206\u7ec4\u8d8a\u6765\u8d8a\u5927\uff0c\u6700\u7ec8\u53d8\u6210\u4e00\u7ec4\n\u5e0c\u5c14\u6392\u5e8f\u662f\u4e00\u5f00\u59cb\u5c31\u5bf9\u534a\u5206\uff08\u6ce8\uff1a\u5982\u679c\u4e0d\u80fd\u6574\u9664\uff0c\u598211//2=5, \u8fd9\u6837\u4f1a\u67093\u7ec4\uff09\uff0c\u6bcf\u4e00\u7ec4\u76f8\u540c\u4f4d\u7f6e\u7684\u6570\u505a\u6bd4\u8f83\uff0c\u5b9e\u73b0\u4e00\u8f6e\u8fc7\u540e\u5206\u7ec4\u95f4\u540c\u4f4d\u7f6e\u7684\u6570\u662f\u987a\u5e8f\u6392\u5217\u7684\n\u6bcf\u7ec4\u5143\u7d20\u518d\u51cf\u534a\uff0c\u5c31\u4e0a\u4e00\u6761\u6765\u8bf4\u662f(5//2=2\uff0c\u5373\u4e0a\u4e00\u5c42\u4e00\u7ec45\u4e2a\uff0c\u4e0b\u4e00\u8f6e\u6bcf\u7ec4\u5c31\u53ea\u67092\u4e2a\u4e86)\uff0c\u4ee5\u6b64\u5f80\u590d\uff0c\u8ba9\u7ec4\u6570\u8d8a\u6765\u8d8a\u591a\uff0c\u7ec4\u5185\u5143\u7d20\u5374\u8d8a\u6765\u8d8a\u5c11\uff0c\u6781\u7aef\u60c5\u51b5\u5c31\u662f\u6bcf\u7ec4\u53ea\u67091\u4e2a\u4e86\uff0c\u518d\u53c2\u8003\u524d\u9762\u603b\u7ed3\u7684\u201c\u5206\u7ec4\u95f4\u540c\u4f4d\u7f6e\u7684\u6570\u662f\u987a\u5e8f\u6392\u5217\u7684\u201d\u8fd9\u4e00\u7ed3\u8bba\uff0c\u8bf4\u660e\u6574\u4e2a\u6570\u7ec4\u5df2\u7ecf\u6392\u597d\u5e8f\u4e86\uff08\u9000\u51fa\u6761\u4ef6get\uff09\u3002\u8fd9\u4e2a\u601d\u8def\u5999\u4e0d\u5999\uff1f\n\ndef shell_sort(arr):\n    group = len(arr) // 2\n\n    while group &gt; 0:\n        for i in range(group, len(arr)):\n            right   = arr[i]\n            current = i\n            while current &gt;= group and arr[current - group] &gt; right:\n                arr[current] = arr[current - group]\n                current -= group\n            arr[current] = right\n        group //= 2\n    return arr\n\nshell_sort([34,24,538,536,1])\n\noutput\n[1, 24, 34, 536, 538]\n\n\n\u6700\u540e\uff0c\u751f\u6210\u53ef\u91cd\u590d\u7684\u968f\u673a\u6570\u6d4b\u51e0\u8f6e\uff0c quick sort\u8981\u5feb\u4e00\u4e9b\uff1aif __name__ == &quot;__main__&quot;:\n    import numpy as np\n    import time\n    np.random.seed(7)\n    length = 20000\n    arr = list(np.random.randint(0, length*50, size=(length,)))\n    print(f&#39;{length} random integers sort comparation:&#39;)\n    for i in range(5):\n        print(f&#39;-------------round {i+1}------------&#39;)\n        # insert is too slow\n        # or my implementation is not so good\n#         start = time.time()\n#         s1 = insert_sort(arr)\n#         print(f&quot;insert_sort\\t {time.time()-start:.5f} seconds&quot;)\n        start = time.time()\n        s2 = quick_sort(arr.copy())\n        print(f&quot;quick_sort\\t {time.time()-start:.5f} seconds&quot;)\n        start = time.time()\n        s3 = shell_sort(arr.copy())\n        print(f&quot;shell_sort\\t {time.time()-start:.5f} seconds&quot;)\n        start = time.time()\n        s4 = heap_sort(arr.copy())\n        print(f&quot;heap_sort\\t {time.time()-start:.5f} seconds&quot;)\n        start = time.time()\n        s5 = merge_sort(arr.copy())\n        print(f&quot;merge_sort\\t {time.time()-start:.5f} seconds&quot;)\n        start = time.time()\n        s6 = radix_sort(arr.copy())\n        print(f&quot;radix_sort\\t {time.time()-start:.5f} seconds&quot;)\n    print(f&quot;first 10 numbers:\\n{s2[:10]}\\n{s3[:10]}\\n{s4[:10]}\\n{s5[:10]}\\n{s6[:10]}&quot;)\n\noutput\n20000 random integers sort comparation:\n-------------round 1------------\nquick_sort\t 0.07970 seconds\nshell_sort\t 0.17623 seconds\nheap_sort\t 0.32919 seconds\nmerge_sort\t 0.20177 seconds\nradix_sort\t 0.18000 seconds\n-------------round 2------------\nquick_sort\t 0.05894 seconds\nshell_sort\t 0.15423 seconds\nheap_sort\t 0.28844 seconds\nmerge_sort\t 0.20043 seconds\nradix_sort\t 0.19310 seconds\n-------------round 3------------\nquick_sort\t 0.06169 seconds\nshell_sort\t 0.18299 seconds\nheap_sort\t 0.33159 seconds\nmerge_sort\t 0.20836 seconds\nradix_sort\t 0.20003 seconds\n-------------round 4------------\nquick_sort\t 0.05780 seconds\nshell_sort\t 0.15414 seconds\nheap_sort\t 0.26780 seconds\nmerge_sort\t 0.18810 seconds\nradix_sort\t 0.17084 seconds\n\n", "categories": [{"name": "posts", "slug": "posts", "permalink": "/category/posts/"}], "tags": [{"name": "\u6392\u5e8f", "slug": "\u6392\u5e8f", "permalink": "/tag/%E6%8E%92%E5%BA%8F/"}, {"name": "\u7b97\u6cd5", "slug": "\u7b97\u6cd5", "permalink": "/tag/%E7%AE%97%E6%B3%95/"}]}, {"title": "\u6211\u7684\u77e5\u8bc6\u56fe\u8c31\u5165\u95e8\u7b14\u8bb0", "date": "2021-06-17T00:00:00-00.00", "path": "/archives/%E6%88%91%E7%9A%84%E7%9F%A5%E8%AF%86%E5%9B%BE%E8%B0%B1%E5%85%A5%E9%97%A8%E7%AC%94%E8%AE%B0/", "text": "Knowledge Graph\n\n\u4fe1\u606f\u662f\u6307\u5916\u90e8\u7684\u5ba2\u89c2\u4e8b\u5b9e\u3002\u4e3e\u4f8b\uff1a\u8fd9\u91cc\u6709\u4e00\u74f6\u6c34\uff0c\u5b83\u73b0\u5728\u662f7\u00b0\u3002\n\u77e5\u8bc6\u662f\u5bf9\u5916\u90e8\u5ba2\u89c2\u89c4\u5f8b\u7684\u5f52\u7eb3\u548c\u603b\u7ed3\u3002\u4e3e\u4f8b\uff1a\u6c34\u5728\u96f6\u5ea6\u7684\u65f6\u5019\u4f1a\u7ed3\u51b0\u3002\n\n\u6362\u53e5\u8bdd\u8bf4\uff0c\u77e5\u8bc6\u56fe\u8c31\u662f\u7531\u4e00\u6761\u6761\u77e5\u8bc6\u7ec4\u6210\uff0c\u6bcf\u6761\u77e5\u8bc6\u8868\u793a\u4e3a\u4e00\u4e2aSPO\u4e09\u5143\u7ec4(Subject-Predicate-Object)\u3002$\\boxed{Subject} \\xrightarrow{Predicate} \\boxed{Object}$\u8bed\u4e49\u7f51\u7edc(Semantic Network)\n\u8bed\u4e49\u7f51\u7edc\u7531\u76f8\u4e92\u8fde\u63a5\u7684\u8282\u70b9\u548c\u8fb9\u7ec4\u6210\uff0c\u8282\u70b9\u8868\u793a\u6982\u5ff5\u6216\u8005\u5bf9\u8c61\uff0c\u8fb9\u8868\u793a\u4ed6\u4eec\u4e4b\u95f4\u7684\u5173\u7cfb(is-a\u5173\u7cfb\uff0c\u6bd4\u5982\uff1a\u732b\u662f\u4e00\u79cd\u54fa\u4e73\u52a8\u7269\uff1bpart-of\u5173\u7cfb\uff0c\u6bd4\u5982\uff1a\u810a\u690e\u662f\u54fa\u4e73\u52a8\u7269\u7684\u4e00\u90e8\u5206)\u3002\u5728\u8868\u73b0\u5f62\u5f0f\u4e0a\uff0c\u8bed\u4e49\u7f51\u7edc\u548c\u77e5\u8bc6\u56fe\u8c31\u76f8\u4f3c\uff0c\u4f46\u8bed\u4e49\u7f51\u7edc\u66f4\u4fa7\u91cd\u4e8e\u63cf\u8ff0\u6982\u5ff5\u4e0e\u6982\u5ff5\u4e4b\u95f4\u7684\u5173\u7cfb\uff0c\uff08\u6709\u70b9\u50cf\u751f\u7269\u7684\u5c42\u6b21\u5206\u7c7b\u4f53\u7cfb\u2014\u2014\u754c\u95e8\u7eb2\u76ee\u79d1\u5c5e\u79cd\uff09\uff0c\u800c\u77e5\u8bc6\u56fe\u8c31\u5219\u66f4\u504f\u91cd\u4e8e\u63cf\u8ff0\u5b9e\u4f53\u4e4b\u95f4\u7684\u5173\u8054\u3002RDF(Resoure Description Framework)\nRDF(Resource Description Framework)\uff0c\u5373\u8d44\u6e90\u63cf\u8ff0\u6846\u67b6\uff0c\u662fW3C\u5236\u5b9a\u7684\uff0c\u7528\u4e8e\u63cf\u8ff0\u5b9e\u4f53/\u8d44\u6e90\u7684\u6807\u51c6\u6570\u636e\u6a21\u578b\u3002RDF\u56fe\u4e2d\u4e00\u5171\u6709\u4e09\u79cd\u7c7b\u578b\uff0cInternational Resource Identifiers(IRIs)\uff0cblank nodes \u548c literals\u3002\u4e0b\u9762\u662fSPO\u6bcf\u4e2a\u90e8\u5206\u7684\u7c7b\u578b\u7ea6\u675f\uff1a\nSubject\u53ef\u4ee5\u662fIRI\u6216blank node\u3002\u53ef\u4ee5\u7406\u89e3\u4e3aURI\nPredicate\u662fIRI\u3002\nObject\u4e09\u79cd\u7c7b\u578b\u90fd\u53ef\u4ee5\u3002\n\n\u4e5f\u5c31\u662f\u8bf4\u5b57\u9762\u91cf\u4e0d\u80fd\u505a\u4e3b\u8bed\uff1f\u5c06\u7f57\u7eb3\u5c14\u591a\u7684\u539f\u540d\u4e0e\u4e2d\u6587\u540d\u5173\u8054\u8d77\u6765\u7684RDF\u8868\u793a\uff1a$\\boxed{www.kg.com/person/1} \\xrightarrow{kg:chineseName} \\boxed{\u7f57\u7eb3\u5c14\u591a\u00b7\u8def\u6613\u65af\u00b7\u7eb3\u624e\u91cc\u5965\u00b7\u8fbe\u00b7\u5229\u9a6c}$\n\u53ef\u89c1\uff0c\u4e3b\u8bed\u7684\u6307\u4ee3\u6027\u8981\u5f3a\u5f88\u591a\uff0c\u6240\u4ee5\u5b57\u9762\u91cf\uff08\u5bbe\u8bed\uff09\u7528\u4f5c\u4e3b\u8bed\u4f1a\u4e27\u5931\u8fd9\u79cd\u7cbe\u786e\u6027\uff08\u552f\u4e00\u6027\uff09\u3002\n\n&quot;www.kg.com/person/1&quot;\u662f\u4e00\u4e2aIRI\uff0c\u7528\u6765\u552f\u4e00\u7684\u8868\u793a\u201c\u7f57\u7eb3\u5c14\u591a\u201d\u8fd9\u4e2a\u5b9e\u4f53\u3002&quot;kg:chineseName&quot;\u4e5f\u662f\u4e00\u4e2aIRI\uff0c\u7528\u6765\u8868\u793a\u201c\u4e2d\u6587\u540d\u201d\u8fd9\u6837\u4e00\u4e2a\u5c5e\u6027\u3002&quot;kg:&quot;\u662fRDF\u6587\u4ef6\u4e2d\u6240\u5b9a\u4e49\u7684prefix\uff0c\u5982\u4e0b\u6240\u793a\u3002\n@prefix kg: http://www.kg.com/ontology/ \u5373\uff0ckg:chineseName\u5176\u5b9e\u5c31\u662f&quot;http:// www.kg.com/ontology/chineseName&quot;\u7684\u7f29\u5199\u3002\n\n\u8fd9\u6837\u77e5\u8bc6\u56fe\u8c31\u7684\u6b63\u786e\u8868\u793a\u5176\u5b9e\u662f\uff1a\u800c\u4e0d\u662f\u7f51\u4f20\u7684\u7b80\u5355\u7684\u753b\u51e0\u4e2a\u5bf9\u8c61\u8fde\u51e0\u6839\u7ebf\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u80fd\u7528URI\u8868\u793a\u7684\uff0c\u5c3d\u91cf\u90fd\u7528URI\u8868\u793a\u3002Identifying graph-shaped problems(\u5e94\u7528\u573a\u666f)\n\ndoes our problem involve understanding relationships between entities?\nRecommendations\nNext best action\nFraud detection\nIdentity resolution\nData lineage\n\n\ndoes our problem involve a lot of self-referencing to the same type of entity?\nOrganisational hierachies\nSocial influencers\nFriends of friends\nChurn detection\n\n\ndoes the problem explore relationships of varying or unknown depth?\nSupply chain visibility\nBill of  Materials(BOM)\nNetwork management\n\n\ndoes our problem involve discovering lots of different routers or paths?\nLogistics and routing\nInfrastructure management\nDependency tracing\n\n\n\nNeo4j\n\n:person, :Car, :Vehicle are Label\neven relationship can also have(own) properties\n\nAsciiArt\nfor Nodes\n(p:Person:Mammal{name:'walker'})for Relationships\n- [:HIRED {type: 'fulltime'}] -&gt;CRUD\nCreate\nConstraints\n\nCREATE  CONSTRAINT ON (p:Person)\nASSERT p.name IS UNIQUE\n\n\u6240\u4ee5\u5982\u4e0b\u8bed\u53e5\u4f1a\u62a5\u9519\uff1a\nCREATE (a:Person {name: &quot;Ann&quot;})\nCREATE (a) - [:HAS_PET] -&gt; (:Dog {name: &quot;Sam&quot;})\n\n\u8981\u7528merge\nMERGE (a:Person {name: &quot;Ann&quot;})\nCREATE (a) - [:HAS_PET] -&gt; (:Dog {name: &quot;Sam&quot;})\n\nSet\n\u5c5e\u6027\u53ef\u4ee5\u7528JSON\u683c\u5f0f\u5199\uff0c\u4e5f\u53ef\u4ee5\u7528SET\u8bed\u6cd5\uff08\u4e0b\u9762\u7684\u67e5\u8be2\u8bed\u53e5\u4e5f\u662f\u4e00\u6837\uff09\nMERGE (a:Person {name: &quot;Ann&quot;})\nON CREATE SET\n    a.twitter = &quot;@ann&quot;\nMERGE (a) - [:HAS_PET] -&gt; (:Dog {name: &quot;Sam&quot;})\n\n\u540c\u65f6\uff0c\u770b\u5230\u4e86\u5417\uff1fcreate\u53ea\u80fd\u51fa\u73b0\u4e00\u6b21\uff08\u540c\u4e00\u4e2a\u5bf9\u8c61\u7684\u8bdd\uff09Read\n\nwho drives a car owned by a lover?\nMATCH\n(p1:Person) - [:DRIVES] -&gt; (c:Car) - [:OWNED_BY] -&gt; (p2:Person) &lt;- [:LOVES] - (P1)\nRETURN\np1\n\n\u5176\u4e2d\uff0c\u56e0\u4e3a\u95ee\u7684\u662flover\uff0c\u6ca1\u6709\u6307\u5411\u6027\uff0c\u6240\u4ee5\u5982\u679c\u662f\u4e24\u4e2a\u4e92\u76f8\u76f8\u7231\uff0c\u540e\u534a\u622a\u4e5f\u53ef\u4ee5\u662fp2\u6307\u5411p1\nmatch p = (n) -[*1..2] -&gt; (m) where n.name='\u7279\u6717\u666e' return p\nmatch p =  ({name: '\u7279\u6717\u666e'}) - [*1..2] -&gt; () return p # \u7b80\u5316\nmatch p = (n)-[m]-&gt;(q) where m.name = '\u4e08\u592b' return n,q skip 10 limit 5\nmatch p = (n)-[:\u4e08\u592b]-&gt;(q) return n,q skip 10 limit 5 # \u7b80\u5316\n\n\u89e3\u8bfb\uff1a\n\u4e0a\u9762\u5199\u6cd5\u5f88\u7b80\u7565\uff0c\u6ce8\u610f\u89c2\u5bdf\u4e00\u4e0b\n\u53c8\u4e00\u6b21\u6f14\u793a\u4e86\u76f4\u63a5\u7528json\u6765\u505awhere\u548c\u5355\u72ec\u7528where\u5173\u952e\u5b57\u7684\u5199\u6cd5\u533a\u522b\uff08\u8981\u591a\u547d\u540d\u4e00\u4e2a\u53d8\u91cf\uff09\np\u8ddfn\u7684\u533a\u522b\uff0cp\u662f\u8fd4\u4e86\u6574\u4e2a\u7f51\u7edc\uff0c\u5982\u679creturn n\uff0c\u90a3\u4e48\u5c31\u662fn\u81ea\u8eab(\u4e00\u4e2a\u8282\u70b9\uff09\u3002\n\n4, \u4f46\u662f\u5982\u679creturn n, m\uff0c\u90a3\u4e48\u53c8\u628a\u4e00\u5c42\u7f51\u7edc\u7ed9select\u51fa\u6765\u4e86 \n5. [*1..2]\u8868\u793a\u8ddf\u8e2a\u4e24\u5c42\n6. \u5982\u679c\u4e0d\u9700\u8981\u5bf9n,m\u8fdb\u884cwhere,set\u64cd\u4f5c\uff0c\u53ef\u4ee5\u4e0d\u8bbe\u7f6e\u53d8\u91cf\n7. relationship\u4e5f\u53ef\u4ee5\u8fc7\u6ee4\uff0c\u4e5f\u6709name\u7b49\u5c5e\u6027\n8. limit, skip \u7b49\u7528\u6cd5Tabular Results\nMATCH (p:Person {name: &quot;Tom Hanks&quot;}) - [r:ACTED_IN|DIRECTED] -&gt; (m:Movie)\nRETURN p,r,m\nRETURN p.name, type(r), m.title\n\n\u524d\u8005\u8fd4\u56deGraph\uff0c\u540e\u8005\u8fd4\u56de\u8868\u683c\u6570\u636eUpdate\n\nP.S. where\u662f\u5bf9\u5c5e\u6027\u505a\u9650\u5236\uff0c\u6240\u4ee5\u67e5\u8be2\u6761\u4ef6\u65e2\u53ef\u4ee5\u5199\u5728\u5c5e\u6027\u91cc\uff0c\u4e5f\u53ef\u4ee5\u7528where\u8bed\u53e5\u6765\u505a\u8fc7\u6ee4.\n\u8981\u5bf9\u67e5\u8be2\u7ed3\u679c\u8fdb\u884c\u4fee\u6539\uff0c\u7528set\uff08\u6709\u5219\u6539\uff0c\u65e0\u5219\u52a0\uff09\nMATCH\n(:Person {name: &quot;\u5f20\u4e09&quot;}) - [:LOVES] -&gt; (p:Person)\nRETURN\np\n\nMATCH\n(p1:Person) - [:LOVES] -&gt; (p2:Person)\nWHERE\np1.name = &quot;\u5f20\u4e09&quot;\nSET\np2.age = 33  # set by property\n# or\np2 += {age: 33, height: 180}  # set by JSON\nRETURN\np2\n\n\u53ef\u4ee5\u628aNeo4j\u7406\u89e3\u4e3a\u547d\u540d\u5b9e\u4f53\u8bc6\u522b(NER)\uff0c\u5373\u4f60\u521b\u9020\u4e00\u53e5\u8bdd\uff0c\u4e3a\u53e5\u5b50\u91cc\u7684\u6bcf\u4e2a\u5b9e\u4f53\u6253\u4e0a\u6807\u7b7e\uff0c\u7136\u540e\u4f60\u60f3\u8981\u8c01\u5c31\u7528\u5b9e\u4f53\u6807\u7b7e\u628a\u5b83\u53d6\u51fa\u6765\u3002\u6bd4\u5982\u201c\u5f20\u4e09\u7231\u674e\u56db\u201d\uff1a\nstep1: \u5199\u6846\u67b6\nCREATE () - [] -&gt; ()\nstep2: \u586b\u8282\u70b9\u548c\u5173\u8054\nCREATE (:Person {name: &quot;\u5f20\u4e09&quot;}) - [:LOVES] -&gt; (:Person {name: &quot;\u674e\u56db&quot;})\n\n\u800c\u4f60\u8981\u95ee\u5f20\u4e09\u7231\u8c01:\nMATCH\n(:Person {name: &quot;\u5f20\u4e09&quot;}) - [:LOVES] -&gt; (p:Person)\nRETURN\np\n\n\u770b\u5230\u67e5\u8be2\u8bed\u53e5\u4e86\u5417\uff1f\u9664\u4e86CREATE, MATCH\u7b49\u5173\u952e\u8bcd\uff0c\u53e5\u5b50\u987a\u5e8f\u662f\u5b8c\u5168\u4e00\u6837\u7684\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u4e00\u76f4\u662f\u5728\u201c\u9648\u8ff0\u201d\u4e00\u4ef6\u4e8b\u3002\u800c\u4e8b\u5b9e\u4e0a\uff0c\u8fd9\u4e2aNER\u5728\u77e5\u8bc6\u56fe\u8c31\u4e2d\u8868\u793a\u4e3aRDF\u3002Delete\nmatch p=(n) where n.name = &#39;\u5c0f\u660e&#39; detach delete n\n\nQuery\n\u6700\u77ed\u8ddd\u79bb\nMATCH\n  (martin:Person {name: &#39;Martin Sheen&#39;}),\n  (oliver:Person {name: &#39;Oliver Stone&#39;}),\n  p = shortestPath((martin)-[*..15]-(oliver)) # 1\n  p = allShortestPath(....) # 2\n  WHERE none(r IN relationships(p) WHERE type(r) = &#39;FATHER&#39;) # 3\nRETURN p\n\n\n\u9650\u5b9a\u4e8615\u5c42\nFinds all the shortest paths between two nodes.\n\u6392\u9664\u4e86\u5173\u7cfbtype\u4e3aFATHER\u7684\n\n\u7ed9\u4f60\u4eec\u770b\u4e00\u4e0b\u4e00\u4e2arelationships\u957f\u5565\u6837\uff1a{\n  &quot;identity&quot;: 36629,\n  &quot;start&quot;: 31343,\n  &quot;end&quot;: 33922,\n  &quot;type&quot;: &quot;author-&gt;title&quot;,\n  &quot;properties&quot;: {\n&quot;name&quot;: &quot;author-&gt;title&quot;\n  }\n}\n\n\u6a21\u7cca\u5339\u914d(%)\nmatch p = (a)-[*1..2]-&gt;(b:content) where a.name = &#39;\u674e\u767d&#39; and b.name =~ &#39;.*\u660e\u6708.*&#39; return a,b\n\n.*\u5c31\u76f8\u5f53\u4e8esql\u91cc\u7684%\u5427get by id\n\nMATCH (n)\nWHERE id(n) IN [0, 3, 5]\nRETURN n\n\n\nid(n) -&gt; search with id\nmultiple id use in\n\nouter join (optional relationships)\nmatch (a:author {name:&#39;\u674e\u767d&#39;})\noptional match (a)--&gt;(b)\nreturn b\n\n\u5728\u5b9e\u4f8b\u4e2d\uff0cb\u5305\u542b\u4e86\u4e24\u79cd\u5b9e\u4f8b\uff1a\ntitle\nintroduce\n\n\u7b49\u540c\u4e8esql\u4e2duser\u8868outer join\u4e86\u4e24\u4e2a\u8868(title, introduce)", "categories": [{"name": "posts", "slug": "posts", "permalink": "/category/posts/"}], "tags": [{"name": "\u77e5\u8bc6\u56fe\u8c31", "slug": "\u77e5\u8bc6\u56fe\u8c31", "permalink": "/tag/%E7%9F%A5%E8%AF%86%E5%9B%BE%E8%B0%B1/"}, {"name": "neo4j", "slug": "neo4j", "permalink": "/tag/neo4j/"}]}, {"title": "HMM\u3001NER\u3001PoS\u3001Viterbi\u7b14\u8bb0", "date": "2021-06-14T00:00:00-00.00", "path": "/archives/HMM%E3%80%81NER%E3%80%81PoS%E3%80%81Viterbi%E7%AC%94%E8%AE%B0/", "text": "\u5f00\u5c40\u4e00\u53e5\u8bdd\uff0c\u9690\u9a6c\u5c14\u53ef\u592b\uff0c\u5c31\u662f\u5728\u201c\u6eaf\u6e90\u201d\uff0c\u5373\u4ea7\u751f\u4f60\u8fd9\u4e2a\u73b0\u8c61\u7684\u6e90\u5934\u5728\u54ea\u3002\n\u6bd4\u5982\u4f60\u63b7\u51fa\u7684\u8fd9\u4e2a\u663e\u793a\u4e3a6\u7684\u9ab0\u5b50\uff0c\u662f\u6765\u81ea\u4e8e\u516d\u9762\u4f53\u7684\u8fd8\u662f\u56db\u9762\u4f53\u7684\uff0c\u6216\u662f\u6765\u81ea\u4e8e\u666e\u901a\u7684\u8fd8\u662f\u704c\u94c5\u4e86\u7684\n\u53c8\u6bd4\u5982\u4f60\u4e00\u53e5\u8bdd\u91cc\u7684\u67d0\u4e00\u4e2a\u8bcd\uff0c\u5b83\u662f\u5904\u4e8e\u5f00\u59cb\u4f4d\u7f6e\u8fd8\u662f\u4e2d\u95f4\u4f4d\u7f6e\uff0c\u6216\u662f\u5b83\u662f\u4e00\u4e2a\u4eba\u540d\u8fd8\u662f\u4e00\u4e2a\u5730\u70b9\u6216\u662f\u4e00\u4e2a\u4ecb\u8bcd\n\n\u4efb\u4f55\u4e00\u79cd\u8868\u73b0\u5f62\u5f0f\uff0c\u90fd\u6709\u4e00\u4e2a\u5b83\u7684\u201c\u539f\u56e0\u201d\u6216\u201c\u5c5e\u6027\u201d\u3002 \u73b0\u5728\u6b63\u5f0f\u5f00\u59cb\uff0c\u6765\u81ea\u6211\u80fd\u7406\u89e3\u7684\u7f51\u7edc\u8d44\u6599\uff0c\u6211\u7684\u8bfe\u7a0b\uff0c\u4ee5\u53ca\u4e00\u4e9b\u601d\u8003\u9996\u5148\u51e0\u4e2a\u57fa\u7840\u6982\u5ff5\uff1a\u547d\u540d\u5b9e\u4f53\u8bc6\u522b(NER)\n\u5b9e\u4f53\uff1a\u4eba\u7269(PER)\uff0c\u5730\u70b9(LOC)\uff0c\u7b49\nBIOES: \u5f00\u59cb(Begin)\uff0c \u4e2d\u95f4(Inner)\uff0c \u7ed3\u5c3e(E)\uff0c\u5355\u4e2a(Single)\uff0c\u5176\u5b83(Other)\u6bd4\u5982\u4eba\u540d\uff1a\u5f20\u5317\u4eac\uff0c\u5c31\u53ef\u4ee5\u88ab\u8bc6\u522b\u4e3a$\\Rightarrow$ B-PER, I-PER, E-PERPart-of-Speech Tagging\uff08\u8bcd\u6027\u6807\u6ce8\uff09\n\u8bcd\u6027\u6807\u6ce8\u662f\u4e3a\u8f93\u5165\u6587\u672c\u4e2d\u7684\u6bcf\u4e2a\u8bcd\u6027\u6807\u6ce8\u8bcd\u5206\u914d\u8bcd\u6027\u6807\u8bb0\u7684\u8fc7\u7a0b\u3002\u6807\u8bb0\u7b97\u6cd5\u7684\u8f93\u5165\u662f\u4e00\u7cfb\u5217(\u6807\u8bb0\u5316\u7684)\u5355\u8bcd\u548c\u6807\u8bb0\u96c6\uff0c\u8f93\u51fa\u662f\u4e00\u7cfb\u5217\u6807\u8bb0\uff0c\u6bcf\u4e2a\u6807\u8bb0\u4e00\u4e2a\u3002\u6807\u8bb0\u662f\u4e00\u9879\u6d88\u9664\u6b67\u4e49\u7684\u4efb\u52a1;\u5355\u8bcd\u662f\u6a21\u7cca\u7684\uff0c\u6709\u4e0d\u6b62\u4e00\u4e2a\u53ef\u80fd\u7684\u8bcd\u6027(\u6b67\u4e49)\uff0c\u6211\u4eec\u7684\u76ee\u6807\u662f\u4e3a\u8fd9\u79cd\u60c5\u51b5\u627e\u5230\u6b63\u786e\u7684\u6807\u7b7e\u3002\u4f8b\u5982\uff0cbook\u53ef\u4ee5\u662f\u52a8\u8bcd(book that flight)\uff0c\u4e5f\u53ef\u4ee5\u662f\u540d\u8bcd(hand me that book)\u3002That\u53ef\u4ee5\u662f\u4e00\u4e2a\u9650\u5b9a\u8bcd(Does that flight serve dinner)\uff0c\u4e5f\u53ef\u4ee5\u662f\u4e00\u4e2a\u8865\u8bed\u8fde\u8bcd(I thought that your flight was earlier)\u3002\u540e\u7f6e\u6807\u8bb0\u7684\u76ee\u6807\u662f\u89e3\u51b3\u8fd9\u4e9b\u5206\u8fa8\u7387\u6a21\u7cca\uff0c\u4e3a\u4e0a\u4e0b\u6587\u9009\u62e9\u5408\u9002\u7684\u6807\u8bb0Sequence model\nSequence models are central to NLP: they are models where there is some sort of dependence through time between your inputs.\nThe classical example of a sequence model is the Hidden Markov Model for part-of-speech tagging. (\u8bcd\u6027\u6807\u6ce8)\nAnother example is the conditional random field.\n\nHMM\u6a21\u578b\u7684\u5178\u578b\u5e94\u7528\u662f\u8bcd\u6027\u6807\u6ce8\u8bcd\u6027\u6807\u6ce8\u8bed\u6599\u5e93\u662f\u7edf\u8ba1\u6807\u6ce8\u7b97\u6cd5\u7684\u5173\u952e\u8bad\u7ec3(\u548c\u6d4b\u8bd5)\u96c6\u3002\u4e09\u4e2a\u4e3b\u8981\u7684\u6807\u6ce8\u8bed\u6599\u5e93\u59cb\u7ec8\u7528\u4e8e\u8bad\u7ec3\u548c\u6d4b\u8bd5\u82f1\u8bed\u8bcd\u6027\u6807\u6ce8\u5668\u3002\n\u5e03\u6717\u8bed\u6599\u5e93\u662f1961\u5e74\u5728\u7f8e\u56fd\u51fa\u7248\u7684500\u7bc7\u4e0d\u540c\u4f53\u88c1\u7684\u4e66\u9762\u6587\u672c\u7684100\u4e07\u5355\u8bcd\u6837\u672c\u3002\n\u300a\u534e\u5c14\u8857\u65e5\u62a5\u300b\u8bed\u6599\u5e93\u6536\u5f55\u4e861989\u5e74\u53d1\u8868\u5728\u300a\u534e\u5c14\u8857\u65e5\u62a5\u300b\u4e0a\u7684100\u4e07\u4e2a\u5355\u8bcd\u3002\n\u603b\u673a\u8bed\u6599\u5e93\u75311990-1991\u5e74\u6536\u96c6\u7684200\u4e07\u5b57\u7535\u8bdd\u5bf9\u8bdd\u7ec4\u6210\u3002\u8bed\u6599\u5e93\u7684\u521b\u5efa\u662f\u901a\u8fc7\u5728\u6587\u672c\u4e0a\u8fd0\u884c\u4e00\u4e2a\u81ea\u52a8\u7684\u8bcd\u6027\u6807\u8bb0\uff0c\u7136\u540e\u7531\u4eba\u5de5\u6ce8\u91ca\u5668\u624b\u5de5\u66f4\u6b63\u6bcf\u4e2a\u6807\u8bb0\u3002\n\nHMM\nHMM\u662f\u4e00\u4e2a\u5e8f\u5217\u6a21\u578b(sequence model)\u3002\u5e8f\u5217\u6a21\u578b\u6216\u5e8f\u5217\u5206\u7c7b\u5668\u662f\u4e00\u4e2a\u6a21\u578b\uff0c\u5176\u5de5\u4f5c\u662f\u4e3a\u5e8f\u5217\u4e2d\u7684\u6bcf\u4e2a\u5355\u5143\u5206\u914d\u4e00\u4e2a\u6807\u7b7e\u6216\u7c7b\uff0c\u4ece\u800c\u5c06\u4e00\u4e2a\u89c2\u5bdf\u5e8f\u5217(\u89c2\u5bdf\u72b6\u6001)\u6620\u5c04\u5230\u4e00\u4e2a\u6807\u7b7e\u5e8f\u5217(\u9690\u85cf\u72b6\u6001)\u3002HMM\u662f\u4e00\u79cd\u6982\u7387\u5e8f\u5217\u6a21\u578b\uff1a\u7ed9\u5b9a\u4e00\u4e2a\u5355\u4f4d\u5e8f\u5217(\u5355\u8bcd\u3001\u5b57\u6bcd\u3001\u8bed\u7d20\u3001\u53e5\u5b50\u7b49\u7b49)\uff0c\u5b83\u8ba1\u7b97\u53ef\u80fd\u7684\u6807\u7b7e\u5e8f\u5217\u7684\u6982\u7387\u5206\u5e03\uff0c\u5e76\u9009\u62e9\u6700\u4f73\u6807\u7b7e\u5e8f\u5217\u3002\n3\u4e2a\u9ab0\u5b50\uff0c6\u9762\u4f53\uff0c4\u9762\u4f53\uff0c8\u9762\u4f53(D6, D4, D8)\n\u6bcf\u6b21\u968f\u673a\u9009\u51fa\u4e00\u4e2a\u9ab0\u5b50\u6295\u63b7\uff0c\u5f97\u5230\u4e00\u4e2a\u6570\u5b57\n\u5171\u5341\u6b21\uff0c\u5f97\u523010\u4e2a\u6570\u5b57\n\n\n\u53ef\u89c1\u72b6\u6001\u94fe\uff1a10\u6b21\u6295\u63b7\u5f97\u523010\u4e2a\u6570\u5b57(1,3,5...)$\\Rightarrow$\u5bf9\u5e94\u4f60\u770b\u5f97\u768410\u4e2a\u5355\u8bcd\n\u9690\u542b\u72b6\u6001\u94fe\uff1a\u6bcf\u4e00\u6b21\u6295\u63b7\u90fd\u6709\u53ef\u80fd\u62ff\u5230\u4e09\u79cd\u9ab0\u5b50\u4e4b\u4e00\uff0c(D6, D6, D4...) $\\Rightarrow$\u5bf9\u5e94\u4e3a\u6bcf\u4e2a\u5355\u8bcd\u7684\u8bcd\u6027\n\u8f6c\u6362\u6982\u7387\uff08transition probability\uff09\uff1a\u9690\u542b\u72b6\u6001\u4e4b\u95f4\u7684\u6982\u7387($\\Rightarrow$\u5bf9\u5e94\u4e3a\u8bed\u6cd5)\uff1a\n\u6bcf\u4e00\u6b21\u62ff\u5230\u67d0\u79cd\u9ab0\u5b50\u4e4b\u540e\uff0c\u4e0b\u4e00\u6b21\u62ff\u5230\u4e09\u79cd\u9ab0\u5b50\u7684\u6982\u7387\uff08[1/3,1/3,1/3],...)\n\u6216\u8005\u8bf4\u4e3b\u52a8\u51b3\u7b56\u4e0b\u4e00\u6b21\u7528\u54ea\u4e2a\u9ab0\u5b50\u7684\u6982\u7387[a,b,c...] (\u76f8\u52a0\u4e3a1)\n\n\n\u53ef\u89c1\u72b6\u6001\u4e4b\u95f4\u6ca1\u6709\u8f6c\u6362\u6982\u7387\n\u8f93\u51fa\u6982\u7387\uff08emission probability\uff09\uff1a\u9690\u542b\u72b6\u6001\u548c\u53ef\u89c1\u72b6\u6001\u4e4b\u95f4\u7684\u6982\u7387\uff0c\u6bd4\u5982D4\u4e0b1\u7684\u6982\u7387\u4e3a1/4\uff0cD6\u4e0b\u4e3a1/6 (\u8868\u73b0\u6982\u7387\uff0c\u6fc0\u53d1\u6982\u7387\uff0c\u591a\u79cd\u7ffb\u8bd1)\n\n\u5e94\u7528HMM\u6a21\u578b\u65f6\u5019\uff0c\u5f80\u5f80\u662f\u7f3a\u5931\u4e86\u4e00\u90e8\u5206\u4fe1\u606f\u7684\uff0c\n\u6709\u65f6\u5019\u4f60\u77e5\u9053\u9ab0\u5b50\u6709\u51e0\u79cd\uff0c\u6bcf\u79cd\u9ab0\u5b50\u662f\u4ec0\u4e48\uff0c\u4f46\u662f\u4e0d\u77e5\u9053\u63b7\u51fa\u6765\u7684\u9ab0\u5b50\u5e8f\u5217\uff1b\n\u6709\u65f6\u5019\u4f60\u53ea\u662f\u770b\u5230\u4e86\u5f88\u591a\u6b21\u63b7\u9ab0\u5b50\u7684\u7ed3\u679c\uff0c\u5269\u4e0b\u7684\u4ec0\u4e48\u90fd\u4e0d\u77e5\u9053\u3002\n\n\u5982\u4f55\u5e94\u7528\u7b97\u6cd5\u53bb\u4f30\u8ba1\u8fd9\u4e9b\u7f3a\u5931\u7684\u4fe1\u606f\uff0c\u5c31\u6210\u4e86\u4e00\u4e2a\u5f88\u91cd\u8981\u7684\u95ee\u9898\uff0c\u8fd9\u4e5f\u662fHMM\u6a21\u578b\u80fd\u505a\u7684\u51e0\u4ef6\u4e8b\uff1aDecoding\n\u89e3\u7801\u7684\u8fc7\u7a0b\u5c31\u662f\u5728\u7ed9\u51fa\u4e00\u4e32\u5e8f\u5217\u548c\u5df2\u77e5HMM\u6a21\u578b\u7684\u60c5\u51b5\u4e0b\uff0c\u627e\u5230\u6700\u53ef\u80fd\u7684\u9690\u6027\u72b6\u6001\u5e8f\u5217\u3002\u6bd4\u5982\u7ed3\u679c\u662f\uff1a1 6 3 5 2 7 3 5 2 4, \u6c42\u6700\u53ef\u80fd\u7684\u9ab0\u5b50\u5e8f\u5217Viterbi algorithm\n\n\u63b7\u51fa1\u7684\u6700\u5927\u6982\u7387\u662f4\u9762\u4f53\uff1a P1(D4) = P(1|D4) * P(D4) = 1/4 * 1/3\n\u63b7\u51fa6\u7684\u6700\u5927\u6982\u7387\u662f P2(D6) = P(6|D6) * P(D6) = 1/6 * 1/3\n\u8fde\u7eed1\uff0c6\u7684\u6982\u7387\u5c31\u6210\u4e861\u7684\u6982\u7387 * 2\u7684\u6982\u7387 P2(D6) = P1(D4) * P2(D6) = 1/216\n1,6,3 =&gt; P3(D4) = P2(D6) * P(3|D4) * P(D4) = $\\frac{1}{216} \\cdot \\frac{1}{3} \\cdot \\frac{1}{4}$\nand so on\n\u4f46\u8fd9\u4e2a\u4f8b\u5b50\u5ffd\u7565\u4e86\u8f6c\u79fb\u6982\u7387\uff0c\u5373P(D6|D4), P(D4|D6,D4)\uff0c\u6216\u8005\u8bf4\u9ed8\u8ba4\u4e86\u8f6c\u79fb\u6982\u7387\u5c31\u662f1/3\uff0c\u5373\u6bcf\u6b21\u6311\u4e2d\u4e09\u4e2a\u9ab0\u5b50\u7684\u673a\u7387\u5747\u7b49\u3002\n\nEvaluation\n\u6839\u636e\u6761\u4ef6\u548c\u5e8f\u5217\u7ed3\u679c\u6c42\u8fd9\u4e00\u5e8f\u5217\u7684\u6982\u7387\u662f\u591a\u5c11\uff0c\u6bd4\u5982\u4e09\u79cd\u9ab0\u5b50\uff0c\u6295\u51fa\u4e861\uff0c6\uff0c3\u7684\u7ed3\u679c\uff1a\n\u7b2c1\u5217\u8868\u793a\u7b2c\u4e00\u6b21\u6295\u63b7\u5f97\u52301\u7684\u53ef\u80fd\u6027\u548c\u4e3a0.18\n\u7b2c2\u5217\u4e3a1 6\u7684\u7684\u53ef\u80fd\u6027\u548c\u4e3a0.05\n\u7b2c3\u5217\u4e3a1 6 3\u7684\u53ef\u80fd\u6027\u548c\u4e3a0.03\n\n\u5982\u679c\u8fdc\u4f4e\u4e8e\u6216\u8fdc\u9ad8\u4e8e\u8fd9\u4e2a\u6982\u7387\uff0c\u5fc5\u7136\u6709\u505a\u8fc7\u624b\u811a\u7684\u9ab0\u5b50\u3002\u8f6c\u79fb\u6982\u7387\u7684\u77e9\u9635\u8868\u793a\n\u8fd9\u6b21\u5047\u5b9a\u4e0d\u540c\u7684\u9ab0\u5b50\u662f\u7528\u6765\u4f5c\u5f0a\u7684\uff0c\u4f5c\u5f0a\u8005\u4f1a\u6839\u636e\u60c5\u51b5\u6765\u6311\u9009\u9ab0\u5b50\uff0c\u8fd9\u6837\u8f6c\u79fb\u6982\u7387\u5c31\u4e0d\u53ef\u80fd\u662f\u5747\u7b49\u7684\u4e86\uff1a\u5f88\u5e78\u8fd0\uff0c\u8fd9\u4e48\u590d\u6742\u7684\u6982\u7387\u8f6c\u79fb\u56fe\uff0c\u7adf\u7136\u80fd\u7528\u77e9\u9635\u8868\u8fbe\uff1a$$A = \n\\begin{bmatrix}\n0.15 &amp; 0.45 &amp; 0.4 \\\\\n0.25 &amp; 0.35 &amp; 0.4 \\\\\n0.10 &amp; 0.55 &amp; 0.35\n\\end{bmatrix}\n$$\n\u65e2\u7136\u662f3\u884c3\u5217\uff0c\u663e\u7136$A_{ij}$\u5c31\u662f\u4ecei\u5207\u6362\u5230j\u7684\u6982\u7387\uff0c\u6bd4\u5982$A_{12}$ \u5c31\u5e94\u8be5\u662f\u8fd9\u4e2a\u4eba\u628a\u9ab0\u5b50\u4ece\u4f5c\u5f0a\u9ab0\u5b501\u5207\u6362\u52302\u7684\u6982\u7387\u3002\u76f8\u5e94\u5730\uff0c\u53d1\u5c04\u6982\u7387\uff08\u5373\u4e0d\u540c\u9ab0\u5b50\u6447\u51fa\u7684\u70b9\u6570\u7684\u6982\u7387\uff09\u4e5f\u80fd\u8868\u793a\u4e3a\u77e9\u9635\uff1a$$B = \n\\begin{bmatrix}\n0.16 &amp; 0.16 &amp; 0.16 &amp; 0.16 &amp; 0.16 &amp; 0.16 \\\\\n0.02 &amp; 0.02 &amp; 0.02 &amp; 0.02 &amp; 0.02 &amp; 0.90 \\\\\n0.40 &amp; 0.20 &amp; 0.25 &amp; 0.05 &amp; 0.05 &amp; 0.05 \\\\\n\\end{bmatrix}\n$$\n\u73b0\u5728\u6709\u4e86\u8f6c\u79fb\u6982\u7387\u548c\u53d1\u5c04\u6982\u7387\uff0c\u6211\u4eec\u518d\u6765\u770b\u770b\u524d\u9762\u7684\u63b7\u51fa1\uff0c6\uff0c3\u7684\u9ab0\u5b50\u7684\u6982\u7387\uff1a\n\u9ab0\u5b50\u8bbe\u4e3aD1 D2 D3, \u6bcf\u4e00\u8f6e\u7684\u53ef\u80fd\u6027\u4e3aP1 P2 P3, \u5219P = P3D1 + P3D2 + P3D3 \u5373\u7b2c3\u8f6e\u65f63\u79cd\u9ab0\u5b50\u80fd\u6295\u51fa3\u7684\u6982\u7387\u548c\u6211\u6765\u63a8\u5bfc\u4e00\u4e0bP3D1\u600e\u4e48\u6765\u7684\uff0c\u4e0a\u9762\u7684\u8868\u683c\u662f\u6211\u4ece\u522b\u4eba\u7684\u535a\u5ba2\u91cc\u590d\u5236\u7684\uff0c\u8fd9\u91cc\u5c31\u4e0d\u505a\u4e00\u4e2a\u4e00\u6a21\u4e00\u6837\u7684\u56fe\u4e86\uff0c\u6211\u4eec\u4e00\u6b65\u6b65\u6765\u5427\uff1a\n\u7b2c\u4e00\u6b21\u6295\u63b7\u6bcf\u4e2a\u9ab0\u5b50\u7684\u6982\u7387\u5e94\u8be5\u662f\u9690\u542b\u4e86\u5404\u4e3a1/3\u5427\uff1f(\u8fd9\u4e2a\u597d\u50cf\u53eb&quot;\u521d\u59cb\u9690\u72b6\u6001&quot; $\\pi$)\nP1D1 = 0.16 * 0.33, \u53731/3\u6982\u7387\u62ff\u5230D1\uff0c0.16\u6982\u7387\u6295\u51fa1\uff0c\u540c\u7406\uff1a\nP1D2 = 0.02 * 0.33\nP1D3 = 0.40 * 0.33\n\n\nP2D1 =\nP1D1 * $A_{00}$ * $B_{05}$ = P1D1 * 0.15 * 0.16 \u5373P1D1\u524d\u63d0\u4e0b\uff0c\u4e58\u4e0aD1\u6362\u5230D1\u7684\u6982\u7387\uff0c\u518d\u4e58\u4e0aD1\u9009\u51fa6\u7684\u6982\u7387\n$+$\nP1D2 * $A_{10}$ * $B_{05}$ = P1D1 * 0.25 * 0.16 \u5373P1D2\u524d\u63d0\u4e0b\uff0c\u4e58\u4e0aD2\u6362\u5230D1\u7684\u6982\u7387\uff0c\u518d\u4e58\u4e0aD1\u9009\u51fa6\u7684\u6982\u7387\n$+$\nP1D3 * $A_{20}$ * $B_{05}$ = P1D1 * 0.10 * 0.16 \u5373P1D3\u524d\u63d0\u4e0b\uff0c\u4e58\u4e0aD3\u6362\u5230D1\u7684\u6982\u7387\uff0c\u518d\u4e58\u4e0aD1\u9009\u51fa6\u7684\u6982\u7387\n\u4ee5\u6b64\u7c7b\u63a8\u5f97\u5230P2D2, P2D3\n\n\nP3D2 = \uff08D1\u7684\u6982\u7387\u592a\u5e73\u5747\uff0c\u8fd9\u6b21\u6362\u4e2aD2\u6765\u6f14\u793a\uff09\nP2D1 * $A_{01}$ * $B_{12}$ = P2D1 * 0.45 * 0.02 \u5373P2D1\u524d\u63d0\u4e0b\uff0c\u4e58\u4e0aD1\u6362\u5230D2\u7684\u6982\u7387\uff0c\u518d\u4e58\u4e0aD2\u9009\u51fa3\u7684\u6982\u7387\n$+$\nP2D2 * $A_{11}$ * $B_{12}$ = P2D1 * 0.35 * 0.02 \u5373P2D2\u524d\u63d0\u4e0b\uff0c\u4e58\u4e0aD2\u6362\u5230D2\u7684\u6982\u7387\uff0c\u518d\u4e58\u4e0aD2\u9009\u51fa3\u7684\u6982\u7387\n$+$\nP2D3 * $A_{21}$ * $B_{12}$ = P2D1 * 0.35 * 0.02 \u5373P2D3\u524d\u63d0\u4e0b\uff0c\u4e58\u4e0aD3\u6362\u5230D2\u7684\u6982\u7387\uff0c\u518d\u4e58\u4e0aD2\u9009\u51fa3\u7684\u6982\u7387\n\u4ee5\u6b64\u7c7b\u63a8\u5f97\u5230P3D1, P3D2\n\n\nP = P3D1 + P3D2 + P3D3\n\n$$\n\\sum_{r\\in R}\\prod_t^TP(v(t)|w_r(t)) | w_r(t-1))\n$$\n\nv: visible \u53ef\u89c1\u5e8f\u5217\nw: \u9690\u6027\u72b6\u6001\u5e8f\u5217\nR: \u6240\u6709\u9690\u72b6\u6001\u7684\u53ef\u80fd\u6027\n\n\nt-1\u9690\u72b6\u6001\u524d\u63d0\u4e0b\u5f97\u5230t\u7684\u6982\u7387\uff08\u8f6c\u79fb\u6982\u7387\uff09\u5982D2\u6362\u5230D3\u7684\u6982\u7387\n\u4e0a\u4e00\u6982\u7387\u524d\u63d0\u4e0b\u5f97\u5230v(t)\u7684\u6982\u7387\uff0c\u5982D3\u6254\u51fa1\u7684\u6982\u7387\n\u4e00\u79cd\u9690\u72b6\u6001\u4e0b\u51fa\u5e8f\u5217\u7684\u7ed3\u679c\u4e3a\u7d2f\u4e58\n\u6240\u6709\u9690\u72b6\u6001\u4e0b\u51fa\u8be5\u5e8f\u5217\u7684\u7ed3\u679c\u4e3a3\u7684\u7d2f\u52a0\n\n\u7b80\u5355\u6765\u8bf4\uff1a\n\u53ef\u89c1\u5e8f\u5217$v(t)$\u7684\u6982\u7387\u4f9d\u8d56\u5f53\u524d$t$\u4e0b\u7684\u9690\u72b6\u6001\uff08\u6bd4\u5982\u662f\u4e0d\u662f\u4f5c\u5f0a\u4e86\u7684\u9ab0\u5b50\uff09$w_r(t)$\n\u5f97\u5230\uff1a$P(v(t)\\ \\color{red}|\\ w_r(t))$\n\n\n\u5f53\u524d\u9690\u72b6\u6001$w_r(t)$\u53c8\u6709\u4e24\u4e2a\u7279\u5f81:\n\u7531$w_r(t-1)$\u8f6c\u6362\u800c\u6765\u7684: $P(v(t)|w_r(t))\\color{red}{|}w_r(t-1)$\n$T$\u662f\u94fe\u5f0f\u7684\uff0c\u6982\u7387\u7d2f\u4e58\uff1a $\\color{red}{\\prod_t^T}P(v(t)|w_r(t)) | w_r(t-1))$\n\n\n\u6700\u540e\u4e00\u6b65\u65f6\u7684\u9690\u72b6\u6001\u663e\u7136\u662f\u51e0\u79cd\u4e4b\u4e00\uff0c\u7d2f\u52a0\u8d77\u6765\u5c31\u662f\u6240\u6709\u53ef\u80fd\u6027\uff1a\n$\\color{red}{\\sum_{r\\in R}}\\prod_t^TP(v(t)|w_r(t)) | w_r(t-1))$\n\n\n\n\u5e94\u7528\n\n\u521d\u59cb\u6982\u7387\n\n\u4ee5BMES\u4e3a\u4f8b\uff08\u53c2\u8003NER\uff09\uff0c\u628a\u5176\u8ba4\u4e3a\u662f\u9690\u72b6\u6001\uff0c\u7136\u540e\u8ba4\u4e3a\u6bcf\u4e2a\u8bcd\uff08\u91cc\u7684\u5b57\uff09\u662f\u7531\u9690\u72b6\u6001\u4ea7\u751f\u7684\u3002\u5373B\u5bf9\u5e94\u7684\u5b57\u53ef\u80fd\u6709\u201c\u4e2d\u201d\uff0c\u201c\u56fd\u201d\uff0c\u7b49\u7b49\uff0c\u80fd\u4f5c\u4e3a\u8bcd\u8bed\u6253\u5934\u7684\u5b57\u90fd\u53ef\u80fd\u7531\u9690\u72b6\u6001B\u4ea7\u751f\uff0c\u5176\u5b83\u72b6\u6001\u4f9d\u6b21\u7c7b\u63a8\u3002\u5c31\u50cf\u6211\u4eec\u4e09\u79cd\u9ab0\u5b50\u7684\u521d\u59cb\u6982\u7387\uff0c\u5b8c\u5168\u53d6\u51b3\u4e8e\u6bcf\u79cd\u9ab0\u5b50\u5360\u603b\u6570\u7684\u591a\u5c11\u4e00\u6837\uff0cHHM\u5e94\u7528\u5230\u8bed\u8a00\u6a21\u578b\u91cc\uff0c\u521d\u59cb\u6982\u7387\u5c31\u662f\u5148\u628a\u6587\u5b57\u5168\u90e8\u7528BMES\u8868\u793a\uff0c\u7136\u540e\u5206\u522b\u6570\u51fa\u4e2a\u6570\uff0c\u4e0e\u603b\u6570\u505a\u4e2a\u5bf9\u6bd4\u3002\uff08\u6b64\u65f6\u5df2\u7ecf\u53ef\u4ee5\u5224\u65ad\u51faM\u548cE\u7684\u6982\u7387\u53ea\u80fd\u662f0\u4e86\u3002\n\u8f6c\u79fb\u6982\u7387\n\n\u5e94\u8be5\u662f4\u4e2a\u5faa\u73af\u5427\uff0c\u6bcf\u6b21\u628a\u5f53\u524d\u72b6\u6001\u540e\u9762\u8ddf\u4e0a\u56db\u4e2a\u72b6\u6001\u7684\u60c5\u51b5\u90fd\u6570\u51fa\u6765\uff0c\u5c31\u662f\u4e00\u4e2a\u9690\u72b6\u6001\u5230\u5176\u5b83\u56db\u4e2a\u72b6\u6001\u7684\u8f6c\u79fb\u6982\u7387\uff0c\u56db\u884c\u62fc\u5230\u4e00\u8d77\u5c31\u662f\u4e00\u4e2a\u8f6c\u79fb\u6982\u7387\u7684\u77e9\u9635\uff0c\u7c7b\u4f3c\u4e0a\u9762\u7684\u4e09\u79cd\u9ab0\u5b50\u4e92\u76f8\u5207\u6362\u7684\u77e9\u9635\u3002\u4e5f\u53ef\u4ee5\u7528\u5b57\u5178\uff0c\u6bd4\u5982 BE BS BB BM\u7b49\u517116\u4e2a\u952e\uff0c\u4e24\u4e24\u904d\u5386\u6574\u4e2a\u5b57\u7b26\u4e32\u5b8c\u540e\uff0c16\u4e2acount\u5c31\u51fa\u6765\u4e86\uff0cgroup\u540e\u5c31\u80fd\u5f97\u5230\u6982\u7387\u4e86\u3002\n\u89c2\u6d4b\u6982\u7387\uff08\u53d1\u5c04\u6982\u7387\uff09\n\n\u8fd9\u4e2a\u5c31\u662f\u6bcf\u4e00\u4e2a\u9690\u72b6\u6001\u4e0b\u5bf9\u5e94\u4e0d\u540c\u8868\u9762\u6587\u5b57\u7684\u6982\u7387\u4e86\uff0c\u6bd4\u5982\uff1a{s:{&quot;\u5468&quot;: 0.3357, &quot;\u722c&quot;:0.00003}...}\u8981\u77e5\u9053\uff0c\u4e09\u79cd\u6982\u7387\u91cc\u9762\u662f\u6709\u5f88\u591a0\u7684\uff0c\u610f\u601d\u5c31\u662f\u5728\u73b0\u6709\u7684\u8bed\u6cd5\u4f53\u7cfb\u91cc\u9762\u4e0d\u53ef\u80fd\u51fa\u73b0\u7684\u573a\u666f\uff0c\u6bd4\u5982\u7b2c\u4e00\u4e2a\u5b57\u4e0d\u53ef\u80fd\u662fM\u548cE\uff0cB\u540e\u9762\u4e0d\u53ef\u80fd\u8ddfS\uff0cB\uff0c\u800cM\u540e\u9762\u4e0d\u53ef\u80fd\u8ddfB\uff0cS\uff0c\u4ee5\u53caS\u540e\u9762\u4e0d\u53ef\u80fd\u8ddfM\uff0cE\u7b49\uff0c\u518d\u6bd4\u5982\u5047\u5982\u54ea\u4e2a\u5b57\u6c38\u8fdc\u4e0d\u53ef\u80fd\u662f\u7b2c\u4e00\u4e2a\u5b57\uff0c\u90a3\u4e48\u5b83\u7684\u89c2\u6d4b\u6982\u7387\u5728S\u91cc\u9762\u5c31\u6c38\u8fdc\u662f0\uff0c\u7b49\u7b49\u3002\u8fd9\u91cc\u8981\u8ba1\u7b97\u7684\u8bdd\uff0c\u56e0\u4e3a\u9690\u72b6\u6001\u662f\u7528\u6587\u5b57\u63a8\u65ad\u51fa\u6765\u7684\uff0c\u6240\u4ee5\u8fd9\u4e2a\u6620\u5c04\u5173\u7cfb\u8fd8\u5728\uff0c\u90a3\u4e48\u6574\u7406\u4e00\u4e0b\u4e24\u4e2a\u6570\u7ec4\u5c31\u80fd\u628a\u6bcf\u4e2a\u9690\u72b6\u6001\u80fd\u5bf9\u5e94\u7684\u6587\u5b57\u5168\u90e8\u6620\u5c04\u4e0a\u4e86\u3002\n\u4ee5\u4e0b\u662f\u6211\u8bfe\u7a0b\u91cc\u7684\u7b14\u8bb0\uff0c\u7406\u89e3\u4e86\u4e0a\u9762\u7684\u5185\u5bb9\uff0c\u7406\u89e3\u4e0b\u9762\u662f\u6ca1\u6709\u4efb\u4f55\u969c\u788d\u7684\u3002viterbi in NLP\n$\\overbrace{\n  0\n  \\xrightarrow[\u519c]{2.5}\n  1\n  \\xrightarrow[\u4ea7]{4.0}\n  2\n}^{1.4}\n\\xrightarrow[\u7269]{2.3}\n3$$0\n\\xrightarrow[\u519c]{2.5}\n\\underbrace{\n  1\n  \\xrightarrow[\u4ea7]{4.0}\n  2\n  \\xrightarrow[\u7269]{2.3}\n  3\n}_{2.1}$\n\u6570\u5b57\u753b\u5708\u7684\u5199\u6cd5 $\\enclose{circle}{3}$ \u8fd9\u4e2a\u751f\u6210\u5668\u6682\u4e0d\u652f\u6301\n\nnode: $\\enclose{circle}{2}$ \uff0c\u5706\u5708\uff0c\u5c31\u662f\u4f4d\u7f6e\u7d22\u5f15\nedge: \u8bcd\uff0c \u7bad\u5934\uff0c\u5f88\u597d\u7406\u89e3\uff1astring[0,1] = '\u519c'\nEach edge weight is a negative log probality\n-log(P(\u519c)) = 2.5\n-log(P(\u4ea7)) = 4.0\n-log(P(\u519c\u4ea7)) = 1.4\n-log(P(\u4ea7\u7269)) = 2.1\n\n\nEach path is a segmentation for the sentence\nEach path weight is a sentence unigram negative log probability\n-log(P(\u519c\u4ea7)) + -log(P(\u7269)) = 1.4 + 2.3 = 3.7\n\u519c + \u4ea7 + \u7269 = 2.5 + 4.0 + 2.3 = 8.8\n\u519c + \u4ea7\u7269 = 2.5 + 2.1 = 4.6\n\n\n\ntwo step\n1.\u524d\u5411\uff0c\u4ece\u5de6\u5f80\u53f3\uff0c\u627e\u5230\u6700\u4f73\u8def\u5f84\u7684\u5206\u6570\n2.\u540e\u5411\uff0c\u4ece\u53f3\u5f80\u5de6\uff0c\u521b\u5efa\u4e00\u6761\u6700\u4f73\u8def\u5f84forward algorithm\npseudo codebest_score[0]=0\nfor each node in the graph (ascending order)\n  best_score[node] = \u221e\n  for each incoming edge of node\n    score=best_score[edgeprev_node]+edge.score\n    if score &lt; best_score[node]\n      best_score[node]=score\n      best_edge[node] =edge\n\nexample:\n\n\u521d\u59cb\u8282\u70b9\u6253\u52060\uff0c\u5176\u5b83\u8282\u70b9\u6253\u5206\u4e3a$\\infty$\n\u6bcf\u4e2a\u8282\u70b9\u6253\u5206\u7531\u5176(incoming edge)(\u5373\u6765\u6e90\u7bad\u5934)\u548c\u6765\u6e90\u8282\u70b9\u7684\u6253\u5206\u6784\u6210\n\u5982\u679c\u6709\u591a\u4e2a\u6765\u6e90\uff0c\u5219\u8ba1\u7b97\u51fa\u8be5\u6765\u6e90\u7684\u5f97\u5206\uff0c\u4e0e\u8be5\u8282\u70b9\u5f53\u524d\u7684\u5f97\u5206\u505a\u5bf9\u6bd4\uff0c\u53d6\u5f97\u5206\u4f4e\u7684\u90a3\u4e2a\n\u628a\u8be5\u8282\u70b9\u7684\u5206\u503c\u548c\u6765\u6e90edge\u5b58\u5230\u8be5\u8282\u70b9\u4e0a\uff08edge\u5c31\u662f\u8bcd\uff09\u3002\n\n\n\u7b80\u5355\u6765\u8bf4\uff0c\u8fd8\u662f\u548c\u4e4b\u524d\u7684\u9ab0\u5b50\u4e00\u6837\uff0c\u6bcf\u4e00\u6b21\u7b97\u51fa\u5230\u5f53\u524d\u8282\u70b9\u7684\u6700\u4f4e\u5206\u6570\u7684\u8def\u5f84\u3002\n\u4e0a\u56fe\u4e2d\uff0c\u6211\u4eec\u5c31\u628ae1, e2, e5\u9009\u51fa\u6765\u4e86\uff0c\u8fd9\u4e2a\u8fc7\u7a0b\u4e2d\uff0c\u5220\u9664\u4e86e3, e4\u8fd9\u51e0\u6761\u8def\u5f84\nbest_score=(0.0, 2.5, 1.4, 3.7), best_edge = (NULL, e1, e2, e5)\n\u7528\u5b57\u5178\u6765\u628aNode\u6620\u5c04\u4e0a\u53bb\uff1a{0:(0.0, NULL), 1:(2.5, e1), 2:(1.4, e2), 3:(3.7, e5)}\n\nbackward algorithm\nbest_path=[]\nnext_edge=best_edge[best_edge.length-1]\nwhile next_edge != NULL\n  add next_edge to best_path\n  next_edge =best_edge[next_edge.prev_node]\nreverse best path\n\n\u4e3e\u4f8b\uff1a\n\n\u4ece\u56fe\u7247\u53ef\u77e5\uff0cpath\u5c31\u662fedge\n\u521d\u59cbpath\u662f\u7a7a\uff0c[]\n\u4eceforward\u7684\u7ed3\u679c\u5b57\u5178\u91cc\u627e\u5230node 3\u7684best_edge\uff0c\u5c31\u662fe5 [e5]\ne5\u7684\u6765\u6e90\u7684\u662fnode 2\n\u4ece\u5b57\u5178\u91cc\u627e\u52302\u7684best_edge\uff0c\u662fe2 [e5, e2]\ne2\u7684\u6765\u6e90\u662fnode 0\n0\u7684best_edge\u662fNULL\uff0c\u7ed3\u675f\u9012\u5f52\nreverse: [e2, e5]\n\n\u8fd9\u4e2a\u5f88\u597d\u7406\u89e3\n0\u5230\u519c\uff0c\u5230\u519c\u4ea7\uff0c\u5230\u519c\u4ea7\u7269\u7684\u6982\u7387\uff0c\u8868\u793a\u4e3a0.0+ -log(p(\u519c/\u519c\u4ea7/\u519c\u4ea7\u7269))\n\u5728\u519c\u7684\u524d\u63d0\u4e0b\uff0c\u5c31\u6709\u519c\u5230\u4ea7\uff0c\u548c\u519c\u5230\u4ea7\u7269\uff1abest(1) + -log(P(\u4ea7/\u4ea7\u7269))\n\u5728\u4ea7\u7684\u524d\u63d0\u4e0b\uff0c\u5c31\u53ea\u6709best(2) + -log(P(\u7269))\u4e86\n\n\u5e94\u7528\u5230NLP\uff1a\u8fd9\u91cc\u5c31\u662f\u628anode, egde\u5177\u4f53\u4e86\u4e00\u4e0b\uff1a\n\u591a\u5305\u4e86\u4e00\u5c42for-each\uff0c\u610f\u601d\u662f\u524d\u9762\u7684\u4ee3\u7801\u662f\u5904\u7406\u4e00\u884c\u7684\nnode\u5bf9\u5e94\u662f\u5355\u8bcd\u7ed3\u5c3e(word_end)\uff0c\u5176\u5b9e\u5c31\u662f\u4e00\u4e2aindex\uff0c\u524d\u9762\u8bf4\u8fc7\u4e86\nedge\u5bf9\u5e94\u662f\u5355\u8bcd(word)\uff0c\u524d\u9762\u4e5f\u8bf4\u8fc7\u4e86\uff0c\u5373string[5,7]\u7684\u610f\u601d\nscore\u7531uni-gram\u6765\u8ba1\u7b97\n\u8ba1\u7b97\u4e0a\uff0c\u5c31\u662f\u627e\u5230\u4ee5\u57fa\u51c6\u5b57\u5f53\u4f5c\u5355\u8bcd\u7ed3\u5c3e\uff0c\u7136\u540e\u524d\u9762\u7684\u5b57\u8ddf\u5b83\u62fc\u8d77\u6765\u7684\u6240\u6709\u53ef\u80fd\u6027\uff0c\u627e\u6700\u4f4e\u5206\uff1a\n\u6bd4\u5982abcdefg, \u5982\u679c\u5f53\u524d\u662fe\uff0c\u90a3\u4e48\u5206\u522b\u6bd4\u8f83\uff1aabced, bcde, cde, de\n\n\n\u63a5\u4e0a\u4f8b\uff0c\u8f93\u51fa\u7ed3\u679c\u5e94\u8be5\u8fd9\u4e48\u89e3\u8bfb\uff1a\n\u4ee5b\u4e3a\u7ed3\u5c3e\u7684\u5355\u8bcd\uff0c\u6700\u6709\u53ef\u80fd\u7684\u662fxxx, \u5b83\u7684\u5f97\u5206\u662f\uff0c\u5b83\u7684\u7d22\u5f15\u662f\uff0c\n\u4ee5c\u4e3a\u7ed3\u5c3e\u7684\u5355\u8bcd\uff0c\u6700\u6709\u53ef\u80fd\u662fbc\u6216\u662fabc\uff0c\u5b83\u7684\u5f97\u5206\u662f\uff0cbc/abc\u7684\u7d22\u5f15\u662f(1,2)\uff0c\u8fd9\u6837\n\n\n\n\n\u663e\u7136\u8fd9\u91cc\u5df2\u7ecf\u77e5\u9053edge\u4e0d\u77e5\u9053\u662f\u4e00\u4e2a\u8bcd\uff0c\u800c\u4e14\u662f\u4e00\u4e2a\u8bcd\u7684\u9996\u5c3e\u8fb9\u754c\n\u4e5f\u77e5\u9053\u5b58\u5230best_edges\u91cc\u9762\u7684\u5176\u5b9e\u5c31\u662f\u8bcd\u7684\u4f4d\u7f6e\u7d22\u5f15\n\u53cd\u5411\u7684\u65f6\u5019\uff0c\u4ece\u6700\u540e\u4e00\u4e2a\u7d22\u5f15\u627e\u5230\u5f97\u5206\u6700\u4f4e\u7684\u8bcd\uff0c\u518d\u4ece\u8fd9\u4e2a\u5355\u8bcd\u5411\u524d\u627e\uff0c\u4e00\u76f4\u627e\u5230\n\u6240\u4ee5next_edge[0]\u5176\u5b9e\u5c31\u662f\u5f53\u524d\u5355\u8bcd\u8bcd\u9996\uff0c[1]\u5c31\u662f\u8bcd\u5c3e\n\u6240\u4ee5\u628a\u5f53\u524d\u5355\u8bcd\u5b58\u8fdb\u53bb\u540e\uff0c\u5411\u524d\u641c\u7d22\u5c31\u8981\u4ee5next_edge[0]\u4e3a\u5b57\u5178\uff0c\u627e\u5bf9\u5e94\u7684best_edge\n\u518d\u4ecebest_edge\u91cc\u9762\u89e3\u6790\u51fa\u6700\u5408\u9002\u7684\u5355\u8bcd\u7684\u9996\u5c3e\u7d22\u5f15\uff0c\u5b58\u5230\u7ed3\u679c\u6570\u7ec4\u91cc\n\n\n\n", "categories": [{"name": "posts", "slug": "posts", "permalink": "/category/posts/"}], "tags": [{"name": "HMM", "slug": "HMM", "permalink": "/tag/HMM/"}, {"name": "NER", "slug": "NER", "permalink": "/tag/NER/"}, {"name": "PoS", "slug": "PoS", "permalink": "/tag/PoS/"}, {"name": "Viterbi", "slug": "Viterbi", "permalink": "/tag/Viterbi/"}]}, {"title": "Mac\u8fdc\u7a0bWindows-10\u91cc\u7528Anaconda\u88c5\u7684Jupyter-lab", "date": "2021-06-13T00:00:00-00.00", "path": "/archives/Mac%E8%BF%9C%E7%A8%8BWindows-10%E9%87%8C%E7%94%A8Anaconda%E8%A3%85%E7%9A%84Jupyter-lab/", "text": "\u5bb6\u91cc\u53f0\u5f0f\u673a\u914d\u7f6e\u6bd4\u7b14\u8bb0\u672c\u597d\u591a\u4e86\uff0c\u4f46\u53c8\u4e60\u60ef\u4e86\u82f9\u679c\u672c\uff0c\u600e\u4e48\u5728\u5c0f\u672c\u672c\u4e0a\u76f4\u63a5\u8dd1windows\u4e0a\u7684jupyter\u5462\uff1f\u9996\u5148\uff0c\u7ed9Windows 10 \u88c5\u4e0aOpenSSH\u5982\u679c\u4f60\u4e0d\u662f\u7528\u7684Anaconda\u7b49\u865a\u62df\u73af\u5883\u800c\u662f\u628apython\u548cjupyter lab\u88c5\u5728\u4e86\u672c\u673a\u4ee5\u53ca\u5199\u5728\u4e86path\u91cc\uff0c\u7406\u8bba\u4e0a\u4f60\u7528ssh\u8fde\u4e0awindows\u540e\u5728shell\u91cc\u76f4\u63a5jupyter lab\u5c31\u597d\u4e86\uff0c\u53ef\u662f\u6211\u662f\u7528\u4e86Anaconda\u7684\uff0cssh\u8fdb\u53bb\u4ee5\u53cawindows\u81ea\u8eab\u7684\u547d\u4ee4\u884c\u73af\u5883\u91cc\u90fd\u662f\u6267\u884c\u4e0d\u4e86conda\u548cjupyter\u7684\n\u53ef\u80fd\u4ec5\u4ec5\u53ea\u662fpath\u7684\u539f\u56e0\uff0c\u4f46\u5e94\u8be5\u6ca1\u8fd9\u4e48\u7b80\u5355\uff0c\u8003\u8651\u5230\u7aef\u53e3\u8f6c\u53d1\u5df2\u7ecf\u80fd\u5b9e\u73b0\u6211\u7684\u76ee\u7684\u4e86\uff0c\u5c31\u4e0d\u6df1\u7a76\u4e86\u3002\n\u8fd9\u65f6\u4f7f\u7528ssh\u7684\u672c\u5730\u7aef\u53e3\u8f6c\u53d1\u529f\u80fd\u53ef\u4ee5\u8fbe\u5230\u76ee\u7684\uff1a$ ssh -L 2121:host2:21 host3\n\n\u5373\u628ahost3\u7684\u7aef\u53e321\u8f6c\u53d1\u5230host2\u76842121\u4e0a\u53bb\uff0c\u5f53\u7136\uff0c\u5927\u591a\u6570\u60c5\u51b5\u4e0bhost2\u5c31\u662f\u672c\u673a\uff0c\u90a3\u4e48localhost\u5c31\u597d\u4e86\uff1a$ ssh -L 8000:localhost:8889 windows-server\n\n\u5f53\u7136\uff0c8889\u662f\u4f60\u5728windows\u4e0a\u8fd0\u884c--no-browser\u7684jupyter lab\u8bbe\u5b9a\u7684\u7aef\u53e3\uff1ajupyter lab --no-browser --post=8889\n\n", "categories": [{"name": "posts", "slug": "posts", "permalink": "/category/posts/"}], "tags": [{"name": "jupyter", "slug": "jupyter", "permalink": "/tag/jupyter/"}, {"name": "windows", "slug": "windows", "permalink": "/tag/windows/"}]}, {"title": "Semi supervised Learning", "date": "2021-06-07T00:00:00-00.00", "path": "/archives/Semi-supervised-Learning/", "text": "\u674e\u5b8f\u6bc5\u673a\u5668\u5b66\u4e602021spring\u7684\u5bb6\u5ead\u4f5c\u4e1a\u91cc\u9762\u6709\u4e00\u4e2aSemi-supervised Learning\u7684\u4efb\u52a1\u3002\u5177\u4f53\u6765\u8bf4\uff0c\u5c31\u662f\u4e00\u4e2a\u56fe\u7247\u5206\u7c7b\u7684\u4efb\u52a1\uff0811\u4e2a\u98df\u54c1\u7c7b\u522b\uff09\uff0c\u4f46\u53ea\u7ed9\u4e86\u4f60\u51e0\u767e\u4e2a\u6709\u6807\u6ce8\u7684\u56fe\u7247\uff0c\u540c\u65f6\uff0c\u8fd8\u7ed9\u4e86\u4f60\u51e0\u5343\u5f20\u6ca1\u6709\u6807\u7684\u56fe\u7247\uff08\u7528\u6765\u8bad\u7ec3\uff0c\u800c\u4e0d\u662f\u6d4b\u8bd5\uff09\u3002\u601d\u8def\u4e5f\u5f88\u7b80\u5355\uff0c\u65e2\u7136\u6837\u672c\u91cf\u8fc7\u5c0f\uff0c\u6211\u4eec\u5c31\u5f97\u81ea\u5df1\u6269\u5145\u6837\u672c\u91cf\uff0c\u4f46\u8fd9\u6b21\u4e0d\u662f\u7528\u6570\u636e\u589e\u5e7f(Augumentation)\uff0c\u800c\u662f\u81ea\u5df1\u9020\u6837\u672c\uff1a\n\u7528\u5c0f\u6837\u672c\u8bad\u7ec3\u4e00\u4e2a\u6a21\u578b\uff0c\u7528\u8fd9\u4e2a\u6a21\u578b\u6765predict\u6ca1\u6709\u6807\u6ce8\u7684\u56fe\u7247\uff08\u6587\u672c\u6709\u8865\u8ff0\uff09\n\u5bf9\u9884\u6d4b\u8f93\u51fa\u768411\u4e2a\u7c7b\u522bsoftmax\u540e\uff0c\u89c2\u5bdf\u6700\u5927\u503c\uff0c\u5982\u679c\u5927\u4e8e\u4f60\u8bbe\u5b9a\u7684\u67d0\u4e2athreshold\uff0c\u6bd4\u59820.68\uff0c\u5c31\u628a\u8be5\u56fe\u7247\u548c\u6700\u5927\u503c\u6240\u6620\u5c04\u7684\u7c7b\u522b\u5f53\u6210\u4e00\u7ec4\u771f\u503c\u6dfb\u52a0\u5230\u8bad\u7ec3\u96c6\u91cc\u53bb\n\u6211\u7528\u7684\u662ftorch.utils.data\u91cc\u7684TensorDataset\u6765\u6784\u5efa\u624b\u52a8\u521b\u5efa\u7684\u589e\u5f3a\u6570\u636e\u96c6\uff0c\u7136\u540e\u7528\u4e86ConcatDataset\u4e0e\u539f\u8bad\u7ec3\u96c6\u62fc\u63a5\uff1a\n\nfrom torch.utils.data import TensorDataset\n\ndef get_pseudo_labels(dataset, model, threshold=0.65):\n    # This functions generates pseudo-labels of a dataset using given model.\n    # It returns an instance of DatasetFolder containing images whose prediction confidences exceed a given threshold.\n    # You are NOT allowed to use any models trained on external data for pseudo-labeling.\n    device = &quot;cuda&quot; if torch.cuda.is_available() else &quot;cpu&quot;\n\n    # Construct a data loader.\n    data_loader = DataLoader(dataset, batch_size=batch_size, shuffle=False)\n\n    # Make sure the model is in eval mode.\n    model.eval()\n    # Define softmax function.\n    softmax = nn.Softmax(dim=-1)\n\n    # Iterate over the dataset by batches.\n    images = torch.Tensor([])\n    targets = torch.Tensor([])\n    for batch in tqdm(data_loader):\n        img, _ = batch\n\n        # Forward the data\n        # Using torch.no_grad() accelerates the forward process.\n        with torch.no_grad():\n            logits = model(img.to(device))\n\n        # Obtain the probability distributions by applying softmax on logits.\n        probs = softmax(logits)\n\n        # ---------- TODO ----------\n        # \u5728\u8fd9\u91cc\u6839\u636e\u9608\u503c\u5224\u65ad\u662f\u5426\u4fdd\u7559\n        # Filter the data and construct a new dataset.\n        for idx, prob in enumerate(probs):\n            c = torch.argmax(prob)\n            if prob[c] &gt; threshold:\n                torch.cat((images, img[idx]))   # \u7528\u7d22\u5f15\u9009\u51fa\u5bf9\u5e94\u7684\u56fe\u7247\n                torch.cat((targets, torch.tensor(c))) # \u7528\u6700\u5927\u503c\u7d22\u5f15\u5f53class\n\n    dataset = TensorDataset(images, targets)  # \u62fc\u6210tensor dataset\n\n    # # Turn off the eval mode.\n    model.train()\n    return dataset\n\n\u4f7f\u7528\uff1apseudo_set = get_pseudo_labels(unlabeled_set, model)\n\n# Construct a new dataset and a data loader for training.\n# This is used in semi-supervised learning only.\nconcat_dataset = ConcatDataset([train_set, pseudo_set]) # \u62fc\u63a5\u4e24\u4e2adataset(\u53ea\u8981\u6709\u611f\u5174\u8da3\u7684\u4e24\u7ec4\u6570\u7ec4\u5373\u53ef)\ntrain_loader = DataLoader(concat_dataset, batch_size=batch_size, shuffle=True, num_workers=4, pin_memory=True)\n\n\u770b\u6765\uff0c\u6240\u8c13\u7684\u534a\u76d1\u7763\u4ecd\u7136\u662f\u6709\u76d1\u7763\uff0c\u5bf9\u4e8e\u6ca1\u6709\u6807\u6ce8\u7684\u6570\u636e\uff0c\u4ecd\u7136\u8981\u60f3\u529e\u6cd5\u7528\u5df2\u6709\u6570\u636e\u53bb\u4e3a\u5b83\u6253\u6807\uff0c\u63a5\u4e0b\u6765\u5c31\u662f\u666e\u901a\u7684\u76d1\u7763\u5b66\u4e60\u4e86\u3002\n\u6700\u540e\uff0c\u5728\u5b9e\u9645\u7684demo\u4ee3\u7801\u4e2d\uff0c\u80fd\u770b\u5230\u5e76\u4e0d\u662f\u6211\u6700\u521d\u7406\u89e3\u7684\u201c\u5148\u7528\u5c0f\u6837\u672c\u8bad\u7ec3\u597d\u4e00\u4e2a\u6a21\u578b\u201d\uff0c\u518d\u7528\u5b83\u6765\u8fc7\u6ee4un-labeled\u6837\u672c\uff0c\u589e\u5e7f\u5230\u8bad\u7ec3\u96c6\u53bb\uff0c\u5373\u5bf9\u8bad\u7ec3\u96c6\u7684\u589e\u5e7f\u662f\u4e00\u52b3\u6c38\u9038\u7684\uff08\u50cf\u522b\u7684\u589e\u5e7f\u65b9\u6848\u4e00\u6837\uff09\u800c\u662f\u6bcf\u4e00\u4e2aepoch\u91cc\u9762\u90fd\u91cd\u65b0\u53bb\u589e\u5e7f\u4e00\u6b21\uff0c\u8fd9\u4e2a\u601d\u8def\u66f4\u7c7b\u4f3c\u4e8eGAN\uff08\u751f\u6210\u5bf9\u6297\u7f51\u7edc\uff09\uff0cgenerator\u548cdiscriminator\u662f\u4e00\u8d77\u8bad\u7ec3\u7684\u3002\u4e5f\u6240\u4ee5\uff0c\u7b2c\u4e00\u6b21\u53bb\u589e\u5e7f\u7684\u65f6\u5019\uff0c\u5176\u5b9e\u5c31\u662f\u4e00\u4e2a\u521d\u59cb\u5316\u7684model\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u4e00\u4e2a\u6bd4\u8f83\u5783\u573e\u7684\u6570\u636e\u96c6\uff08\u5f53\u7136\uff0c\u521d\u59cb\u5316\u7684model\u672a\u5fc5\u80fd\u9884\u6d4b\u51fa\u7f6e\u4fe1\u5ea6\u9ad8\u7684\u7ed3\u679c\uff0c\u4ee5\u81f3\u4e8e\u5e76\u4e0d\u4f1a\u6709\u592a\u591apseudo labels\u8fdb\u5165\u8bad\u7ec3\u96c6\uff09\u56e0\u6b64\uff0c\u76f8\u6bd4\u8f83\u7eaf\u76d1\u7763\u5b66\u4e60\uff0c\u5047\u5982\u8bad\u7ec3\u96c6\u662f2000\u6761\uff0c\u90a3\u4e48\u6574\u4e2aepoch\u8f6e\u6b21\u91cc\uff0c\u90fd\u662f2000\u6761\u6570\u636e\u5728\u8bad\u7ec3\uff1b\u800c\u534a\u76d1\u7763\u5b66\u4e60\u91cc\uff0c\u53ef\u80fd\u662f200, 220, 350, 580, 1000, 1500...\u8fd9\u6837\u7d2f\u589e\u7684\u6837\u672c\u91cf\uff08\u968f\u7740\u6a21\u578b\u8d8a\u6765\u8d8a\u597d\uff0c\u7f6e\u4fe1\u5ea6\u5e94\u8be5\u662f\u8d8a\u6765\u8d8a\u9ad8\u7684\uff09\uff0c\u5982\u679cepoch\u6570\u91cf\u4e0d\u591f\uff0c\u53ef\u80fd\u5e76\u6ca1\u6709\u5728\u76f8\u540c2000\u5de6\u53f3\u7684\u6837\u672c\u91cf\u4e0b\u5f97\u5230\u8db3\u591f\u7684\u8bad\u7ec3", "categories": [{"name": "posts", "slug": "posts", "permalink": "/category/posts/"}], "tags": [{"name": "semi supervised learning", "slug": "semi supervised learning", "permalink": "/tag/semi%20supervised%20learning/"}, {"name": "\u534a\u76d1\u7763\u5b66\u4e60", "slug": "\u534a\u76d1\u7763\u5b66\u4e60", "permalink": "/tag/%E5%8D%8A%E7%9B%91%E7%9D%A3%E5%AD%A6%E4%B9%A0/"}]}, {"title": "RNN\u68af\u5ea6\u6d88\u5931\u4e0e\u68af\u5ea6\u7206\u70b8\u63a8\u5bfc", "date": "2021-05-09T00:00:00-00.00", "path": "/archives/RNN%E6%A2%AF%E5%BA%A6%E6%B6%88%E5%A4%B1%E4%B8%8E%E6%A2%AF%E5%BA%A6%E7%88%86%E7%82%B8%E6%8E%A8%E5%AF%BC/", "text": "\n$$\n\\large\n\\begin{aligned}\nh_t &amp;=\\sigma(z_t) = \\sigma(Ux_t+Wh_{t-1} + b) \\\ny_t &amp;= \\sigma(Vh_t + c)\n\\end{aligned}\n$$\u68af\u5ea6\u6d88\u5931\u4e0e\u7206\u70b8\n\u5047\u8bbe\u4e00\u4e2a\u53ea\u6709 3 \u4e2a\u8f93\u5165\u6570\u636e\u7684\u5e8f\u5217\uff0c\u6b64\u65f6\u6211\u4eec\u7684\u9690\u85cf\u5c42 h1\u3001h2\u3001h3 \u548c\u8f93\u51fa y1\u3001y2\u3001y3 \u7684\u8ba1\u7b97\u516c\u5f0f\uff1a$$\n\\large\n\\begin{aligned}\nh_1 &amp;= \\sigma(Ux_1 + Wh_0 + b) \\\\\nh_2 &amp;= \\sigma(Ux_2 + Wh_1 + b) \\\\\nh_3 &amp;= \\sigma(Ux_3 + Wh_2 + b) \\\\\ny_1 &amp;= \\sigma(Vh_1 + c) \\\\\ny_2 &amp;= \\sigma(Vh_2 + c) \\\\\ny_3 &amp;= \\sigma(Vh_3 + c)\n\\end{aligned}\n$$\nRNN \u5728\u65f6\u523b t \u7684\u635f\u5931\u51fd\u6570\u4e3a Lt\uff0c\u603b\u7684\u635f\u5931\u51fd\u6570\u4e3a $L = L1 + L2 + L3 \\Longrightarrow  \\sum_{t=1}^TL_T$t = 3 \u65f6\u523b\u7684\u635f\u5931\u51fd\u6570 L3 \u5bf9\u4e8e\u7f51\u7edc\u53c2\u6570 U\u3001W\u3001V \u7684\u68af\u5ea6\u5982\u4e0b\uff1a$$\n\\begin{aligned}\n\\frac{\\partial L_3}{\\partial V} &amp;= \\frac{\\partial L_3}{\\partial y_3} \\frac{\\partial y_3}{\\partial V} \\\\\n\\frac{\\partial L_3}{\\partial U} &amp;= \\frac{\\partial L_3}{\\partial y_3} \\frac{\\partial y_3}{\\partial h_3} \\frac{\\partial h_3}{\\partial U} + \\frac{\\partial L_3}{\\partial y_3} \\frac{\\partial y_3}{\\partial h_3} \\frac{\\partial h_3}{\\partial h_2} \\frac{\\partial h_2}{\\partial U} + \\frac{\\partial L_3}{\\partial y_3} \\frac{\\partial y_3}{\\partial h_3} \\frac{\\partial h_3}{\\partial h_2} \\frac{\\partial h_2}{\\partial h_1} \\frac{\\partial h_1}{\\partial U} \\\\\n\\frac{\\partial L_3}{\\partial W} &amp;= \\frac{\\partial L_3}{\\partial y_3} \\frac{\\partial y_3}{\\partial h_3} \\frac{\\partial h_3}{\\partial W} \n+ \\frac{\\partial L_3}{\\partial y_3} \\frac{\\partial y_3}{\\partial h_3} \\frac{\\partial h_3}{\\partial h_2} \\frac{\\partial h_2}{\\partial W} \n+ \\frac{\\partial L_3}{\\partial y_3} \\frac{\\partial y_3}{\\partial h_3} \\frac{\\partial h_3}{\\partial h_2} \\frac{\\partial h_2}{\\partial h_1} \\frac{\\partial h_1}{\\partial W} \\\\\n\\end{aligned}\n$$\n\u5176\u5b9e\u4e3b\u8981\u5c31\u662f\u56e0\u4e3a\uff1a\n\u5bf9V\u6c42\u504f\u5bfc\u65f6\uff0c$h_3$\u662f\u5e38\u6570\n\u5bf9U\u6c42\u504f\u5bfc\u65f6\uff1a\n$h_3$\u91cc\u6709U\uff0c\u6240\u4ee5\u8981\u7ee7\u7eed\u5bf9h3\u5e94\u7528chain rule\n$h_3$\u91cc\u7684$W, b$\u662f\u5e38\u6570\uff0c\u4f46\u662f$h_2$\u91cc\u53c8\u6709U\uff0c\u7ee7\u7eedchain rule\n\u4ee5\u6b64\u7c7b\u63a8\uff0c\u76f4\u5230$h_0$\n\n\n\u5bf9W\u6c42\u504f\u5bfc\u65f6\u4e00\u6837\n\n\u6240\u4ee5\uff1a\n\u53c2\u6570\u77e9\u9635 V (\u5bf9\u5e94\u8f93\u51fa $y_t$) \u7684\u68af\u5ea6\u5f88\u663e\u7136\u5e76\u6ca1\u6709\u957f\u671f\u4f9d\u8d56\nU\u548cV\u663e\u7136\u5c31\u662f\u8fde\u4e58($\\prod$)\u540e\u7d2f\u52a0($\\sum$)\n\n$$\n\\begin{aligned}\n\\frac{\\partial L_t}{\\partial U} = \\sum_{k=0}^{t} \\frac{\\partial L_t}{\\partial y_t} \\frac{\\partial y_t}{\\partial h_t}\n(\\prod_{j=k+1}^{t}\\frac{\\partial h_j}{\\partial h_{j-1}})\n\\frac{\\partial h_k}{\\partial U} \\\\\n\\frac{\\partial L_t}{\\partial W} = \\sum_{k=0}^{t} \\frac{\\partial L_t}{\\partial y_t} \\frac{\\partial y_t}{\\partial h_t}\n(\\prod_{j=k+1}^{t}\\frac{\\partial h_j}{\\partial h_{j-1}})\n\\frac{\\partial h_k}{\\partial W}\n\\end{aligned}\n$$\n\u5176\u4e2d\u7684\u8fde\u4e58\u9879\u5c31\u662f\u5bfc\u81f4 RNN \u51fa\u73b0\u68af\u5ea6\u6d88\u5931\u4e0e\u68af\u5ea6\u7206\u70b8\u7684\u7f6a\u9b41\u7978\u9996\uff0c\u8fde\u4e58\u9879\u53ef\u4ee5\u5982\u4e0b\u53d8\u6362\uff1a\n$h_j = tanh(Ux_j + Wh_{j-1} + b)$\n$\\prod_{j=k+1}^{t}\\frac{\\partial h_j}{\\partial h_{j-1}} =\\prod_{j=k+1}^{t} tanh' \\times W$\n\ntanh' \u8868\u793a tanh \u7684\u5bfc\u6570\uff0c\u53ef\u4ee5\u770b\u5230 RNN \u6c42\u68af\u5ea6\u7684\u65f6\u5019\uff0c\u5b9e\u9645\u4e0a\u7528\u5230\u4e86 (tanh' \u00d7 W) \u7684\u8fde\u4e58\u3002\u5f53 (tanh' \u00d7 W) &gt; 1 \u65f6\uff0c\u591a\u6b21\u8fde\u4e58\u5bb9\u6613\u5bfc\u81f4\u68af\u5ea6\u7206\u70b8\uff1b\u5f53 (tanh' \u00d7 W) &lt; 1 \u65f6\uff0c\u591a\u6b21\u8fde\u4e58\u5bb9\u6613\u5bfc\u81f4\u68af\u5ea6\u6d88\u5931\u3002", "categories": [{"name": "posts", "slug": "posts", "permalink": "/category/posts/"}], "tags": [{"name": "RNN", "slug": "RNN", "permalink": "/tag/RNN/"}, {"name": "\u68af\u5ea6\u6d88\u5931", "slug": "\u68af\u5ea6\u6d88\u5931", "permalink": "/tag/%E6%A2%AF%E5%BA%A6%E6%B6%88%E5%A4%B1/"}, {"name": "\u68af\u5ea6\u7206\u70b8", "slug": "\u68af\u5ea6\u7206\u70b8", "permalink": "/tag/%E6%A2%AF%E5%BA%A6%E7%88%86%E7%82%B8/"}]}, {"title": "RNN\u4e2dbidirectional\u548cnum_layer\u5bf9output\u548chidden\u5f62\u72b6\u7684\u5f71\u54cd", "date": "2021-04-13T00:00:00-00.00", "path": "/archives/RNN%E4%B8%ADbidirectional%E5%92%8Cnum_layer%E5%AF%B9output%E5%92%8Chidden%E5%BD%A2%E7%8A%B6%E7%9A%84%E5%BD%B1%E5%93%8D/", "text": "Batch first\n\u9996\u5148\uff0c\u6211\u4eec\u8981\u4e60\u60ef\u63a5\u53d7batch_first=False\uff08\u5c31\u662f\u9ed8\u8ba4\u503c\uff09\u7684\u601d\u7ef4\uff0c\u56e0\u4e3aNLP\u4e2d\u6279\u91cf\u5904\u7406\u53e5\u5b50\uff0c\u662f\u6bcf\u4e00\u53e5\u53d6\u7b2c\u4e00\u4e2a\u8bcd\uff0c\u7b2c\u4e8c\u4e2a\u8bcd\uff0c\u4ee5\u6b64\u7c7b\u63a8\u3002\n\u6309\u6211\u4eec\u4e60\u60ef\u7684\u628a\u6570\u636e\u653e\u5728\u540c\u4e00\u6279\uff08\u5373batch_first=True\uff09\u7684\u601d\u8def\u867d\u7136\u53ef\u4ee5\u505a\u5230\uff08\u5584\u7528\u5207\u7247\u5373\u53ef\uff09\uff0c\u4f46\u662f\u7ed5\u4e86\u5f2f\u8def\u3002\u4f46\u662f\u5982\u679c\u7b2c1\u6279\u90fd\u662f\u7b2c1\u4e2a\u5b57\uff0c\u7b2c2\u6279\u5168\u662f\u7b2c2\u4e2a\u5b57\uff0c\u8fd9\u4f1a\u81ea\u7136\u5f88\u591a\uff08\u884c\u4f18\u5148\uff09\u3002\u6240\u4ee5\u81f3\u5c11Pytorch\u5185\u90e8\uff0c\u4f60\u8bbe\u4e86True\uff0c\u5185\u90e8\u4e5f\u662f\u6309False\u6765\u5904\u7406\u7684\uff0c\u53ea\u662f\u7ed9\u4e86\u4f60\u4e00\u4e2a\u8bed\u6cd5\u7cd6\uff08\u5f53\u7136\u4f60\u7ec4\u7ec7\u6570\u636e\u5c31\u5fc5\u987b\u6309True\u6765\u7ec4\u7ec7\u4e86\u3002\u770b\u4e2a\u5b9e\u4f8b\uff1a\n\u5047\u5b9a\u6279\u6b21\u662f64\uff0c\u53e5\u957f\u622a\u4e3a70\uff0c\u5728\u8fd8\u6ca1\u6709\u5411\u91cf\u5316\u7684\u6570\u636e\u4e2d\uff0c\u90a3\u4e48\u663e\u7136\u4e00\u6b21\u7684\u8f93\u5165\u5e94\u8be5\u4e3a(70x64)\uff0c\u6279\u6b21\u5728\u7b2c2\u4f4d\n\u6ce8\u610f\u7b2c\u4e00\u884c\uff0c\u5168\u662f2\uff0c\u8fd9\u662f\u8bbe\u5b9a\u7684&lt;bos&gt;\uff0c\u8fd9\u5df2\u7ecf\u5f88\u597d\u5730\u8868\u793a\u4e86\u5728\u884c\u4f18\u5148\u7684\u7cfb\u7edf\u91cc\uff08\u6bd4\u5982Matlab\u5c31\u662f\u5217\u4f18\u5148\uff09\uff0c\u4f1a\u81ea\u7136\u800c\u4e14\u628a\u6bcf\u53e5\u8bdd\u7684\u7b2c\u4e00\u4e2a\u8bcd\u8bfb\u51fa\u6765\u7684\u8bbe\u5b9a\u4e86\u3002\n\n\n# \u6211\u7528\u7684torchtext\u7684Field\u8fdb\u884c\u6f14\u793a\uff0c SRC\u662f\u4e00\u4e2aField\n[SRC.vocab.itos[i] for i in range(1,4)]  \n['&lt;pad&gt;', '&lt;bos&gt;', '&lt;eos&gt;']\n\n\n\u53ef\u89c1\uff0c2\u662f\u5f00\u59cb\uff0c3\u662f\u7ed3\u675f\uff0c1\u662f\u7a7a\u683c\uff08\u5f53\u7136\u8fd9\u662f\u6211\u8bbe\u7f6e\u7684\uff09\n\u540c\u65f6\u4e5f\u80fd\u6ce8\u610f\u5230\uff0c\u6700\u540e\u4e00\u884c\u6709\u7684\u662f3\uff0c\u6709\u7684\u662f1\uff0c\u6709\u7684\u90fd\u4e0d\u662f\uff0c\u5c31\u8bf4\u660e\u53e5\u5b50\u662f\u4ee570\u4e3a\u957f\u5ea6\u8fdb\u884c\u622a\u65ad\u7684\uff0c\u81ea\u7136\u7ed3\u675f\u7684\u662f3\uff0c\u8865&lt;pad&gt;\u7684\u662f1\uff0c\u622a\u65ad\u7684\u90a3\u4e48\u90a3\u4e2a\u5b57\u662f\u591a\u5c11\u5c31\u662f\u591a\u5c11\n\u7ad6\u5411\u53d6\u4e00\u6761\u5c31\u662f\u4e00\u6574\u53e5\u8bdd\uff0c\u6253\u5370\u51fa\u6765\u5c31\u662f\u7bad\u5934\u6307\u5411\u7684\u90a3\u4e00\u5927\u5768\uff08\u517170\u4e2a\u6570\u5b57\uff09\n\u5bf9\u5b83\u8fdb\u884cindex_to_string(itos)\uff0c\u5219\u8fd8\u539f\u51fa\u4e86\u8fd9\u53e5\u8bdd\nnn.Embedding\u505a\u4e86\u4e24\u4ef6\u4e8b\uff1a\n\n\n\u6839\u636evocabulary\u8fdb\u884cone-hot\uff08\u7a00\u758f\uff09$\\rightarrow$ \u6240\u4ee5\u4f60\u8981\u544a\u8bc9\u5b83\u8bcd\u5178\u5927\u5c0f\n\u7136\u540e\u518dembedding\u6210\u6307\u5b9a\u7684\u4f4e\u7ef4\u5411\u91cf\uff08\u7a20\u5bc6\uff09\n\u6240\u4ee570\u4e2a\u6570\u5b57\u5c31\u6210\u4e8670x300\uff0c\u62fc\u4e0a\u7ef4\u5ea6\uff0c\u5c31\u662f70x64x300\n\n\u65e2\u7136\u8bb2\u5230\u8fd9\u4e86\uff0c\u591a\u8bb2\u4e24\u884c\uff0c\u5047\u5b9ahidden_dim=256, \u4e00\u4e2ann.RNN\u4f1a\u8f93\u51fa\u7684outputs\u548chidden\u7684\u5f62\u72b6\u5982\u4e0b\uff1a\n&gt;&gt;&gt; outputs.shape\ntorch.Size([70, 64, 256])\n&gt;&gt;&gt; hidden.shape\ntorch.Size([1, 64, 256])\n\n\n\u5373300\u7ef4\u8fdb\u53bb\uff0c256\u7ef4\u51fa\u6765\uff0c\u4f46\u662f\u56e0\u4e3a\u53e5\u5b50\u670970\u7684\u957f\u5ea6\uff0c\u90a3\u5c31\u662f70\u4e2aoutput\uff0chidden\u662f\u4ece\u524d\u4f20\u5230\u540e\u7684\uff0c\u5f53\u7136\u662f\u6700\u540e\u4e00\u4e2a\n\u4e5f\u56e0\u6b64\uff0c\u5982\u679c\u4f60\u4e0d\u9700\u8981\u53e0\u52a0\u591a\u5c42RNN\uff0c\u4f60\u53ea\u9700\u8981\u6700\u540e\u4e00\u4e2a\u5b57\u7684output\u5c31\u884c\u4e86outputs[-1,:,:], \u8fd9\u4e2a\u7ed3\u679c\u9001\u5230\u5168\u8fde\u63a5\u5c42\u91cc\u53bb\u8fdb\u884c\u5206\u7c7b\u3002\n\n\u81ea\u5df1\u5199\u4e00\u4e2aRNN\n\u5176\u5b9e\u5c31\u662f\u8981\u81ea\u5df1\u628a\u4e0a\u8ff0\u5f62\u72b6\u53d8\u5316\u505a\u5bf9\u5c31\u884c\u4e86\u3002\u5c31\u662f\u51e0\u4e2a\u7ebf\u6027\u53d8\u6362\uff0c\u6240\u4ee5\u6211\u4eec\u7528nn.Linear\u6765\u62fc\u63a5:\ninput: 2x5x3 $\\Rightarrow$ 5\u4e2a\u5e8f\u5217\uff0c\u6bcf\u4e00\u4e2a2\u4e2a\u8bcd\uff0c\u6bcf\u4e2a\u8bcd\u75283\u7ef4\u5411\u91cf\u8868\u793a\nhidden=10, \u65e0embedding\uff0cnum_class=7\n\u671f\u5f85\u5f62\u72b6\uff1a\n\n\noutput: 2x5x7\nhidden:1x5x10\n\nclass RNN(nn.Module):\n    def __init__(self, input_size, hidden_size, output_size):\n        super(RNN, self).__init__()\n        self.hidden_size = hidden_size\n        self.i2h = nn.Linear(input_size + hidden_size, hidden_size)\n        self.i2o = nn.Linear(input_size + hidden_size, output_size)\n        self.softmax = nn.LogSoftmax(dim=1)\n\n    def forward(self, input, hidden):\n        combined = torch.cat((input, hidden), 2)\n        # input shape: (2, 5, 3)\n        # hidden shape: (2, 5, 10)\n        # combine shape (2, 5, 13)\n        hidden = self.i2h(combined)\n        output = self.i2o(combined)\n        output = self.softmax(output)\n        return output, hidden\n\n    def initHidden(self):\n        return torch.zeros(1, self.hidden_size)\n\nhidden_size = 10\nnum_class = 7\ninput = torch.randint(0,10,(2,5,3))\n\nrnn = RNN(input.size(2),hidden_size,num_class)\nout, hid = rnn(input, torch.zeros(2, 5, hidden_size))\nout.shape, hid.shape\n\noutput:\n(torch.Size([2, 5, 7]), torch.Size([2, 5, 10]))\n\n\u53ef\u89c1\uff0coutput\u662f\u4e00\u6837\u7684\uff0chidden\u7684\u5f62\u72b6\u4e0d\u4e00\u6837\uff0c\u4e8b\u5b9e\u4e0a\u6bcf\u4e00\u4e2a\u5b57\u786e\u5b9e\u662f\u4f1a\u4ea7\u751fhidden\u7684\uff0c\u4f46\u662fpytorch\u5e76\u6ca1\u6709\u628a\u5b83\u8fd4\u51fa\u6765\uff08\u6d88\u8d39\u6389\u5c31\u6ca1\u7528\u4e86\uff09\u3002\u8fd9\u91cc\u5c31pass\u4e86\uff0c\u6211\u4eec\u4e3b\u8981\u662f\u770b\u4e00\u4e0b\u53cc\u5411\u548c\u591a\u5c42\u7684\u60c5\u51b5\u4e0b\u5f62\u72b6\u7684\u53d8\u5316\uff0c\u4e0b\u9762\u6211\u4eec\u7528pytorch\u81ea\u5df1\u7684RNN\u6765\u6d4b\u8bd5\u3002num_layers\nimport torch\nimport torch.nn as nn\ntorch.manual_seed(3)\nnum_layers = 3\nbatch_size = 2\nrnn = nn.RNN(input_size=3, hidden_size=12, num_layers=num_layers, batch_first=False)\nh0 = torch.randn(num_layers, batch_size, 12) # \u51e0\u5c42\u5c31\u9700\u8981\u521d\u59cb\u51e0\u4e2ahidden\nx0 = torch.rand(5, batch_size, 3) # input: 5x3 -&gt; 1x12 # N\u4e2a\u6279\u6b21\uff0c 5\u4e2a\u5e8f\u5217(\u6bd4\u59825\u4e2a\u5b57\uff0c\u6bcf\u4e2a\u5b57\u75313\u4e2a\u6570\u5b57\u7684\u5411\u91cf\u7ec4\u6210)\no, h = rnn(x0, h0) # 5\u4e2aoutput, \u4e00\u4e2afinal hidden\nprint(&#39;output shape&#39;, o.shape)\nprint(&#39;hidden shape&#39;, h.shape)\n\n\u8f93\u51fa\uff1a\noutput shape torch.Size([5, 2, 12])  # 2\u4e2a\u6279\u6b21\uff0c5\u4e2a\u8bcd\uff0c12\u7ef4\u5ea6\u8f93\u51fa\nhidden shape torch.Size([3, 2, 12]) # 3\u5c42\u4f1a\u8f93\u51fa3\u4e2ahidden\uff0c2\u4e2a\u6279\u6b21\n\n\u52a0\u4e0aembedding, RNN\u6539\u6210GRU# \u8fd9\u6b21\u52a0embedding\n# \u987a\u4fbf\u628a RNN \u6539 GRU\nvocab_size = 5\nembed_size = 10\nhidden_size = 8\nbatch_size = 3\n# \u8981\u6c42\u8bcd\u5178\u957f\u5ea6\u4e0d\u8d85\u8fc75\uff0c\u8f93\u51fa\u5411\u91cf\u957f\u5ea6\u4e3a10\nemb = nn.Embedding(vocab_size, embed_size) \n# \u8f93\u5165\u4e3aembeding\u7ef4\u5ea6\uff0c\u8f93\u51fa\uff08\u548c\u9690\u5c42\uff09\u4e3a8\u7ef4\u5ea6\nrnn = nn.GRU(embed_size, hidden_size, batch_first=False, num_layers=2)\n# \u8fd9\u6b21\u8bbe\u4e86num_layers=2\uff0c\u5c31\u8981\u6c42\u6709\u4e24\u4e2ahidden\u4e86\nh0 = torch.rand(2, batch_size, hidden_size)\n# \u56e0\u4e3a\u6570\u636e\u4f1a\u7528embedding\u5305\u4e00\u6b21\uff0c\u6240\u4ee5input\u6ca1\u6709\u4e86\u7ef4\u5ea6\u8981\u6c42\uff08\u53ea\u6709\u5927\u5c0f\u8981\u6c42\uff0c\u6bcf\u4e2a\u6570\u5b57\u8981\u5c0f\u4e8e\u5b57\u5178\u957f\u5ea6\uff09\nx0 = torch.randint(1, vocab_size, (5, batch_size)) \ne = emb(x0)\nprint(&#39;input.shape:&#39;, x0.shape)\nprint(&#39;embedding.shape:&#39;, e.shape)  # (3,4)\u4f1a\u6269\u5c55\u6210\uff083,4,10), 10\u7ef4\u662frnn\u7684input\u7ef4\u5ea6\uff0c\u6b63\u597d\no, h = rnn(e, h0)\nprint(f&#39;output.shape:{o.shape}, hidden.shape:{h.shape}&#39;)\n\n\ninput.shape: torch.Size([5, 3])\nembedding.shape: torch.Size([5, 3, 10])\noutput.shape:torch.Size([5, 3, 8]), hidden.shape:torch.Size([2, 3, 8])\n\n\u552f\u4e00\u8981\u6ce8\u610f\u7684\u53d8\u5316\u5c31\u662finput\uff0c\u56e0\u4e3aembedding\u662f\u628a\u5b57\u5178\u5927\u5c0f\u7684\u7ef4\u5ea6\u8f6c\u6362\u6210\u6307\u5b9a\u5927\u5c0f\u7684\u7ef4\u5ea6\uff0c\u6697\u542b\u4e86\u4f60\u91cc\u9762\u7684\u6bcf\u4e00\u4e2a\u6570\u5b57\u90fd\u662f\u5b57\u5178\u7684\u7d22\u5f15\uff0c\u6240\u4ee5\u4f60\u7ec4\u88c5demo\u6570\u636e\u7684\u65f6\u5019\uff0c\u8981\u751f\u6210\u5c0f\u4e8e\u5b57\u5178\u5927\u5c0f(vocab_size\uff09\u7684\u6570\u5b57\u4f5c\u4e3a\u8f93\u5165\u3002bidirectional\n\u8fd9\u6b21\u52a0bidirectional\nbatch_first = False\nx (5, 3) -&gt; 3\u4e2a\u5e8f\u5217\uff0c\u6bcf\u4e2a\u5e8f\u52175\u4e2a\u6570\nembedding(5, 10) -&gt; \u8f93\u5165\u5b57\u5178\u957f5\uff0c\u8f93\u51fa\u5411\u91cf\u957f10 -&gt; (5, 3, 10) -&gt; 3\u4e2a\u5e8f\u5217\uff0c\u6bcf\u4e2a\u5e8f\u52175\u4e2a10\u7ef4\u5411\u91cf\nhidden\u5fc5\u987b\u4e3a8\u7ef4\uff0c4\u4e2a\uff08num_layers=2, bidirection),3\u4e2a\u6279\u6b21 -&gt; (4,3,8)\nrnn(10, 8) -&gt; \u8f93\u516510\u7ef4\uff0c\u8f93\u51fa8\u7ef4\n\n# \u8fd9\u6b21\u52a0 bidirection\n\nvocab_size = 5\nembed_size = 10\nhidden_size = 8\nbatch_size = 3\nnum_layers = 2\n# \u8981\u6c42\u8bcd\u5178\u957f\u5ea6\u4e0d\u8d85\u8fc75\uff0c\u8f93\u51fa\u5411\u91cf\u957f\u5ea6\u4e3a10\nemb = nn.Embedding(vocab_size, embed_size) \n# \u8f93\u5165\u4e3aembeding\u7ef4\u5ea6\uff0c\u8f93\u51fa\uff08\u548c\u9690\u5c42\uff09\u4e3a8\u7ef4\u5ea6\nrnn = nn.GRU(embed_size, hidden_size, batch_first=False, num_layers=num_layers, bidirectional=True)\n# \u8fd9\u6b21\u8bbe\u4e86num_layers=2\uff0c\u5c31\u8981\u6c42\u6709\u4e24\u4e2ahidden\u4e86\n# \u52a0\u4e0a\u53cc\u5411\uff0c\u5c31\u67094\u4e2a\u4e86\uff0c\u8fd9\u91cc\u4e58\u4ee52\n# h0 = (torch.rand(2, batch_size, hidden_size), torch.rand(2, batch_size, hidden_size))\nh0 = torch.rand(num_layers*2, batch_size, hidden_size)\n# \u56e0\u4e3a\u6570\u636e\u4f1a\u7528embedding\u5305\u4e00\u6b21\uff0c\u6240\u4ee5input\u6ca1\u6709\u4e86\u7ef4\u5ea6\u8981\u6c42\uff08\u53ea\u6709\u5927\u5c0f\u8981\u6c42\uff0c\u6bcf\u4e2a\u6570\u8981\u5c0f\u4e8e\u5b57\u5178\u957f\u5ea6\uff09\nx0 = torch.randint(1, vocab_size, (5, batch_size)) \ne = emb(x0)\nprint(&#39;input.shape:&#39;, x0.shape)\nprint(&#39;embedding.shape:&#39;, e.shape)  # (3,4)\u4f1a\u6269\u5c55\u6210\uff083,4,10), 10\u7ef4\u662frnn\u7684input\u7ef4\u5ea6\uff0c\u6b63\u597d\n# hidden = torch.cat((h0[-2,:,:], h0[-1,:,:]),1)\no, h = rnn(e, h0)\nprint(f&#39;output.shape:{o.shape}, hidden.shape:{h.shape}&#39;)\n\n\ninput.shape: torch.Size([5, 3])\nembedding.shape: torch.Size([5, 3, 10])\noutput.shape:torch.Size([5, 3, 16]), hidden.shape:torch.Size([4, 3, 8])\n\n\u53ef\u89c1\uff0c\u53cc\u5411\u4f1a\u4f7f\u8f93\u51fa\u591a\u4e00\u500d\uff0c\u53ef\u4ee5\u7528[:hidden_size], [hidden_size:]\u5206\u522b\u53d6\u51fa\u6765\uff0c\u6211\u4eec\u9a8c\u8bc1\u4e00\u4e0b\uff0c\u7528\u6846\u67b6\u751f\u6210\u4e00\u4e2a\u53cc\u5411\u7684GRU\uff0c\u7136\u540e\u624b\u52a8\u751f\u6210\u4e00\u4e2a\u6b63\u5411\u7684\u4e00\u4e2a\u8d1f\u5411\u7684\uff0c\u590d\u5236\u53c2\u6570\uff0c\u770b\u4e00\u4e0b\u8f93\u51fa\uff1afrom torch.autograd import Variable\nimport numpy as np\n# \u5236\u4f5c\u4e00\u4e2a\u6b63\u5e8f\u548c\u53cd\u5e8f\u7684input\ntorch.manual_seed(17)\nrandom_input = Variable(torch.FloatTensor(5, 1, 1).normal_(), requires_grad=False)\nreverse_input = random_input[np.arange(4, -1, -1), :, :]\n\nbi_grus = torch.nn.GRU(input_size=1, hidden_size=1, num_layers=1, batch_first=False, bidirectional=True)\nreverse_gru = torch.nn.GRU(input_size=1, hidden_size=1, num_layers=1, batch_first=False, bidirectional=False)\ngru = torch.nn.GRU(input_size=1, hidden_size=1, num_layers=1, batch_first=False, bidirectional=False)\n\nreverse_gru.weight_ih_l0 = bi_grus.weight_ih_l0_reverse\nreverse_gru.weight_hh_l0 = bi_grus.weight_hh_l0_reverse\nreverse_gru.bias_ih_l0 = bi_grus.bias_ih_l0_reverse\nreverse_gru.bias_hh_l0 = bi_grus.bias_hh_l0_reverse\ngru.weight_ih_l0 = bi_grus.weight_ih_l0\ngru.weight_hh_l0 = bi_grus.weight_hh_l0\ngru.bias_ih_l0 = bi_grus.bias_ih_l0\ngru.bias_hh_l0 = bi_grus.bias_hh_l0\n\nbi_output, bi_hidden = bi_grus(random_input)\noutput, hidden = gru(random_input)\nreverse_output, reverse_hidden = reverse_gru(reverse_input)  # \u5206\u522b\u53d6[(4,3,2,1,0),:,:] -&gt; \u5373\u5012\u5e8f\u9001\u5165input\nprint(&#39;bi_output:&#39;, bi_output.shape)\nprint(bi_output.squeeze(1).data)\nprint(bi_output[:,0,1].data)                # \u53cc\u5411\u8f93\u51fa\u4e2d\u7684\u540e\u534a\u622a\nprint(reversed(reverse_output[:,0,0].data)) # \u53cd\u5411\u8f93\u51fa\nprint(output.data[:,0,0])                   # \u5355\u72ec\u4e00\u4e2arnn\u7684\u8f93\u51fa \nprint(bi_output[:,0,0].data)                # \u53cc\u5411\u8f93\u51fa\u4e2d\u7684\u524d\u534a\u622a\n\n\nbi_output: torch.Size([5, 1, 2])\ntensor([[-0.2336, -0.3068],\n        [ 0.0660, -0.6004],\n        [ 0.0859, -0.5620],\n        [ 0.2164, -0.5750],\n        [ 0.1229, -0.3608]])\ntensor([-0.3068, -0.6004, -0.5620, -0.5750, -0.3608])\ntensor([-0.3068, -0.6004, -0.5620, -0.5750, -0.3608])\ntensor([-0.2336,  0.0660,  0.0859,  0.2164,  0.1229])\ntensor([-0.2336,  0.0660,  0.0859,  0.2164,  0.1229])\n\n\u73b0\u5728\u4f60\u4eec\u5e94\u8be5\u77e5\u9053bidirectional\u7684\u53cc\u500d\u8f93\u51fa\u662f\u600e\u4e48\u56de\u4e8b\u4e86\uff0c\u518d\u6765\u770b\u770bhiddenhidden.shape, reverse_hidden.shape, bi_hidden.shape\nbi_hidden[:,0,0].data, reverse_hidden[:,0,0].data, hidden[:,0,0].data\n\n\n(torch.Size([1, 1, 1]), torch.Size([1, 1, 1]), torch.Size([2, 1, 1]))\n(tensor([ 0.1229, -0.3068]), tensor([-0.3068]), tensor([0.1229]))\n\n\n\u6b63\u5411\u7684\u8f93\u51fa\u5c31\u662f\u5355\u5411rnn\n\u53cd\u5411\u7684\u8f93\u51fa\u5c31\u662f\u628a\u6570\u636e\u53cd\u4f20\u7684\u5355\u5411rnn\n\u53cc\u5411rnn\u51fa\u6765\u7684\u7b2c\u6700\u540e\u4e00\u4e2ahidden\uff08\u540e\u534a\u622a\uff09\u5c31\u662f\u53cd\u5411\u5b8c\u6210\u540e\u7684hidden\n\n\u7531\u6253\u5370\u51fa\u6765\u7684\u6570\u636e\u53ef\u77e5\uff1a\n\u6700\u540e\u4e00\u4e2ahidden\uff0c\u5c31\u662f\u53cd\u5411RNN\u7684\u6700\u540e\u4e00\u4e2ahidden\uff08\u65f6\u95f4\u70b9\u5728\u5f00\u5934\uff09\n\u4e5f\u662f\u53cc\u5411RNN\u91cc\u7684\u7b2c\u4e00\u4e2a\u8f93\u51fa\uff08\u7684\u6700\u540e\u4e00\u4e2a\u5143\u7d20\uff09\n\u4e5f\u662f\u5355\u5411RNN\uff08\u4f46\u662f\u6570\u636e\u53cd\u4f20\uff09\uff08\u6216\u8005\u6b63\u5411\uff0c\u4f46\u9006\u65f6\u5e8f\uff09\u91cc\u7684\u6700\u540e\u4e00\u4e2a\u8f93\u51fa\n\n\n\u53cc\u5411RNN\u91cc\n\u5012\u6570\u7b2c\u4e8c\u4e2ahidden\uff0c\u662f\u6b63\u5411\u7684\u6700\u540e\u4e00\u4e2ahidden\uff08\u65f6\u95f4\u70b9\u5728\u7ed3\u5c3e\uff09\n\u5b83\u4e5f\u662foutput\u91cc\u9762\u7684\u503c\uff0c\u5b83\u662f\u53cc\u5411\u8f93\u51fa\u91cc\u7684\u6700\u540e\u4e00\u4e2a\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20\n\n\u603b\u7684\u6765\u8bf4\noutput\u7531\u6b63\u53cd\u5411\u8f93\u51fa\u6a2a\u5411\u62fc\u63a5\uff08\u6240\u6709\uff09\nhidden\u7531\u6b63\u53cd\u5411hidden\u7ad6\u5411\u62fc\u63a5\uff08top layer)\n\n", "categories": [{"name": "posts", "slug": "posts", "permalink": "/category/posts/"}], "tags": [{"name": "RNN", "slug": "RNN", "permalink": "/tag/RNN/"}]}, {"title": "\u51e0\u79cd\u6559\u6750\u91cc\u6c42\u89e3Ax=0\u7b14\u8bb0", "date": "2021-03-05T00:00:00-00.00", "path": "/archives/%E5%87%A0%E7%A7%8D%E6%95%99%E6%9D%90%E9%87%8C%E6%B1%82%E8%A7%A3Ax%3D0%E7%AC%94%E8%AE%B0/", "text": "\u5982\u679c\u4e00\u4e2a\u77e9\u9635\u5316\u7b80\u4e3a$$\nA=\n\\left[\n    \\begin{array}{cccc|c}\n    1&amp;2&amp;2&amp;2&amp;0 \\\\\n    0&amp;0&amp;1&amp;2&amp;0 \\\\\n    0&amp;0&amp;0&amp;0&amp;0\n    \\end{array}\n\\right] \\tag{0}\n$$\n\u6c42\u89e3$\\bf{A}\\it\\vec{x}=0$\u5bf9\u6bd4\u5728\u4e0d\u540c\u6559\u6750\u4e2d\u7684\u89e3\u9898\u601d\u8def\u3002\u53ef\u6c57\u5b66\u9662\u89e3\u6cd5\n\u5148\u7ee7\u7eed\u5316\u7b80\u4e3aReduced Row Echelon Form (RREF)$$\n\\left[\n    \\begin{array}{cccc|c}\n    1&amp;2&amp;0&amp;-2&amp;0 \\\\\n    0&amp;0&amp;1&amp;2&amp;0 \\\\\n    0&amp;0&amp;0&amp;0&amp;0\n    \\end{array}\n\\right] \\tag{1. 1}\n$$\n\u8fd8\u539f\u4e3a\u65b9\u7a0b\u7ec4:$$ \n\\begin{cases}\n    x_1=-2x_2+2x_4 \\\\\n    x_3=-2x_4\\\\\n\\end{cases} \\tag{1.2}\n$$\n\u7528$x_2$\u548c$x_4$\u6765\u8868\u793a$x_1$\u548c$x_3$\uff0c\u586b\u6ee1\u77e9\u9635\u76f8\u5e94\u4f4d\u7f6e\u5373\u53ef\u5f97\u89e3\uff1a$$\n\\left[\\begin{smallmatrix} x_1\\\\x_2\\\\x_3\\\\x_4 \\end{smallmatrix}\\right]=\nx_2 \\left[\\begin{smallmatrix} -2\\\\1\\\\0\\\\0 \\end{smallmatrix}\\right] +\nx_4 \\left[\\begin{smallmatrix} 2\\\\0\\\\-2\\\\1 \\end{smallmatrix}\\right] \\tag{1.3}\n$$\n\u5982\u679c\u4e0d\u662f\u592a\u76f4\u89c2\u7684\u8bdd\uff0c\u5176\u5b9e\u5c31\u662f\u628a\u4ee5\u4e0b\u65b9\u7a0b\u5199\u6210\u4e86\u77e9\u9635\u7684\u5f62\u5f0f\uff1a$$\n\\begin{cases}\n    x_1=-2x_2+2x_4 \\\\\n    x_2=x_2\\\\\n    x_3=-2x_4\\\\\n    x_4=x_4\n\\end{cases}\\tag{1. 4}\n$$\n\n\u5251\u6865\u6559\u6750\u89e3\u6cd5\n\n\u300aMathematics for Machine Learning\u300b\nby Marc Peter Deisenroth, A Aldo Faisal, Cheng Soon Ong,\nCambridge University\u5316\u7b80\u4e3aRREF\u540e\uff0c\u89c2\u5bdf\u5230$c_1$\u548c$c_3$\u5217\u53ef\u7ec4\u6210\u4e00\u4e2a\u5355\u4f4d\u77e9\u9635\uff08identity matrix\uff09$\\left[\\begin{smallmatrix} 1&amp;0\\0&amp;1 \\end{smallmatrix}\\right]$\n\u5982\u679c\u662f\u89e3$\\bf{A}\\it\\vec{x}=b$\uff0c\u6b64\u65f6\u53ef\u7528\u6b64\u77e9\u9635\u6c42\u51fa\u7279\u89e3\uff0c\u4f46\u6b64\u5904\u662f0\uff0c\u6240\u4ee5\u6b64\u6b65\u7701\u7565\uff0c\u76f4\u63a5\u6c42\u901a\u89e3\n\u6211\u4eec\u7528$c_1$\u548c$c_3$\u6765\u8868\u793a\u5176\u5b83\u5217\uff1a$$\n\\begin{cases}\nc_2=2c_1 \\\\\nc_4=-2c_1+2c_3\n\\end{cases} \\tag{2.1}\n$$\n\u6211\u4eec\u5229\u7528$c_2-c_2=0, c_4-c_4=0$\u6765\u6784\u90200\u503c\uff08\u901a\u89e3\u90fd\u662f\u6c420\uff09\uff1a$$\n\\begin{cases}\n2c_1-\\color{green}{c_2}=0 \\\\\n-2c_1+2c_3-\\color{green}{c_4}=0\n\\end{cases} \\tag{2.2}\n$$\n\u8865\u9f50\u65b9\u7a0b\uff0c\u6574\u7406\u987a\u5e8f\uff08\u4ee5\u4fbf\u76f4\u89c2\u5730\u770b\u5230\u7cfb\u6570\uff09\u5f97\uff1a$$\n\\begin{cases}\n\\color{red}2c_1\\color{red}{-1}c_2+\\color{red}{0}c_3+\\color{red}{0}c_4=0 \\\\\n\\color{red}{-2}c_1+\\color{red}0c_2+\\color{red}2c_3\\color{red}{-1}c_4=0\n\\end{cases} \\tag{2. 3}\n$$\n\u56e0\u4e3a\u77e9\u9635\u4e58\u5411\u91cf\u53ef\u4ee5\u7406\u89e3\u4e3a\u77e9\u9635\u548c\u5217\u5411\u91cf$\\vec{c}$\u4e0e\u5411\u91cf$x$\u7684\u70b9\u79ef\u4e4b\u548c$\\sum_{i=1}^4 x_ic_i$\uff0c\u6240\u4ee5\u7ea2\u8272\u7684\u7cfb\u6570\u90e8\u5206\u5176\u5b9e\u5c31\u662f$(x_1, x_2, x_3, x_4)$\uff0c\u5f97\u89e3\uff1a$$\n\\left\\{x\\in\\mathbb{R}^4:x=\\lambda_1\\left[\\begin{smallmatrix} 2\\\\-1\\\\0\\\\0 \\end{smallmatrix}\\right]+\\lambda_2\\left[\\begin{smallmatrix} 2\\\\0\\\\-2\\\\1 \\end{smallmatrix}\\right],\\lambda_1,\\lambda_2\\in\\mathbb{R}\\right\\} \\tag{2.4}\n$$\n\n\u4e0e\u53ef\u6c57\u5b66\u9662\u7684\u89e3\u5f97\u5230\u7684\u4e24\u4e2a\u5411\u91cf\u6bd4\u8f83\u4e0b\uff0c\u662f\u4e00\u6837\u7684\uff0c\u90fd\u662f$[2,-1,0,0]^T$\u548c$[2,0,-2,1]^T$\u3002\n\n##\u9ebb\u7701\u7406\u5de5\u6559\u6750\u89e3\u6cd5\n\u300aIntroduction to Linear Alegebra\u300b\nby Gilbert Strang, \nMassachusetts Institute of Technology\u65e0\u9700\u7ee7\u7eed\u5316\u7b80\u4e3aRREF\uff0c\u76f4\u63a5\u5bf9\u65b9\u7a0b\u7ec4\uff1a$$ \n\\begin{cases}\n    x_1=-2x_2+2x_4 \\\\\n    x_3=-2x_4\\\\\n\\end{cases} \\tag{3.1}\n$$\n\u4f7f\u7528\u7279\u89e3\u3002\u8003\u8651\u5230$x_1,x_3$\u4e3a\u4e3b\u5143\uff08pivot\uff09\uff0c\u90a3\u4e48\u5206\u522b\u8bbe$[\\begin{smallmatrix} x_2 \\ x_4 \\end{smallmatrix}]$ \u4e3a$[\\begin{smallmatrix} 1 \\ 0 \\end{smallmatrix}]$ \u548c$[\\begin{smallmatrix} 0 \\ 1 \\end{smallmatrix}]$ \u3002\n\u4e24\u79cd\u60c5\u51b5\u5404\u4ee3\u5165\u4e00\u6b21\uff0c\u89e3\u51fa$x_1,x_3$\uff0c\u4ecd\u7136\u662f$[2,\\color{red}{-1},0,\\color{red}0]^T$\u548c$[2,\\color{red}0,-2,\\color{red}1]^T$\uff0c\u7ea2\u8272\u6807\u8bc6\u4e86\u4ee3\u5165\u503c\uff0c\u9ed1\u8272\u5373\u4e3a\u4ee3\u5165\u540e\u7684\u89e3\u3002MIT\u4e0d\u6b62\u63d0\u4f9b\u4e86\u8fd9\u4e00\u4e2a\u601d\u8def\uff0c\u89e3\u6cd5\u4e8c\u5982\u4e0b\uff1a\u8fd9\u6b21\u9700\u8981\u5316\u7b80\u4e3aRREF\uff0c\u7136\u540e\u4e92\u6362\u7b2c2\u5217\u548c\u7b2c3\u5217\uff08\u8bb0\u4f4f\u8fd9\u6b21\u4e92\u6362\uff09\uff0c\u8fd8\u8bb0\u5f97\u5251\u6865\u7684\u65b9\u6cd5\u91cc\u53d1\u73b0$c_1,c_3$\u80fd\u7ec4\u6210\u4e00\u4e2a\u5355\u4f4d\u77e9\u9635\u5417\uff1f\u8fd9\u91cc\u7684\u76ee\u7684\u662f\u901a\u8fc7\u79fb\u52a8\u5217\uff0c\u76f4\u63a5\u5728\u8868\u73b0\u5f62\u5f0f\u4e0a\u53d8\u6210\u5355\u4f4d\u77e9\u9635\uff1a$$\n\\left[\n    \\begin{array}{cc:cc}\n    1&amp;0&amp;2&amp;-2\\\\\n    0&amp;1&amp;0&amp;2\\\\\n    \\hdashline\n    0&amp;0&amp;0&amp;0\n    \\end{array}\n\\right] \\tag{3.2}\n$$\n\u8fd9\u91cc\u628a\u7528\u865a\u7ebf\u53cd\u77e9\u9635\u5212\u6210\u4e86\u56db\u4e2a\u533a\uff0c\u5de6\u4e0a\u89d2\u4e3a\u4e00\u4e2aIdentity Matrix\uff0c\u6211\u4eec\u8bb0\u4e3aI\uff0c\u53f3\u4e0a\u89d2\u4e3a\u81ea\u7531\u5217\uff0c\u6211\u4eec\u8bb0\u4e3aF\uff0c\u77e9\u9635\uff08\u8fd9\u6b21\u6211\u4eec\u6807\u8bb0\u4e3aR\uff09\u53d8\u6210\u4e86$$\n\\bf{\\it{R}}=\n\\begin{bmatrix}\nI&amp;F\\\\\n0&amp;0\n\\end{bmatrix} \\tag{3. 3}\n$$\n\u6c42\u89e3$\\bf{\\it{R}}\\it\\vec{x}=0$\uff0c\u5f97\u5230$x=\\left[\\begin{smallmatrix} -F\\I \\end{smallmatrix}\\right]$\uff0c\u628aF\u548cI\u5206\u522b\u5c55\u5f00(\u8bb0\u5f97F\u8981\u4e58\u4e0a-1)\uff1a$$\n\\begin{bmatrix}\n-2&amp;2\\\\\n0&amp;-2\\\\\n1&amp;0\\\\\n0&amp;1\n\\end{bmatrix} \\tag{3.4}\n$$\n\u8fd8\u8bb0\u5f97\u524d\u9762\u52a0\u7c97\u63d0\u793a\u7684\u4ea4\u6362\u4e86\u4e24\u5217\u5417\uff1f\u6211\u4eec\u4ea4\u6362\u4e86\u4e24\u5217\uff0c\u5012\u7f6e\u540e\uff0c\u6211\u4eec\u8981\u628a\u7b2c2, 3\u884c\u7ed9\u4ea4\u6362\u4e00\u4e0b\uff1a$$\n\\begin{bmatrix}\n-2&amp;2\\\\\n1&amp;0\\\\\n0&amp;-2\\\\\n0&amp;1\n\\end{bmatrix} \\tag{3.5}\n$$\n\u662f\u4e0d\u662f\u53c8\u5f97\u5230\u4e86\u4e24\u4e2a\u719f\u6089\u7684$[2,-1,0,0]^T$\u548c$[2,0,-2,1]^T$\u3002\uff1f\n\u5f53\u65f6\u770b\u5230Gilbert\u6559\u6388\u7b80\u5355\u7c97\u66b4\u5730\u7528$[\\begin{smallmatrix} 1 \\ 0 \\end{smallmatrix}]$ \u548c$[\\begin{smallmatrix} 0 \\ 1 \\end{smallmatrix}]$ \u76f4\u63a5\u4ee3\u5165\u6c42\u51fa\u89e3\uff0c\u9053\u7406\u90fd\u4e0d\u8ddf\u4f60\u8bb2\uff0c\u7136\u540e\u53c8\u7ed9\u4f60\u753b\u5927\u997c\uff0c\u53c8\u662fF\u53c8\u662fI\u7684\uff0c\u89c9\u5f97\u53ef\u80fd\u4ed6\u7684\u8bfe\u7a0b\u4e0d\u9002\u5408\u521d\u5b66\u8005\uff0cLOL\u3002\u4e0d\u8fc7\uff0c\u8fd9\u4e9bGilbert\u6559\u6388\u5728\u6b64\u6f14\u793a\u7684\u89e3\u6cd5\u5e76\u4e0d\u9002\u7528\u4e8e$\\bf{A}\\it\\vec{x}=b$\u3002\n\u5728\u6b64\u7279\u7528\u7b14\u8bb0\u628a\u51e0\u672c\u6559\u6750\u91cc\u7684\u601d\u8def\u90fd\u8bb0\u5f55\u4e00\u4e0b\u3002", "categories": [{"name": "posts", "slug": "posts", "permalink": "/category/posts/"}], "tags": [{"name": "math", "slug": "math", "permalink": "/tag/math/"}, {"name": "\u7ebf\u6027\u4ee3\u6570", "slug": "\u7ebf\u6027\u4ee3\u6570", "permalink": "/tag/%E7%BA%BF%E6%80%A7%E4%BB%A3%E6%95%B0/"}]}, {"title": "scikit-learn\u5b98\u7f51\u6559\u7a0b\u7b14\u8bb0(\u4e00)", "date": "2021-03-02T00:00:00-00.00", "path": "/archives/scikit-learn%E5%AE%98%E7%BD%91%E6%95%99%E7%A8%8B%E7%AC%94%E8%AE%B0%28%E4%B8%80%29/", "text": "\u5f53\u521d\u7ffbscikit learn\u6587\u6863\u7684\u65f6\u5019\uff0c\u8d8a\u7ffb\u8d8a\u591a\uff0c\u5e72\u8106\u628a\u5b83\u7684\u6559\u7a0b\u62ff\u51fa\u6765\u770b\u4e86\u770b\uff0c\u53ea\u6709\u524d\u9762\u7684\u90e8\u5206\uff0c\u4e3b\u8981\u60f3\u770b\u770bscikit learn\u89d2\u5ea6\u6574\u7406\u7684\u77e5\u8bc6\u4f53\u7cfb\uff0c\u679c\u7136\uff0c\u4e00\u5f00\u59cb\u5c31\u662f\u4ece\u76d1\u7763\u548c\u975e\u76d1\u7763\u8bb2\u8d77\uff1aMachine learning\nIn general, a learning problem considers a set of n samples of data and then tries to predict properties of unknown data.Learning problems fall into a few categories:\nsupervised learning, in which the data comes with additional attributes that we want to predict. This problem can be either:\nclassification: samples belong to two or more classes and we want to learn from already labeled data how to predict the class of unlabeled data.\nregression: if the desired output consists of one or more continuous variables, then the task is called regression.\n\n\nunsupervised learning, in which the training data consists of a set of input vectors x without any corresponding target values.\nclustering: The goal in such problems may be to discover groups of similar examples within the data\ndensity estimation: to determine the distribution of data within the input space\ndown dimensional: project the data from a high-dimensional space down to two or three dimensions for the purpose of visualization.\n\n\n\ndataset\nsee more dataset load methoddata, targets\nA dataset is a dictionary-like object that holds all the data and some metadata about the data. This data is stored in the .data member, which is a n_samples, n_features array. In the case of supervised problem, one or more response variables are stored in the .target member.estimator\nIn scikit-learn, an estimator for classification is a Python object that implements the methods fit(X, y) and predict(T),  an estimator is any object that learns from dataAn example of an estimator is the class sklearn.svm.SVC, which implements support vector classification.\nestimator.param1 \u8868\u793a\u4f20\u5165\u7684\u53c2\u6570\nestimator.param1_   \u8868\u793aestimated param\n\nfrom sklearn import datasets\niris   = datasets.load_iris()\ndigits = datasets.load_digits()\n\n# digits.data.shape,  (1797, 64)\n# digits.images.shape, (1797, 8, 8)\n\nimport matplotlib.pyplot as plt\nplt.imshow(digits.images[-1], cmap=&#39;gray&#39;)\n\nfrom sklearn import svm\n# first, we treat the estimator as a black box, and set params manually\n# or we can use `grid search` and `cross validation` to determine the best params\nclf = svm.SVC(gamma=0.001, C=100.)\n\n# train(or learn) from all (except last one) digits\n# validate with the last digit\nclf.fit(digits.data[:-1], digits.target[:-1])\nclf.predict(digits.data[-1:])\n\n\narray([8])\n\n# better practise\nfrom sklearn.model_selection import train_test_split\n\n# flatten the images\nn_samples = len(digits.images)\ndata = digits.images.reshape((n_samples, -1))\n\n# Create a classifier: a support vector classifier\nclf = svm.SVC(gamma=0.001)\n\n# Split data into 50% train and 50% test subsets\nX_train, X_test, y_train, y_test = train_test_split(\n    data, digits.target, test_size=0.5, shuffle=False)\n\n# Learn the digits on the train subset\nclf.fit(X_train, y_train)\n\n# Predict the value of the digit on the test subset\npredicted = clf.predict(X_test)\n\nclassification_report\nclassification_report builds a text report showing the main classification metrics.confusion matrix\nplot_confusion_matrix can e used to visually represent a confusion matrix:$\n\\begin{array}{c|c}\n&amp; Positive &amp; Negative \\\n\\hline\nTrue &amp; TP &amp; TN \\\n\\hline\nFalse &amp; FP &amp; FN\n\\end{array}\n$\u6df7\u6dc6\u77e9\u9635\u8fd8\u6709\u53e6\u4e00\u79cd\u5199\u6cd5\uff0c\u5373\u6a2a\u7eb5\u8f74\u90fd\u4ee5positive\uff0c\u548cnegative\u8868\u793a\uff0c\u800c\u4e0d\u662f\u5982\u4e0a\u7684\u4e00\u4e2a\u662f\u6307\u6807\uff0c\u4e00\u4e2a\u662f\u5224\u65ad\uff08\u6b63\u786e\uff0c\u9519\u8bef\uff09\u3002\u8fd9\u4e9b\u90fd\u4e0d\u91cd\u8981\uff0c\u81ea\u5df1\u770b\u6e05\u695a\u4e0d\u8981\u81c6\u6d4b\u5c31\u597d\u4e86\u3002\n\u5982\u679c\uff1a\n$\n\\begin{array}{c|c}\n&amp; Positive &amp; Negative \\\n\\hline\nTrue &amp;3 &amp; 4 \\\n\\hline\nFa lse &amp;1 &amp; 2\n\\end{array}\n$\u89e3\u8bfb\uff1a\n\u9884\u6d4bPositive\u51714\u4f8b\uff0c\u6210\u529f3\uff0c\u5931\u8d251\n\u9884\u6d4bNegative\u51716\u4f8b\uff0c\u6210\u529f4\uff0c\u5931\u8d252\n\n\u6240\u4ee5\u53cd\u63a8\u6b63\u6837\u672c3+2=5\uff0c\u8d1f\u68371+4=5\uff0c\u517110\u4f8b\u5927\u539f\u5219\uff0c\u6211\u4eec\u770b\u5230\u7684\u65f6\u5019\u5df2\u7ecf\u662f\u7ed3\u679c\uff0c\u6240\u4ee5\u53ea\u80fd\u4ece\u7ed3\u679c\u53cd\u63a8\u771f\u5b9e\u60c5\u51b5\uff0c\u6bd4\u5982\u6b63\u786e\u7684\u6b63\u548c\u9519\u8bef\u7684\u8d1f\uff0c\u52a0\u8d77\u6765\u5c31\u662f\u6837\u672c\u7684\u6b63\uff0c\u7b49\u7b49\n\u51c6\u786e\u7387\uff1a7/10 \uff08TP+TN/total) \u6839\u636e\u4e0a\u6587\u7684\u6587\u5b57\u63cf\u8ff0\uff0c\u5176\u5b9e\u5c31\u662f\u5224\u65ad\u6210\u529f\u7684\u6b21\u6570\n\u7cbe\u786e\u7387\uff1a3/4 (TP/TP+FP) \u5373\u53ea\u5173\u6ce8\u4e00\u4e2a\u6307\u6807(\u7b49\u4e8e\u662f\u7ad6\u5411\u7edf\u8ba1\uff09\uff0c\u6bd4\u5982\u6b63\u4f8b\uff0c\u6216\u8d1f\u4f8b\uff0c\u7136\u540e\u89c2\u5bdf\u5b83\u9519\u4e86\u591a\u5c11\u3002\n\u672c\u4f8b\u4e2d\uff0c\u53ea\u9884\u6d4b\u4e864\u4e2a\u6b63\uff0c\u5c31\u9519\u4e86\u4e00\u4e2a\n\n\n\u53ec\u56de\u7387\uff1a3/5 (TP/TP+FN) \u4ecd\u7136\u53ea\u5173\u6ce8\u4e00\u4e2a\u6307\u6807\uff0c\u6bd4\u5982\u6b63\u4f8b\uff0c\u4f46\u662f\u53ec\u56de\u7387\u5173\u5fc3\u4f60\u628a\u6240\u6709\u7684\u201c\u6b63\u4f8b\u201c\u627e\u51fa\u6765\u591a\u5c11\n\u4e5f\u5c31\u662f\u8bf4\uff0c\u5982\u679c\u4f60\u628a\u6240\u6709\u7684\u6837\u672c\u5224\u65ad\u4e3a\u6b63\u4f8b\uff0c\u53ec\u56de\u7387\u53ef\u8fbe100%\n\n\n\nfrom sklearn import metrics\nprint(f&quot;Classification report for classifier {clf}:\\n&quot;\n      f&quot;{metrics.classification_report(y_test, predicted)}\\n&quot;)\n\n\nClassification report for classifier SVC(gamma=0.001):\n              precision    recall  f1-score   support\n\n           0       1.00      0.99      0.99        88\n           1       0.99      0.97      0.98        91\n           2       0.99      0.99      0.99        86\n           3       0.98      0.87      0.92        91\n           4       0.99      0.96      0.97        92\n           5       0.95      0.97      0.96        91\n           6       0.99      0.99      0.99        91\n           7       0.96      0.99      0.97        89\n           8       0.94      1.00      0.97        88\n           9       0.93      0.98      0.95        92\n\n    accuracy                           0.97       899\n   macro avg       0.97      0.97      0.97       899\nweighted avg       0.97      0.97      0.97       899\n\ndisp = metrics.plot_confusion_matrix(clf, X_test, y_test)\ndisp.figure_.suptitle(&quot;Confusion Matrix&quot;)\nprint(f&quot;Confusion matrix:\\n{disp.confusion_matrix}&quot;)\n\nplt.show()\n\nConventions\nType Casting\nUnless otherwise specified, input will be cast to float64:&gt;&gt;&gt; import numpy as np\n&gt;&gt;&gt; from sklearn import random_projection\n\n&gt;&gt;&gt; rng = np.random.RandomState(0)\n&gt;&gt;&gt; X = rng.rand(10, 2000)\n&gt;&gt;&gt; X = np.array(X, dtype=&#39;float32&#39;)\n&gt;&gt;&gt; X.dtype\ndtype(&#39;float32&#39;)\n\n&gt;&gt;&gt; transformer = random_projection.GaussianRandomProjection()\n&gt;&gt;&gt; X_new = transformer.fit_transform(X)\n&gt;&gt;&gt; X_new.dtype\ndtype(&#39;float64&#39;)\n\nthe example above, the float32 X is casst to float64 by fit_transform(X)from sklearn import datasets\nfrom sklearn.svm import SVC\niris = datasets.load_iris()\nclf = SVC()\nclf.fit(iris.data, iris.target)\n\nprint(list(clf.predict(iris.data[:3])))\n\n# fit string\nclf.fit(iris.data, iris.target_names[iris.target])\n\nprint(list(clf.predict(iris.data[:3])))\n# [&#39;setosa&#39;, &#39;setosa&#39;, &#39;setosa&#39;]\n\n\n[0, 0, 0]\n['setosa', 'setosa', 'setosa']\n\nRefitting and updating parameters\nHyper-parameters of an estimator can be updated after it has been constructed via the set_params(). then you call fit(), the learned will be overwrite.import numpy as np\nfrom sklearn.datasets import load_iris\nfrom sklearn.svm import SVC\nX, y = load_iris(return_X_y=True)    # \u6ce8\u610f\u6362\u4e86\u79cdload\u65b9\u5f0f\n\nclf = SVC()\nclf.set_params(kernel=&#39;linear&#39;).fit(X, y)\nprint(&#39;linear&#39;, clf.predict(X[:5]))\n\nclf.set_params(kernel=&#39;rbf&#39;).fit(X, y)\nprint(&#39;rbf&#39;, clf.predict(X[:5]))\n\n\nlinear [0 0 0 0 0]\nrbf [0 0 0 0 0]\n\nMulticlass vs. multilabel fitting\nWhen using multiclass classifiers, the learning and prediction task that is performed is dependent on the format of the target data fit upon:from sklearn.svm import SVC\nfrom sklearn.multiclass import OneVsRestClassifier\nfrom sklearn.preprocessing import LabelBinarizer\n\nX = [[1, 2], [2, 4], [4, 5], [3, 2], [3, 1]]\ny = [0, 0, 1, 1, 2]\n\n# \u6ce8\u610f\u4e00\u884c\u7684\u5199\u6cd5\nclassif = OneVsRestClassifier(estimator=SVC(random_state=0)) \nprint(&#39;1d:&#39;, classif.fit(X, y).predict(X))\n\n# one-hot\ny = LabelBinarizer().fit_transform(y)\nprint(&#39;y:&#39;, y)\nprint(&#39;one-hot:&#39;, classif.fit(X, y).predict(X))  # \u53ef\u4ee5\u770b\u5230\uff0c\u5df2\u7ecf\u5f00\u59cb\u4e0d\u51c6\u786e\u4e86b\n\n\n1d: [0 0 1 1 2]\ny: [[1 0 0]\n [1 0 0]\n [0 1 0]\n [0 1 0]\n [0 0 1]]\none-hot: [[1 0 0]\n [1 0 0]\n [0 1 0]\n [0 0 0]\n [0 0 0]]\n\nmultiple label\nfrom sklearn.preprocessing import MultiLabelBinarizer\ny = [[0, 1], [0, 2], [1, 3], [0, 2, 3], [2, 4]]  # \u4e00\u4e2ainstance\u88ab\u8d4b\u4e88\u591a\u4e2alabel\uff0c\uff08\u751a\u81f3\u7b2c4\u4e2a\u67093\u4e2alabel)\ny = MultiLabelBinarizer().fit_transform(y)\nclassif.fit(X, y).predict(X)\n\n\narray([[1, 1, 0, 0, 0],\n       [1, 0, 1, 0, 0],\n       [0, 1, 0, 1, 0],\n       [1, 0, 1, 0, 0],\n       [1, 0, 1, 0, 0]])\n\nKNN (k nearest neighbors classification)\nKNN\u662f\u4e00\u79cd\u7528\u8eab\u8fb9\u6700\u8fd1\u7684n\u4e2a\u6570\u636e\u70b9\u54ea\u4e2a\u7c7b\u522b\u6700\u591a\u6765\u63a8\u65ad\u81ea\u5df1\u7c7b\u522b\u7684\u7684\u65b9\u6cd5\uff0c\u6240\u4ee5\u672c\u8d28\u4e0a\u8fd8\u662f\u6709\u6807\u7b7e\u7684\uff08\u5468\u8fb9\u6570\u636e\u70b9\u90fd\u662f\u6253\u6807\u7684\uff09\n\u6211\u8fd8\u5199\u8fc7\u4e00\u79cd\u65e0\u76d1\u7763\u7684\u805a\u7c7b\u65b9\u6cd5\uff0c\u53ebk-means\uff0c\u5c31\u56e0\u4e3a\u90fd\u6709\u4e2ak\uff0c\u4e00\u5ea6\u90fd\u8ba9\u6211\u6df7\u6dc6\u4e86\u8d77\u6765\u3002\u5176\u5b9e\u6ca1\u6709\u5173\u7cfb\uff0ck-means\u662f\u968f\u673a\u9009k\u4e2a\u70b9\u5f53\u4f5c\u4e2d\u5fc3\u70b9\uff0c\u627e\u51fa\u4e0e\u5b83\u4eec\u6700\u8fd1\u7684\u70b9\u6765\u805a\u7c7b\uff0c\u7136\u540e\u518d\u6bcf\u4e2a\u70b9\u53d6\u4e2d\u5fc3\uff0c\u8fd9\u4e48\u8fed\u4ee3N\u6b21\u4e4b\u540e\uff0c\u805a\u7c7b\u597d\u7684\u6570\u636e\u4e5f\u4f1a\u8d8a\u6765\u8d8a\u8fdc\u3002\u8fd9\u91cc\u53ea\u662f\u4f5c\u4e2a\u65c1\u8bb0\u3002\n\nimport numpy as np\nfrom sklearn import datasets\niris_X, iris_y = datasets.load_iris(return_X_y=True)\n# Split iris data in train and test data\n# A random permutation, to split the data randomly\nnp.random.seed(0)\nindices = np.random.permutation(len(iris_X))\niris_X_train = iris_X[indices[:-10]]\niris_y_train = iris_y[indices[:-10]]\niris_X_test = iris_X[indices[-10:]]\niris_y_test = iris_y[indices[-10:]]\n# Create and fit a nearest-neighbor classifier\nfrom sklearn.neighbors import KNeighborsClassifier\nknn = KNeighborsClassifier()\nknn.fit(iris_X_train, iris_y_train)\nprint(knn.predict(iris_X_test))\nprint(iris_y_test)\n\n\n[1 2 1 0 0 0 2 1 2 0]\n[1 1 1 0 0 0 2 1 2 0]\n\nThe curse of dimensionality\nnearest neighbor\u7b97\u6cd5\uff0c\u7ef4\u6570\u8d8a\u9ad8\uff0c\u9700\u8981\u7684\u6570\u636e\u8d8a\u591a\uff0c\u624d\u80fd\u4fdd\u8bc1\u5728\u4e00\u70b9\u7684\u9644\u8fd1\u6709\u8db3\u591f\u591a\u7684neighbor\u3002\u6240\u4ee5\u4e00\u822c\u6765\u8bf4\u5f53\u7279\u5f81\u5f88\u591a\u65f6KNN\u7684\u6548\u679c\u4f1a\u4e0b\u964d\u3002\u5f53\u7136\u4e5f\u6709\u4f8b\u5916\uff0c\u67d0\u6b21\u505a\u4e00\u4e2a20\u4e2a\u7279\u5f81\u7684KNN\u65f6\u5019\uff0c\u7ed3\u679c\u5c45\u7136\u6bd4\u968f\u673a\u68ee\u6797\u8fd8\u8981\u597d_(:\u0437\u300d\u2220)_\u573a\u9762\u4e00\u5ea6\u5341\u5206\u5c34\u5c2c\u2026 \u53c2\u8003Shrinkage\nIf there are few data points per dimension, noise in the observations induces high variance:train with very few data\nfrom sklearn import linear_model\n\nX = np.c_[ .5, 1].T\ny = [.5, 1]\ntest = np.c_[ 0, 2].T\nregr = linear_model.LinearRegression()\n\nimport matplotlib.pyplot as plt \n\nnp.random.seed(0)\nfor _ in range(6): \n    this_X = .1 * np.random.normal(size=(2, 1)) + X\n    regr.fit(this_X, y)\n    plt.plot(test, regr.predict(test)) \n    plt.scatter(this_X, y, s=20)\n\nRidge regression:\nA solution in high-dimensional statistical learning is to shrink the regression coefficients to zero: any two randomly chosen set of observations are likely to be uncorrelated. This is called Ridge regression.This is an example of bias/variance tradeoff:the larger the ridge alpha parameter,\nthe higher the bias\nthe lower the variance.\n\nlasso \u56de\u5f52\u548c\u5cad\u56de\u5f52\uff08ridge regression\uff09\u5176\u5b9e\u5c31\u662f\u5728\u6807\u51c6\u7ebf\u6027\u56de\u5f52\u7684\u57fa\u7840\u4e0a\u5206\u522b\u52a0\u5165 L1 \u548c L2 \u6b63\u5219\u5316\uff08regularization\uff09\u3002\u76f8\u6bd4\u76f4\u63a5\u628a\u4e00\u4e9b\u7279\u5f81\u7684\u7cfb\u6570\u7f6e\u96f6\uff0c\u53ea\u662f\u628a\u5b83\u4eec\u7684\u201c\u8d21\u732e\u201d\u53d8\u5c0f\uff0c\u5373\u4e58\u4e00\u4e0b\u8f83\u4f4e\u7684\u6743\u91cd\uff08\u60e9\u7f5a\uff0cimposing a penalty on the size of the coefficients\uff09\u3002Lasso \u66f4\u591a\u7528\u4e8e\u4f30\u8ba1\u7a00\u758f\u6837\u672c\u7684\u7cfb\u6570\u3002\u4ee5\u4e0b\u5173\u4e8e\u51e0\u4e2a\u52a0\u4e86\u6b63\u5219\u7684demo\u548c\u8c03\u4f18\u662f\u6574\u7406\u7b14\u8bb0\u6574\u7406\u5c94\u4e86\uff0c\u4e0d\u662f\u5b98\u65b9\u6559\u7a0b\u91cc\u7684\uff0c\u4f46\u662f\u4e5f\u662f\u6211\u7684\u5b66\u4e60\u7b14\u8bb0\uff0c\u6b63\u597d\u6f14\u793a\u4e00\u4e9bdemo\u548ccross validation\u7684\u7528\u6cd5\u5c31\u4e0d\u5220\u4e86\u3002\nL1-norm (Lasso)\nL2-norm (Ridge)\n(Elastic Net) (l1+l2)\n\nLasso:\n$$J(\\theta) = \\frac{1}{2}\\sum_{i}^{m}(y^{(i)} - \\theta^Tx^{(i)})^2 + \n            \\color{red} {\\lambda \\sum_{j}^{n}|\\theta_j|}$$Ridge:\n$$J(\\theta) = \\frac{1}{2}\\sum_{i}^{m}(y^{(i)} - \\theta^Tx^{(i)})^2 +\n            \\color{blue} {\\lambda \\sum_{j}^{n}\\theta_j^2}$$ElasticNet:\n$$J(\\theta) = \\frac{1}{2}\\sum_{i}^{m}(y^{(i)} - \\theta^Tx^{(i)})^2 + \n            \\lambda(\\rho \n            \\color{red}{\\sum_{j}^{n}|\\theta_j|} + \n            (1-\\rho)\\color{blue}{ \\sum_{j}^{n}\\theta_j^2})$$\u5cad\u56de\u5f52demo\nfrom sklearn.linear_model import Ridge\nfrom sklearn.datasets import load_boston\nfrom sklearn.model_selection import train_test_split\n\nboston = load_boston()   # \u8fd8\u8bb0\u5f97\u4e0a\u4e00\u8282\u8bfe load_iris() \u5417\uff1f\nX = boston.data\ny = boston.target\n\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=3)\n\nmodel = Ridge(alpha=0.01, normalize=True)   # \u7528\u5cad\u56de\u5f52\u6784\u5efa\u6a21\u578b\nmodel.fit(X_train, y_train)                 # \u62df\u5408\ntrain_score = model.score(X_train, y_train) # \u6a21\u578b\u5bf9\u8bad\u7ec3\u6837\u672c\u5f97\u51c6\u786e\u6027\ntest_score = model.score(X_test, y_test)    # \u6a21\u578b\u5bf9\u6d4b\u8bd5\u96c6\u7684\u51c6\u786e\u6027\n\nprint(boston.data[:5], boston.target[:5])\nprint()\nprint(f&quot;train_score: {train_score}, test_score: {test_score}&quot;)\n\n\n[[6.3200e-03 1.8000e+01 2.3100e+00 0.0000e+00 5.3800e-01 6.5750e+00\n  6.5200e+01 4.0900e+00 1.0000e+00 2.9600e+02 1.5300e+01 3.9690e+02\n  4.9800e+00]\n [2.7310e-02 0.0000e+00 7.0700e+00 0.0000e+00 4.6900e-01 6.4210e+00\n  7.8900e+01 4.9671e+00 2.0000e+00 2.4200e+02 1.7800e+01 3.9690e+02\n  9.1400e+00]\n [2.7290e-02 0.0000e+00 7.0700e+00 0.0000e+00 4.6900e-01 7.1850e+00\n  6.1100e+01 4.9671e+00 2.0000e+00 2.4200e+02 1.7800e+01 3.9283e+02\n  4.0300e+00]\n [3.2370e-02 0.0000e+00 2.1800e+00 0.0000e+00 4.5800e-01 6.9980e+00\n  4.5800e+01 6.0622e+00 3.0000e+00 2.2200e+02 1.8700e+01 3.9463e+02\n  2.9400e+00]\n [6.9050e-02 0.0000e+00 2.1800e+00 0.0000e+00 4.5800e-01 7.1470e+00\n  5.4200e+01 6.0622e+00 3.0000e+00 2.2200e+02 1.8700e+01 3.9690e+02\n  5.3300e+00]] [24.  21.6 34.7 33.4 36.2]\n\ntrain_score: 0.723706995939315, test_score: 0.7926416423787221\n\n\u5cad\u56de\u5f52\u8c03\u4f18\n\nRidge regression is a penalized linear regression model for predicting a numerical value\nand it can be very effective when applied to classification\nthe important parameter to tune is the regularization strength (alpha) in (0.1, 1.0) step = 0.1\n\nfrom sklearn.linear_model import RidgeCV\nfrom sklearn.datasets import load_boston\nfrom sklearn.model_selection import train_test_split\n\nboston = load_boston()\nX = boston.data\ny = boston.target\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=3)\n\n# \u7528redge cross validation\u5efa\u6a21\u800c\u4e0d\u662fRidge\nmodel = RidgeCV(alphas=[1.0, 0.5, 0.1, 0.05, 0.01, 0.005, 0.001, 0.0005, 0.0001], normalize=True)\nmodel.fit(X_train, y_train)\nprint(model.alpha_)\n\n\n0.01\n\nlass demo\u548c\u8c03\u4f18\nfrom sklearn.linear_model import Lasso\n\nlasso_reg = Lasso(alpha=0.1)\nlasso_reg.fit(X, y)\nprint(&quot;lasso score&quot;, lasso_reg.score(X_test, y_test))\n\n# \u8c03\u4f18\nlscv = LassoCV(alphas=(1.0, 0.1, 0.01, 0.001, 0.005, 0.0025, 0.001, 0.00025), normalize=True)\nlscv.fit(X, y)\nprint(&#39;Lasso optimal alpha: %.3f&#39; % lscv.alpha_)\n\n\nlasso score 0.7956864030940746\nLasso optimal alpha: 0.010\n\n\u5f39\u6027\u7f51\u7edc\n\u5927\u591a\u60c5\u51b5\u4e0b\u5e94\u8be5\u907f\u514d\u4f7f\u7528\u7eaf\u7ebf\u6027\u56de\u5f52\uff0c\u5982\u679c\u7279\u5f81\u6570\u6bd4\u8f83\u5c11\uff0c\u66f4\u503e\u5411\u4e8eLasso\u56de\u5f52\u6216\u8005\u5f39\u6027\u7f51\u7edc\uff0c\u56e0\u4e3a\u5b83\u4eec\u4f1a\u5c06\u65e0\u7528\u7684\u7279\u5f81\u6743\u91cd\u964d\u4e3a0\uff0c\u4e00\u822c\u6765\u8bf4\u5f39\u6027\u7f51\u7edc\u4f18\u4e8eLasso\u56de\u5f52from sklearn.linear_model import ElasticNet\n\ne_net = ElasticNet(alpha=0.1, l1_ratio=0.5)\ne_net.fit(X, y)\nprint(&quot;e_net score:&quot;, e_net.score(X_test, y_test))\n\n# \u8c03\u4f18\nencv = ElasticNetCV(alphas=(0.1, 0.01, 0.005, 0.0025, 0.001), \n                    l1_ratio=(0.1, 0.25, 0.5, 0.75, 0.8), \n                    normalize=True)\nencv.fit(X, y)\nprint(&#39;ElasticNet optimal alpha: %.3f and L1 ratio: %.4f&#39; % (encv.alpha_, encv.l1_ratio_))\n\n\ne_net score: 0.7926169728251697\nElasticNet optimal alpha: 0.001 and L1 ratio: 0.5000\n\n\u56de\u5230\u6559\u7a0b\uff0c\u5bf9\u524d\u4f8b\uff08\u6570\u636e\u8fc7\u5c11\u5f15\u8d77\u7684\u8fc7\u62df\u5408\uff09\uff0c\u52a0\u5165\u4e86\u60e9\u7f5a\u9879\u540e\uff1aregr = linear_model.Ridge(alpha=.1)\nnp.random.seed(0)\nfor _ in range(6): \n    this_X = .1 * np.random.normal(size=(2, 1)) + X\n    regr.fit(this_X, y)\n    plt.plot(test, regr.predict(test)) \n    plt.scatter(this_X, y, s=20) \n\n# \u89c2\u5bdf\u56fe\u50cf\u7684\u4e0d\u540c\uff0c\u5176\u5b9e\u53ef\u4ee5\u7406\u89e3\u4e3a\u6837\u672c\u8fc7\u5c11\u65f6\u7684\u201d\u8fc7\u62df\u5408\u201c\uff0c\u5f15\u5165\u5ffd\u7565\u7684\u6307\u6807\u540e\u867d\u7136\u5bf9\u8bad\u7ec3\u96c6\u7684\u51c6\u786e\u7387\u5927\u6253\u6298\u6263\uff0c\u4f46\u786e\u5b9e\u964d\u4f4e\u4e86\u65b9\u5dee\n\nDiabetes dataset\n\u6362\u4e2a\u6570\u636e\u6e90\uff0cestimator\u5e76\u4e0d\u9700\u8981\u66f4\u6362\uff0c\u5982\u679c\u9700\u8981\u6362\u8d85\u53c2\uff0c\u524d\u6587\u4e5f\u5df2\u7ecf\u8bb2\u8fc7\u4e86\uff1adiabetes_X, diabetes_y = datasets.load_diabetes(return_X_y=True)\ndiabetes_X_train = diabetes_X[:-20]\ndiabetes_X_test  = diabetes_X[-20:]\ndiabetes_y_train = diabetes_y[:-20]\ndiabetes_y_test  = diabetes_y[-20:]\n\n# observe the alpha and the score:\n\nalphas = np.logspace(-4, -1, 6)  # log10(-4)\u5230log10(-1)\u51716\u4e2a\u6570\u505aalpha\nprint(alphas)\nprint([f&#39;{regr.set_params(alpha=alpha).fit(diabetes_X_train, diabetes_y_train).score(diabetes_X_test, diabetes_y_test) * 100:.2f}%&#39;\n       for alpha in alphas])\n\n\n[0.0001     0.00039811 0.00158489 0.00630957 0.02511886 0.1       ]\n['58.51%', '58.52%', '58.55%', '58.56%', '58.31%', '57.06%']\n\nLasso regression\nLasso = least absolute shrinkage and selection operator\u76f8\u6bd4Ridge, Lasso\u4f1a\u771f\u7684\u628a\u4e00\u4e9bfeature\u7cfb\u6570\u7f6e0 (sparse method)\uff0c\u9002\u7528\u5965\u5361\u59c6\u5243\u5200\u539f\u7406(Occam\u2019s razor: prefer simpler models)regr = linear_model.Lasso()\nscores = [regr.set_params(alpha=alpha)\n              .fit(diabetes_X_train, diabetes_y_train)\n              .score(diabetes_X_test, diabetes_y_test)\n          for alpha in alphas]\nbest_alpha = alphas[scores.index(max(scores))]\nregr.alpha = best_alpha   # \u4e0d\u94fe\u5f0f\u8c03\u7528\u7684\u8bdd\u4e0d\u9700\u8981\u7528set_params\nregr.fit(diabetes_X_train, diabetes_y_train)\nprint(regr.coef_)\n\n\n[   0.         -212.43764548  517.19478111  313.77959962 -160.8303982\n   -0.         -187.19554705   69.38229038  508.66011217   71.84239008]\n\nDifferent algorithms for the same problem\nDifferent algorithms can be used to solve the same mathematical problem. For instance the Lasso object in scikit-learn solves the lasso regression problem using a coordinate descent method, that is efficient on large datasets. However, scikit-learn also provides the LassoLars object using the LARS algorithm, which is very efficient for problems in which the weight vector estimated is very sparse (i.e. problems with very few observations).Classification\nLogistic Regerssion\nlog = linear_model.LogisticRegression(C=1e5)\nlog.fit(iris_X_train, iris_y_train)\n\n\nLogisticRegression(C=100000.0)\n\n\nThe C parameter controls the amount of regularization in the LogisticRegression object:\na large value for C results in less regularization.\n\n\npenalty=&quot;l2&quot; gives Shrinkage (i.e. non-sparse coefficients),\npenalty=&quot;l1&quot; gives Sparsity.\n\nDEMO: \u6bd4\u8f83KNN\u548cLogisticRegressionfrom sklearn import datasets, neighbors, linear_model\n\nX_digits, y_digits = datasets.load_digits(return_X_y=True)\nX_digits = X_digits / X_digits.max()\n\nn_samples = len(X_digits)\n\nX_train = X_digits[:int(.9 * n_samples)]\ny_train = y_digits[:int(.9 * n_samples)]\nX_test = X_digits[int(.9 * n_samples):]\ny_test = y_digits[int(.9 * n_samples):]\n\nknn = neighbors.KNeighborsClassifier()\nlogistic = linear_model.LogisticRegression(max_iter=300)\n\nprint(&#39;KNN score: %f&#39; % knn.fit(X_train, y_train).score(X_test, y_test))\nprint(&#39;LogisticRegression score: %f&#39;\n      % logistic.fit(X_train, y_train).score(X_test, y_test))\n\n\nKNN score: 0.961111\nLogisticRegression score: 0.933333\n\nSupport vector machines (SVMs)\n\u652f\u6301\u5411\u91cf\u673a(support vector machines,SVM)\u662f\u4e00\u79cd\u4e8c\u5206\u7c7b\u6a21\u578b\uff0c\u5b83\u7684\u57fa\u672c\u6a21\u578b\u662f\u5b9a\u4e49\u5728\u7279\u5f81\u7a7a\u95f4\u4e0a\u7684\u95f4\u9694\u6700\u5927\u7684\u7ebf\u6027\u5206\u7c7b\u5668\u3002\u9664\u6b64\u4e4b\u5916\uff0cSVM\u7b97\u6cd5\u8fd8\u5305\u62ec\u6838\u51fd\u6570\uff0c\u6838\u51fd\u6570\u53ef\u4ee5\u4f7f\u5b83\u6210\u4e3a\u975e\u7ebf\u6027\u5206\u7c7b\u5668\u3002Support Vector Machines belong to the discriminant model family:they try to find a combination of samples to build a plane maximizing the margin between the two classes. Regularization is set by the C parameter:\na small value for C means the margin is calculated using many or all of the observations around the separating line (more regularization);\na large value for C means the margin is calculated on observations close to the separating line (less regularization).\n\nSVMs can be used\uff1a\nin regression \u2013SVR (Support Vector Regression)\u2013,\nor in classification \u2013SVC (Support Vector Classification).\n\nSVM\u6a21\u578b\u6709\u4e24\u4e2a\u975e\u5e38\u91cd\u8981\u7684\u53c2\u6570C\u4e0egamma\u3002\u5176\u4e2d:\nC\u662f\u60e9\u7f5a\u7cfb\u6570\uff0c\u5373\u5bf9\u8bef\u5dee\u7684\u5bbd\u5bb9\u5ea6\u3002c\u8d8a\u9ad8\uff0c\u8bf4\u660e\u8d8a\u4e0d\u80fd\u5bb9\u5fcd\u51fa\u73b0\u8bef\u5dee,\u5bb9\u6613\u8fc7\u62df\u5408\u3002C\u8d8a\u5c0f\uff0c\u5bb9\u6613\u6b20\u62df\u5408\u3002C\u8fc7\u5927\u6216\u8fc7\u5c0f\uff0c\u6cdb\u5316\u80fd\u529b\u53d8\u5dee\ngamma\u662f\u9009\u62e9RBF\u51fd\u6570\u4f5c\u4e3akernel\u540e\uff0c\u8be5\u51fd\u6570\u81ea\u5e26\u7684\u4e00\u4e2a\u53c2\u6570\u3002\u9690\u542b\u5730\u51b3\u5b9a\u4e86\u6570\u636e\u6620\u5c04\u5230\u65b0\u7684\u7279\u5f81\u7a7a\u95f4\u540e\u7684\u5206\u5e03\uff0cgamma\u8d8a\u5927\uff0c\u652f\u6301\u5411\u91cf\u8d8a\u5c11\uff0cgamma\u503c\u8d8a\u5c0f\uff0c\u652f\u6301\u5411\u91cf\u8d8a\u591a\u3002\u652f\u6301\u5411\u91cf\u7684\u4e2a\u6570\u5f71\u54cd\u8bad\u7ec3\u4e0e\u9884\u6d4b\u7684\u901f\u5ea6\u3002\n\nUsing kernels\nClasses are not always linearly separable in feature space. The solution is to build a decision function that is not linear but may be polynomial instead.This is done using the kernel trick that can be seen as creating a decision energy by positioning kernels on observations:Linear kernal\nsvc = svm.SVC(kernel=&#39;linear&#39;)\n\nPolynomial kernel\nsvc = svm.SVC(kernel=&#39;poly&#39;, degree=3)\n\nRBF kernel (Radial Basis Function)\nsvc = svm.SVC(kernel=&#39;rfb&#39;)\n\nDEMO: Plot different SVM classifiers in the iris dataset\nLinearSVC minimizes the squared hinge loss while SVC minimizes the regular hinge loss.\nLinearSVC uses the One-vs-All (also known as One-vs-Rest) multiclass reduction while SVC uses the One-vs-One multiclass reduction.\n\n# \u4ee3\u7801\u7247\u6bb5\uff0c\u5b9a\u4e494\u4e2aestimator\nC = 1.0  # SVM regularization parameter\nmodels = (svm.SVC(kernel=&#39;linear&#39;, C=C),\n          svm.LinearSVC(C=C, max_iter=10000),\n          svm.SVC(kernel=&#39;rbf&#39;, gamma=0.7, C=C),\n          svm.SVC(kernel=&#39;poly&#39;, degree=3, gamma=&#39;auto&#39;, C=C))\nmodels = (clf.fit(X, y) for clf in models)\n\ncross validation\nhttps://scikit-learn.org/stable/modules/cross_validation.html#cross-validationRAW DEMO: KFold cross-validation:import numpy as np\nfrom sklearn import datasets, svm\n\nX_digits, y_digits = datasets.load_digits(return_X_y=True)\nsvc = svm.SVC(C=1, kernel=&#39;linear&#39;)\n\nscore = svc.fit(X_digits[:-100], y_digits[:-100]).score(X_digits[-100:], y_digits[-100:])\nprint(score)\n\nX_folds = np.array_split(X_digits, 3)  # \u5206\u6210\u4e863\u4e2afold\ny_folds = np.array_split(y_digits, 3)\nscores = list()\nfor k in range(3):\n    # We use &#39;list&#39; to copy, in order to &#39;pop&#39; later on\n    X_train = list(X_folds)\n    X_test = X_train.pop(k) # \u53d6\u51fa\u6700\u540e\u4e00\u4e2afold # \u4e0d\u5bf9\uff0cpython\u5c45\u7136\u53ef\u4ee5Pop\u4efb\u610f\u4e00\u4e2a\u7d22\u5f15\n    X_train = np.concatenate(X_train) # \u628a\u5269\u4e0b\u7684fold\u62fc\u56de\u53bb\n    y_train = list(y_folds)\n    y_test = y_train.pop(k)\n    y_train = np.concatenate(y_train)\n    scores.append(svc.fit(X_train, y_train).score(X_test, y_test))\nscores\n\n\n0.98\n[0.9348914858096828, 0.9565943238731218, 0.9398998330550918]\n\nScikit-learn\u80af\u5b9a\u662f\u63d0\u4f9b\u4e86\u5b98\u65b9\u652f\u6301\u7684\uff1afrom sklearn.model_selection import KFold, cross_val_score\n\n# step 1: \u7528KFold\u548cfold\u6570\u505a\u4e00\u4e2aKFold\u5bf9\u8c61\uff0c\u7136\u540e\u7528\u8fd9\u4e2aKFold\u5bf9\u8c61\u53bb\u5faa\u73af\uff08\u5176\u5b9e\u5c31\u662f\u4e00\u4e2agenerator)\n# step 2: \u6bcf\u6b21\u5faa\u73af\u81ea\u5df1\u624b\u52a8\u8ba1\u7b97score\nk_fold = KFold(n_splits=3)\nscores = [svc.fit(X_digits[train], y_digits[train]).score(X_digits[test], y_digits[test]) \\\n         for train, test in k_fold.split(X_digits)]\nscores\n\n[0.9348914858096828, 0.9565943238731218, 0.9398998330550918]\n\u53ef\u89c1\u5b98\u65b9api\u5206\u6298\u548c\u6211\u4eec\u624b\u52a8split\uff0c\u6bcf\u6b21\u4ece\u540e\u5411\u524d\u53d6\u4e00\u6298\u505a\u6d4b\u8bd5\u96c6\u7ed3\u679c\u662f\u4e00\u81f4\u7684\n\u5f53\u7136\uff0c\u6253\u5370cross_validation\u7684\u7ed3\u679c\u4e5f\u662f\u6709\u5c01\u88c5\u7684\uff1a\n```python\n# \u628aKFolder\u5bf9\u8c61\u4f20\u5165\u5373\u53ef\nscores = cross_val_score(svc, X_digits, y_digits, cv=k_fold)\nprint(scores)\n\n# \u5b9a\u5236scoring method:\nscores = cross_val_score(svc, X_digits, y_digits, cv=k_fold, scoring='precision_macro')\nprint(scores)\n\n\n[0.93489149 0.95659432 0.93989983]\n[0.93969761 0.95911415 0.94041254]\n\nCross-validation generators:\nsee more cross-validation generators:$\n\\begin{array}{l|l|l}\nKFold &amp; StratifiedKFold &amp; GroupKFold \\\n\\hline\nShuffleSplit &amp; StratifiedShuffleSplit &amp; GroupShuffleSplit \\\n\\hline\nLeaveOneGroupOut &amp; LeavePGroupOut &amp; LeaveOneOut \\\n\\hline\nLeavePOut &amp; PredefinedSplit\n\\end{array}\n$Datatransformation with held out data\n&gt;&gt;&gt; from sklearn import preprocessing\n&gt;&gt;&gt; X_train, X_test, y_train, y_test = train_test_split(\n...     X, y, test_size=0.4, random_state=0)\n&gt;&gt;&gt; scaler = preprocessing.StandardScaler().fit(X_train)\n&gt;&gt;&gt; X_train_transformed = scaler.transform(X_train)\n&gt;&gt;&gt; clf = svm.SVC(C=1).fit(X_train_transformed, y_train)\n&gt;&gt;&gt; X_test_transformed = scaler.transform(X_test)\n&gt;&gt;&gt; clf.score(X_test_transformed, y_test)\n0.9333...\n\n&gt;&gt;&gt; from sklearn.pipeline import make_pipeline\n&gt;&gt;&gt; clf = make_pipeline(preprocessing.StandardScaler(), svm.SVC(C=1))\n&gt;&gt;&gt; cross_val_score(clf, X, y, cv=cv)\narray([0.977..., 0.933..., 0.955..., 0.933..., 0.977...])\n\ncross_validate v.s. cross_val_score\nThe cross_validate function differs from cross_val_score in two ways:\nIt allows specifying multiple metrics for evaluation.\nIt returns a dict containing fit-times, score-times (and optionally training scores as well as fitted estimators) in addition to the test score.\n\n&gt;&gt;&gt; from sklearn.model_selection import cross_validate\n&gt;&gt;&gt; from sklearn.metrics import recall_score\n&gt;&gt;&gt; scoring = [&#39;precision_macro&#39;, &#39;recall_macro&#39;]\n&gt;&gt;&gt; clf = svm.SVC(kernel=&#39;linear&#39;, C=1, random_state=0)\n&gt;&gt;&gt; scores = cross_validate(clf, X, y, scoring=scoring)  # \u4ee5\u5b57\u5178\u8fd4\u56devalidate\u51e0\u4e2a\u6307\u6807\n&gt;&gt;&gt; sorted(scores.keys())\n[&#39;fit_time&#39;, &#39;score_time&#39;, &#39;test_precision_macro&#39;, &#39;test_recall_macro&#39;]\n&gt;&gt;&gt; scores[&#39;test_recall_macro&#39;]\narray([0.96..., 1.  ..., 0.96..., 0.96..., 1.        ])\n\ngrid search\nhttps://scikit-learn.org/stable/modules/grid_search.html#grid-search\u5bf9\u4e0d\u540c\u53c2\u6570\u8fdb\u884c\u7ec4\u5408\u904d\u5386\uff0c\u76ee\u7684\u662f\u4e3a\u4e86maximize the cross-validation scorefrom sklearn.model_selection import GridSearchCV, cross_val_score\nCs = np.logspace(-6, -1, 10)\nclf = GridSearchCV(estimator=svc, param_grid=dict(C=Cs), n_jobs=-1)\nclf.fit(X_digits[:1000], y_digits[:1000])\nprint(&#39;best score:&#39;, clf.best_score_)\nprint(&#39;best estimator.c:&#39;, clf.best_estimator_.C)\n# Prediction performance on test set is not as good as on train set\nscore = clf.score(X_digits[1000:], y_digits[1000:])\nprint(&#39;score:&#39;, score)\n\n\nbest score: 0.95\nbest estimator.c: 0.0021544346900318843\nscore: 0.946047678795483\n\n\u4e0e\u6b64\u540c\u65f6\uff0c\u6bcf\u4e2aestimator\u4e5f\u6709\u81ea\u5df1\u7684CV\u7248\u672c\uff08\u8ddf\u4e4b\u524d\u4e32\u8bfe\u7684\u7b14\u8bb0\u547c\u5e94\u4e0a\u4e86\uff09from sklearn import linear_model, datasets\nlasso = linear_model.LassoCV()\nX_diabetes, y_diabetes = datasets.load_diabetes(return_X_y=True)\nlasso.fit(X_diabetes, y_diabetes)\n# The estimator chose automatically its lambda:\nlasso.alpha_\n\n\n0.003753767152692203\n\nUnsupervised learning: seeking representations of the data\nClustreing: grouping observations together\nK-means clustreing\n\u968f\u673a\u9009k\u4e2a\u8d28\u5fc3\u8ba1\u7b97\u6240\u6709\u7684\u70b9\u7684\u8ddd\u79bb\uff0c\u7136\u540e\u518d\u53d6\u6bcf\u4e2a\u7fa4\u91cc\u7684\u5747\u503c\u505a\u8d28\u5fc3\uff0c\u5982\u6b64\u5f80\u590d\u3002\u7ed3\u679c\u7684\u968f\u673a\u6027\u5f88\u5f3a\uff08\u524d\u9762\u5267\u900f\u4e86\uff0c\u628ak-means\u548cknn\u641e\u6df7\u8fc7\uff09from sklearn import cluster, datasets\nX_iris, y_iris = datasets.load_iris(return_X_y=True)\nk_means = cluster.KMeans(n_clusters=3)\nk_means.fit(X_iris)\nprint(k_means.labels_[::10])\nprint(y_iris[::10])\n\n\n[0 0 0 0 0 1 1 1 1 1 2 2 2 2 2]\n[0 0 0 0 0 1 1 1 1 1 2 2 2 2 2]\n\nk_means.cluster_centers_\n\n\narray([[5.006     , 3.428     , 1.462     , 0.246     ],\n       [5.9016129 , 2.7483871 , 4.39354839, 1.43387097],\n       [6.85      , 3.07368421, 5.74210526, 2.07105263]])\n\n\u672a\u5b8c\u7ed3\nhttps://scikit-learn.org/stable/tutorial/statistical_inference/unsupervised_learning.html", "categories": [{"name": "posts", "slug": "posts", "permalink": "/category/posts/"}], "tags": [{"name": "scikit-learn", "slug": "scikit-learn", "permalink": "/tag/scikit-learn/"}]}, {"title": "\u4ece\u6295\u5f71\u3001\u6b63\u4ea4\u8865\u89d2\u5ea6\u8bc1\u660e\uff08\u63a8\u5bfc\uff09\u6700\u5c0f\u4e8c\u4e58\u6cd5\u516c\u5f0f", "date": "2021-01-25T00:00:00-00.00", "path": "/archives/%E4%BB%8E%E6%8A%95%E5%BD%B1%E3%80%81%E6%AD%A3%E4%BA%A4%E8%A1%A5%E8%A7%92%E5%BA%A6%E8%AF%81%E6%98%8E%EF%BC%88%E6%8E%A8%E5%AF%BC%EF%BC%89%E6%9C%80%E5%B0%8F%E4%BA%8C%E4%B9%98%E6%B3%95%E5%85%AC%E5%BC%8F/", "text": "\u5b66\u4e60\u7ebf\u6027\u56de\u5f52\u7684\u65f6\u5019\uff0c\u4f1a\u6559\u6211\u4eec$X\\theta=y$\u53ef\u4ee5\u76f4\u63a5\u7528\u6700\u5c0f\u4e8c\u4e58\u6cd5\u76f4\u63a5\u628a$\\theta$\u6c42\u51fa\u6765\uff1a$\\theta=(X^TX)^{-1}X^Ty$\u5e76\u4e14\u8fd8\u5728\u6211\u4e4b\u524d\u7684\u535a\u6587\u91cc\u76f4\u63a5\u5e94\u7528\u4e86\u4e00\u756a\uff08\u90a3\u662f\u6839\u636e\u516c\u5f0f\u6765\u5e94\u7528\uff0c\u5373\u5982\u4f55\u6784\u5efa\u6b63\u786e\u7684A\u548cy\uff0c\u4ece\u800c\u5e94\u7528\u516c\u5f0f\u76f4\u63a5\u6c42\u89e3$\\theta$)\uff0c\u91cc\u9762\u8fd8\u5f15\u4e86\u4e00\u7bc7\u8be6\u5b9e\u7684\u8bc1\u660e\u6587\u7ae0\u3002\u9996\u5148\uff0c\u5728\u5434\u6069\u8fbe\u7684\u6559\u6750\u91cc\uff0c\u8fd9\u4e2a\u5e76\u4e0d\u53eb\u6700\u5c0f\u4e8c\u4e58(least suqare\uff09\uff0c\u800c\u662f\u53ebNormal Equation method\uff0c\u8fd9\u4e2a\u4e0d\u91cd\u8981\uff0c\u6bd5\u7adf\u5728\u53ef\u6c57\u5b66\u9662\u7684\u6559\u6750\u91cc\uff0c\u53c8\u53eb\u6700\u5c0f\u4e8c\u4e58\u4e86^^\u3002\u4eca\u5929\u8865\u5145\u7684\u5185\u5bb9\uff0c\u5c31\u662f\u5728\u56de\u987e\u4e4b\u524d\u7684\u7b14\u8bb0\u7684\u65f6\u5019\uff0c\u53d1\u73b0\u4e86\u5927\u91cf\u7684\u8bc1\u660e\u548c\u5e94\u7528\u8fd9\u4e2a\u516c\u5f0f\u7684\u5730\u65b9\uff0c\u800c\u4e14\u5168\u662f\u5728\u5f15\u5165\u4e86\u6295\u5f71(Projection)\u6982\u5ff5\u4e4b\u540e\u3002\u56e0\u4e3a\u90a3\u4e2a\u65f6\u5019\u5e76\u6ca1\u6709\u63a5\u89e6\u673a\u5668\u5b66\u4e60\uff0c\u770b\u4e86\u4e5f\u5c31\u770b\u4e86\uff0c\u73b0\u5728\u770b\u5230\u4e86\u5e94\u7528\u573a\u666f\uff0c\u90a3\u5c31\u95ed\u73af\u4e86\uff0c\u56de\u987e\u4e00\u4e0b\uff1a\u9996\u5148\uff0c\u9884\u5907\u77e5\u8bc6\u5b50\u7a7a\u95f4\n\u7b14\u8bb0\u5f88\u6e05\u695a\u4e86\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u77e9\u9635\n$A= \\begin{bmatrix}\n   -2 &amp; -1 &amp; -3 \\\n   4 &amp; 2 &amp; 6 \\\n\\end{bmatrix}$ \u5b83\u7684\u5217\u7a7a\u95f4\u662f\u81ea\u7136\u662fC(A)\uff0c\u884c\u7a7a\u95f4\u81ea\u7136\u662fA\u7684\u8f6c\u7f6e\u7684\u540e\u7684\u5217\u7a7a\u95f4\uff0c\u7136\u540e\u5404\u81ea\u62e5\u6709\u4e00\u4e2a\u5bf9\u5e94\u7684\u96f6\u7a7a\u95f4\uff08\u5373\u6c42\u89e3$Ax=0, A^Tx=0\uff09$\u4e0a\u56fe\u7528\u7ea2\u6846\u6846\u51fa\u6765\u7684\u90e8\u5206\u5373\u662f\u5177\u4f53\u8fd9\u4e2a\u77e9\u9635$A$\u7684\u56db\u4e2a\u5b50\u7a7a\u95f4\u3002\u540c\u65f6\uff0c\u62e5\u6709\u5982\u4e0b\u6027\u8d28\uff1a\n$C(A)$\u4e0e$N(A^T)$\u6b63\u4ea4(orthogonal)\uff0c\u5373\u5217\u7a7a\u95f4\u4e0e\u5de6\u96f6\u7a7a\u95f4\u6b63\u4ea4\n$C(A^T)$\u4e0e$N(A)$\u6b63\u4ea4\uff0c\u5373\u884c\u7a7a\u95f4\u4e0e\u96f6\u7a7a\u95f4\u6b63\u4ea4\n\n\u6b63\u4ea4\u8865\n$V^\\bot = {\\vec x \\in \\R^n | \\vec x \\cdot \\vec{v} = 0; for; every\\ \\vec{v} \\in V \\text{}}$ \u5373V\u7684\u6b63\u4ea4\u8865\u4e3a\u5782\u76f4\u4e8eV\u5185\u4efb\u610f\u4e00\u4e2a\u5411\u91cf\u7684\u6240\u6709\u5411\u91cf\u3002\u90a3\u4e48:\n$C(A) = (N(A^T))^\\bot$\n$C(A^T) = (N(A))^\\bot$\n\n\u6295\u5f71\u662f\u4e00\u4e2a\u7ebf\u6027\u53d8\u6362\n\n\u8fd9\u91cc\u5df2\u7ecf\u770b\u5230\u6211\u4eec\u719f\u6089\u7684$(A^TA)^{-1}A^Tx$\u4e86\uff0c\u6211\u4eec\u6765\u770b\u4e00\u4e0b\u63a8\u5bfc\u8fc7\u7a0b\uff1a\n$\\vec x$\u5728$V \\in \\R^n$\u4e0a\u7684\u6295\u5f71$Proj_V^{\\vec x} = \\vec v$\u5fc5\u7136\u80fd\u8868\u793a\u6210\u8be5\u7a7a\u95f4\u7684basis{$\\vec b_1, \\vec b_2, \\vec b_3, \\dots$}\u7684\u7ebf\u6027\u53d8\u6362\uff1a$\\vec v \\in V = y_1\\vec b_1 + y_2\\vec b_2 + \\cdots + y_k \\vec b_k =  A\\vec y$\n\u6c42\u51fa$\\vec y$\u5219\u6c42\u51fa\u4e86\u8fd9\u4e2a\u6295\u5f71\u5728\u54ea\u91cc\n$\\vec x$\u80fd\u5411$V$\u6295\u5f71\uff0c\u81ea\u7136\u4e5f\u80fd\u5411$V^\\bot$\u6295\u5f71($\\vec w$)\n\n\n\u8fd9\u91cc\u662f\u6545\u610f\u8fd9\u4e48\u8bf4\u7684\uff0c\u5f3a\u8c03\u90fd\u662f\u6295\u5f71\uff0c\u5176\u5b9e\u5728\u5411$V$\u6295\u5f71\u65f6\uff0c\u5728$V^\\bot$\u7684\u6295\u5f71\uff08$\\vec w$\uff09\u5c31\u662f\u90a3\u6761\u5782\u7ebf\n\n\n$V \\Rightarrow C(A),; V^\\bot \\Rightarrow N(A^T), \\vec v \\in V, \\vec w \\in V^\\bot$\n\u5de6\u96f6\u7a7a\u95f4\u53ea\u4e0d\u8fc7\u662f\u8f6c\u7f6e\u7684\u96f6\u7a7a\u95f4\uff0c\u90a3\u4e48\u96f6\u7a7a\u95f4\u7684\u7279\u6027\u662f\u4ec0\u4e48\u5462\uff1f\u5373$A\\vec x = 0$\u7684\u7a7a\u95f4\uff0c\u90a3\u4e48$\\vec w$\u5728\u5de6\u96f6\u7a7a\u95f4\u91cc\uff0c\u610f\u5473\u7740: $A^T\\vec w = 0$\n$\\vec w = \\vec x - \\vec v = \\vec x - A\\vec y \\Rightarrow A^T(\\vec x - A\\vec y) = 0 \\Rightarrow A^T \\vec x = A^TA\\vec y$\n\u53ea\u8981$A^TA$\u53ef\u9006\u7684\u8bdd: $\\Rightarrow \\vec  y= (A^TA)^{-1}A^T\\vec x$\n$\\therefore Proj_V^{\\vec x} = A\\vec y = A(A^TA)^{-1}A^T\\vec x$\n\u5f97\u8bc1$\\vec x$\u5728$V$\u4e0a\u7684\u6295\u5f71\u5c31\u662f\u4e00\u4e2a\u7ebf\u6027\u53d8\u6362\n$\\vec y$\u5373\u662f\u673a\u5668\u5b66\u4e60\u4e2d\u6211\u4eec\u9700\u8981\u5b66\u4e60\u5230\u7684\u7cfb\u6570 = $(A^TA)^{-1}A^T$\n\n\u6700\u5c0f\u4e8c\u4e58\u903c\u8fd1\n\u7531\u6b64\u5230\u4e86\u4e0b\u4e00\u8bfe\uff0cthe lease squares approximation\uff0c\u8bb2\u7684\u5c31\u662f$A\\vec x = \\vec b$\u65e0\u89e3\u65f6\uff0c\u610f\u601d\u5c31\u662f\u5728$\\vec b$\u4e0d\u5b58\u5728A\u7684\u5f20\u6210\u5b50\u7a7a\u95f4\u4e2d\uff0c\u6240\u4ee5\u65e0\u8bba\u8fdb\u884c\u600e\u6837\u7684\u7ebf\u6027\u53d8\u6362\uff0c\u90fd\u662f\u4e0d\u53ef\u80fd\u5f97\u5230$\\vec b$\u7684\uff0c\u5219\u53d6$\\vec x$\u5728$C(A)$\u4e2d\u7684\u6295\u5f71\u4f5c\u4e3a\u8fd1\u4f3c\u7684\u89e3\uff08\u8bc1\u660e\u5c31\u4e0d\u518d\u5c55\u5f00\u4e86\uff09\n\n\u4ecd\u7136\u7528\u7684\u662f\u540c\u4e00\u4e2a\u601d\u8def\uff0c\u5373&quot;\u5782\u7ebf\u5728\u5de6\u96f6\u7a7a\u95f4\u4e2d&quot;\uff0c\u6765\u6784\u9020$A^T\\cdot \\vec w = \\vec 0$\u5e94\u7528\u6700\u5c0f\u4e8c\u4e58\u62df\u5408\u4e00\u6761\u56de\u5f52\u7ebf\n\u8fd9\u91cc\u7ec8\u4e8e\u8bb2\u5230\u4e86\u4e0e\u673a\u5668\u5b66\u4e60\u6700\u63a5\u8fd1\u7684\u5185\u5bb9\uff1aregression\n\n\u53ef\u4ee5\u770b\u5230\uff0c\u6beb\u65e0\u4e1a\u52a1\u601d\u7ef4\u7684\u82b1\u82b1\u80a0\u5b50\uff0c\u5f88\u591a\u673a\u5668\u5b66\u4e60\u8bfe\u7a0b\u91cc\u4f1a\u82b1\u5927\u91cf\u5de5\u592b\u4ece\u611f\u6027\u5230\u7406\u6027\u4e0a\u7ed9\u4f60\u8bb2\u8fd9\u4e9b\u5185\u5bb9\uff0c\u56e0\u4e3a\u5b83\u7684\u671f\u671b\u4ece0\u8ddf\u4f60\u8bb2\u6e05\u695a\uff0c\u800c\u5728\u5faa\u5e8f\u6e10\u8fdb\u7684\u6570\u5b66\u7406\u8bba\u4f53\u7cfb\u91cc\uff0c\u8fd9\u4e9b\u6839\u672c\u5c31\u4e0d\u9700\u8981\u5173\u8054\u611f\u6027\u8ba4\u8bc6\u7684\uff0c\u4ec0\u4e48\u6bcf\u5e74\u7684\u623f\u4ef7\u554a\uff0c\u6570\u5b66\u5173\u6ce8\u7684\u53ea\u662f\u5efa\u6a21\u3002\u8fd9\u4e2a\u56de\u5f52\u5b9e\u4f8b\u91cc\uff0c\u56e0\u4e3a\u9700\u8981\u62df\u5408\u7684\u662f\u4e00\u6761\u76f4\u7ebf\uff1a$y = b + ax$\uff0c\u90a3\u4e48\u65e2\u6709\u7684\u6570\u636e\u5c31\u6210\u4e86\u673a\u5668\u5b66\u4e60\u91cc\u7684\u201c\u6837\u672c\u201d\uff0c\u4f46\u6211\u4eec\u8fd9\u91cc\u4e0d\u9700\u8981\u8fd9\u4e48\u7406\u89e3\uff0c\u800c\u662f\u76f4\u63a5\u7406\u89e3\u4e3a\u77e9\u9635\uff0c\u5f97\u5230\n\u65b9\u7a0b\u7ec4\uff1a$$\\begin{cases}\nb + a = 1 \\\\\nb + 2a = 2 \\\\\nb + 3a = 2\n\\end{cases}$$\n\u63d0\u53d6\u77e9\u9635\uff1a$$A = \\begin{bmatrix}1&amp;1\\\\1&amp; 2\\\\ 1&amp; 3\\end{bmatrix}, \\vec b = \\begin{bmatrix}1\\\\2\\\\ 2\\end{bmatrix} \\Rightarrow A\\vec x = \\vec b$$\n\u597d\u4e86\uff0c\u5728\u4e0a\u9762\u63d0\u5230\u7684\u8fd9\u7bc7\u535a\u6587\u91cc\uff0c\u6211\u4eec\u4e0d\u660e\u5c31\u91cc\u5730\u76f4\u63a5\u7528\u4e86\u516c\u5f0f\uff0c\u5df2\u77e5A\u548cb\u6c42\u53d8\u6362\u77e9\u9635M(\u5373\u8fd9\u91cc\u7684$\\vec x$)\uff0c\u8fd8\u5f53\u6210\u662f\u673a\u5668\u5b66\u4e60\u7684\u5185\u5bb9\uff0c\u800c\u73b0\u5728\u6211\u4eec\u5df2\u7ecf\u77e5\u9053\u81ea\u5df1\u662f\u5728\u505a\u4ec0\u4e48\uff0c\u5c31\u662f\u627eb\u5728$A$\u7684\u5f20\u6210\u5b50\u7a7a\u95f4\u91cc\u7684\u6295\u5f71\uff0c\u5c31\u80fd\u5f97\u5230\u6700\u8fd1\u4f3c\u7684\u89e3$$\\vec x \\approx (A^TA)^{-1}A^T\\vec b$$\n", "categories": [{"name": "posts", "slug": "posts", "permalink": "/category/posts/"}], "tags": [{"name": "\u6700\u5c0f\u4e8c\u4e58\u6cd5", "slug": "\u6700\u5c0f\u4e8c\u4e58\u6cd5", "permalink": "/tag/%E6%9C%80%E5%B0%8F%E4%BA%8C%E4%B9%98%E6%B3%95/"}, {"name": "math", "slug": "math", "permalink": "/tag/math/"}, {"name": "\u7ebf\u6027\u4ee3\u6570", "slug": "\u7ebf\u6027\u4ee3\u6570", "permalink": "/tag/%E7%BA%BF%E6%80%A7%E4%BB%A3%E6%95%B0/"}]}, {"title": "\u77e9\u9635\u6700\u5c0f\u4e8c\u4e58\u6cd5\u6c42\u89e3\u4eff\u5c04\u53d8\u6362\u77e9\u9635", "date": "2021-01-17T00:00:00-00.00", "path": "/archives/%E7%9F%A9%E9%98%B5%E6%9C%80%E5%B0%8F%E4%BA%8C%E4%B9%98%E6%B3%95%E6%B1%82%E8%A7%A3%E4%BB%BF%E5%B0%84%E5%8F%98%E6%8D%A2%E7%9F%A9%E9%98%B5/", "text": "\u4e00\u4e2a\u77e9\u5f62\u4e09\u4e2a\u9876\u70b9(0,0), (50, 0), (50, 50), \u53d8\u6362\u540e\u4e3a(30, 30), (30, 130), (130, 130), \u6c42\u5176\u4eff\u5c04\u77e9\u9635\u3002\u6211\u4eec\u5206\u522b\u8bbe\u8d77\u59cb\u548c\u7ed3\u675f\u77e9\u9635\u7684\u5750\u6807\u4e3a\uff1a$(a_x, a_y), (b_x, b_y), (c_x, c_y)$\uff0c \u53d8\u6362\u540e\u7684\u52a0\u4e00\u4e2aprime\uff08$ ^\\prime$)\u7b26\u53f7\uff0c\u4ee5\u6b64\u7c7b\u63a8\u3002\n\u8981\u77e5\u9053\uff0c\u4e00\u4e2a3X2\u7684\u77e9\u9635\u662f\u4e0d\u53ef\u80fd\u53f3\u4e58\u4e00\u4e2a\u77e9\u9635\u5f97\u5230\u4e00\u4e2a3X2\u7684\u77e9\u9635\uff08\u53ea\u80fd\u5de6\u4e58\u4e00\u4e2a3X3\u7684\uff09\uff0c\n\u7136\u540e\uff0c\u6bcf\u4e00\u4e2a\u65b0\u5750\u6807\uff0c\u90fd\u662f\u7531\u539f\u5750\u6807\u7684(x, y)\u7ecf\u8fc7\u53d8\u6362\u5f97\u5230(x', y\u2018\uff09\uff0c\u5373\u4f7f\u662f\u65b0\u5750\u6807\u7684X\u503c\uff0c\u4e5f\u662f\u9700\u8981\u539f\u5750\u6807\u7684(x, y)\u503c\u53c2\u4e0e\u8fc7\u6765\u8fdb\u884c\u53d8\u5316\u7684\uff08\u4e58\u4ee5\u5408\u9002\u7684\u7cfb\u6570\uff09\uff0c\u7136\u540e\u8fd8\u8981\u52a0\u4e0a\u504f\u79fb\u7684\u7cfb\u6570\uff0c\u4ee5x'\u4e3a\u4f8b\uff0c\u5e94\u8be5\u662f\u8fd9\u6837\uff1a$a^\\prime_x = a_x m_{00} + a_y m_{01} + m_{02} $\n\u6211\u4eec\u6839\u636e\u77e9\u9635\u7279\u5f81\uff0c\u8865\u4e00\u4e2a1\uff0c\u6784\u9020\u8fd9\u4e2a\u77e9\u9635\u770b\u770b\u6548\u679c\uff1a$$\n\\begin{bmatrix}\n\\color{red}{a_x} &amp; \\color{red}{a_y} &amp; \\color{red}1 \\\\\nb_x &amp; b_y &amp; 1 \\\\\nc_x &amp; c_y &amp; 1 \\\\\n\\end{bmatrix}\n\\begin{bmatrix}\n\\color{red}{m_{00}} \\\\ \\color{red}{m_{01}} \\\\ \\color{red}{m_{02}}\n\\end{bmatrix} = \n\\begin{bmatrix}\n\\color{red}{a^\\prime_x} \\\\ b^\\prime_x \\\\ c^\\prime_x\n\\end{bmatrix} \\tag{\u7ea2\u8272\u90e8\u5206\u5373\u4e3a\u4e0a\u9762\u7684\u7b49\u5f0f}\n$$\n\u8fd9\u53ea\u662f\u628a\u4e09\u4e2ax\u7ed9\u53d8\u6362\u51fa\u6765\u4e86\uff0c\u5176\u5b9e\u4f60\u4e5f\u53ef\u4ee5\u8ba4\u4e3a\u8fd9\u662f\u628ay\u7ed9\u53d8\u6362\u51fa\u6765\u4e86\uff08\u56e0\u4e3a\u539f\u7406\u4e00\u6837\uff0c\u53ea\u662f\u7cfb\u6570\u4e0d\u540c\uff09\u3002\n\u505a\u5230\u8fd9\u4e00\u6b65\uff0c\u6211\u4eec\u5df2\u7ecf\u77e5\u9053\u8981\u5982\u4f55\u6c42y\u5750\u6807\u4e86\uff0c\u5373\u6211\u4eec\u53ea\u8865\u4e00\u5217\u7684\u8bdd\uff0c\u53ea\u80fd\u5f97\u5230\u4e00\u4e2a\u5750\u6807\u7684x\u503c\uff08\u6216y\u503c\uff09\uff0c\u8981\u6c42\u53e6\u4e00\u534a\uff0c\u6839\u636e\u5750\u6807\u76f8\u4e58\u7684\u539f\u7406\uff0c\u770b\u6765\u53ea\u80fd\u628a\u524d\u4e09\u5217\u7f6e\u96f6\uff0c\u518d\u628a\u540e\u4e09\u5217\u590d\u5236\u8fdb\u53bb\u4e86\uff08__\u8fd9\u6837\u4eff\u5c04\u77e9\u9635\u4e5f\u5c31\u53d8\u62106X1\u4e86__\uff09\uff0c\u5176\u5b9e\u5c31\u662f\u4e0a\u9762\u77e9\u9635\u4e58\u6cd5\u7684\u91cd\u590d\uff0c\u53ea\u4e0d\u8fc7\u4ea4\u9519\u4e00\u4e0b\u5f62\u6210x,y\u4ea4\u9519\u7684\u6392\u5217\uff1a$$\n\\begin{bmatrix}\na_x &amp; a_y &amp; 1 &amp; 0 &amp; 0 &amp; 0 \\\\\n0 &amp; 0 &amp; 0 &amp; a_x &amp; a_y &amp; 1 \\\\\nb_x &amp; b_y &amp; 1 &amp; 0 &amp; 0 &amp; 0 \\\\\n0 &amp; 0 &amp; 0 &amp; b_x &amp; b_y &amp; 1 \\\\\nc_x &amp; c_y &amp; 1 &amp; 0 &amp; 0 &amp; 0 \\\\\n0 &amp; 0 &amp; 0 &amp; c_x &amp; c_y &amp; 1 \n\\end{bmatrix}\n\\begin{bmatrix}\nm_{00} \\\\ m_{01} \\\\ m_{02} \\\\ m_{10} \\\\ m_{11} \\\\ m_{12}\n\\end{bmatrix} = \n\\begin{bmatrix}\na^\\prime_x \\\\ a^\\prime_y \\\\ b^\\prime_x \\\\ b^\\prime_y \\\\ c^\\prime_x \\\\ c^\\prime_y \\\\\n\\end{bmatrix}\n$$\n\u539f\u7406\u5f53\u7136\u5c31\u662f\u628a\u7b2c\u4e00\u4e2a\u516c\u5f0f\u8865\u5168\uff1a$$\n\\begin{cases}\n    \\; a^\\prime_x = a_x m_{00} + a_y m{01} + m_{02} \\\\\n    \\; a^\\prime_y = a_x m_{10} + a_y m{11} + m_{12} \\\\\n    \\\\\n    \\; b^\\prime_x = b_x m_{00} + b_y m{01} + m_{02} \\\\\n    \\; b^\\prime_y = b_x m_{10} + b_y m{11} + m_{12} \\\\\n    \\\\\n    \\; c^\\prime_x = c_x m_{00} + c_y m{01} + m_{02} \\\\\n    \\; c^\\prime_y = c_x m_{10} + c_y m{11} + m_{12} \\\\\n\\end{cases}\n$$\n\u6700\u5c0f\u4e8c\u4e58\u7684\u516c\u5f0f\u5982\u4e0b\uff1a$$\n\\begin{aligned}\n&amp;\\lVert A\\beta - Y \\rVert{^2_2} \\quad A \\in \\mathbb{R}^{(m\\times n+1)}, \\beta \\in \\mathbb{R}^{(n+1)\\times 1}, Y \\in \\mathbb{R}^{m\\times 1} \\\\\n&amp;\\hat \\beta = (A^TA)^{-1}A^TY\n\\end{aligned}\n$$\n\u63a8\u5bfc\u8fc7\u7a0b\u89c1\u6b64\n\u5947\u5f02\u77e9\u9635\u6ca1\u6709\u9006\u77e9\u9635\uff0c$(A^TA)^{-1}$\u4f1a\u51fa\u73b0\u65e0\u6cd5\u6c42\u89e3\u7684\u95ee\u9898\uff0c\u4e5f\u5c31\u662f\u8be5\u65b9\u6cd5\u5bf9\u6570\u636e\u662f\u6709\u7ea6\u675f\u7684\uff0c\u8fd9\u4e2a\u6709\u89e3\uff0c\u53e6\u8bae\u3002\n\u6211\u4eec\u628aA\u548cY\u90fd\u505a\u51fa\u6765\u4e86\uff0c\u76f4\u63a5\u5957\u7528\u516c\u5f0f\u5373\u53ef\uff0c\u4e3a\u4e86\u7f16\u7a0b\u65b9\u4fbf\uff0c\u6211\u4eec\u628a\u524d\u540e\u77e9\u9635\u8bbe\u4e3aA\u548cB\uff0c\u4eff\u5c04\u77e9\u9635\u4e3aM\uff0c\u5c31\u6210\u4e86\uff1a$$\nM = (A^TA)^{-1}A^TB\n$$\nimport numpy as np\n\nA = [[0,0], [50, 0], [50, 50]]\nB = [[30, 30], [130, 30], [130, 130]]\n\n# \u5206\u522b\u6574\u7406\u6210\u4e0a\u9762\u5206\u6790\u76846x6\u548c6x1\u7684\u77e9\u9635\n# \u5148\u5b9a\u4e49\u53d8\u91cf\u4fdd\u75596\u4e2a\u5750\u6807\u7684\u503c\n(ax, ay), (bx, by), (cx, cy) = A\n(ax1, ay1), (bx1, by1), (cx1, cy1) = B\n\nA = np.array([\n    [ax, ay, 1, 0, 0, 0],\n    [0, 0, 0, ax, ay, 1],\n    [bx, by, 1, 0, 0, 0],\n    [0, 0, 0, bx, by, 1],\n    [cx, cy, 1, 0, 0, 0],\n    [0, 0, 0, cx, cy, 1]\n])\nB = np.array([ax1, ay1, bx1, by1, cx1, cy1]).reshape(6, 1) # \u6bd4\u624b\u51996X1\u77e9\u9635\u8981\u7701\u4e8b\nM = np.linalg.inv(A.T @ A) @ A.T @ B # \u5957\u516c\u5f0f\nM.reshape(2, 3)\n\n\u8f93\u51fa\uff1aarray([[ 2.,  0., 30.],\n       [ 0.,  2., 30.]])\n\n\n\u4e0a\u5c31\u662f\u6700\u5c0f\u4e8c\u4e58\u7684\u4e00\u4e2a\u5e94\u7528\uff0c\u4e5f\u7ed9\u4e86\u4e00\u7bc7\u94fe\u63a5\u4ecb\u7ecd\u63a8\u5bfc\uff0c\u540e\u6765\u6211\u7ffb\u9605\u5b66\u4e60\u7ebf\u4ee3\u65f6\u7684\u7b14\u8bb0\uff0c\u5176\u5b9e\u6709\u4ece\u6295\u5f71\u65b9\u9762\u7ed9\u7684\u89e3\u91ca\uff0c\u76f4\u89c2\u6613\u61c2\uff0c\u4e8e\u662f\u53e6\u5199\u4e86\u7bc7\u535a\u6587\u6765\u4ecb\u7ecd\u8fd9\u4e2a\u63a8\u5bfc\u3002", "categories": [{"name": "posts", "slug": "posts", "permalink": "/category/posts/"}], "tags": [{"name": "\u6700\u5c0f\u4e8c\u4e58\u6cd5", "slug": "\u6700\u5c0f\u4e8c\u4e58\u6cd5", "permalink": "/tag/%E6%9C%80%E5%B0%8F%E4%BA%8C%E4%B9%98%E6%B3%95/"}, {"name": "\u4eff\u5c04", "slug": "\u4eff\u5c04", "permalink": "/tag/%E4%BB%BF%E5%B0%84/"}]}, {"title": "\u4e8c\u5206\u6cd5\u3001\u725b\u987f\u6cd5\u548c\u68af\u5ea6\u4e0b\u964d\u6cd5\u5f00\u6839\u53f7\u548c\u89e3\u65b9\u7a0b", "date": "2021-01-14T00:00:00-00.00", "path": "/archives/%E4%BA%8C%E5%88%86%E6%B3%95%E3%80%81%E7%89%9B%E9%A1%BF%E6%B3%95%E5%92%8C%E6%A2%AF%E5%BA%A6%E4%B8%8B%E9%99%8D%E6%B3%95%E5%BC%80%E6%A0%B9%E5%8F%B7%E5%92%8C%E8%A7%A3%E6%96%B9%E7%A8%8B/", "text": "\u4e8c\u5206\u6cd5\n\u4e8c\u5206\u6cd5\u7684\u601d\u8def\u662f\u6bcf\u6b21\u6392\u9664\u4e00\u534a\u6837\u672c\u7684\u8bd5\u9519\u65b9\u6cd5\uff0c\u628a\u6837\u672c\u4e00\u5206\u4e3a\u4e8c\uff08A\u548cB\uff09\uff0c\u90a3\u4e48\u76ee\u6807\u503c\u4e0d\u5728A\u5c31\u5728B\u91cc\uff0c\u4e0d\u65ad\u7f29\u5c0f\u8303\u56f4\u3002\u5c31\u50cf\u5728\u73a9\u4e00\u4e2a\u731c\u4ef7\u683c\u7684\u6e38\u620f\uff0c\u901a\u8fc7\u544a\u8bc9\u4f60\u731c\u9ad8\u4e86\u8fd8\u662f\u4f4e\u4e86\uff0c\u4f60\u603b\u80fd\u731c\u5230\u6b63\u786e\u4ef7\u683c\u4e00\u6837\uff0c\u8bbe\u8ba1\u597d\u4e00\u4e2a\u8ba1\u7b97\u5dee\u503c\u7684\u51fd\u6570\u80fd\u5927\u4f53\u4e0a\u5224\u65ad\u51fa\u4f60\u4e0b\u4e00\u8f6e\u5c1d\u8bd5\u7684\u503c\u5e94\u8be5\u5728\u524d\u4e00\u534a\u8fd8\u662f\u540e\u4e00\u534a\uff0c\u603b\u80fd\u8fed\u4ee3\u5230\u8db3\u591f\u63a5\u8fd1\u7684\u7ed3\u679c\u3002\u5bf9\u4e8e\u6c42\u5e73\u65b9\u6839\u6765\u8bf4\uff0c\u6211\u4eec\u6ca1\u4ec0\u4e48\u8fc7\u591a\u7684\u8bbe\u8ba1\uff0c\u76f4\u63a5\u5bf9\u4e2d\u503c\u53d6\u5e73\u65b9\uff0c\u9ad8\u4e86\u5c31\u53d6\u5c0f\u7684\u4e00\u534a\uff0c\u4f4e\u4e86\u5c31\u53d6\u5927\u7684\u4e00\u534a\uff0c\u5b9e\u6d4b\u5c0f\u7684\u6570\u5b57\u662f\u6ca1\u95ee\u9898\u7684\uff0c\u8fd9\u91cc\u4ec5\u4ec5\u7528\u6765\u6f14\u793a\u601d\u8def\u3002import math\n\ndef binary_sqrt(n):\n    epsilon = 1e-10         # quit flag\n    start = 0\n    end = n\n    mid = start + (end - start) / 2\n    diff = mid ** 2 - n\n    while abs(diff) &gt;= epsilon:\n        # \u503c\u8fc7\u5927\u5219\u5c1d\u8bd5\u5c0f\u7684\u4e00\u534a\uff0c\u5426\u5219\u5c31\u5c1d\u8bd5\u5927\u7684\u4e00\u534a\uff0c\u4fee\u6539\u8fb9\u754c\u503c\u5373\u53ef\n        if diff &gt; 0:\n            end = mid\n        else:\n            start = mid\n        mid = start + (end - start) / 2\n        diff = mid ** 2 - n\n    return mid\n\nfor i in range(1,11):\n    print(f&#39;estimated:\\t{binary_sqrt(i)}, \\t sqrt({i}): \\t {math.sqrt(i)}&#39;)\n\noutput:\nestimated:\t0.9999999999708962, \t sqrt(1): \t 1.0\nestimated:\t1.4142135623842478, \t sqrt(2): \t 1.4142135623730951\nestimated:\t1.7320508075645193, \t sqrt(3): \t 1.7320508075688772\nestimated:\t2.0000000000000000, \t sqrt(4): \t 2.0\nestimated:\t2.2360679775010794, \t sqrt(5): \t 2.23606797749979\nestimated:\t2.4494897427794060, \t sqrt(6): \t 2.449489742783178\nestimated:\t2.6457513110653963, \t sqrt(7): \t 2.6457513110645907\nestimated:\t2.8284271247393917, \t sqrt(8): \t 2.8284271247461903\nestimated:\t2.9999999999890860, \t sqrt(9): \t 3.0\nestimated:\t3.1622776601579970, \t sqrt(10): \t 3.1622776601683795\n\n\u725b\u987f\u6cd5\n\u6211\u5c31\u7b97\u4e0d\u753b\u56fe\u4e5f\u80fd\u628a\u8fd9\u4e8b\u8bf4\u6e05\u695a\u3002\u725b\u987f\u6cd5\u7528\u7684\u662f\u659c\u7387\u7684\u601d\u60f3\uff0c\u5bf9$f(x)=0$\uff0c\u9009\u4e00\u4e2a\u8db3\u591f\u63a5\u8fd1\u76ee\u6807\u503c($x$)\u7684\u70b9($x_0$)\uff0c\u8ba1\u7b97\u5176\u5207\u7ebf\u4e0eX\u8f74\u7684\u4ea4\u70b9($x_1$\uff09\uff0c\u8fd9\u4e2a\u4ea4\u70b9$x_1$\u5f80\u5f80\u6bd4$x_0$\u66f4\u63a5\u8fd1$x$\uff0c\u6570\u6b21\u8fed\u4ee3\u540e\u80af\u5b9a\u8d8a\u6765\u8d8a\u63a5\u8fd1\u76ee\u6807\u503c$x$\u3002\n\u95ee\u9898\u8f6c\u5316\u6210\u4e00\u4e2a\u6c42\u51fd\u6570\u4e0a\u4efb\u4e00\u70b9($x_n$)\u7684\u5207\u7ebf\u4e0eX\u8f74\u7684\u4ea4\u70b9($x_{n+1}$)\u7684\u95ee\u9898(\u6211\u4eec\u5047\u8bben+1\u5728n\u7684\u5de6\u8fb9\uff0c\u5373\u5411\u5de6\u6765\u903c\u8fd1$x_0$)\n\u4ee4$\\Delta x = x_n - x_{n+1}, \\Delta y = f(x_n) - f(x_{n+1})$\uff0c\u5219$f'(x_n) = \u8be5\u70b9\u659c\u7387 = \\frac{\\Delta y}{\\Delta x}$\n\u5c55\u5f00:$f'(x_n) = \\frac{f(x_n) - f(x_{n +1})}{x_n - x_{n+1}}$\n$\\because f(x_{n+1})=0\\ \\Rightarrow x_{n +1} = x_n - \\frac{f(x_n)}{f'(x_n)}$\n\u81f3\u6b64\uff0c\u6211\u4eec\u7528$x_n$\u63a8\u51fa\u4e86\u4e00\u4e2a\u79bb$x_0$\u66f4\u8fd1\u7684\u70b9\uff1a$x_{n+1}$\n\u5982\u6b64\u5f80\u590d\u5219\u53ef\u4ee5\u63a8\u51fa\u8db3\u591f\u7cbe\u5ea6\u7684\u89e3\u3002\n\n\u800c\u6c42\u4efb\u610f\u6b63\u6574\u6570$a$\u7684\u5e73\u65b9\u6839\uff0c\n\u51fd\u6570\u5c31\u53d8\u6210\u4e86 $g(x) = a, \\Rightarrow g(x) = x^2$\uff0c\n\u90a3\u4e48\u6211\u4eec\u6709: $f(x) = g(x) - a = 0 = x^2 - a = 0$\n$f'(x) = 2x$\n$f(x),f'(x)$\u90fd\u6709\u4e86\uff0c\u5c31\u80fd\u4ee3\u5165\u4e0a\u9762\u5f97\u5230\u7684\u516c\u5f0f\uff1a$x_{n+1} = x_n - \\frac{f(x_n)}{f'(x_n)}$\u4e86\n\u5f97\u5230$x_{n+1} = x_n - \\frac{x_n^2-a}{2x_n}$\n\n\u73b0\u5728\u53ef\u4ee5\u5199\u4ee3\u7801\u4e86\uff0c\u4e0d\u65ad\u53bb\u8fed\u4ee3\uff0c\u6c42\u4e0b\u4e00\u4e2a$x_{n+1}$:def newton_sqrt(n):\n    x_n = n / 2\n    epsilon = 1e-10             # quit flag\n\n    f_x = lambda a : a**2 - n   # f(x)=x^2 - a\n    df_x = lambda a : 2*a       # derivative of f(x)\n    x_next = lambda a : a - f_x(a) / df_x(a)\n\n    while abs(x_n ** 2 - n) &gt; epsilon:\n        x_n = x_next(x_n)\n    return x_n\n\nfor i in range(1, 10):\n    print(f&#39;sqrt({i})\\t{newton_sqrt(i)}&#39;)\n\noutput\nsqrt(1)\t1.000000000000001\nsqrt(2)\t1.4142135623746899\nsqrt(3)\t1.7320508075688772\nsqrt(4)\t2.0\nsqrt(5)\t2.23606797749979\nsqrt(6)\t2.4494897427831788\nsqrt(7)\t2.6457513110646933\nsqrt(8)\t2.8284271247493797\nsqrt(9)\t3.0\n\n\u68af\u5ea6\u4e0b\u964d\u6cd5\n\u68af\u5ea6\u4e0b\u964d\u6cd5\u7684\u6570\u5b66\u539f\u7406\u662f$f(x_1,x_2,\\dots$)\u7684gradient\uff08$\\nabla f$\uff09\u5c31\u662f\u5176\u6700\u9661\u722c\u5347\u65b9\u5411\uff08steepest ascent\uff09\u3002\u53ef\u4ee5\u62ff\u8fd9\u4e2a\u5f53\u6210\u7ed3\u8bba\uff0c\u4e5f\u53ef\u4ee5\u53bb\u611f\u6027\u8ba4\u8bc6\uff0c\u800c\u8981\u53bb\u8bc1\u660e\u7684\u8bdd\uff0c\u7f51\u4e0a\u6709\u6570\u4e0d\u6e05\u7684\u6559\u7a0b\uff0c\u5728\u82b1\u4e66(\u300aDeep Learning\u6df1\u5ea6\u5b66\u4e60\u300b)\u548c\u53ef\u6c57\u5b66\u9662\u91cc\uff0c\u90fd\u662f\u7528\u7684directional derivate\u6765\u89e3\u91ca\uff08\u8bc1\u660e\uff09\u7684\uff0c\u5373\u201d\u81ea\u5b9a\u4e49\u65b9\u5411\u4e0a\u7684\u77ac\u65f6\u53d8\u5316\u7387\u201c\uff0c\u4e5f\u662f\u6211\u8ba4\u4e3a\u5728\u5982\u679c\u6709\u591a\u53d8\u91cf\u5fae\u79ef\u5206\u7684\u57fa\u7840\u4e0b\uff0c\u6bd4\u8f83\u5bb9\u6613\u8ba9\u4eba\u63a5\u53d7\u4e14\u7b80\u5355\u76f4\u767d\u7684\u89e3\u91ca\uff1a\n\n$\\overset{\\rightarrow}{v} \\cdot \\nabla f = |\\overset{\\rightarrow}{v}|\\cdot|\\nabla f|\\cdot cos\\theta$\n$\\overset{\\rightarrow}{v}$ \u5c31\u662f\u6307\u7684\u4efb\u610f\u65b9\u5411\uff0c\u5982\u679c\u662fx, y\u7b49\u65b9\u5411\uff0c\u90a3\u5c31\u662f\u666e\u901a\u7684\u504f\u5bfc\u4e86\u3002\n\u663e\u7136\u4e0a\u5f0f\u5f53$\\theta = 0$\u65f6\u62e5\u6709\u6700\u5927\u503c\uff0c\u5373$\\overset{\\rightarrow}{v}$\u6307\u5411\u7684\u662f$\\nabla f$\u7684\u65b9\u5411\uff0c\u90a3\u5c31\u662f\u68af\u5ea6\u7684\u65b9\u5411\u4e86\n\u6240\u4ee5\u68af\u5ea6\u65b9\u5411\u5c31\u662f\u722c\u5347\u6700\u9661\u5ced\u7684\u65b9\u5411\n\n\u5728\u4e00\u5143\u65b9\u7a0b\u91cc\uff0c\u201d\u68af\u5ea6\u201c\u5c31\u662f\u8fc7\u67d0\u70b9\u7684\u659c\u7387\uff08slope)\uff0c\u6216\u8005\u8bf4\u51fd\u6570\u7684\u5bfc\u6570\uff08derivative\uff09\u3002\u6211\u4eec\u8981\u5230\u5c40\u90e8\u6700\u5c0f\u503c\uff0c\u663e\u7136\u5c31\u5e94\u8be5\u5411\u76f8\u5411\u7684\u65b9\u5411\u8d70\u3002\u5e76\u4e14\u7531\u4e8e\u8d8a\u63a5\u8fd1\u76ee\u6807\u503c\uff08\u8c37\u5e95\uff09\uff0c\u659c\u7387\u8d8a\u5c0f\uff0c\u6240\u4ee5\u5373\u4f7f\u6211\u4eec\u9009\u62e9\u4e00\u4e2a\u56fa\u5b9a\u7684\u6b65\u957f\uff08learning rate\uff09\uff0c\u4e5f\u662f\u4f1a\u6709\u4e00\u4e2a\u8d8a\u6765\u8d8a\u5c0f\u7684\u6b65\u8fdb\u503c\u53bb\u903c\u8fd1\u6781\u503c\uff0c\u800c\u65e0\u9700\u523b\u610f\u53bb\u8c03\u6574\u6b65\u957f\u3002\u4ee5\u4e0a\u662f\u601d\u8def\uff0c\u53ea\u662f\u8981\u6ce8\u610f\u5b83$\\color{red}{\u5e76\u4e0d\u662f\u4f5c\u7528\u5230\u8981\u6c42\u7684\u51fd\u6570\u672c\u8eab}$\u4e0a\u53bb\u7684\uff0c\u800c\u662f\u7cbe\u5fc3\u8bbe\u8ba1\u7684loss\uff0c\u6216\u8005\u8bf4diff\u3001error\u51fd\u6570\u3002\u5176\u5b9e\u5b83\u8ddf\u524d\u9762\u7684\u4e8c\u5206\u6cd5\u5f88\u7c7b\u4f3c\uff0c\u5c31\u662f\u4e0d\u65ad\u6307\u5bfc\u91cc\u5e94\u8be5\u5728\u54ea\u4e2a\u533a\u95f4\u91cc\u53bb\u5c1d\u8bd5\u4e0b\u4e00\u4e2ax\u503c\uff0c\u518d\u6765\u7ed3\u679c\u4e0e\u771f\u503c\u7684\u5dee\u5f02\uff08\u800c\u725b\u987f\u6cd5\u5219\u662f\u76f4\u63a5\u671d\u7740\u76f4\u503c\u53bb\u903c\u8fd1\uff0c\u5e76\u4e0d\u662f\u5728\u201c\u5c1d\u8bd5\u201c\uff09\u3002\u4e8c\u5206\u6cd5\u91cc\u6211\u968f\u4fbf\u8bbe\u8ba1\u4e86\u4e00\u4e2a\u5224\u65adloss\u7684\u51fd\u6570\uff08\u5373\u4e2d\u503c\u7684\u5e73\u65b9\u51cf\u771f\u503c\uff09\uff0c\u800c\u68af\u5ea6\u4e0b\u964d\u91cc\u4e0d\u80fd\u90a3\u4e48\u968f\u4fbf\u4e86\uff0c\u5b83\u9700\u8981\u662f\u4e00\u4e2a\u8fde\u7eed\u7684\u51fd\u6570\uff08\u5373\u53ef\u5fae\u5206\uff09\uff0c\u8fd8\u8981\u81f3\u5c11\u62e5\u6709\u5c40\u90e8\u6781\u5c0f\u503c\uff1a\u6211\u4eec\u4ee4$e(x)$\u8868\u793a\u4e0d\u540c\u7684x\u53d6\u503c\u4e0b\u4e0e\u76ee\u6807\u503c$Y$\u7684\u5dee\u7684\u5e73\u65b9\uff08\u635f\u5931\u51fd\u6570loss\uff09\uff0c\u65e2\u7136\u662f\u4e00\u4e2a\u7b80\u5355\u4e8c\u6b21\u51fd\u6570\uff0c\u5c31\u80fd\u6c42\u6781\u503c\uff0c\u4e14\u5b83\u7684\u6700\u5c0f\u503c\u610f\u5473\u7740\u5f53x\u503c\u4e3a\u8be5\u503c\u65f6\u4f30\u7b97\u539f\u51fd\u6570$f(x)=Y$\u7684\u8bef\u5dee\u6700\u5c0f\uff0c\u6709\uff1a$e(x) = \\frac{1}{2}(f(x) - Y)^2$  (1/2\u7684\u4f5c\u7528\u4ec5\u4ec5\u662f\u4e3a\u4e86\u53d6\u5bfc\u6570\u65f6\u6d88\u9664\u5e38\u6570\u9879\uff0c\u7b80\u5316\u8ba1\u7b97)\n$e'(x) = (f(x) - Y) \\cdot f'(x) = \\Delta y \\cdot f'(x)\\quad \\color{green}{\\Leftarrow Chain\\ Rule}$\n$\\Delta x = e'(x) \\cdot lr = \\Delta y \\cdot f'(x) \\cdot lr\\ \\color{red}{\\Leftarrow\u8fd9\u91cc\u5f97\u5230\u4e86\u66f4\u65b0x\u7684\u4f9d\u636e}$\n$x_{n+1} = x_n - \\Delta x = x_n - \\Delta y \\cdot f'(x) \\cdot lr \\Leftarrow \u516c\u5f0f\u6709\u4e86$\u8fd9\u65f6\u53ef\u4ee5\u5199\u4ee3\u7801\u4e86def gradient_sqrt(n):\n    x       = n / 2       # first try\n    lr      = 0.01        # learning rate\n    epsilon = 1e-10       # quit flag\n\n    f_x     = lambda a : a**2\n    df_dx   = lambda a : 2*a\n    delta_y = lambda a : f_x(a) -n\n    e_x     = lambda a : delta_y(a)**2 * 0.5     # funcon of loss\n    de_dx   = lambda a : delta_y(a) * df_dx(a)   # derivative of loss\n    delta_x = lambda a : de_dx(a) * lr\n\n    count   = 0\n    while abs(x**2 - n) &gt; epsilon:\n        count += 1\n        x = x - delta_x(x)\n    return x, count\n\nfor i in range(1, 10):\n    print(f&#39;sqrt({i}): {gradient_sqrt(i)}\u6b21&#39;)\n\noutput\nsqrt(1): (0.9999999999519603, 593)\u6b21\nsqrt(2): (1.4142135623377403, 285)\u6b21\nsqrt(3): (1.7320508075423036, 181)\u6b21\nsqrt(4): (2.0, 0)\u6b21\nsqrt(5): (2.236067977522142, 103)\u6b21\nsqrt(6): (2.449489742798969, 87)\u6b21\nsqrt(7): (2.645751311082885, 73)\u6b21\nsqrt(8): (2.828427124761154, 63)\u6b21\nsqrt(9): (3.00000000001166, 55)\u6b21\n\n\nBonus\u68af\u5ea6\u4e0b\u964d\u89e3\u4e8c\u6b21\u65b9\u7a0b\n\n\u6c42\u89e3\u65b9\u7a0b\uff1a$(x_1 - 3)^2 + (x_2 + 4)^2 = 0$\u7684\u6839\n\n$f(x) = (x_1 - 3)^2 + (x_2 + 4)^2 = 0$$e(x) = \\frac{1}{2}(f(x)-Y)^2$$\\frac{\\partial}{\\partial x_1}e(x)=(f(x)-Y)\\cdot(f(x) -Y)'\n= (f(x)-Y)\\cdot\\frac{\\partial}{\\partial x_1}((x_1 - 3)^2 + (x_2 + 4)^2-Y)$$\\therefore\n\\begin{cases}\n\\frac{\\partial}{\\partial x_1}e(x)=\\Delta y \\cdot 2(x_1 - 3) \\\n\\frac{\\partial}{\\partial x_2}e(x)=\\Delta y \\cdot 2(x_2 + 4)\n\\end{cases}\n$def gradient_f(n):\n    x1, x2  = 1, 1        # first try\n    lr      = 0.01        # learning rate\n    epsilon = 1e-4        # quit flag\n\n    f_x     = lambda x1, x2 : (x1-3)**2 + (x2+4)**2\n    dfx1    = lambda x : 2 * (x - 3)\n    dfx2    = lambda x : 2 * (x + 4)\n    delta_y = lambda x1, x2 : f_x(x1, x2) - n\n    e_x     = lambda x1, x2 : delta_y(x1, x2)**2 * 0.5     # cost function\n    dedx1   = lambda x1, x2 : delta_y(x1, x2) * dfx1(x1)   # partial derivative of loss \\\n    dedx2   = lambda x1, x2 : delta_y(x1, x2) * dfx2(x2)   # with Chain Rule\n    delt_x1 = lambda x1, x2 : dedx1(x1, x2) * lr\n    delt_x2 = lambda x1, x2 : dedx2(x1, x2) * lr\n\n    count   = 0\n    while abs(f_x(x1, x2) - n) &gt; epsilon:\n        count += 1\n        x1 -= delt_x1(x1, x2)\n        x2 -= delt_x2(x1, x2)\n    return x1, x2, count\n\na, b, c = gradient_f(0)\nprint(f&#39;&#39;&#39;\na \\t= {a}\nb \\t= {b} \nf(a, b) = {(a-3)**2 + (b+4)**2}\ncount \\t= {c}&#39;&#39;&#39;)\n\noutput\na \t= 2.9967765158140387\nb \t= -3.9905337923806563 \nf(a, b) = 9.999993698966316e-05\ncount \t= 249990\n\n\u4e4b\u6240\u4ee5\u505a\u4e24\u4e2a\u7ec3\u4e60\uff0c \u5c31\u662f\u56e0\u4e3a\u7b2c\u4e00\u4e2a\u662f\u6545\u610f\u628a\u8fc7\u7a0b\u5199\u5f97\u975e\u5e38\u8be6\u7ec6\uff0c\u5982\u679c\u76f4\u63a5\u5957\u516c\u5f0f\u7684\u8bdd\uff0c\u800c\u4e0d\u662f\u628a\u6bcf\u4e00\u6b65\u63a8\u5bfc\u90fd\u5199\u6210\u4ee3\u7801\uff0c\u53ef\u4ee5\u7b80\u5355\u5f88\u591a\uff08\u5176\u5b9e\u5c31\u662f\u6700\u540e\u4e00\u6b65\u7684\u7ed3\u679c\uff09:$\\Delta x = \\Delta y \\cdot f'(x) \\cdot lr$\u68af\u5ea6\u4e0b\u964d\u89e3\u53cd\u4e09\u89d2\u51fd\u6570\n\n\u6c42\u89e3arcsin(x)\uff0c\u5728$x = 0.5$\u548c$x = \\frac{\\sqrt{3}}{2}$\u7684\u503c\n\n\u5373\u4f30\u7b97\u4e24\u4e2ax\u503c\uff0c\u4ee4$f(x)=sin(x)=0.5$\u548c$f(x)=sin(x)=\\frac{\\sqrt{3}}{2}$\n\u8fd9\u6b21\u4e0d\u63a8\u5bfc\u4e86\uff0c\u5957\u4e00\u6b21\u516c\u5f0f\u5427$\\Delta x = \\Delta y \\cdot f'(x) \\cdot lr$import math\n\ndef arcsin(n):\n    x       = 1           # first try\n    lr      = 0.1        # learning rate\n    epsilon = 1e-8        # quit flag\n\n    f_x     = lambda x : math.sin(x)\n    delta_y = lambda x : f_x(x) - n\n    delta_x = lambda x : delta_y(x) * math.cos(x) * lr\n\n    while abs(f_x(x) - n) &gt; epsilon:\n        x -= delta_x(x)\n\n    return math.degrees(x)\n\nprint(f&#39;&#39;&#39;sin({arcsin(0.5)}) \u2248 0.5\nsin({arcsin(math.sqrt(3)/2)}) \u2248 sqrt(3)/2\n&#39;&#39;&#39;)\n\noutput\nsin(30.000000638736502) \u2248 0.5\nsin(59.999998857570986) \u2248 sqrt(3)/2\n\n\n", "categories": [{"name": "posts", "slug": "posts", "permalink": "/category/posts/"}], "tags": [{"name": "\u4e8c\u5206\u6cd5", "slug": "\u4e8c\u5206\u6cd5", "permalink": "/tag/%E4%BA%8C%E5%88%86%E6%B3%95/"}, {"name": "\u725b\u987f\u6cd5", "slug": "\u725b\u987f\u6cd5", "permalink": "/tag/%E7%89%9B%E9%A1%BF%E6%B3%95/"}, {"name": "\u68af\u5ea6\u4e0b\u964d", "slug": "\u68af\u5ea6\u4e0b\u964d", "permalink": "/tag/%E6%A2%AF%E5%BA%A6%E4%B8%8B%E9%99%8D/"}]}, {"title": "add_subplots\u65b9\u6cd5\u4f20\u9012\u989d\u5916\u53c2\u6570", "date": "2021-01-14T00:00:00-00.00", "path": "/archives/add_subplots%E6%96%B9%E6%B3%95%E4%BC%A0%E9%80%92%E9%A2%9D%E5%A4%96%E5%8F%82%E6%95%B0/", "text": "\u7528matplotlib\u7ed8\u52363D\u56fe\uff0c\u6700\u5feb\u7684\u7528\u6cd5ax = plt.axes(projection=&#39;3d&#39;)\n\n\u6b64\u540e\u5373\u53ef  `ax.plot`, `ax.scatter`\u7b49\uff0c\u5177\u4f53\u7528\u6cd5\u8bf7\u7ffb\u9605\u6587\u6863\n\n\u5176\u6b21\uff0c\u8fd9\u6837\uff1afig = plt.figure()\nax = fig.add_subplot(121, projection=&#39;3d&#39;)\n\n\u800c\u6211\u559c\u6b22\u8981\u540c\u65f6\u7ed8\u591a\u680f\u56fe\u7684\u65f6\u5019\u559c\u6b22\u7528plt.subplots\u65b9\u6cd5\uff0c\u5374\u53d1\u73b0\u4f20\u4e0d\u8fdbprojection\u53c2\u6570\uff0c\u4ed4\u7ec6\u770b\u6587\u6863\uff0c\u662f\u652f\u6301\u7528subplot_kw\u6765\u4e3a\u5b83\u6dfb\u52a0\u7684subplots\u6765\u8fdb\u884c\u5c5e\u6027\u8bbe\u7f6e\u7684\uff0c\u8fd9\u6837\u53ef\u4ee5\u4fdd\u6301\u5916\u5c42api\u5e72\u51c0\u800c\u4e0d\u5fc5\u628asubplots\u7684\u6240\u6709\u5c5e\u6027\u90fd\u590d\u5236\u4e00\u904dfig, axs = plt.subplots(nrows=2, ncols=3, **{&quot;subplot_kw&quot;: {&#39;projection&#39;: &#39;3d&#39;}})\n# \u6216\nfig, axs = plt.subplots(nrows=2, ncols=3, subplot_kw=dict(projection=&#39;3d&#39;))\n\n\u770b\u4f60\u81ea\u5df1\u4e60\u60ef\u4e86\u3002\n", "categories": [{"name": "posts", "slug": "posts", "permalink": "/category/posts/"}], "tags": [{"name": "matplotlib", "slug": "matplotlib", "permalink": "/tag/matplotlib/"}]}, {"title": "iOS-App-\u7b7e\u540d\u7684\u539f\u7406", "date": "2020-11-23T00:00:00-00.00", "path": "/archives/iOS-App-%E7%AD%BE%E5%90%8D%E7%9A%84%E5%8E%9F%E7%90%86/", "text": "\u539f\u6587\u8f6c\u8f7d: https://wereadteam.github.io/2017/03/13/Signature/iOS \u7b7e\u540d\u673a\u5236\u633a\u590d\u6742\uff0c\u5404\u79cd\u8bc1\u4e66\uff0cProvisioning Profile\uff0centitlements\uff0cCertificateSigningRequest\uff0cp12\uff0cAppID\uff0c\u6982\u5ff5\u4e00\u5806\uff0c\u4e5f\u5f88\u5bb9\u6613\u51fa\u9519\uff0c\u672c\u6587\u5c1d\u8bd5\u4ece\u539f\u7406\u51fa\u53d1\uff0c\u4e00\u6b65\u6b65\u63a8\u51fa\u4e3a\u4ec0\u4e48\u4f1a\u6709\u8fd9\u4e48\u591a\u6982\u5ff5\uff0c\u5e0c\u671b\u80fd\u6709\u52a9\u4e8e\u7406\u89e3 iOS App \u7b7e\u540d\u7684\u539f\u7406\u548c\u6d41\u7a0b\u3002\nhttps://wereadteam.github.io/2017/03/13/Signature/#%E7%9B%AE%E7%9A%84\u76ee\u7684\n\u5148\u6765\u770b\u770b\u82f9\u679c\u7684\u7b7e\u540d\u673a\u5236\u662f\u4e3a\u4e86\u505a\u4ec0\u4e48\u3002\u5728 iOS \u51fa\u6765\u4e4b\u524d\uff0c\u5728\u4e3b\u6d41\u64cd\u4f5c\u7cfb\u7edf(Mac/Windows/Linux)\u4e0a\u5f00\u53d1\u548c\u8fd0\u884c\u8f6f\u4ef6\u662f\u4e0d\u9700\u8981\u7b7e\u540d\u7684\uff0c\u8f6f\u4ef6\u968f\u4fbf\u4ece\u54ea\u91cc\u4e0b\u8f7d\u90fd\u80fd\u8fd0\u884c\uff0c\u5bfc\u81f4\u5e73\u53f0\u5bf9\u7b2c\u4e09\u65b9\u8f6f\u4ef6\u96be\u4ee5\u63a7\u5236\uff0c\u76d7\u7248\u6d41\u884c\u3002\u82f9\u679c\u5e0c\u671b\u89e3\u51b3\u8fd9\u6837\u7684\u95ee\u9898\uff0c\u5728 iOS \u5e73\u53f0\u5bf9\u7b2c\u4e09\u65b9 APP \u6709\u7edd\u5bf9\u7684\u63a7\u5236\u6743\uff0c\u4e00\u5b9a\u8981\u4fdd\u8bc1\u6bcf\u4e00\u4e2a\u5b89\u88c5\u5230 iOS \u4e0a\u7684 APP \u90fd\u662f\u7ecf\u8fc7\u82f9\u679c\u5b98\u65b9\u5141\u8bb8\u7684\uff0c\u600e\u6837\u4fdd\u8bc1\u5462\uff1f\u5c31\u662f\u901a\u8fc7\u7b7e\u540d\u673a\u5236\u3002\nhttps://wereadteam.github.io/2017/03/13/Signature/#%E9%9D%9E%E5%AF%B9%E7%A7%B0%E5%8A%A0%E5%AF%86\u975e\u5bf9\u79f0\u52a0\u5bc6\n\u901a\u5e38\u6211\u4eec\u8bf4\u7684\u7b7e\u540d\u5c31\u662f\u6570\u5b57\u7b7e\u540d\uff0c\u5b83\u662f\u57fa\u4e8e\u975e\u5bf9\u79f0\u52a0\u5bc6\u7b97\u6cd5\u5b9e\u73b0\u7684\u3002\u5bf9\u79f0\u52a0\u5bc6\u662f\u901a\u8fc7\u540c\u4e00\u4efd\u5bc6\u94a5\u52a0\u5bc6\u548c\u89e3\u5bc6\u6570\u636e\uff0c\u800c\u975e\u5bf9\u79f0\u52a0\u5bc6\u5219\u6709\u4e24\u4efd\u5bc6\u94a5\uff0c\u5206\u522b\u662f\u516c\u94a5\u548c\u79c1\u94a5\uff0c\u7528\u516c\u94a5\u52a0\u5bc6\u7684\u6570\u636e\uff0c\u8981\u7528\u79c1\u94a5\u624d\u80fd\u89e3\u5bc6\uff0c\u7528\u79c1\u94a5\u52a0\u5bc6\u7684\u6570\u636e\uff0c\u8981\u7528\u516c\u94a5\u624d\u80fd\u89e3\u5bc6\u3002\n\u7b80\u5355\u8bf4\u4e00\u4e0b\u5e38\u7528\u7684\u975e\u5bf9\u79f0\u52a0\u5bc6\u7b97\u6cd5 RSA \u7684\u6570\u5b66\u539f\u7406\uff0c\u7406\u89e3\u7b80\u5355\u7684\u6570\u5b66\u539f\u7406\uff0c\u5c31\u53ef\u4ee5\u7406\u89e3\u975e\u5bf9\u79f0\u52a0\u5bc6\u662f\u600e\u4e48\u505a\u5230\u7684\uff0c\u4e3a\u4ec0\u4e48\u4f1a\u662f\u5b89\u5168\u7684\uff1a\n\u9009\u4e24\u4e2a\u8d28\u6570 p\n \u548c q\n\uff0c\u76f8\u4e58\u5f97\u51fa\u4e00\u4e2a\u5927\u6574\u6570n\n\uff0c\u4f8b\u5982 p=61\uff0cq=53\uff0cn=pq=3233\n\u9009 1-n \u95f4\u7684\u968f\u4fbf\u4e00\u4e2a\u8d28\u6570 e\n\uff0c\u4f8b\u5982 e = 17\n\u7ecf\u8fc7\u4e00\u7cfb\u5217\u6570\u5b66\u516c\u5f0f\uff0c\u7b97\u51fa\u4e00\u4e2a\u6570\u5b57 d\n\uff0c\u6ee1\u8db3\uff1aa. \u901a\u8fc7 n\n \u548c e\n \u8fd9\u4e24\u4e2a\u6570\u636e\u4e00\u7ec4\u6570\u636e\u8fdb\u884c\u6570\u5b66\u8fd0\u7b97\u540e\uff0c\u53ef\u4ee5\u901a\u8fc7 n \u548c d \u53bb\u53cd\u89e3\u8fd0\u7b97\uff0c\u53cd\u8fc7\u6765\u4e5f\u53ef\u4ee5\u3002b. \u5982\u679c\u53ea\u77e5\u9053 n\n \u548c e\n\uff0c\u8981\u63a8\u5bfc\u51fa d\n\uff0c\u9700\u8981\u77e5\u9053 p\n \u548c q\n\uff0c\u4e5f\u5c31\u662f\u8981\u9700\u8981\u628a n \u56e0\u6570\u5206\u89e3\u3002\u4e0a\u8ff0\u7684 (n,e)\n \u8fd9\u4e24\u4e2a\u6570\u636e\u5728\u4e00\u8d77\u5c31\u662f\u516c\u94a5\uff0c(n,d)\n \u8fd9\u4e24\u4e2a\u6570\u636e\u5c31\u662f\u79c1\u94a5\uff0c\u6ee1\u8db3\u7528\u516c\u94a5\u52a0\u5bc6\uff0c\u79c1\u94a5\u89e3\u5bc6\uff0c\u6216\u53cd\u8fc7\u6765\u516c\u94a5\u52a0\u5bc6\uff0c\u79c1\u94a5\u89e3\u5bc6\uff0c\u4e5f\u6ee1\u8db3\u5728\u53ea\u66b4\u9732\u516c\u94a5\uff08\u53ea\u77e5\u9053 n\n \u548c e\uff09\u7684\u60c5\u51b5\u4e0b\uff0c\u8981\u63a8\u5bfc\u51fa\u79c1\u94a5 (n,d)\n\uff0c\u9700\u8981\u628a\u5927\u6574\u6570 n\n \u56e0\u6570\u5206\u89e3\u3002\u76ee\u524d\u56e0\u6570\u5206\u89e3\u53ea\u80fd\u9760\u66b4\u529b\u7a77\u4e3e\uff0c\u800cn\u6570\u5b57\u8d8a\u5927\uff0c\u8d8a\u96be\u4ee5\u7528\u7a77\u4e3e\u8ba1\u7b97\u51fa\u56e0\u6570 p\n \u548c q\n\uff0c\u4e5f\u5c31\u8d8a\u5b89\u5168\uff0c\u5f53 n\n \u5927\u5230\u4e8c\u8fdb\u5236 1024 \u4f4d\u6216 2048 \u4f4d\u65f6\uff0c\u4ee5\u76ee\u524d\u6280\u672f\u8981\u7834\u89e3\u51e0\u4e4e\u4e0d\u53ef\u80fd\uff0c\u6240\u4ee5\u975e\u5e38\u5b89\u5168\u3002\n\u82e5\u5bf9\u6570\u5b57 d\n \u662f\u600e\u6837\u8ba1\u7b97\u51fa\u6765\u7684\u611f\u5174\u8da3\uff0c\u53ef\u4ee5\u8be6\u8bfb\u8fd9\u4e24\u7bc7\u6587\u7ae0\uff1aRSA \u7b97\u6cd5\u539f\u7406\uff08\u4e00\uff09\uff08\u4e8c\uff09\nhttps://wereadteam.github.io/2017/03/13/Signature/#%E6%95%B0%E5%AD%97%E7%AD%BE%E5%90%8D\u6570\u5b57\u7b7e\u540d\n\u73b0\u5728\u77e5\u9053\u4e86\u6709\u975e\u5bf9\u79f0\u52a0\u5bc6\u8fd9\u4e1c\u897f\uff0c\u90a3\u6570\u5b57\u7b7e\u540d\u662f\u600e\u4e48\u56de\u4e8b\u5462\uff1f\n\u6570\u5b57\u7b7e\u540d\u7684\u4f5c\u7528\u662f\u6211\u5bf9\u67d0\u4e00\u4efd\u6570\u636e\u6253\u4e2a\u6807\u8bb0\uff0c\u8868\u793a\u6211\u8ba4\u53ef\u4e86\u8fd9\u4efd\u6570\u636e\uff08\u7b7e\u4e86\u4e2a\u540d\uff09\uff0c\u7136\u540e\u6211\u53d1\u9001\u7ed9\u5176\u4ed6\u4eba\uff0c\u5176\u4ed6\u4eba\u53ef\u4ee5\u77e5\u9053\u8fd9\u4efd\u6570\u636e\u662f\u7ecf\u8fc7\u6211\u8ba4\u8bc1\u7684\uff0c\u6570\u636e\u6ca1\u6709\u88ab\u7be1\u6539\u8fc7\u3002\n\u6709\u4e86\u4e0a\u8ff0\u975e\u5bf9\u79f0\u52a0\u5bc6\u7b97\u6cd5\uff0c\u5c31\u53ef\u4ee5\u5b9e\u73b0\u8fd9\u4e2a\u9700\u6c42\uff1a\n\n\u9996\u5148\u7528\u4e00\u79cd\u7b97\u6cd5\uff0c\u7b97\u51fa\u539f\u59cb\u6570\u636e\u7684\u6458\u8981\u3002\u9700\u6ee1\u8db3 a.\u82e5\u539f\u59cb\u6570\u636e\u6709\u4efb\u4f55\u53d8\u5316\uff0c\u8ba1\u7b97\u51fa\u6765\u7684\u6458\u8981\u503c\u90fd\u4f1a\u53d8\u5316\u3002 b.\u6458\u8981\u8981\u591f\u77ed\u3002\u8fd9\u91cc\u6700\u5e38\u7528\u7684\u7b97\u6cd5\u662fMD5\u3002\n\u751f\u6210\u4e00\u4efd\u975e\u5bf9\u79f0\u52a0\u5bc6\u7684\u516c\u94a5\u548c\u79c1\u94a5\uff0c\u79c1\u94a5\u6211\u81ea\u5df1\u62ff\u7740\uff0c\u516c\u94a5\u516c\u5e03\u51fa\u53bb\u3002\n\u5bf9\u4e00\u4efd\u6570\u636e\uff0c\u7b97\u51fa\u6458\u8981\u540e\uff0c\u7528\u79c1\u94a5\u52a0\u5bc6\u8fd9\u4e2a\u6458\u8981\uff0c\u5f97\u5230\u4e00\u4efd\u52a0\u5bc6\u540e\u7684\u6570\u636e\uff0c\u79f0\u4e3a\u539f\u59cb\u6570\u636e\u7684\u7b7e\u540d\u3002\u628a\u5b83\u8ddf\u539f\u59cb\u6570\u636e\u4e00\u8d77\u53d1\u9001\u7ed9\u7528\u6237\u3002\n\u7528\u6237\u6536\u5230\u6570\u636e\u548c\u7b7e\u540d\u540e\uff0c\u7528\u516c\u94a5\u89e3\u5bc6\u5f97\u5230\u6458\u8981\u3002\u540c\u65f6\u7528\u6237\u7528\u540c\u6837\u7684\u7b97\u6cd5\u8ba1\u7b97\u539f\u59cb\u6570\u636e\u7684\u6458\u8981\uff0c\u5bf9\u6bd4\u8fd9\u91cc\u8ba1\u7b97\u51fa\u6765\u7684\u6458\u8981\u548c\u7528\u516c\u94a5\u89e3\u5bc6\u7b7e\u540d\u5f97\u5230\u7684\u6458\u8981\u662f\u5426\u76f8\u7b49\uff0c\u82e5\u76f8\u7b49\u5219\u8868\u793a\u8fd9\u4efd\u6570\u636e\u4e2d\u9014\u6ca1\u6709\u88ab\u7be1\u6539\u8fc7\uff0c\u56e0\u4e3a\u5982\u679c\u7be1\u6539\u8fc7\uff0c\u6458\u8981\u4f1a\u53d8\u5316\u3002\u4e4b\u6240\u4ee5\u8981\u6709\u7b2c\u4e00\u6b65\u8ba1\u7b97\u6458\u8981\uff0c\u662f\u56e0\u4e3a\u975e\u5bf9\u79f0\u52a0\u5bc6\u7684\u539f\u7406\u9650\u5236\u53ef\u52a0\u5bc6\u7684\u5185\u5bb9\u4e0d\u80fd\u592a\u5927\uff08\u4e0d\u80fd\u5927\u4e8e\u4e0a\u8ff0 n \u7684\u4f4d\u6570\uff0c\u4e5f\u5c31\u662f\u4e00\u822c\u4e0d\u80fd\u5927\u4e8e 1024 \u4f4d/ 2048 \u4f4d\uff09\uff0c\u4e8e\u662f\u82e5\u8981\u5bf9\u4efb\u610f\u5927\u7684\u6570\u636e\u7b7e\u540d\uff0c\u5c31\u9700\u8981\u6539\u6210\u5bf9\u5b83\u7684\u7279\u5f81\u503c\u7b7e\u540d\uff0c\u6548\u679c\u662f\u4e00\u6837\u7684\u3002\n\u597d\u4e86\uff0c\u6709\u4e86\u975e\u5bf9\u79f0\u52a0\u5bc6\u7684\u57fa\u7840\uff0c\u77e5\u9053\u4e86\u6570\u5b57\u7b7e\u540d\u662f\u4ec0\u4e48\uff0c\u600e\u6837\u53ef\u4ee5\u4fdd\u8bc1\u4e00\u4efd\u6570\u636e\u662f\u7ecf\u8fc7\u67d0\u4e2a\u5730\u65b9\u8ba4\u8bc1\u7684\uff0c\u6765\u770b\u770b\u600e\u6837\u901a\u8fc7\u6570\u5b57\u7b7e\u540d\u7684\u673a\u5236\u4fdd\u8bc1\u6bcf\u4e00\u4e2a\u5b89\u88c5\u5230 iOS \u4e0a\u7684 APP \u90fd\u662f\u7ecf\u8fc7\u82f9\u679c\u8ba4\u8bc1\u5141\u8bb8\u7684\u3002\nhttps://wereadteam.github.io/2017/03/13/Signature/#%E6%9C%80%E7%AE%80%E5%8D%95%E7%9A%84%E7%AD%BE%E5%90%8D\u6700\u7b80\u5355\u7684\u7b7e\u540d\n\u8981\u5b9e\u73b0\u8fd9\u4e2a\u9700\u6c42\u5f88\u7b80\u5355\uff0c\u6700\u76f4\u63a5\u7684\u65b9\u5f0f\uff0c\u82f9\u679c\u5b98\u65b9\u751f\u6210\u4e00\u5bf9\u516c\u79c1\u94a5\uff0c\u5728 iOS \u91cc\u5185\u7f6e\u4e00\u4e2a\u516c\u94a5\uff0c\u79c1\u94a5\u7531\u82f9\u679c\u540e\u53f0\u4fdd\u5b58\uff0c\u6211\u4eec\u4f20 App \u4e0a AppStore \u65f6\uff0c\u82f9\u679c\u540e\u53f0\u7528\u79c1\u94a5\u5bf9 APP \u6570\u636e\u8fdb\u884c\u7b7e\u540d\uff0ciOS \u7cfb\u7edf\u4e0b\u8f7d\u8fd9\u4e2a APP \u540e\uff0c\u7528\u516c\u94a5\u9a8c\u8bc1\u8fd9\u4e2a\u7b7e\u540d\uff0c\u82e5\u7b7e\u540d\u6b63\u786e\uff0c\u8fd9\u4e2a APP \u80af\u5b9a\u662f\u7531\u82f9\u679c\u540e\u53f0\u8ba4\u8bc1\u7684\uff0c\u5e76\u4e14\u6ca1\u6709\u88ab\u4fee\u6539\u8fc7\uff0c\u4e5f\u5c31\u8fbe\u5230\u4e86\u82f9\u679c\u7684\u9700\u6c42\uff1a\u4fdd\u8bc1\u5b89\u88c5\u7684\u6bcf\u4e00\u4e2a APP \u90fd\u662f\u7ecf\u8fc7\u82f9\u679c\u5b98\u65b9\u5141\u8bb8\u7684\u3002\n\n\u5982\u679c\u6211\u4eec iOS \u8bbe\u5907\u5b89\u88c5 APP \u53ea\u6709\u4ece AppStore \u4e0b\u8f7d\u8fd9\u4e00\u79cd\u65b9\u5f0f\u7684\u8bdd\uff0c\u8fd9\u4ef6\u4e8b\u5c31\u7ed3\u675f\u4e86\uff0c\u6ca1\u6709\u4efb\u4f55\u590d\u6742\u7684\u4e1c\u897f\uff0c\u53ea\u6709\u4e00\u4e2a\u6570\u5b57\u7b7e\u540d\uff0c\u975e\u5e38\u7b80\u5355\u5730\u89e3\u51b3\u95ee\u9898\u3002\n\u4f46\u5b9e\u9645\u4e0a\u56e0\u4e3a\u9664\u4e86\u4ece AppStore \u4e0b\u8f7d\uff0c\u6211\u4eec\u8fd8\u53ef\u4ee5\u6709\u4e09\u79cd\u65b9\u5f0f\u5b89\u88c5\u4e00\u4e2a App\uff1a\n\u5f00\u53d1 App \u65f6\u53ef\u4ee5\u76f4\u63a5\u628a\u5f00\u53d1\u4e2d\u7684\u5e94\u7528\u5b89\u88c5\u8fdb\u624b\u673a\u8fdb\u884c\u8c03\u8bd5\u3002\nIn-House \u4f01\u4e1a\u5185\u90e8\u5206\u53d1\uff0c\u53ef\u4ee5\u76f4\u63a5\u5b89\u88c5\u4f01\u4e1a\u8bc1\u4e66\u7b7e\u540d\u540e\u7684 APP\u3002\nAD-Hoc \u76f8\u5f53\u4e8e\u4f01\u4e1a\u5206\u53d1\u7684\u9650\u5236\u7248\uff0c\u9650\u5236\u5b89\u88c5\u8bbe\u5907\u6570\u91cf\uff0c\u8f83\u5c11\u7528\u3002\u82f9\u679c\u8981\u5bf9\u7528\u8fd9\u4e09\u79cd\u65b9\u5f0f\u5b89\u88c5\u7684 App \u8fdb\u884c\u63a7\u5236\uff0c\u5c31\u6709\u4e86\u65b0\u7684\u9700\u6c42\uff0c\u65e0\u6cd5\u50cf\u4e0a\u9762\u8fd9\u6837\u7b80\u5355\u4e86\u3002\nhttps://wereadteam.github.io/2017/03/13/Signature/#%E6%96%B0%E7%9A%84%E9%9C%80%E6%B1%82\u65b0\u7684\u9700\u6c42\n\u6211\u4eec\u5148\u6765\u770b\u7b2c\u4e00\u4e2a\uff0c\u5f00\u53d1\u65f6\u5b89\u88c5APP\uff0c\u5b83\u6709\u4e24\u4e2a\u4e2a\u9700\u6c42\uff1a\n\u5b89\u88c5\u5305\u4e0d\u9700\u8981\u4f20\u5230\u82f9\u679c\u670d\u52a1\u5668\uff0c\u53ef\u4ee5\u76f4\u63a5\u5b89\u88c5\u5230\u624b\u673a\u4e0a\u3002\u5982\u679c\u4f60\u7f16\u8bd1\u4e00\u4e2a APP \u5230\u624b\u673a\u524d\u8981\u5148\u4f20\u5230\u82f9\u679c\u670d\u52a1\u5668\u7b7e\u540d\uff0c\u8fd9\u663e\u7136\u662f\u4e0d\u80fd\u63a5\u53d7\u7684\u3002\n\u82f9\u679c\u5fc5\u987b\u5bf9\u8fd9\u91cc\u7684\u5b89\u88c5\u6709\u63a7\u5236\u6743\uff0c\u5305\u62eca.\u7ecf\u8fc7\u82f9\u679c\u5141\u8bb8\u624d\u53ef\u4ee5\u8fd9\u6837\u5b89\u88c5\u3002b.\u4e0d\u80fd\u88ab\u6ee5\u7528\u5bfc\u81f4\u975e\u5f00\u53d1app\u4e5f\u80fd\u88ab\u5b89\u88c5\u3002\u4e3a\u4e86\u5b9e\u73b0\u8fd9\u4e9b\u9700\u6c42\uff0ciOS \u7b7e\u540d\u7684\u590d\u6742\u5ea6\u4e5f\u5c31\u5f00\u59cb\u589e\u52a0\u4e86\u3002\n\u82f9\u679c\u8fd9\u91cc\u7ed9\u51fa\u7684\u65b9\u6848\u662f\u4f7f\u7528\u4e86\u53cc\u5c42\u7b7e\u540d\uff0c\u4f1a\u6bd4\u8f83\u7ed5\uff0c\u6d41\u7a0b\u5927\u6982\u662f\u8fd9\u6837\u7684\uff1a\n\n\u5728\u4f60\u7684 Mac \u5f00\u53d1\u673a\u5668\u751f\u6210\u4e00\u5bf9\u516c\u79c1\u94a5\uff0c\u8fd9\u91cc\u79f0\u4e3a\u516c\u94a5L\uff0c\u79c1\u94a5L\u3002L:Local\n\u82f9\u679c\u81ea\u5df1\u6709\u56fa\u5b9a\u7684\u4e00\u5bf9\u516c\u79c1\u94a5\uff0c\u8ddf\u4e0a\u9762 AppStore \u4f8b\u5b50\u4e00\u6837\uff0c\u79c1\u94a5\u5728\u82f9\u679c\u540e\u53f0\uff0c\u516c\u94a5\u5728\u6bcf\u4e2a iOS \u8bbe\u5907\u4e0a\u3002\u8fd9\u91cc\u79f0\u4e3a\u516c\u94a5A\uff0c\u79c1\u94a5A\u3002A:Apple\n\u628a\u516c\u94a5 L \u4f20\u5230\u82f9\u679c\u540e\u53f0\uff0c\u7528\u82f9\u679c\u540e\u53f0\u91cc\u7684\u79c1\u94a5 A \u53bb\u7b7e\u540d\u516c\u94a5 L\u3002\u5f97\u5230\u4e00\u4efd\u6570\u636e\u5305\u542b\u4e86\u516c\u94a5 L \u4ee5\u53ca\u5176\u7b7e\u540d\uff0c\u628a\u8fd9\u4efd\u6570\u636e\u79f0\u4e3a\u8bc1\u4e66\u3002\n\u5728\u5f00\u53d1\u65f6\uff0c\u7f16\u8bd1\u5b8c\u4e00\u4e2a APP \u540e\uff0c\u7528\u672c\u5730\u7684\u79c1\u94a5 L \u5bf9\u8fd9\u4e2a APP \u8fdb\u884c\u7b7e\u540d\uff0c\u540c\u65f6\u628a\u7b2c\u4e09\u6b65\u5f97\u5230\u7684\u8bc1\u4e66\u4e00\u8d77\u6253\u5305\u8fdb APP \u91cc\uff0c\u5b89\u88c5\u5230\u624b\u673a\u4e0a\u3002\n\u5728\u5b89\u88c5\u65f6\uff0ciOS \u7cfb\u7edf\u53d6\u5f97\u8bc1\u4e66\uff0c\u901a\u8fc7\u7cfb\u7edf\u5185\u7f6e\u7684\u516c\u94a5 A\uff0c\u53bb\u9a8c\u8bc1\u8bc1\u4e66\u7684\u6570\u5b57\u7b7e\u540d\u662f\u5426\u6b63\u786e\u3002\n\u9a8c\u8bc1\u8bc1\u4e66\u540e\u786e\u4fdd\u4e86\u516c\u94a5 L \u662f\u82f9\u679c\u8ba4\u8bc1\u8fc7\u7684\uff0c\u518d\u7528\u516c\u94a5 L \u53bb\u9a8c\u8bc1 APP \u7684\u7b7e\u540d\uff0c\u8fd9\u91cc\u5c31\u95f4\u63a5\u9a8c\u8bc1\u4e86\u8fd9\u4e2a APP \u5b89\u88c5\u884c\u4e3a\u662f\u5426\u7ecf\u8fc7\u82f9\u679c\u5b98\u65b9\u5141\u8bb8\u3002\uff08\u8fd9\u91cc\u53ea\u9a8c\u8bc1\u5b89\u88c5\u884c\u4e3a\uff0c\u4e0d\u9a8c\u8bc1APP \u662f\u5426\u88ab\u6539\u52a8\uff0c\u56e0\u4e3a\u5f00\u53d1\u9636\u6bb5 APP \u5185\u5bb9\u603b\u662f\u4e0d\u65ad\u53d8\u5316\u7684\uff0c\u82f9\u679c\u4e0d\u9700\u8981\u7ba1\u3002\uff09https://wereadteam.github.io/2017/03/13/Signature/#%E5%8A%A0%E7%82%B9%E4%B8%9C%E8%A5%BF\u52a0\u70b9\u4e1c\u897f\n\u4e0a\u8ff0\u6d41\u7a0b\u53ea\u89e3\u51b3\u4e86\u4e0a\u9762\u7b2c\u4e00\u4e2a\u9700\u6c42\uff0c\u4e5f\u5c31\u662f\u9700\u8981\u7ecf\u8fc7\u82f9\u679c\u5141\u8bb8\u624d\u53ef\u4ee5\u5b89\u88c5\uff0c\u8fd8\u672a\u89e3\u51b3\u7b2c\u4e8c\u4e2a\u907f\u514d\u88ab\u6ee5\u7528\u7684\u95ee\u9898\u3002\u600e\u4e48\u89e3\u51b3\u5462\uff1f\u82f9\u679c\u518d\u52a0\u4e86\u4e24\u4e2a\u9650\u5236\uff0c\u4e00\u662f\u9650\u5236\u5728\u82f9\u679c\u540e\u53f0\u6ce8\u518c\u8fc7\u7684\u8bbe\u5907\u624d\u53ef\u4ee5\u5b89\u88c5\uff0c\u4e8c\u662f\u9650\u5236\u7b7e\u540d\u53ea\u80fd\u9488\u5bf9\u67d0\u4e00\u4e2a\u5177\u4f53\u7684 APP\u3002\n\u600e\u4e48\u52a0\u7684\uff1f\u5728\u4e0a\u8ff0\u7b2c\u4e09\u6b65\uff0c\u82f9\u679c\u7528\u79c1\u94a5 A \u7b7e\u540d\u6211\u4eec\u672c\u5730\u516c\u94a5 L \u65f6\uff0c\u5b9e\u9645\u4e0a\u9664\u4e86\u7b7e\u540d\u516c\u94a5 L\uff0c\u8fd8\u53ef\u4ee5\u52a0\u4e0a\u65e0\u9650\u591a\u6570\u636e\uff0c\u8fd9\u4e9b\u6570\u636e\u90fd\u53ef\u4ee5\u4fdd\u8bc1\u662f\u7ecf\u8fc7\u82f9\u679c\u5b98\u65b9\u8ba4\u8bc1\u7684\uff0c\u4e0d\u4f1a\u6709\u88ab\u7be1\u6539\u7684\u53ef\u80fd\u3002\n\n\u53ef\u4ee5\u60f3\u5230\u628a \u5141\u8bb8\u5b89\u88c5\u7684\u8bbe\u5907 ID \u5217\u8868 \u548c App\u5bf9\u5e94\u7684 AppID \u7b49\u6570\u636e\uff0c\u90fd\u5728\u7b2c\u4e09\u6b65\u8fd9\u91cc\u8ddf\u516c\u94a5L\u4e00\u8d77\u7ec4\u6210\u8bc1\u4e66\uff0c\u518d\u7528\u82f9\u679c\u79c1\u94a5 A \u5bf9\u8fd9\u4e2a\u8bc1\u4e66\u7b7e\u540d\u3002\u5728\u6700\u540e\u7b2c 5 \u6b65\u9a8c\u8bc1\u65f6\u5c31\u53ef\u4ee5\u62ff\u5230\u8bbe\u5907 ID \u5217\u8868\uff0c\u5224\u65ad\u5f53\u524d\u8bbe\u5907\u662f\u5426\u7b26\u5408\u8981\u6c42\u3002\u6839\u636e\u6570\u5b57\u7b7e\u540d\u7684\u539f\u7406\uff0c\u53ea\u8981\u6570\u5b57\u7b7e\u540d\u901a\u8fc7\u9a8c\u8bc1\uff0c\u7b2c 5 \u6b65\u8fd9\u91cc\u7684\u8bbe\u5907 IDs / AppID / \u516c\u94a5 L \u5c31\u90fd\u662f\u7ecf\u8fc7\u82f9\u679c\u8ba4\u8bc1\u7684\uff0c\u65e0\u6cd5\u88ab\u4fee\u6539\uff0c\u82f9\u679c\u5c31\u53ef\u4ee5\u9650\u5236\u53ef\u5b89\u88c5\u7684\u8bbe\u5907\u548c APP\uff0c\u907f\u514d\u6ee5\u7528\u3002\nhttps://wereadteam.github.io/2017/03/13/Signature/#%E6%9C%80%E7%BB%88%E6%B5%81%E7%A8%8B\u6700\u7ec8\u6d41\u7a0b\n\u5230\u8fd9\u91cc\u8fd9\u4e2a\u8bc1\u4e66\u5df2\u7ecf\u53d8\u5f97\u5f88\u590d\u6742\u4e86\uff0c\u6709\u5f88\u591a\u989d\u5916\u4fe1\u606f\uff0c\u5b9e\u9645\u4e0a\u9664\u4e86 \u8bbe\u5907 ID / AppID\uff0c\u8fd8\u6709\u5176\u4ed6\u4fe1\u606f\u4e5f\u9700\u8981\u5728\u8fd9\u91cc\u7528\u82f9\u679c\u7b7e\u540d\uff0c\u50cf\u8fd9\u4e2a APP \u91cc iCloud / push / \u540e\u53f0\u8fd0\u884c \u7b49\u6743\u9650\u82f9\u679c\u90fd\u60f3\u63a7\u5236\uff0c\u82f9\u679c\u628a\u8fd9\u4e9b\u6743\u9650\u5f00\u5173\u7edf\u4e00\u79f0\u4e3a Entitlements\uff0c\u5b83\u4e5f\u9700\u8981\u901a\u8fc7\u7b7e\u540d\u53bb\u6388\u6743\u3002\n\u5b9e\u9645\u4e0a\u4e00\u4e2a\u201c\u8bc1\u4e66\u201d\u672c\u6765\u5c31\u6709\u89c4\u5b9a\u7684\u683c\u5f0f\u89c4\u8303\uff0c\u4e0a\u9762\u6211\u4eec\u628a\u5404\u79cd\u989d\u5916\u4fe1\u606f\u585e\u5165\u8bc1\u4e66\u91cc\u662f\u4e0d\u5408\u9002\u7684\uff0c\u4e8e\u662f\u82f9\u679c\u53e6\u5916\u641e\u4e86\u4e2a\u4e1c\u897f\uff0c\u53eb Provisioning Profile\uff0c\u4e00\u4e2a Provisioning Profile \u91cc\u5c31\u5305\u542b\u4e86\u8bc1\u4e66\u4ee5\u53ca\u4e0a\u8ff0\u63d0\u5230\u7684\u6240\u6709\u989d\u5916\u4fe1\u606f\uff0c\u4ee5\u53ca\u6240\u6709\u4fe1\u606f\u7684\u7b7e\u540d\u3002\n\u6240\u4ee5\u6574\u4e2a\u6d41\u7a0b\u7a0d\u5fae\u53d8\u4e00\u4e0b\uff0c\u5c31\u53d8\u6210\u8fd9\u6837\u4e86\uff1a\n\n\u56e0\u4e3a\u6b65\u9aa4\u6709\u5c0f\u53d8\u52a8\uff0c\u8fd9\u91cc\u6211\u4eec\u4e0d\u8f9e\u5570\u55e6\u91cd\u65b0\u518d\u5217\u4e00\u904d\u6574\u4e2a\u6d41\u7a0b\uff1a\n\u5728\u4f60\u7684 Mac \u5f00\u53d1\u673a\u5668\u751f\u6210\u4e00\u5bf9\u516c\u79c1\u94a5\uff0c\u8fd9\u91cc\u79f0\u4e3a\u516c\u94a5L\uff0c\u79c1\u94a5L\u3002L:Local\n\u82f9\u679c\u81ea\u5df1\u6709\u56fa\u5b9a\u7684\u4e00\u5bf9\u516c\u79c1\u94a5\uff0c\u8ddf\u4e0a\u9762 AppStore \u4f8b\u5b50\u4e00\u6837\uff0c\u79c1\u94a5\u5728\u82f9\u679c\u540e\u53f0\uff0c\u516c\u94a5\u5728\u6bcf\u4e2a iOS \u8bbe\u5907\u4e0a\u3002\u8fd9\u91cc\u79f0\u4e3a\u516c\u94a5A\uff0c\u79c1\u94a5A\u3002A:Apple\n\u628a\u516c\u94a5 L \u4f20\u5230\u82f9\u679c\u540e\u53f0\uff0c\u7528\u82f9\u679c\u540e\u53f0\u91cc\u7684\u79c1\u94a5 A \u53bb\u7b7e\u540d\u516c\u94a5 L\u3002\u5f97\u5230\u4e00\u4efd\u6570\u636e\u5305\u542b\u4e86\u516c\u94a5 L \u4ee5\u53ca\u5176\u7b7e\u540d\uff0c\u628a\u8fd9\u4efd\u6570\u636e\u79f0\u4e3a\u8bc1\u4e66\u3002\n\u5728\u82f9\u679c\u540e\u53f0\u7533\u8bf7 AppID\uff0c\u914d\u7f6e\u597d\u8bbe\u5907 ID \u5217\u8868\u548c APP \u53ef\u4f7f\u7528\u7684\u6743\u9650\uff0c\u518d\u52a0\u4e0a\u7b2c\u2462\u6b65\u7684\u8bc1\u4e66\uff0c\u7ec4\u6210\u7684\u6570\u636e\u7528\u79c1\u94a5 A \u7b7e\u540d\uff0c\u628a\u6570\u636e\u548c\u7b7e\u540d\u4e00\u8d77\u7ec4\u6210\u4e00\u4e2a Provisioning Profile \u6587\u4ef6\uff0c\u4e0b\u8f7d\u5230\u672c\u5730 Mac \u5f00\u53d1\u673a\u3002\n\u5728\u5f00\u53d1\u65f6\uff0c\u7f16\u8bd1\u5b8c\u4e00\u4e2a APP \u540e\uff0c\u7528\u672c\u5730\u7684\u79c1\u94a5 L \u5bf9\u8fd9\u4e2a APP \u8fdb\u884c\u7b7e\u540d\uff0c\u540c\u65f6\u628a\u7b2c\u2463\u6b65\u5f97\u5230\u7684 Provisioning Profile \u6587\u4ef6\u6253\u5305\u8fdb APP \u91cc\uff0c\u6587\u4ef6\u540d\u4e3a embedded.mobileprovision\n\uff0c\u628a APP \u5b89\u88c5\u5230\u624b\u673a\u4e0a\u3002\n\u5728\u5b89\u88c5\u65f6\uff0ciOS \u7cfb\u7edf\u53d6\u5f97\u8bc1\u4e66\uff0c\u901a\u8fc7\u7cfb\u7edf\u5185\u7f6e\u7684\u516c\u94a5 A\uff0c\u53bb\u9a8c\u8bc1 embedded.mobileprovision\n \u7684\u6570\u5b57\u7b7e\u540d\u662f\u5426\u6b63\u786e\uff0c\u91cc\u9762\u7684\u8bc1\u4e66\u7b7e\u540d\u4e5f\u4f1a\u518d\u9a8c\u4e00\u904d\u3002\n\u786e\u4fdd\u4e86 embedded.mobileprovision\n \u91cc\u7684\u6570\u636e\u90fd\u662f\u82f9\u679c\u6388\u6743\u4ee5\u540e\uff0c\u5c31\u53ef\u4ee5\u53d6\u51fa\u91cc\u9762\u7684\u6570\u636e\uff0c\u505a\u5404\u79cd\u9a8c\u8bc1\uff0c\u5305\u62ec\u7528\u516c\u94a5 L \u9a8c\u8bc1APP\u7b7e\u540d\uff0c\u9a8c\u8bc1\u8bbe\u5907 ID \u662f\u5426\u5728 ID \u5217\u8868\u4e0a\uff0cAppID \u662f\u5426\u5bf9\u5e94\u5f97\u4e0a\uff0c\u6743\u9650\u5f00\u5173\u662f\u5426\u8ddf APP \u91cc\u7684 Entitlements \u5bf9\u5e94\u7b49\u3002\u5f00\u53d1\u8005\u8bc1\u4e66\u4ece\u7b7e\u540d\u5230\u8ba4\u8bc1\u6700\u7ec8\u82f9\u679c\u91c7\u7528\u7684\u6d41\u7a0b\u5927\u81f4\u662f\u8fd9\u6837\uff0c\u8fd8\u6709\u4e00\u4e9b\u7ec6\u8282\u50cf\u8bc1\u4e66\u6709\u6548\u671f/\u8bc1\u4e66\u7c7b\u578b\u7b49\u5c31\u4e0d\u7ec6\u8bf4\u4e86\u3002\nhttps://wereadteam.github.io/2017/03/13/Signature/#%E6%A6%82%E5%BF%B5%E5%92%8C%E6%93%8D%E4%BD%9C\u6982\u5ff5\u548c\u64cd\u4f5c\n\u4e0a\u9762\u7684\u6b65\u9aa4\u5bf9\u5e94\u5230\u6211\u4eec\u5e73\u5e38\u5177\u4f53\u7684\u64cd\u4f5c\u548c\u6982\u5ff5\u662f\u8fd9\u6837\u7684\uff1a\n\u7b2c 1 \u6b65\u5bf9\u5e94\u7684\u662f keychain \u91cc\u7684 \u201c\u4ece\u8bc1\u4e66\u9881\u53d1\u673a\u6784\u8bf7\u6c42\u8bc1\u4e66\u201d\uff0c\u8fd9\u91cc\u5c31\u672c\u5730\u751f\u6210\u4e86\u4e00\u5806\u516c\u79c1\u94a5\uff0c\u4fdd\u5b58\u7684 CertificateSigningRequest\n \u5c31\u662f\u516c\u94a5\uff0c\u79c1\u94a5\u4fdd\u5b58\u5728\u672c\u5730\u7535\u8111\u91cc\u3002\n\u7b2c 2 \u6b65\u82f9\u679c\u5904\u7406\uff0c\u4e0d\u7528\u7ba1\u3002\n\u7b2c 3 \u6b65\u5bf9\u5e94\u628a CertificateSigningRequest\n \u4f20\u5230\u82f9\u679c\u540e\u53f0\u751f\u6210\u8bc1\u4e66\uff0c\u5e76\u4e0b\u8f7d\u5230\u672c\u5730\u3002\u8fd9\u65f6\u672c\u5730\u6709\u4e24\u4e2a\u8bc1\u4e66\uff0c\u4e00\u4e2a\u662f\u7b2c 1 \u6b65\u751f\u6210\u7684\uff0c\u4e00\u4e2a\u662f\u8fd9\u91cc\u4e0b\u8f7d\u56de\u6765\u7684\uff0ckeychain \u4f1a\u628a\u8fd9\u4e24\u4e2a\u8bc1\u4e66\u5173\u8054\u8d77\u6765\uff0c\u56e0\u4e3a\u4ed6\u4eec\u516c\u79c1\u94a5\u662f\u5bf9\u5e94\u7684\uff0c\u5728XCode\u9009\u62e9\u4e0b\u8f7d\u56de\u6765\u7684\u8bc1\u4e66\u65f6\uff0c\u5b9e\u9645\u4e0a\u4f1a\u627e\u5230 keychain \u91cc\u5bf9\u5e94\u7684\u79c1\u94a5\u53bb\u7b7e\u540d\u3002\u8fd9\u91cc\u79c1\u94a5\u53ea\u6709\u751f\u6210\u5b83\u7684\u8fd9\u53f0 Mac \u6709\uff0c\u5982\u679c\u522b\u7684 Mac \u4e5f\u8981\u7f16\u8bd1\u7b7e\u540d\u8fd9\u4e2a App \u600e\u4e48\u529e\uff1f\u7b54\u6848\u662f\u628a\u79c1\u94a5\u5bfc\u51fa\u7ed9\u5176\u4ed6 Mac \u7528\uff0c\u5728 keychain \u91cc\u5bfc\u51fa\u79c1\u94a5\uff0c\u5c31\u4f1a\u5b58\u6210 .p12\n \u6587\u4ef6\uff0c\u5176\u4ed6 Mac \u6253\u5f00\u540e\u5c31\u5bfc\u5165\u4e86\u8fd9\u4e2a\u79c1\u94a5\u3002\n\u7b2c 4 \u6b65\u90fd\u662f\u5728\u82f9\u679c\u7f51\u7ad9\u4e0a\u64cd\u4f5c\uff0c\u914d\u7f6e AppID / \u6743\u9650 / \u8bbe\u5907\u7b49\uff0c\u6700\u540e\u4e0b\u8f7d Provisioning Profile \u6587\u4ef6\u3002\n\u7b2c 5 \u6b65 XCode \u4f1a\u901a\u8fc7\u7b2c 3 \u6b65\u4e0b\u8f7d\u56de\u6765\u7684\u8bc1\u4e66\uff08\u5b58\u7740\u516c\u94a5\uff09\uff0c\u5728\u672c\u5730\u627e\u5230\u5bf9\u5e94\u7684\u79c1\u94a5\uff08\u7b2c\u4e00\u6b65\u751f\u6210\u7684\uff09\uff0c\u7528\u672c\u5730\u79c1\u94a5\u53bb\u7b7e\u540d App\uff0c\u5e76\u628a Provisioning Profile \u6587\u4ef6\u547d\u540d\u4e3a embedded.mobileprovision\n \u4e00\u8d77\u6253\u5305\u8fdb\u53bb\u3002\u8fd9\u91cc\u5bf9 App \u7684\u7b7e\u540d\u6570\u636e\u4fdd\u5b58\u5206\u4e24\u90e8\u5206\uff0cMach-O \u53ef\u6267\u884c\u6587\u4ef6\u4f1a\u628a\u7b7e\u540d\u76f4\u63a5\u5199\u5165\u8fd9\u4e2a\u6587\u4ef6\u91cc\uff0c\u5176\u4ed6\u8d44\u6e90\u6587\u4ef6\u5219\u4f1a\u4fdd\u5b58\u5728 _CodeSignature\n \u76ee\u5f55\u4e0b\u3002\u7b2c 6 - 7 \u6b65\u7684\u6253\u5305\u548c\u9a8c\u8bc1\u90fd\u662f Xcode \u548c iOS \u7cfb\u7edf\u81ea\u52a8\u505a\u7684\u4e8b\u3002\n\u8fd9\u91cc\u518d\u603b\u7ed3\u4e00\u4e0b\u8fd9\u4e9b\u6982\u5ff5\uff1a\n\u8bc1\u4e66\uff1a\u5185\u5bb9\u662f\u516c\u94a5\u6216\u79c1\u94a5\uff0c\u7531\u5176\u4ed6\u673a\u6784\u5bf9\u5176\u7b7e\u540d\u7ec4\u6210\u7684\u6570\u636e\u5305\u3002\nEntitlements\uff1a\u5305\u542b\u4e86 App \u6743\u9650\u5f00\u5173\u5217\u8868\u3002\nCertificateSigningRequest\uff1a\u672c\u5730\u516c\u94a5\u3002\np12\uff1a\u672c\u5730\u79c1\u94a5\uff0c\u53ef\u4ee5\u5bfc\u5165\u5230\u5176\u4ed6\u7535\u8111\u3002\nProvisioning Profile\uff1a\u5305\u542b\u4e86 \u8bc1\u4e66 / Entitlements \u7b49\u6570\u636e\uff0c\u5e76\u7531\u82f9\u679c\u540e\u53f0\u79c1\u94a5\u7b7e\u540d\u7684\u6570\u636e\u5305\u3002https://wereadteam.github.io/2017/03/13/Signature/#%E5%85%B6%E4%BB%96%E5%8F%91%E5%B8%83%E6%96%B9%E5%BC%8F\u5176\u4ed6\u53d1\u5e03\u65b9\u5f0f\n\u524d\u9762\u4ee5\u5f00\u53d1\u5305\u4e3a\u4f8b\u5b50\u8bf4\u4e86\u7b7e\u540d\u548c\u9a8c\u8bc1\u7684\u6d41\u7a0b\uff0c\u53e6\u5916\u4e24\u79cd\u65b9\u5f0f In-House \u4f01\u4e1a\u7b7e\u540d\u548c AD-Hoc \u6d41\u7a0b\u4e5f\u662f\u5dee\u4e0d\u591a\u7684\uff0c\u53ea\u662f\u4f01\u4e1a\u7b7e\u540d\u4e0d\u9650\u5236\u5b89\u88c5\u7684\u8bbe\u5907\u6570\uff0c\u53e6\u5916\u9700\u8981\u7528\u6237\u5728 iOS \u7cfb\u7edf\u8bbe\u7f6e\u4e0a\u624b\u52a8\u70b9\u51fb\u4fe1\u4efb\u8fd9\u4e2a\u4f01\u4e1a\u624d\u80fd\u901a\u8fc7\u9a8c\u8bc1\u3002\n\u800c AppStore \u7684\u7b7e\u540d\u9a8c\u8bc1\u65b9\u5f0f\u6709\u4e9b\u4e0d\u4e00\u6837\uff0c\u524d\u9762\u6211\u4eec\u8bf4\u5230\u6700\u7b80\u5355\u7684\u7b7e\u540d\u65b9\u5f0f\uff0c\u82f9\u679c\u5728\u540e\u53f0\u76f4\u63a5\u7528\u79c1\u94a5\u7b7e\u540d App \u5c31\u53ef\u4ee5\u4e86\uff0c\u5b9e\u9645\u4e0a\u82f9\u679c\u786e\u5b9e\u662f\u8fd9\u6837\u505a\u7684\uff0c\u5982\u679c\u53bb\u4e0b\u8f7d\u4e00\u4e2a AppStore \u7684\u5b89\u88c5\u5305\uff0c\u4f1a\u53d1\u73b0\u5b83\u91cc\u9762\u662f\u6ca1\u6709 embedded.mobileprovision\n \u6587\u4ef6\u7684\uff0c\u4e5f\u5c31\u662f\u5b83\u5b89\u88c5\u548c\u542f\u52a8\u7684\u6d41\u7a0b\u662f\u4e0d\u4f9d\u8d56\u8fd9\u4e2a\u6587\u4ef6\uff0c\u9a8c\u8bc1\u6d41\u7a0b\u4e5f\u5c31\u8ddf\u4e0a\u8ff0\u51e0\u79cd\u7c7b\u578b\u4e0d\u4e00\u6837\u4e86\u3002\n\u636e\u731c\u6d4b\uff0c\u56e0\u4e3a\u4e0a\u4f20\u5230 AppStore \u7684\u5305\u82f9\u679c\u4f1a\u91cd\u65b0\u5bf9\u5185\u5bb9\u52a0\u5bc6\uff0c\u539f\u6765\u7684\u672c\u5730\u79c1\u94a5\u7b7e\u540d\u5c31\u6ca1\u6709\u7528\u4e86\uff0c\u9700\u8981\u91cd\u65b0\u7b7e\u540d\uff0c\u4ece AppStore \u4e0b\u8f7d\u7684\u5305\u82f9\u679c\u4e5f\u5e76\u4e0d\u6253\u7b97\u63a7\u5236\u5b83\u7684\u6709\u6548\u671f\uff0c\u4e0d\u9700\u8981\u5185\u7f6e\u4e00\u4e2a embedded.mobileprovision\n \u53bb\u505a\u6821\u9a8c\uff0c\u76f4\u63a5\u5728\u82f9\u679c\u7528\u540e\u53f0\u7684\u79c1\u94a5\u91cd\u65b0\u7b7e\u540d\uff0ciOS \u5b89\u88c5\u65f6\u7528\u672c\u5730\u516c\u94a5\u9a8c\u8bc1 App \u7b7e\u540d\u5c31\u53ef\u4ee5\u4e86\u3002\n\u90a3\u4e3a\u4ec0\u4e48\u53d1\u5e03 AppStore \u7684\u5305\u8fd8\u662f\u8981\u8ddf\u5f00\u53d1\u7248\u4e00\u6837\u641e\u5404\u79cd\u8bc1\u4e66\u548c Provisioning Profile\uff1f\u731c\u6d4b\u56e0\u4e3a\u82f9\u679c\u60f3\u505a\u7edf\u4e00\u7ba1\u7406\uff0cProvisioning Profile \u91cc\u5305\u542b\u4e00\u4e9b\u6743\u9650\u63a7\u5236\uff0cAppID \u7684\u68c0\u9a8c\u7b49\uff0c\u82f9\u679c\u4e0d\u60f3\u5728\u4e0a\u4f20 AppStore \u5305\u65f6\u91cd\u65b0\u7528\u53e6\u4e00\u79cd\u534f\u8bae\u505a\u4e00\u904d\u8fd9\u4e9b\u9a8c\u8bc1\uff0c\u5c31\u4e0d\u5982\u7edf\u4e00\u628a\u8fd9\u90e8\u5206\u653e\u5728 Provisioning Profile \u91cc\uff0c\u4e0a\u4f20 AppStore \u65f6\u53ea\u8981\u7528\u540c\u6837\u7684\u6d41\u7a0b\u9a8c\u8bc1\u8fd9\u4e2a Provisioning Profile \u662f\u5426\u5408\u6cd5\u5c31\u53ef\u4ee5\u4e86\u3002\n\u6240\u4ee5 App \u4e0a\u4f20\u5230 AppStore \u540e\uff0c\u5c31\u8ddf\u4f60\u7684 \u8bc1\u4e66 / Provisioning Profile \u90fd\u6ca1\u6709\u5173\u7cfb\u4e86\uff0c\u65e0\u8bba\u4ed6\u4eec\u662f\u5426\u8fc7\u671f\u6216\u88ab\u5e9f\u9664\uff0c\u90fd\u4e0d\u4f1a\u5f71\u54cd AppStore \u4e0a\u7684\u5b89\u88c5\u5305\u3002\n\u5230\u8fd9\u91cc iOS \u7b7e\u540d\u673a\u5236\u7684\u539f\u7406\u548c\u4e3b\u6d41\u7a0b\u5927\u81f4\u8bf4\u5b8c\u4e86\uff0c\u5e0c\u671b\u80fd\u5bf9\u7406\u89e3\u82f9\u679c\u7b7e\u540d\u548c\u6392\u67e5\u65e5\u5e38\u7b7e\u540d\u95ee\u9898\u6709\u6240\u5e2e\u52a9\u3002\nhttps://wereadteam.github.io/2017/03/13/Signature/#P-S-%E4%B8%80%E4%BA%9B%E7%96%91%E9%97%AEP.S.\u4e00\u4e9b\u7591\u95ee\n\u6700\u540e\u8fd9\u91cc\u518d\u63d0\u4e00\u4e0b\u6211\u5173\u4e8e\u7b7e\u540d\u6d41\u7a0b\u7684\u4e00\u4e9b\u7684\u7591\u95ee\u3002\nhttps://wereadteam.github.io/2017/03/13/Signature/#%E4%BC%81%E4%B8%9A%E8%AF%81%E4%B9%A6\u4f01\u4e1a\u8bc1\u4e66\n\u4f01\u4e1a\u8bc1\u4e66\u7b7e\u540d\u56e0\u4e3a\u9650\u5236\u5c11\uff0c\u5728\u56fd\u5185\u88ab\u5e7f\u6cdb\u7528\u4e8e\u6d4b\u8bd5\u548c\u76d7\u7248\uff0cfir.im / \u84b2\u516c\u82f1\u7b49\u6d4b\u8bd5\u5e73\u53f0\u90fd\u662f\u901a\u8fc7\u4f01\u4e1a\u8bc1\u4e66\u5206\u53d1\uff0c\u56fd\u5185\u4e00\u4e9b\u5e02\u573a\u50cf PP \u52a9\u624b\uff0c\u7231\u601d\u52a9\u624b\uff0c\u4e00\u90e8\u5206\u5b89\u88c5\u624b\u6bb5\u4e5f\u662f\u901a\u8fc7\u4f01\u4e1a\u8bc1\u4e66\u91cd\u7b7e\u540d\u3002\u901a\u8fc7\u4f01\u4e1a\u8bc1\u4e66\u7b7e\u540d\u5b89\u88c5\u7684 App\uff0c\u542f\u52a8\u65f6\u90fd\u4f1a\u9a8c\u8bc1\u8bc1\u4e66\u7684\u6709\u6548\u671f\uff0c\u5e76\u4e14\u4e0d\u5b9a\u671f\u8bf7\u6c42\u82f9\u679c\u670d\u52a1\u5668\u770b\u8bc1\u4e66\u662f\u5426\u88ab\u540a\u9500\uff0c\u82e5\u5df2\u8fc7\u671f\u6216\u88ab\u540a\u9500\uff0c\u5c31\u4f1a\u65e0\u6cd5\u542f\u52a8 App\u3002\u5bf9\u4e8e\u8fd9\u79cd\u52a9\u624b\u7684\u76d7\u7248\u5b89\u88c5\u624b\u6bb5\uff0c\u82f9\u679c\u60f3\u6253\u51fb\u53ea\u80fd\u4e00\u4e2a\u4e2a\u540a\u9500\u4f01\u4e1a\u8bc1\u4e66\uff0c\u5e76\u6ca1\u6709\u592a\u597d\u7684\u529e\u6cd5\u3002\n\u8fd9\u91cc\u6211\u7684\u7591\u95ee\u662f\uff0c\u82f9\u679c\u505a\u4e86\u90a3\u4e48\u591a\u7b7e\u540d\u548c\u9a8c\u8bc1\u673a\u5236\u53bb\u9650\u5236\u5728 iOS \u5b89\u88c5 App\uff0c\u4e3a\u4ec0\u4e48\u53c8\u8981\u51fa\u8fd9\u6837\u4e00\u4e2a\u9650\u5236\u5f88\u5c11\u7684\u65b9\u5f0f\u8ba9\u76d7\u7248\u94bb\u7a7a\u5b50\u5462\uff1f\u82e5\u771f\u7684\u662f\u4f01\u4e1a\u7528\u9014\u4e0d\u9002\u5408\u4e0a AppStore\uff0c\u4e5f\u5b8c\u5168\u53ef\u4ee5\u5728 AppStore \u5f00\u8f9f\u4e00\u4e2a\u5c0f\u7684\u79c1\u5bc6\u7248\u5757\uff0c\u8fd8\u662f\u901a\u8fc7 AppStore \u53bb\u5b89\u88c5\uff0c\u5c31\u4e0d\u4f1a\u6709\u8fd9\u4e2a\u95ee\u9898\u4e86\u3002\nhttps://wereadteam.github.io/2017/03/13/Signature/#AppStore-%E5%8A%A0%E5%AF%86AppStore \u52a0\u5bc6\n\u53e6\u4e00\u4e2a\u95ee\u9898\u662f\u6211\u4eec\u628a App \u4f20\u4e0a AppStore \u540e\uff0c\u82f9\u679c\u4f1a\u5bf9 App \u8fdb\u884c\u52a0\u5bc6\uff0c\u5bfc\u81f4 App \u4f53\u79ef\u589e\u5927\u4e0d\u5c11\uff0c\u8fd9\u4e2a\u52a0\u5bc6\u5b9e\u9645\u4e0a\u662f\u6ca1\u5375\u7528\u7684\uff0c\u53ea\u662f\u8ba9\u7834\u89e3\u7684\u4eba\u8981\u591a\u505a\u4e00\u4e2a\u6b65\u9aa4\uff0c\u8fd0\u884c App \u53bb\u5185\u5b58 dump \u51fa\u53ef\u6267\u884c\u6587\u4ef6\u800c\u5df2\uff0c\u65e0\u8bba\u600e\u6837\u52a0\u5bc6\uff0c\u90fd\u53ef\u4ee5\u7528\u8fd9\u79cd\u65b9\u5f0f\u62ff\u51fa\u52a0\u5bc6\u524d\u7684\u53ef\u6267\u884c\u6587\u4ef6\u3002\u6240\u4ee5\u4e3a\u4ec0\u4e48\u8981\u505a\u8fd9\u6837\u7684\u52a0\u5bc6\u5462\uff1f\u60f3\u4e0d\u5230\u6709\u4ec0\u4e48\u597d\u5904\u3002\nhttps://wereadteam.github.io/2017/03/13/Signature/#%E6%9C%AC%E5%9C%B0%E7%A7%81%E9%92%A5\u672c\u5730\u79c1\u94a5\n\u6211\u4eec\u770b\u5230\u524d\u9762\u8bf4\u7684\u7b7e\u540d\u6d41\u7a0b\u5f88\u7ed5\u5f88\u590d\u6742\uff0c\u7ecf\u5e38\u51fa\u73b0\u5404\u79cd\u95ee\u9898\uff0c\u50cf\u6709 Provisioning Profile \u6587\u4ef6\u4f46\u8bc1\u4e66\u53c8\u4e0d\u5bf9\uff0c\u672c\u5730\u6709\u516c\u94a5\u8bc1\u4e66\u6ca1\u5bf9\u5e94\u79c1\u94a5\u7b49\u60c5\u51b5\uff0c\u4e0d\u7406\u89e3\u539f\u7406\u7684\u60c5\u51b5\u4e0b\u4f1a\u88ab\u7ed5\u6655\uff0c\u6211\u7684\u7591\u95ee\u662f\uff0c\u8fd9\u91cc\u4e3a\u4ec0\u4e48\u4e0d\u80fd\u7b80\u5316\u5462\uff1f\u8fd8\u662f\u4ee5\u5f00\u53d1\u8bc1\u4e66\u4e3a\u4f8b\uff0c\u4e3a\u4ec0\u4e48\u4e00\u5b9a\u8981\u7528\u672c\u5730 Mac \u751f\u6210\u7684\u79c1\u94a5\u53bb\u7b7e\u540d\uff1f\u82f9\u679c\u8981\u7684\u53ea\u662f\u672c\u5730\u7b7e\u540d\uff0c\u79c1\u94a5\u4e0d\u4e00\u5b9a\u662f\u8981\u672c\u5730\u751f\u6210\u7684\uff0c\u82f9\u679c\u4e5f\u53ef\u4ee5\u81ea\u5df1\u751f\u6210\u4e00\u5bf9\u516c\u79c1\u94a5\u7ed9\u6211\u4eec\uff0c\u653e\u5728 Provisioning Profile \u91cc\uff0c\u6211\u4eec\u7528\u91cc\u9762\u7684\u79c1\u94a5\u53bb\u52a0\u5bc6\u5c31\u884c\u4e86\uff0c\u8fd9\u6837\u5c31\u4e0d\u4f1a\u6709 CertificateSigningRequest\n \u548c p12\n \u7684\u6982\u5ff5\uff0c\u8ddf\u672c\u5730 keychain \u6ca1\u6709\u5173\u7cfb\uff0c\u4e0d\u9700\u8981\u5173\u5fc3\u8bc1\u4e66\uff0c\u53ea\u8981\u6709 Provisioning Profile \u5c31\u80fd\u7b7e\u540d\uff0c\u6d41\u7a0b\u4f1a\u51cf\u5c11\uff0c\u6613\u7528\u6027\u4f1a\u63d0\u9ad8\u5f88\u591a\uff0c\u540c\u65f6\u82f9\u679c\u60f3\u8981\u7684\u63a7\u5236\u4e00\u70b9\u90fd\u4e0d\u4f1a\u5c11\uff0c\u4e5f\u6ca1\u6709\u4ec0\u4e48\u5b89\u5168\u95ee\u9898\uff0c\u4e3a\u4ec0\u4e48\u4e0d\u8fd9\u6837\u8bbe\u8ba1\u5462\uff1f\n\u80fd\u60f3\u5230\u7684\u4e00\u4e2a\u539f\u56e0\u662f Provisioning Profile \u5728\u975e AppStore \u5b89\u88c5\u65f6\u4f1a\u6253\u5305\u8fdb\u5b89\u88c5\u5305\uff0c\u7b2c\u4e09\u65b9\u62ff\u5230\u8fd9\u4e2a Provisioning Profile \u6587\u4ef6\u5c31\u80fd\u76f4\u63a5\u7528\u8d77\u6765\u7ed9\u4ed6\u81ea\u5df1\u7684 App \u7b7e\u540d\u4e86\u3002\u4f46\u8fd9\u79cd\u95ee\u9898\u4e5f\u633a\u597d\u89e3\u51b3\uff0c\u53ea\u9700\u8981\u6253\u5305\u65f6\u53bb\u6389\u6587\u4ef6\u91cc\u7684\u79c1\u94a5\u5c31\u884c\u4e86\uff0c\u6240\u4ee5\u4ecd\u4e0d\u660e\u767d\u4e3a\u4ec0\u4e48\u8fd9\u6837\u8bbe\u8ba1\u3002", "categories": [{"name": "posts", "slug": "posts", "permalink": "/category/posts/"}], "tags": [{"name": "\u7b7e\u540d", "slug": "\u7b7e\u540d", "permalink": "/tag/%E7%AD%BE%E5%90%8D/"}, {"name": "sign", "slug": "sign", "permalink": "/tag/sign/"}]}, {"title": "shell\u547d\u4ee4\u7528\u6b63\u5219\u6279\u91cf\u91cd\u547d\u540d\u6587\u4ef6", "date": "2020-11-14T00:00:00-00.00", "path": "/archives/shell%E5%91%BD%E4%BB%A4%E7%94%A8%E6%AD%A3%E5%88%99%E6%89%B9%E9%87%8F%E9%87%8D%E5%91%BD%E5%90%8D%E6%96%87%E4%BB%B6/", "text": "\u53c8\u662f\u7528shell\u6765\u64cd\u4f5c\u6587\u4ef6\u7684\u95ee\u9898.\u6211\u4e0b\u4e86\u8001\u53cb\u8bb0\u7684\u5168\u96c6, \u7ed3\u679c\u5728NAS\u91cc\u6b7b\u6d3b\u5339\u914d\u4e0d\u51fa3\u5b63\u4ee5\u540e\u7684\u5267\u96c6\u4fe1\u606f, \u56e0\u4e3a\u6253\u5305\u6765\u6e90\u76f8\u540c, \u4e00\u76f4\u6ca1\u6df1\u7a76, \u53ea\u5f53\u662f\u522e\u524a\u5de5\u5177\u505a\u5f97\u4e0d\u597d, \u4eca\u5929\u624d\u53d1\u73b0\u4ece\u7b2c4\u5b63\u5f00\u59cb, \u6240\u6709\u7684\u6587\u4ef6\u540d\u683c\u5f0f\u90fd\u9519\u4e86, \u5982:Friends.s10.06.2003.BDRip.1080p.Ukr.Eng.AC3.Hurtom.TNU.Tenax555.mkv\n\n\u4e2d\u7684s10.06\u5e94\u4e3as10.e06, \u90a3\u4e48\u6539\u5bf9\u4e0d\u5c31\u662f\u4e86\u4e48. \u53c8\u662f\u6279\u91cf\u4efb\u52a1\u554a, \u8fd9\u6b21\u7684\u9700\u6c42\u4ece\u4e0a\u6b21\u7684\u6279\u91cf\u79fb\u52a8\u6587\u4ef6\u53d8\u6210\u4e86\u6279\u91cf\u4fee\u6539\u6587\u4ef6\u540d.\u4e8b\u5b9e\u4e0amv\u5176\u5b9e\u4e5f\u662f\u91cd\u547d\u540d\u5de5\u5177, \u5948\u4f55\u8fd9\u6b21\u7684\u89c4\u5219\u7a0d\u5fae\u590d\u6742, \u6211\u8fd8\u662f\u60f3\u8981\u7528\u6b63\u5219\u6765\u5339\u914d, \u4e00\u756a\u641c\u7d22, \u627e\u5230\u4e86rename\u8fd9\u4e2a\u5de5\u5177. \u7f51\u4e0a\u7684\u76f8\u5173\u6587\u7ae0\u4f3c\u4e4e\u6709\u70b9\u65e7, \u8ddf\u4eca\u5929\u6211Homebrew\u4e0b\u6765\u7684\u7684\u6587\u6863\u6709\u51fa\u5165, \u56e0\u6b64\u4e5f\u5c31\u6ca1\u770b\u7f51\u4e0a\u7684\u6587\u6863\u4e86, \u5efa\u8bae\u81ea\u5df1\u770b\u4e00\u4e0b\u5b98\u65b9\u6587\u6863, \u8fd8\u81ea\u5e26\u4e86tutorial\u548ccookbook, \u5f88\u826f\u5fc3\u554a, \u770b\u5b8c\u57fa\u672c\u81ea\u5df1\u5c31\u4f1a\u4e86.\u65b0\u7248\u7684rename\u5de5\u5177\u628a\u9009\u9879\u5206\u4e3a\u4e86switch\u548ctransforms, \u81ea\u7136\u6587\u6863\u4e5f\u5c31\u6210\u4e86:\nrename [switches|transforms] [files]\n\n\u65e2\u7136\u90fd\u63a8\u8350\u4f60\u4eec\u770b\u6587\u6863\u4e86, \u6211\u4e86\u4e0d\u4e00\u4e00\u4ecb\u7ecd\u4e86, \u6311\u51e0\u4e2a\u9700\u8981\u6ce8\u610f\u7684\u8bb2, \u6700\u540e\u518d\u63ed\u6653\u6211\u662f\u5982\u4f55\u5b8c\u6210\u8fd9\u6b21\u6279\u91cf\u91cd\u547d\u540d\u7684.##debug\n-n\u8fd9\u4e2aswitch\u53ef\u4ee5\u663e\u793a\u672c\u6b21\u547d\u4ee4\u5c06\u88ab\u5982\u4f55\u6267\u884c, \u800c\u4e0d\u771f\u6b63\u6267\u884c, \u8fd9\u975e\u5e38\u50cf\u4e0a\u4e00\u7bc7\u6587\u7ae0\u91cc\u4ecb\u7ecdxargs\u65f6\u7684-p, \u5728rename\u7684\u8bed\u5883\u91cc, \u5b83\u53ebdry-run. \u603b\u4e4b\u6211\u5c31\u662f\u901a\u8fc7\u8fd9\u4e2a\u5b66\u4e60\u7684, \u975e\u5e38\u6709\u7528.##\u66ff\u6362\n\u65b0\u7248rename\u52a0\u4e86\u5f88\u591a\u50cf\u53bb\u5934\u554a, \u53bb\u5c3e\u554a, \u52a0\u524d\u7f00\u554a, \u52a0\u5c3e\u7f00\u554a, \u53bb\u7a7a\u767d\u554a, \u53d8\u5927\u5c0f\u5199\u554a\u7b49\u7b49\u7684\u9009\u9879, \u8fd9\u4e2a\u53bb\u8bfb\u6587\u6863, \u6267\u884c\u4e00\u4e9b\u7b80\u5355\u4e14\u660e\u786e\u7684\u4efb\u52a1\u7528\u8fd9\u4e9bswitch\u548ctransforms\u6bd4\u81ea\u5df1\u53bb\u6784\u5efa\u6b63\u5219\u8981\u6765\u7684\u7b80\u5355, \u8fd9\u4e5f\u662f\u4f5c\u8005\u628a\u8fd9\u4e9b\u5c0f\u529f\u80fd\u5168\u63d0\u53d6\u51fa\u6765\u7684\u76ee\u7684\u5427. \u7531\u4e8e\u6211\u7684\u76ee\u6807\u662f\u6b63\u5219, \u7740\u91cd\u5173\u6ce8-s\u8fd9\u4e2atransform.\u5047\u8bbe\u6709\u6587\u4ef6abc123.mp3\u548cabc456.mp3, \u4ee5\u4e0b\u547d\u4ee4\u5747\u52a0\u4e86-n, \u4ee5\u4fbf\u76f4\u63a5\u770b\u8f93\u51fa#\u66ff\u6362\n$rename -n -s abc mmm *\n$rename -n &#39;s/abc/mmm/&#39; *\n#\u4ee5\u4e0a\u4e24\u53e5\u53ea\u662f\u5c55\u793a\u4e24\u79cd\u5199\u6cd5/\u683c\u5f0f\n#\u8f93\u51fa:\n&#39;abc123.mp3&#39; would be renamed to &#39;mmm123.mp3&#39;\n&#39;abc456.mp3&#39; would be renamed to &#39;mmm456.mp3&#39;\n\n#\u52a0\u524d\u7f00\n$rename -n &#39;s/^/album_/&#39; *.mp3\n#\u8f93\u51fa:\n&#39;abc123.mp3&#39; would be renamed to &#39;album_abc123.mp3&#39;\n&#39;abc456.mp3&#39; would be renamed to &#39;album_abc456.mp3&#39;\n\n#\u6f14\u793a\u4e00\u6b21\u9519\u8bef\u7684\u52a0\u524d\u7f00\u65b9\u5f0f\n$rename -n &#39;s/^/album_^/&#39; *.mp3\n#\u8f93\u51fa:\n&#39;abc123.mp3&#39; would be renamed to &#39;album_^abc123.mp3&#39;\n&#39;abc456.mp3&#39; would be renamed to &#39;album_^abc456.mp3&#39;\n#\u770b\u5230\u4e86\u5427? \u76f4\u63a5\u628a^\u7ed9\u66ff\u6362\u4e86, \u800c\u4e0d\u662f\u63d2\u5165\n\n#\u53bb\u540e\u7f00\n$rename -n &#39;s/\\.mp3//&#39; *.mp3\n#\u8f93\u51fa:\n&#39;abc123.mp3&#39; would be renamed to &#39;abc123&#39;\n&#39;abc456.mp3&#39; would be renamed to &#39;abc456&#39;\n\n#\u5206\u7ec4\n$touch AA.S01.12.mkv AA.S01.13.mkv AA.S01.14.mkv\n#\u8fd9\u6b21\u628a\u6587\u4ef6\u641e\u590d\u6742\u70b9, \u5047\u5b9a\u6709\u5982\u4e0a\u4e09\u4e2a\u6587\u4ef6, \u6211\u4eec\u8981\u628a12\u6539\u4e3aE12, \u4ee5\u6b64\u7c7b\u63a8\n$rename -n &#39;s/\\.(\\d{2})\\./\\.E$1\\./&#39; *.mkv\n#\u8f93\u51fa:\n&#39;AA.S01.12.mkv&#39; would be renamed to &#39;AA.S01.E12.mkv&#39;\n&#39;AA.S01.13.mkv&#39; would be renamed to &#39;AA.S01.E13.mkv&#39;\n&#39;AA.S01.14.mkv&#39; would be renamed to &#39;AA.S01.E14.mkv&#39;\n\n\u770b\u5230\u6700\u540e\u4e00\u4e2a\u4f8b\u5b50\u662f\u4e0d\u662f\u53d1\u73b0\u6211\u7684\u76ee\u6807\u5df2\u7ecf\u8fbe\u5230\u4e86? \u6211\u6ca1\u6709\u6df1\u5165\u7814\u7a76, \u53ea\u662f\u7b80\u5355\u7684\u6839\u636e\u5b9e\u9645\u60c5\u51b5\u628a\u524d\u540e\u5e26\u70b9\u7b26\u53f7, \u4e2d\u95f4\u5939\u4e86\u4e24\u4f4d\u6570\u5b57\u7684\u63d0\u53d6\u4e86\u51fa\u6765, \u52a0\u4e86\u5b57\u6bcdE, \u53ef\u80fd\u8fd8\u6709\u66f4\u7b80\u4fbf\u7684\u529e\u6cd5, \u4f46\u6211\u770b\u5230\u8f93\u51fa, \u5c31\u6025\u6025\u6d4b\u8bd5\u53bb\u4e86, \u679c\u7136\u7b49\u5f85\u6570\u79d2\u540e, \u6587\u4ef6\u5168\u90e8\u91cd\u547d\u540d\u6210\u529f.##\u9012\u5f52\n\u5f53\u7136\u6ca1\u90a3\u4e48\u7b80\u5355, \u56e0\u4e3a4-10\u5b63\u7684\u5185\u5bb9\u5728\u5404\u81ea\u7684\u6587\u4ef6\u5939\u91cc, \u5982\u4f55\u9012\u5f52\u5462? \u770b\u8fc7\u6211\u4e0a\u4e00\u7bc7\u6587\u7ae0\u7684\u4eba\u53ef\u80fd\u4f1a\u60f3\u5230\u6211\u53c8\u53bb\u501f\u7ba1\u9053\u548cxargs\u4e86\u5427? \u8fd9\u6b21\u5f97\u76ca\u4e8e\u6211\u63d0\u524d\u8bfb\u4e86\u6587\u6863, \u91cc\u9762\u4e5f\u6709\u4ecb\u7ecd, \u5b83\u8fd8\u80fd\u76f4\u63a5\u5e94\u7528find\u8fc7\u6765\u7684\u7ed3\u679c, \u8fd8\u4e0d\u9700\u8981\u50cfxargs\u4e00\u6837\u7ed9\u4e2a\u5360\u4f4d, \u5e94\u8be5\u662f\u4f5c\u8005\u76f4\u63a5\u505a\u7684\u652f\u6301, \u6240\u4ee5\u6211\u7684\u6700\u7ec8\u547d\u4ee4\u662f\u8fd9\u6837\u7684:$find . -name &quot;*.mkv&quot; -print0 | rename -n &#39;s/\\.(\\d{2})\\./\\.e$1\\./&#39;\n\n\n\u662f\u7684, \u80af\u5b9a\u8981\u5148-n\u770b\u770b\u6709\u6ca1\u6709\u64cd\u4f5c\u5931\u8bef, \u6587\u4ef6\u51fa\u95ee\u9898\u5c31\u9ebb\u70e6\u4e86(\u5efa\u8bae\u5148\u590d\u5236\u4e00\u4efd).\n\u6b64\u5916, \u56e0\u4e3a\u7528\u7684\u662f\u7ba1\u9053, \u6240\u4ee5\u6700\u540e\u7684[files]\u53c2\u6570\u5c31\u4e0d\u9700\u8981\u4e86, \u6211\u4e4b\u524d\u5c31\u662f\u758f\u5ffd\u4e86, \u590d\u5236\u8fc7\u6765\u65f6\u7559\u7740\u524d\u9762\u505a\u6d4b\u8bd5\u7684*.mkv\u5c3e\u5df4, \u770b\u5230\u51fa\u9519\u63d0\u793a\u624d\u610f\u8bc6\u5230.\n2021/4/22\n\u6211\u53c8\u6765\u6279\u91cf\u91cd\u547d\u540d\u7684\u65f6\u5019\uff0c\u53d1\u73b0-print0\u52a0\u4e0a\u53cd\u800c\u4e0d\u884c\u4e86\uff0c\u4e5f\u5c31\u662f\u8bf4\u628a\u5e26\u4e86\u6362\u884c\u7b26\u7684find\u8f93\u51fa\u76f4\u63a5\u9001\u5230rename \u91cc\u9762\uff0c\u53cd\u800c\u80fd\u6210\u529f\uff0c\u62fc\u6210\u4e00\u884c\u9001\u8fdb\u53bb\u7684\u4e0d\u884c\uff0c\u4e0d\u77e5\u9053\u4e0a\u6b21\u662f\u600e\u4e48\u6210\u529f\u7684\u3002\nso far so good.##\u5410\u69fd\n\u7b80\u4e66\u7684\u4ee3\u7801\u5757, \u9884\u89c8\u91cc\u5f88\u597d\u770b, \u53d1\u5e03\u51fa\u53bb\u5343\u5947\u767e\u602a, \u662f\u4ec0\u4e48\u9b3c, \u4e3a\u4e86\u7ed9\u4ee3\u7801\u7740\u8272, \u6211\u4e0d\u5f97\u4e0d\u5728\u4ee3\u7801\u8bed\u8a00\u6807\u8bc6\u4e0a\u4e71\u5199\u4e00\u901a(\u53cd\u6b63\u5199bash\u662f\u4e0d\u7740\u8272\u7684)\nBonus\n\u4e0d\u5c0f\u5fc3\u770b\u5230\u5173\u4e8emv\u7684\u8fd9\u4e2a\u6280\u5de7, \u5982\u679c\u6539\u52a8\u7684\u53ea\u662f\u6587\u4ef6\u540d\u7684\u4e00\u5c0f\u90e8\u5206, \u6bd4\u5982\u572810\u524d\u9762\u52a0\u4e2ae\u53d8\u6210e10, \u8fd9\u4e48\u505a\u5c31\u53ef\u4ee5\u4e86mv Friends.s06.{,e}10.1080p.x265.mkv\n\n\u800c\u4e0d\u9700\u8981mv Friends.s06.10.1080p.x265.mkv Friends.s06.e10.1080p.x265.mkv\n\n\u539f\u6587\u91cc\u9762\u6709\u4e24\u4e2a\u4f8b\u5b50, \u4e00\u76ee\u4e86\u7136mv foo-bar-{baz,quux}.txt\nmv foo-bar{,-baz}.txt\n\n\u4ee5\u4e0a\u663e\u793a\u7684\u662f\u66f4\u6539\u548c\u6dfb\u52a0, \u663e\u7136,\u4f60\u4e5f\u53ef\u4ee5\u731c\u5230\u5220\u9664\u7684\u7528\u6cd5, \u770b\u8d77\u6765\u8ddfrename\u7528\u6cd5\u7c7b\u4f3cmv foo-bar{-baz,}.txt\n\n\u5f53\u7136\u8fd9\u4e2a\u8d34\u5b50\u6709\u5f88\u5927\u7684\u4e89\u8bba, \u611f\u5174\u8da3\u53ef\u4ee5\u770b\u770b.", "categories": [{"name": "posts", "slug": "posts", "permalink": "/category/posts/"}], "tags": [{"name": "shell", "slug": "shell", "permalink": "/tag/shell/"}, {"name": "rename", "slug": "rename", "permalink": "/tag/rename/"}]}, {"title": "ES6\u4e2dgenerator\u4f20\u53c2\u4e0e\u8fd4\u56de\u503c", "date": "2020-11-13T00:00:00-00.00", "path": "/archives/ES6%E4%B8%ADgenerator%E4%BC%A0%E5%8F%82%E4%B8%8E%E8%BF%94%E5%9B%9E%E5%80%BC/", "text": "\u5148\u770b\u4e24\u4e2a\u4f8b\u5b50,1,\nfunction* f() {\n  for(var i=0; true; i++) {\n    var reset = yield i;\n    if(reset) { i = -1; }\n  }\n}\n\nvar g = f();\n\ndocument.write(g.next().value) // { value: 0, done: false }\ndocument.write(g.next().value) // { value: 1, done: false }\ndocument.write(g.next(true).value) // { value: 0, done: false }\n\n2,\nfunction* gen(x){\n  try {\n    var y = yield x + 2;\n  } catch (e){ \n    document.write(e);\n  }\n  return y;\n}\n\nvar g = gen(1);\ng.next();\ng.throw\uff08'\u51fa\u9519\u4e86'\uff09;\n\n\u6709\u4ec0\u4e48\u533a\u522b?\n\u7b2c\u4e00\u4e2a\u91cc\u4f20\u5165\u4e86\u4e00\u4e2atrue\u53c2\u6570, \u7b2c\u4e8c\u4e2a\u91cc\u4f20\u5165\u4e86\u4e00\u4e2a1\u53c2\u6570, \u76ee\u7684\u90fd\u662f\u671f\u671b\u4f20\u9012\u7ed9generator.\n\u4f46\u4f8b\u4e00\u6f14\u793a\u7684\u53c2\u6570, \u4f20\u8fc7\u53bb\u662f\u4f20\u7ed9\u4e86yield\u8bed\u53e5\u672c\u8eab\u7684\u8fd4\u56de\u503c, \u5373reset, \u4e5f\u5c31\u662f\u8bf4, \u5982\u679c\u4f60\u6ca1\u6709\u4f20\u53c2, \u6bcf\u4e00\u6b21next\u65b9\u6cd5, reset\u83b7\u53d6\u7684\u7ed3\u679c\u90fd\u662fundefined\n\u4f8b\u4e8c\u4e2d, \u65b9\u6cd5\u672c\u8eab\u5c31\u6709\u5165\u53c2, \u6240\u4ee5\u5343\u4e07\u4e0d\u8981\u641e\u9519\u4e86, \u8fd9\u79cd\u5165\u53c2\u7b49\u4e8e\u662f\u4e00\u4e2a\u79cd\u5b50, \u6240\u4ee5\u53ea\u9700\u8981\u5728\u5b9e\u4f8b\u5316\u8fd9\u4e2a\u751f\u6210\u5668\u7684\u65f6\u5019\u624d\u9700\u8981\u4f20.\u533a\u522b\u5c31\u5728\u662f\u5728\u751f\u6210\u5668\u91cc\u4f20, \u8fd8\u662f\u5728\u751f\u6210\u5668\u7684next\u65b9\u6cd5\u91cc\u4f20. \u524d\u8005\u662f\u7ed9\u751f\u6210\u5668\u8d4b\u79cd\u5b50\u503c, \u540e\u8005\u662f\u7ed9\u6bcf\u4e2ayield\u8d4b\u8fd4\u56de\u503c", "categories": [{"name": "posts", "slug": "posts", "permalink": "/category/posts/"}], "tags": [{"name": "es6", "slug": "es6", "permalink": "/tag/es6/"}, {"name": "generator", "slug": "generator", "permalink": "/tag/generator/"}]}, {"title": "SwiftUI\u7684ViewModifier\u548cAnimation\u5b66\u4e60\u7b14\u8bb0", "date": "2020-10-17T00:00:00-00.00", "path": "/archives/SwiftUI%E7%9A%84ViewModifier%E5%92%8CAnimation%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/", "text": "\u6211\u4eec\u901a\u8fc7\u8fd9\u7bc7\u6587\u7ae0\u7ec3\u4e60\u5982\u4e0b\u51e0\u4e2a\u77e5\u8bc6\u70b9\uff0c\u501f\u7528\u7684\u662f\u65af\u5766\u798fCS193p\u7684\u8bfe\u7a0b\u91cc\u7684demo\uff0c\u4f46\u662f\u4ee3\u7801\u662f\u6211\u5199\u7684\uff0c\u4e5f\u5c31\u662f\u5bf9\u7740\u6700\u7ec8\u7684\u6548\u679c\u5199\u51fa\u6211\u7684\u5b9e\u73b0\u7684\u610f\u601dViewModifier\n\u9996\u5148\uff0c\u6211\u4eec\u7684\u5361\u7247\u5206\u4e3a\u6b63\u9762\u548c\u80cc\u9762\uff0c\u80cc\u9762\u662f\u7eaf\u8272\u5f88\u7b80\u5355\uff0c\u6b63\u9762\u6709\u4e00\u4e2a\u5706\u73af\uff0c\u548c\u4e00\u5f20\u56fe\u7247\uff08\u5b9e\u9645\u662femoji\uff0c\u4e5f\u5c31\u662fString)\uff0c\u6211\u4eec\u7528ZStack\u5e03\u5c40\u597d\u540e\u5373\u53ef\uff1aZStack {\n            Group {\n                RoundedRectangle(cornerRadius: 10.0).fill(Color.white)\n                RoundedRectangle(cornerRadius: 10.0).stroke(lineWidth: 3.0)\n    \t\t\t\tCountDownCircle()  // \u5361\u7247\u5185\u5bb91\n    \t\t\t\tText(card.content) // \u5361\u7247\u5185\u5bb92\n            }.opacity(isFaceUp ? 1.0 : 0.0)\n                RoundedRectangle(cornerRadius: 10.0)\n                    .opacity(isFaceUp ? 0.0 : 1.0)\n        }\n\n\u6240\u4ee5\u5176\u5b9e\u5361\u7247\u5185\u5bb9\u5c31\u662femoji\u548c\u5706\u73af\uff0c\u56e0\u6b64\u6211\u4eec\u5c31\u60f3\uff0c\u53ef\u4e0d\u53ef\u4ee5\u5728\u6211\u7ed8\u5236\u597d\u8fd9\u4e24\u4e2a\u5185\u5bb9\u540e\uff0c\u8c03\u7528\u4e00\u4e2a\u901a\u7528\u65b9\u6cd5\u5c31\u80fd\u628a\u5b83\u53d8\u6210\u4e00\u5f20\u5361\u7247\u5462\uff1fViewModifier\u5c31\u662f\u5e72\u8fd9\u4e2a\u7684\uff0c\u4f7f\u7528\u8bed\u6cd5\u5982\u540c\uff1amyView.modifier(Cardify(isFaceUp:))\n\u63d0\u53d6\u51fa\u6765\u7684modifier\u5982\u4e0b\uff1astruct Cardify: ViewModifier {\n    var isFaceUp: Bool\n\n    func body(content: Content) -&gt; some View {\n        ZStack {\n            Group {\n                RoundedRectangle(cornerRadius: 10.0).fill(Color.white)\n                RoundedRectangle(cornerRadius: 10.0).stroke(lineWidth: 3.0)\n                content  // \u6b63\u9762\u5361\u7247\u5185\u5bb9\n            }.opacity(isFaceUp ? 1.0 : 0.0)\n            RoundedRectangle(cornerRadius: 10.0)\n            .opacity(isFaceUp ? 0.0 : 1.0) // \u53cd\u9762\u5361\u7247\u5185\u5bb9\n    }\n}\n\nExtension\n\u66f4\u8fdb\u4e00\u6b65\uff0cSwiftUI\u4e0d\u662f\u6709\u5f88\u591aView.font(..).opacity(...)\u7684\u7528\u6cd5\u4e48\uff0c\u5176\u4e2d\u7684font\uff0copacity\u5c31\u662f\u8fd9\u4e9bmodifier\uff0c\u7136\u540e\u6269\u5c55\uff08extension\uff09\u7ed9View\u7684\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\uff1aextension View {\n    func cardify(isFaceUp: Bool) -&gt; some View {\n        self.modifier(Cardify(isFaceUp: isFaceUp))\n    }\n}\n\n\u5f88\u7b80\u5355\u7684\u8bed\u6cd5\uff0c\u8fd9\u6837\u6700\u7ec8myView.cardify(isFaceUp:)\u5c31\u80fd\u628a\u5f53\u524d\u5185\u5bb9\u7ed9\u201c\u5361\u7247\u5316\u201d\u4e86Animation\n\u60f3\u70b9\u51fb\u5361\u7247\u7ffb\u9762\u7684\u65f6\u5019\u6709\u4e00\u4e2a\u7ffb\u9875\u6548\u679c\uff0c\u6709\u4e00\u4e2a\u539f\u751f\u7684rotation3DEffect\u65b9\u6cd5\uff1amyView.rotation3DEffect(\n            .degrees(animatableData),\n            axis: (0,1,0)  // \u6cbfY\u8f74\u7ffb\u8f6c\uff0c\u5373\u6c34\u5e73\u7ffb\u8f6c\n            )\n\n\u5b9e\u9645\u6548\u679c\u5982\u4e0b\uff1a\n\u52a8\u753b\u52a0\u957f\u4e86\uff0c\u6211\u4eec\u80fd\u770b\u6e05\u5361\u7247\u867d\u7136\u6709\u4e86\u7ffb\u9762\u7684\u52a8\u9762\uff0c\u4f46\u662f\u5728\u5f00\u59cb\u52a8\u753b\u7684\u4e00\u77ac\u95f4\uff0c\u5361\u7247\u7684\u6b63\u9762\u5c31\u663e\u793a\u51fa\u6765\u4e86\uff0c\u6211\u4eec\u6765\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u6240\u4ee5\u6211\u8fd9\u91cc\u5e76\u4e0d\u662f\u7cfb\u7edf\u8bb2\u89e3\u52a8\u753b\uff0c\u800c\u662f\u5728\u5bf9\u89e3\u51b3\u95ee\u9898\u7684\u601d\u8def\u505a\u4e2a\u7b14\u8bb0\u3002\n\u9898\u5916\u8bdd\uff0c\u6211\u89c9\u5f97SwiftUI\u548cFlutter\u8bde\u751f\u65f6\u4ee3\u76f8\u540c\uff0c\u5f88\u591a\u7406\u5ff5\u4e5f\u9a71\u540c\uff0c\u5728\u52a8\u753b\u65b9\u9762\uff0c\u4e5f\u662f\u653e\u5f03\u4e86\u4ee5\u524d\u8981\u4e48\u4ece\u5934\u753b\u8d77\uff0c\u8981\u4e48\u7528\u5c01\u88c5\u5f97\u5f88\u597d\u7684\u6709\u9650\u51e0\u4e2a\u52a8\u753b\u7684\u601d\u8def\uff0c\u57fa\u672c\u4e0a\u8ba9\u4f60\u80fd\u7528\u81ea\u7ed8+\u63d2\u503c\u7684\u65b9\u5f0f\u6765\u81ea\u5df1\u63a7\u5236\u52a8\u753b\uff08\u6709\u70b9\u7c7b\u4f3c\u5173\u952e\u5e27\uff0c\u4f46\u5173\u952e\u5e27\u7684\u5e27\u4e0e\u5e27\u4e4b\u95f4\u4e5f\u662f\u81ea\u52a8\u7684\uff09\uff0c\u800c\u73b0\u5728\u4f60\u53ef\u4ee5\u5b8c\u5168\u5bf9\u4e00\u4e2a\u8fc7\u7a0b\u8fdb\u884cLinear interpolation\uff0c\u6765\u63a7\u5236\u52a8\u753b\u8fc7\u7a0b\uff08Flutter\u4e2d\u7684lerp\u51fd\u6570\u5c31\u662f\u5e72\u8fd9\u4e2a\u7684\uff0c\u672c\u8282\u4e5f\u6709SwiftUI\u7684\u7c7b\u4f3c\u5b9e\u73b0\uff09\u3002\n\u6bd4\u5982\u8fd9\u4e2a\u7ffb\u8f6c\uff0cObjective-C\u91cc\u76f4\u63a5\u5c31\u7ed9\u4f60\u5b9e\u73b0\u597d\u4e86\uff0c\u5728SwiftUI\u91cc\uff0c\u7ed9\u7684\u662f\u4e00\u4e2a\u6700\u57fa\u672c\u7684\u51e0\u4f55\u53d8\u6362\uff0c\u81f3\u4e8e\u8fd9\u4e0a\u9762\u7684\u6548\u679c\uff0c\u5c31\u8981\u4f60\u81ea\u5df1\u5b9e\u73b0\u4e86\u3002\u6211\u8ba4\u4e3a\u8fd9\u662f\u5bf9\u7684\u3002\u6309\u8bfe\u7a0b\u91cc\u7684\u601d\u8def\uff0c\u5361\u7247\u8981\u4e48\u6b63\u9762\uff0c\u8981\u4e48\u53cd\u9762\uff0c\u662f\u7531isFaceUp\u51b3\u5b9a\u7684\uff0c\u52a0\u5165\u52a8\u753b\u540e\uff0c\u90a3\u9700\u8981\u8fd9\u4e2a\u5c5e\u6027\u5728\u8fdb\u884c\u4e8650%\uff08\u4e5f\u5c31\u662f90\u02da\uff09\u7684\u65f6\u5019\u624d\u6539\u503c\u800c\u8fd9\u4e2a\u5c5e\u6027\u662f\u5361\u7247\u7684\u5c5e\u6027\uff0c\u4e0e\u52a8\u753b\u65e0\u5173\uff0c\u6240\u4ee5\u7b2c\u4e00\u4e2a\u51b3\u7b56\uff0c\u5c31\u662f\u628a\u52a8\u753b\u51fd\u6570\u5199\u5230ViewModifier\u91cc\u9762\u53bb\uff0c\u4f20\u8fdb\u53bb\u7684\u662f\u5361\u7247\u7684\u5c5e\u6027\uff0c\u4f46\u662f\u5728modifier\u91cc\uff0c\u6211\u4eec\u628a\u5b83\u9002\u5f53\u8f6c\u5316\u6210\u5e94\u8be5\u8f6c\u7684\u89d2\u5ea6\uff080\u02da\u621690\u02da\uff09,\u8fd9\u6837\u5728modifier\u91cc\u9762\u4e0d\u7ba1\u505a\u4ec0\u4e48\u53d8\u5316\uff0c\u90fd\u4e0d\u5f71\u54cd\u5916\u90e8\u8c03\u7528\u8005\u81ea\u5df1\u7684\u8bed\u4e49\u4e86\uff08\u65b9\u6cd5\u548c\u53c2\u6570\u90fd\u6ca1\u53d8\uff09\uff1ainit(isFaceUp: Bool) {\n        // step1 \u8fd9\u91cc\u63a5\u7684\u662f\u5e03\u5c14\u503c\uff0c\u4f46\u662f\u6211\u4eec\u9700\u8981\u628a\u5b83\u8f6c\u6210\u5bf9\u5e94\u7684\u7ffb\u8f6c\u89d2\u5ea6\n        animatableData = isFaceUp ? 0 : 180\n    }\n\n    // \u91cd\u65b0\u5b9a\u4e49\u4e86isFaceUp\uff0c\u6539\u7531\u7ffb\u8f6c\u89d2\u5ea6\u7684\u5927\u5c0f\u51b3\u5b9a\n    // \u4ece\u800c\u89e3\u51b3isFaceUp\u5728\u7b2c\u4e00\u65f6\u95f4\u5c31\u6539\u53d8\u7684\u95ee\u9898\n    var isFaceUp: Bool {\n        // step3\n        animatableData &lt; 90\n    }\n\n\u5269\u4e0b\u7684\u5c31\u662f\u8bed\u6cd5\u4e86\uff0c\u6211\u4eec\u8981\u5b9e\u73b0\u4e00\u4e2aAnimatable\u7684\u534f\u8bae\uff0c\u4e0eViewModifier\u534f\u8bae\u5408\u5e76\u6210AnimatableModifier\uff0c\u5b83\u53ea\u6709\u4e00\u4e2a\u5c5e\u6027\uff0c\u7528\u6211\u7684\u8bdd\u6765\u8bf4\uff0c\u5c31\u662f\u524d\u9762\u63d0\u5230\u7684\u201c\u52a8\u753b\u63d2\u503c\u201d\uff0c\u6211\u4e00\u76f4\u7528\u8fd9\u4e00\u4e2a\u6982\u5ff5\u6765\u7406\u89e3\u8fd9\u4e9b\u65b0\u5e93\u91cc\u7684\u52a8\u753b\u539f\u7406\uff0c\u4f60\u4e5f\u53ef\u4ee5\u6709\u4f60\u7684\u7406\u89e3\u3002\u603b\u4e4b\uff0c\u5b83\u9700\u8981\u4f60\u6307\u5b9a\u4e00\u4e2a\u63d0\u4f9b\u63d2\u503c\u7684\u6765\u6e90\uff0c\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u8fd9\u4e2a\u6765\u6e90\u5c31\u662frotation3DEffect\u51fd\u6570\uff0c\u56e0\u4e3a\u5b83\u4f1a\u81ea\u52a8\u6267\u884c\u52a8\u753b\uff0c\u663e\u7136\u91cc\u9762\u7684\u201c\u89d2\u5ea6\u201d\u53c2\u6570\u662f\u4f1a\u81ea\u5df1\u53d8\u7684\uff0c\u6211\u4eec\u8981\u7684\u5c31\u662f\u6355\u6349\u8fd9\u4e2a\u201c\u89d2\u5ea6\u201d\uff0c\u7ec4\u5408\u8d77\u6765\uff0c\u770b\u4ee3\u7801\uff1astruct Cardify: AnimatableModifier {\n    init(isFaceUp: Bool) {\n        // step1 \u628a\u53c2\u6570\u8f6c\u5316\u6210\u52a8\u753b\u63d2\u503c\u7684\uff08\u6700\u7ec8\uff09\u503c\n        animatableData = isFaceUp ? 0 : 180\n    }\n\n    var isFaceUp: Bool {\n        // step3 \u901a\u8fc7\u63d2\u503c\u6765\u53cd\u63a8\u6b63\u53cd\u9762\n        animatableData &lt; 90\n    }\n\n    // step0\n    // \u628a\u5199\u6b7b\u7684\u89d2\u5ea6\u53d8\u6210\u63d2\u503c\n    var animatableData: Double // \u8fd9\u4e2a\u7c7b\u578b\u662f\u81ea\u5b9a\u4e49\u7684\uff0c \u6211\u4eec\u8981\u7528\u5b83\u6765\u65cb\u8f6c\u89d2\u5ea6\uff0c\u6240\u4ee5\u662fdouble\n\n    func body(content: Content) -&gt; some View {\n        ZStack {\n            Group {\n                if isFaceUp {\n    \t\t\t\t\t// \u5361\u7247\u6b63\u9762\u4ee3\u7801                \n                } else {\n                \t   // \u5361\u7247\u53cd\u9762\u4ee3\u7801\n                }\n        // step2\n        // \u8bfe\u7a0b\u91cc\u662f\u6709\u989d\u5916\u7684\u89d2\u5ea6\u53c2\u6570\uff0c\u5e76\u4e14\u4e0eanimatableData\u8fdb\u884c\u4e86\u7ed1\u5b9a\n        // \u5176\u5b9e\u4e3a\u4e86\u6f14\u793a\u63d2\u503c\u7684\u4f5c\u7528\uff0c\u4e0d\u5305\u88c5\u66f4\u76f4\u89c2\n        .rotation3DEffect(\n            .degrees(animatableData),\n            axis: (0,1,0)\n            )\n    }\n}\n\n\u6548\u679c\u5982\u4e0b\uff0c\u5176\u5b9e\u5c31\u662f\u89e3\u51b3\u4e86\u5982\u4f55\u6355\u6349\u52a8\u753b\u8fdb\u5ea6\u7684\u95ee\u9898\uff0c\u4e5f\u5c31\u662fanimatableData\nAnimation2\n\u591a\u4e00\u4e2a\u4f8b\u5b50\uff0c\u8bfe\u7a0b\u91cc\u6bcf\u5f20\u5361\u7247\u7ffb\u5f00\u5c31\u4f1a\u5012\u8ba1\u65f6\uff0c\u539f\u672c\u662f\u4e00\u4e2a\u5927\u997c\uff0c\u6211\u6839\u636e\u6211\u7684\u559c\u597d\u6539\u6210\u4e86\u5706\u73af\uff08\u5176\u5b9e\u662f\u6211\u5b66\u6559\u7a0b\u7684\u4e60\u60ef\uff0c\u5c3d\u53ef\u80fd\u4e0d\u53bb\u505a\u8ddf\u6559\u7a0b\u4e00\u6837\u7684\u4e8b\uff0c\u907f\u514d\u601d\u7ef4\u60f0\u6027\uff09\u90a3\u4e48\u600e\u4e48\u8ba9\u8fdb\u5ea6\u6761\u52a8\u8d77\u6765\u5462\uff1f\u7ec8\u4e8e\u8bb2\u5230\u4e86\u600e\u4e48\u624b\u52a8\u8ba1\u7b97\u63d2\u503c\uff0c\u5e76\u628a\u8fd9\u7ec4\u503c\u63a8\u7ed9\u52a8\u753b\u5e93\u8ba9\u5b83\u52a8\u8d77\u6765\u7684\u8fc7\u7a0b\u4e86\u3002\u6709\u4e86\u4e0a\u4e00\u4e2a\u4f8b\u5b50\uff0c\u6211\u67e5\u770b\u4e86\u4e00\u4e2aShape\u7684\u5b9a\u4e49\uff0c\u539f\u751f\u5c31conform to protocol Animatable\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u76f4\u63a5\u6dfb\u52a0\u4e00\u4e2aAnimatedData\u8bd5\u8bd5\u3002var animatableData: Double   // degrees\n\n\n\u8fd9\u91cc\u8ddf\u4e0a\u4f8b\u6709\u4e00\u70b9\u533a\u522b\uff0c\u4e0a\u4e00\u4f8b\u52a8\u753b\u662f\u7cfb\u7edf\u5e93\u505a\u597d\u7684\uff0c\u6211\u4eec\u53ea\u662fcapture value\uff0c\u6240\u4ee5\u51e0\u4e4e\u53ea\u8981\u628a\u90a3\u4e2a\u53d8\u91cf\u6446\u5728\u90a3\uff0c\u522b\u5904\u9700\u8981\u7684\u65f6\u5019\u76f4\u63a5\u4f7f\u7528\u5c31\u53ef\u4ee5\u4e86\uff0c\u800c\u73b0\u5728\u6211\u4eec\u662f\u8981\u4e3b\u52a8\u66f4\u6539\u8fd9\u4e2adata\uff0c\u4ece\u800c\u5b9e\u73b0\u7ed8\u56fe\u7684\u4e0d\u65ad\u66f4\u65b0\uff0c\u6240\u4ee5\u7a0d\u5fae\u590d\u6742\u4e86\u4e9b\u3002\n\u8bfe\u7a0b\u91cc\u628a\u8d77\u70b9\u548c\u7ec8\u70b9\u90fd\u505a\u6210\u4e86\u52a8\u753b\u53c2\u6570\uff0c\u53ef\u80fd\u662f\u4e3a\u4e86\u6f14\u793aAnimatablePair\uff0c\u800c\u672c\u4f8b\u4e2d\u8d77\u70b9\u5176\u5b9e\u662f\u4e0d\u53d8\u7684\uff0c\u6240\u4ee5\u6211\u5b9e\u4e8b\u6c42\u662f\uff0c\u628a\u5b83\u7528\u6700\u7b80\u5355\u7684\u65b9\u6cd5\u6765\u5b9e\u73b0\uff0c\u540c\u65f6\uff0c\u653e\u5f03\u5bf9\u8c61\u5316\u601d\u7ef4\uff0c\u4f7f\u7528\u52a8\u753b\u63d2\u503c\u7684\u601d\u7ef4\uff0c\u4e0d\u53bb\u8003\u8651\u63d2\u503c\u4e0e\u539f\u6765\u7684\u7c7b\u7684\u5c5e\u6027\u6709\u4ec0\u4e48\u5173\u7cfb\uff0c\u76f4\u63a5\u628a\u63d2\u503c\u7528\u5728\u9700\u8981\u53d8\u5316\u7684\u4f4d\u7f6e\uff0c\u8fd9\u662f\u505a\u6559\u5b66\u7684\u8bdd\u6700\u76f4\u89c2\u7684\u65b9\u6848\u4e86\uff0c\u6309\u6211\u7684\u505a\u6cd5\uff0c\u4ee3\u7801\u51e0\u4e4e\u6ca1\u6709\u53d8\u5316\uff0c\u5c31\u591a\u4e86\u4e00\u884c\u548c\u6539\u4e86\u4e00\u884c\uff1astruct CountDownCircle: Shape {\n\n/* \n\u4ee5\u4e0b\u6ce8\u91ca\u6389\u7684\u662f\u6559\u7a0b\u7684\u7528\u6cd5\uff0c\u4fdd\u7559\u4e86data\u4e0eangle\u7684\u5173\u7cfb\n    var endAngle: Angle  //\n    var animatableData: Double {\n        get {\n            endAngle.degrees\n        }\n        set {\n            print(&quot;set: \\(newValue)&quot;)\n            endAngle = Angle.degrees(newValue)\n        }\n*/    \n    // \u6211\u76f4\u89c2\u5c55\u793a\u8fd9\u4e2a\u63d2\u503c\u7684\u7528\u6cd5\n    var animatableData: Double   // degrees\n\n    func path(in rect: CGRect) -&gt; Path {\n        var p = Path()\n        let center = CGPoint(x: rect.midX, y: rect.midY)\n        p.addArc(center: center,\n                 radius: (rect.width-10.0)/2.0,\n                 startAngle: Angle.degrees(0-90),\n                 endAngle: Angle.degrees(animatableData), //endAngle\uff08\u6559\u7a0b\u7528endAngle\uff09,\n                 clockwise: false)\n        return p\n    }\n}\n\n\u6539\u9020\u5f88\u7b80\u5355\uff0c\u5c31\u662f\u628a\u544a\u8bc9\u52a8\u753b\u5e93\u201c\u7ed3\u675f\u89d2\u5ea6\u201d\u662f\u4e00\u4e2a\u9700\u8981\u53d8\u52a8\u7684\u503c\u5c31\u597d\u4e86\uff0c\u6211\u4eec\u8c03\u7528\u7684\u65f6\u5019\u628a\u4e00\u4e2a\u80fd\u81ea\u5df1\u53d8\u5316\u7684\u503c\u9001\u5230\u8fd9\u4e2a\u53c2\u6570\u91cc\u5c31\u80fd\u52a8\u8d77\u6765\u3002\u5bf9\u8c03\u7528\u8005\u8fdb\u884c\u4e00\u70b9\u51c6\u5907\uff1a@State private var animatedData: Double = 0.0\n\n    private func startRemainingCountdown() {\n        animatedData = \u5269\u4f59\u8fdb\u5ea6\n        withAnimation(.linear(duration: \u5269\u4f59\u65f6\u95f4)) {\n            animatedData = 0.0\n        }\n    }\n\n\u8fd9\u91cc\u505a\u4e86\u4e24\u4ef6\u4e8b\uff1a\n@State\u7684\u7528\u6cd5\uff0cView\u662f\u65e0\u72b6\u6001\u7684\uff0c\u73b0\u5728\u6211\u4eec\u8981\u505a\u52a8\u753b\uff0c\u9700\u8981\u4fdd\u6301\u4e00\u4e9b\u72b6\u6001\uff0c\u8fd9\u91cc\u6211\u4eec\u4fdd\u6301\u4e00\u4e2a\u201c\u8fdb\u5ea6\u201d\u7684\u503c\n\u6dfb\u52a0\u4e86\u4e00\u4e2a\u89e6\u53d1\u52a8\u753b\u7684\u51fd\u6570\uff0c\u5c31\u662f\u8bbe\u7f6e\u52a8\u753b\u521d\u503c\uff0c\u8bbe\u7f6e\u7ec8\u6b62\u503c\uff0c\u7136\u540e\u901a\u8fc7withAnimation\u51fd\u6570\u8ba9\u5b83\u81ea\u52a8\u751f\u6210\u63d2\u503c\u5e8f\u5217\uff0c\u8fd9\u5c31\u662f\u6211\u524d\u9762\u63d0\u8fc7\u7684\u7c7b\u4f3c\u7684Flutter\u7684lerp\u65b9\u6cd5\uff0cSwiftUI\u4e2d\u6ca1\u627e\u5230\uff0c\u4f46\u662f\u53d8\u76f8\u63d0\u4f9b\u4e86\u7528\u7cfb\u7edf\u52a8\u753b\u6765\u63d0\u4f9b\u63d2\u503c\u7684\u505a\u6cd5\u3002\n\n\u4f7f\u7528\u5c31\u5f88\u7b80\u5355\u4e86\uff0c\u628a\u201c\u8fdb\u5ea6\u201d\u586b\u5230\u76f8\u5e94\u7684\u53c2\u6570\u4f4d\uff0c\u7136\u540e\u9009\u62e9\u4e00\u4e2a\u65f6\u673a\u89e6\u53d1\uff0c\u6211\u4eec\u8fd9\u91cc\u9009\u62e9\u7684\u662fonAppearCountDownCircle(animatableData: -animatedData*360-90)\n        .stroke(style: strokeStyle).opacity(0.4)\n        .onAppear {\n            startRemainingCountdown()\n        }\n\n\n\u9700\u8981\u6ce8\u610f\u7684\u662fwithAnimation\u8fc7\u7a0b\u4e2d\u5bf9\u503c\u7684\u66f4\u6539\u6211\u4eec\u5e76\u4e0d\u80fd\u663e\u5f0f\u6355\u6349\uff0c\u81f3\u5c11\u6211\u8bd5\u56fe\u628a\u5b83\u663e\u793a\u5728UI\u4e0a\u89c2\u5bdf\u5b83\u7684\u53d8\u5316\u662f\u5931\u8d25\u7684\uff0c\u76f4\u63a5\u663e\u793a\u4e86\u6700\u7ec8\u503c\uff0c\u800c\u5728\u63a5\u8fd9\u4e2a\u53d8\u5316\u7684\u63d2\u503c\u7684\u5e95\u5c42\u51fd\u6570\u91cc\uff0c\u6211\u80fd\u5728animatableData\u7684set\u65b9\u6cd5\u91cc\u770b\u5230\u786e\u5b9e\u8bbe\u7f6e\u4e86\u65e0\u6570\u7684\u63d2\u503c\uff0c\u6682\u65f6\u6ca1\u6709\u7406\u89e3withAnimation\u771f\u7684\u6709\u6709\u6ca1\u6709\u76f4\u63a5\u5bf9\u4e24\u4e2a\u6570\u5b57\u76f4\u63a5\u751f\u6210\u4e00\u7cfb\u5217\u4e2d\u95f4\u503c\n\u6548\u679c\u5982\u4e0b\uff1a\n\u540e\u8bb0\n\u52a8\u753b\u6211\u4e4b\u524d\u5199\u8fc7\u4e00\u7bc7\uff1a\u7528CALayer\u7ed8\u56fe,\u6dfb\u52a0\u52a8\u753b\u548c\u6e10\u53d8\uff0c\u5f88\u660e\u663e\u53ef\u4ee5\u770b\u5230\uff0c\u4ee5\u524d\u7684\u5199\u6cd5\u4ecd\u7136\u662f\u9ed1\u5323\u5b50\uff0c\u5373\u544a\u8bc9\u52a8\u753b\u5e93\uff0c\u8bf7\u7ed9\u6211\u52a8\u753b\uff0c\u52a8\u753b\u7684\u8981\u6c42\u662fblablabla\uff0c\u800c\u73b0\u5728\u90fd\u8d70\u4e86\u63d2\u503c\u7684\u8def\u7ebf\uff0c\u5373\u628a\u4e00\u7cfb\u5217\u503c\u544a\u8bc9\u4f60\uff0c\u4f60\u6309\u7167\u6bcf\u4e2a\u503c\u76f4\u63a5\u7ed8\u56fe\u5c31\u662f\u4e86\uff0c\u7ed8\u6210\u5565\u6837\u6211\u81ea\u5df1\u8d1f\u8d23\u3002\u8fd9\u5c31\u662f\u6211\u8fd9\u7bc7\u6587\u7ae0\u53cd\u590d\u5f3a\u8c03\u7684\u601d\u8def\u7684\u53d8\u5316\uff0c\u6211\u559c\u6b22\u8fd9\u79cd\u601d\u8def\u3002", "categories": [{"name": "posts", "slug": "posts", "permalink": "/category/posts/"}], "tags": [{"name": "swiftui", "slug": "swiftui", "permalink": "/tag/swiftui/"}, {"name": "viewmodifier", "slug": "viewmodifier", "permalink": "/tag/viewmodifier/"}, {"name": "animation", "slug": "animation", "permalink": "/tag/animation/"}]}, {"title": "\u4ece\u67e5\u627e\u6587\u4ef6\u5e76\u79fb\u52a8\u7684shell\u547d\u4ee4\u8bf4\u5f00\u53bb", "date": "2020-10-13T00:00:00-00.00", "path": "/archives/%E4%BB%8E%E6%9F%A5%E6%89%BE%E6%96%87%E4%BB%B6%E5%B9%B6%E7%A7%BB%E5%8A%A8%E7%9A%84shell%E5%91%BD%E4%BB%A4%E8%AF%B4%E5%BC%80%E5%8E%BB/", "text": "\u4e00\u4e2a\u4e0d\u80fd\u66f4\u5e38\u89c1\u7684\u9700\u6c42: \u4ece\u4e00\u5927\u5806\u4e0b\u8f7d\u76ee\u5f55(\u6216\u522b\u7684\u76ee\u5f55)\u91cc, \u67e5\u627e\u6307\u5b9a\u7684\u6587\u4ef6, \u5e76\u79fb\u52a8/\u590d\u5236\u5230\u6307\u5b9a\u7684\u6587\u4ef6\u5939, \u5982\u679c\u7528\u9f20\u6807\u70b9\u5f00\u4e00\u4e2a\u4e2a\u7684\u6587\u4ef6\u5939, \u8fd8\u6709\u6587\u4ef6\u5939\u91cc\u7684\u6587\u4ef6\u5939, \u4f30\u8ba1\u8981\u7d2f\u6b7b, \u5f53\u7136, \u5373\u4f7f\u81ea\u5df1\u4e0d\u4f1a, \u4e5f\u5f88\u5bb9\u6613\u67e5\u5230\u4e24\u4e2ashell\u547d\u4ee4:\nfind path_A -name &quot;*AAA*&quot; -print0 | xargs -0 -I {} mv {} path_B\nfind path_A -maxdepth 1 -name &quot;*AAA*&quot; -exec mv {} path_B \\; \n\n\u90fd\u80fd\u8fbe\u5230\u76ee\u7684, \u7b2c\u4e8c\u6761\u547d\u4ee4\u5bb9\u6613\u61c2\u5f88\u591a(-maxdepth\u53bb\u6389\u5c31\u662frecrusive search), \u53bbexec\u4e00\u4e2amv\u547d\u4ee4, \u8bb0\u5f97\u52a0\u4e0a\u8868\u793a\u8bed\u53e5\u7ed3\u675f\u7684\u5206\u53f7\u5c31\u597d\u4e86, \u6211\u7684\u5173\u6ce8\u70b9\u5728\u7b2c\u4e00\u6761, \u8d81\u673a\u5b66\u5b66xargs\u5427.\u67e5\u5230\u8fd9\u7bc7\u6587\u7ae0\u8bf4\u7684\u4e0d\u9519, \u5148\u6458\u51e0\u4e2a\u8981\u70b9:\necho 'main' | cat test.cpp\n\n\u8fd9\u6761\u547d\u4ee4\u5e76\u4e0d\u4f1a\u628amain\u8f93\u51fa, \u56e0\u4e3a\u7ba1\u9053\u786e\u5b9e\u5c06\u5176\u4f5c\u4e3a\u6807\u51c6\u8f93\u5165\u7ed9\u4e86cat\u547d\u4ee4\u4f5c\u4e3a\u6807\u51c6\u8f93\u5165, \u4f46\u56e0\u4e3a\u6709\u4e86test.cpp\u8fd9\u4e2a\u547d\u4ee4\u884c\u53c2\u6570, cat\u547d\u4ee4\u5c31\u6ca1\u6709\u53bb\u8bfb\u6807\u51c6\u8f93\u5165\u7684\u53c2\u6570\u4e86.\n\u5176\u5b9e\u57fa\u672c\u4e0alinux\u7684\u547d\u4ee4\u4e2d\u5f88\u591a\u7684\u547d\u4ee4\u7684\u8bbe\u8ba1\u662f\u5148\u4ece\u547d\u4ee4\u884c\u53c2\u6570\u4e2d\u83b7\u53d6\u53c2\u6570\uff0c\u7136\u540e\u4ece\u6807\u51c6\u8f93\u5165\u4e2d\u8bfb\u53d6\uff0c\u53cd\u6620\u5728\u7a0b\u5e8f\u4e0a\uff0c\u547d\u4ee4\u884c\u53c2\u6570\u662f\u901a\u8fc7main\u51fd\u6570int main(int argc,char*argv[])\u7684\u51fd\u6570\u53c2\u6570\u83b7\u5f97\u7684\uff0c\u800c\u6807\u51c6\u8f93\u5165\u5219\u662f\u901a\u8fc7\u6807\u51c6\u8f93\u5165\u51fd\u6570\u4f8b\u5982C\u8bed\u8a00\u4e2d\u7684scanf\u8bfb\u53d6\u5230\u7684\u3002\u4ed6\u4eec\u83b7\u53d6\u7684\u5730\u65b9\u662f\u4e0d\u4e00\u6837\u7684\u3002\u4f8b\u5982\uff1a\necho 'main' | cat\n\n\u8fd9\u6761\u547d\u4ee4\u4e2dcat\u4f1a\u4ece\u5176\u6807\u51c6\u8f93\u5165\u4e2d\u8bfb\u53d6\u5185\u5bb9\u5e76\u5904\u7406\uff0c\u4e5f\u5c31\u662f\u4f1a\u8f93\u51fa 'main' \u5b57\u7b26\u4e32\u3002echo\u547d\u4ee4\u5c06\u5176\u6807\u51c6\u8f93\u51fa\u7684\u5185\u5bb9 'main' \u901a\u8fc7\u7ba1\u9053\u5b9a\u5411\u5230 cat \u7684\u6807\u51c6\u8f93\u5165\u4e2d\u3002\ncat\n\n\u5982\u679c\u4ec5\u4ec5\u8f93\u5165cat\u5e76\u56de\u8f66\uff0c\u5219\u8be5\u7a0b\u5e8f\u4f1a\u7b49\u5f85\u8f93\u5165\uff0c\u6211\u4eec\u9700\u8981\u4ece\u952e\u76d8\u8f93\u5165\u8981\u5904\u7406\u7684\u5185\u5bb9\u7ed9cat\uff0c\u6b64\u65f6cat\u4e5f\u662f\u4ece\u6807\u51c6\u8f93\u5165\u4e2d\u5f97\u5230\u8981\u5904\u7406\u7684\u5185\u5bb9\u7684\uff0c\u56e0\u4e3a\u6211\u4eec\u7684cat\u547d\u4ee4\u884c\u4e2d\u4e5f\u6ca1\u6709\u6307\u5b9a\u8981\u5904\u7406\u7684\u6587\u4ef6\u540d\u3002\u5927\u591a\u6570\u547d\u4ee4\u6709\u4e00\u4e2a\u53c2\u6570-\u5982\u679c\u76f4\u63a5\u5728\u547d\u4ee4\u7684\u6700\u540e\u6307\u5b9a -\u5219\u8868\u793a\u4ece\u6807\u51c6\u8f93\u5165\u4e2d\u8bfb\u53d6\uff0c\u4f8b\u5982\uff1a\necho 'main' | cat -\n\n\u8fd9\u6837\u4e5f\u662f\u53ef\u884c\u7684\uff0c\u4f1a\u663e\u793a 'main' \u5b57\u7b26\u4e32\uff0c\u540c\u6837\u8f93\u5165\tcat -\u76f4\u63a5\u56de\u8f66\u4e0e\u8f93\u5165 cat\u76f4\u63a5\u56de\u8f66\u7684\u6548\u679c\u4e5f\u4e00\u6837\uff0c\u4f46\u662f\u5982\u679c\u8fd9\u6837\u5462\uff1a\necho 'main' | cat test.cpp -\n\n\u540c\u65f6\u6307\u5b9atest.cpp \u548c - \u53c2\u6570\uff0c\u6b64\u65f6cat\u7a0b\u5e8f\u4f1a\u5148\u8f93\u51fatest.cpp\u7684\u5185\u5bb9\uff0c\u7136\u540e\u8f93\u51fa\u6807\u51c6\u8f93\u5165'main'\u5b57\u7b26\u4e32\uff0c\u5982\u679c\u6362\u4e00\u4e0b\u987a\u5e8f\u53d8\u6210\u8fd9\u6837\uff1a\necho 'main' | cat - test.cpp\n\n\u5219\u4f1a\u5148\u8f93\u51fa\u6807\u51c6\u8f93\u5165'main'\u5b57\u7b26\u4e32\uff0c\u7136\u540e\u8f93\u51fatest.cpp\u6587\u4ef6\u7684\u5185\u5bb9\u3002\u5982\u679c\u53bb\u6389\u8fd9\u91cc\u7684-\u53c2\u6570\uff0c\u5219cat\u53ea\u4f1a\u8f93\u51fatest.cpp\u6587\u4ef6\u7684\u5185\u5bb9\u3002\u53e6\u5916\u5982\u679c\u540c\u65f6\u4f20\u9012\u6807\u51c6\u8f93\u5165\u548c\u6587\u4ef6\u540d\uff0cgrep\u4e5f\u4f1a\u540c\u65f6\u5904\u7406\u8fd9\u4e24\u4e2a\u8f93\u5165\uff0c\u4f8b\u5982\uff1a\necho 'main' | grep 'main' test.cpp -\n\n\u6b64\u5904\u540c\u4e0a, \u5982\u679c\u4e0d\u52a0-, \u5219\u53ea\u4f1a\u5728test.cpp\u4e2d\u641c\u7d22&quot;main&quot;, \u52a0\u4e86-, \u5219\u4f1a\u5728\u6587\u4ef6\u548c\u6807\u51c6\u8f93\u51fa\u4e2d\u90fd\u68c0\u67e5\u5173\u952e\u5b57.\u53e6\u5916\u5f88\u591a\u7a0b\u5e8f\u662f\u4e0d\u5904\u7406\u6807\u51c6\u8f93\u5165\u7684\uff0c\u4f8b\u5982kill,rm\u8fd9\u4e9b\u7a0b\u5e8f\u5982\u679c\u547d\u4ee4\u884c\u53c2\u6570\u4e2d\u6ca1\u6709\u6307\u5b9a\u8981\u5904\u7406\u7684\u5185\u5bb9\u5219\u4e0d\u4f1a\u9ed8\u8ba4\u4ece\u6807\u51c6\u8f93\u5165\u4e2d\u8bfb\u53d6\u3002\u6240\u4ee5\uff1a\necho '516' | kill\n\n\u8fd9\u79cd\u547d\u91cc\u662f\u4e0d\u80fd\u6267\u884c\u7684\u3002\necho 'test' | rm -f\n\n\u8fd9\u79cd\u4e5f\u662f\u6ca1\u6709\u6548\u679c\u7684\u3002\u6709\u65f6\u5019\u6211\u4eec\u7684\u811a\u672c\u5374\u9700\u8981echo '516' | kill\u8fd9\u6837\u7684\u6548\u679c\uff0c\u4f8b\u5982ps -ef | grep 'ddd' | kill\u8fd9\u6837\u7684\u6548\u679c\uff0c\u7b5b\u9009\u51fa\u7b26\u5408\u67d0\u6761\u4ef6\u7684\u8fdb\u7a0bpid\u7136\u540e\u7ed3\u675f\u3002\u8fd9\u79cd\u9700\u6c42\u5bf9\u4e8e\u6211\u4eec\u6765\u8bf4\u662f\u7406\u6240\u5f53\u7136\u800c\u4e14\u662f\u5f88\u5e38\u89c1\u7684\uff0c\u90a3\u4e48\u5e94\u8be5\u600e\u6837\u8fbe\u5230\u8fd9\u6837\u7684\u6548\u679c\u5462\u3002\u6709\u51e0\u4e2a\u89e3\u51b3\u529e\u6cd5\uff1a\nkill `ps -ef | grep 'ddd'`    \n\n\u8fd9\u4e2a\u65f6\u5019\u5b9e\u9645\u4e0a\u7b49\u540c\u4e8e\u62fc\u63a5\u5b57\u7b26\u4e32\u5f97\u5230\u7684\u547d\u4ee4\uff0c\u5176\u6548\u679c\u7c7b\u4f3c\u4e8ekill $pid\nfor procid in $(ps -aux | grep &quot;some search&quot; | awk '{print $2}'); do kill -9 $procid; done   \n\n\u5176\u5b9e\u4e0e\u7b2c\u4e00\u79cd\u539f\u7406\u4e00\u6837\uff0c\u53ea\u4e0d\u8fc7\u9700\u8981\u591a\u6b21kill\u7684\u65f6\u5019\u662f\u5faa\u73af\u5904\u7406\u7684\uff0c\u6bcf\u6b21\u5904\u7406\u4e00\u4e2a\nps -ef | grep 'ddd' | xargs kill  \n\nOK\uff0c\u4f7f\u7528\u4e86xargs\u547d\u4ee4\uff0c\u94fa\u57ab\u4e86\u8fd9\u4e48\u4e45\u7ec8\u4e8e\u94fa\u5230\u4e86\u4e3b\u9898\u4e0a\u3002xargs\u547d\u4ee4\u53ef\u4ee5\u901a\u8fc7\u7ba1\u9053\u63a5\u53d7\u5b57\u7b26\u4e32\uff0c\u5e76\u5c06\u63a5\u6536\u5230\u7684\u5b57\u7b26\u4e32\u901a\u8fc7\u7a7a\u683c\u5206\u5272\u6210\u8bb8\u591a\u53c2\u6570(\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u662f\u901a\u8fc7\u7a7a\u683c\u5206\u5272) \u7136\u540e\u5c06\u53c2\u6570\u4f20\u9012\u7ed9\u5176\u540e\u9762\u7684\u547d\u4ee4\uff0c\u4f5c\u4e3a\u540e\u9762\u547d\u4ee4\u7684\u547d\u4ee4\u884c\u53c2\u6570###xargs\u4e0e\u7ba1\u9053\u7684\u533a\u522b\necho '--help' | cat\necho '--help' | xargs cat\n```\t\n\u7b2c\u4e00\u53e5\u8f93\u51fa`--help`, \u7b2c\u4e8c\u53e5\u76f8\u5f53\u4e8e\u6267\u884c\u4e86`cat --help`, \u6240\u4ee5\u7ba1\u9053\u662f\u628a\u524d\u9762\u7684\u8f93\u51fa\u5f53\u6210\u540e\u9762\u7684\u8f93\u5165, \u800c`xargs`\u5219\u662f\u628a\u524d\u9762\u7684\u8f93\u51fa\u5f53\u6210\u4e86\u540e\u9762\u7684\u547d\u4ee4\u884c\u53c2\u6570.\n\n`xargs`\u7684\u547d\u4ee4\u53c2\u6570\u53ef\u4ee5\u67e5\u6211\u7ed9\u7684\u5f15\u7528\u539f\u6587, \u8bf4\u5f97\u8be6\u7ec6\u4e14\u6709\u5b9e\u4f8b, \u6216\u8005\u770b\u4e0b\u9762\u7684\u7b80\u5355\u4ecb\u7ecd:\n\n\n-0\uff0c--null\uff1a\u4ee5\\0\u4f5c\u4e3a\u5206\u9694\u7b26\uff0c\u63a5\u53d7\u5230\u7684\u7279\u6b8a\u5b57\u7b26\u5c06\u5f53\u4f5c\u6587\u672c\u7b26\u53f7\u5904\u7406\uff1b\n-d\uff1a\u6307\u5b9a\u5206\u6bb5\u7684\u5206\u9694\u7b26\uff0c\u9ed8\u8ba4\u5206\u9694\u5b57\u7b26\u4e3a\u7a7a\u767d\u5b57\u7b26\uff1b\n-a\uff0c--arg-file=file\uff1a\u6307\u5b9a\u547d\u4ee4\u6807\u51c6\u8f93\u5165\u7684\u6765\u6e90\u6587\u4ef6\uff1b\n-e'FLAG' \u6216\u8005-E 'FLAG'\uff1a\u6307\u5b9a\u4e00\u4e2a\u7ec8\u6b62\u7b26\u53f7\uff0c\u5f53xargs\u547d\u4ee4\u5339\u914d\u5230\u7b2c\u4e00\u4e2aFLAG\u540e\uff0c\u505c\u6b62\u4f20\u9012\uff0c\u5e76\u9000\u51fa\u547d\u4ee4\uff1b\n-p\uff1a\u6bcf\u5f53xargs\u6267\u884c\u4e00\u4e2a\u5206\u6bb5\u65f6\uff0c\u8be2\u95ee\u4e00\u6b21\u7528\u6237\u662f\u5426\u6267\u884c\uff1b\n-t\uff1a\u8868\u793a\u5148\u6253\u5370\u6267\u884c\u7684\u547d\u4ee4\u518d\u8f93\u51fa\uff1b\n-n NUM\uff1a\u8868\u793a\u4e00\u4e2a\u5206\u6bb5\u5305\u542b\u7684\u53c2\u6570\u4e2a\u6570\uff0c\u53c2\u6570\u4e4b\u95f4\u4ee5\u5206\u9694\u7b26\u9694\u5f00\uff0c\u9ed8\u8ba4\u662f\u5c06\u6240\u6709\u7684\u53c2\u6570\u5f53\u4f5c\u4e00\u4e2a\u5206\u6bb5\u8f93\u51fa\uff1b\n-i\uff1a\u7528\u4e8e\u5c06\u5206\u6bb5\u5206\u6279\u4f20\u9012\u7ed9\u5176\u540e\u7684{}\u8fdb\u884c\u8f93\u51fa\uff0c\u5206\u6bb5\u4f1a\u66ff\u6362{}\u6240\u5728\u7684\u4f4d\u7f6e\u8fdb\u884c\u8f93\u51fa\uff1b\n-I &quot;FLAG&quot;\uff1a\u53ef\u6307\u5b9a\u5206\u6bb5\u7684\u66ff\u6362\u7b26\u53f7\uff0c\u5206\u6bb5\u4f1a\u5206\u6279\u66ff\u6362\u5230\u7b26\u53f7\u6240\u5728\u7684\u4f4d\u7f6e\u8fdb\u884c\u8f93\u51fa\u6267\u884c\uff1b\n-L\uff1a\u6307\u5b9a\u6bcf\u6b21\u6267\u884c\u7684\u6700\u5927\u7684\u975e\u7a7a\u884c\u7684\u884c\u6570\uff1b\n\u6211\u4eec\u6765\u8bf4\u56de&quot;\u67e5\u627e\u5e76\u79fb\u52a8&quot;\u8fd9\u4e2a\u539f\u59cb\u9700\u6c42.\n\n\u9996\u5148, \u524d\u9762\u94fa\u57ab\u7684\u90a3\u4e48\u591a`-`\u4e0e\u6807\u51c6\u8f93\u5165\u7684\u5185\u5bb9\u5176\u5b9e\u4e0e`find`\u547d\u4ee4\u5e76\u65e0\u591a\u5927\u5173\u7cfb. \u6211\u4eec\u770b\u8fd9\u91cc\u9762\u7528\u5230\u7684\u4e09\u4e2a\u53c2\u6570\n\n### -print0\n\u7528\u8fc7`find`\u90fd\u77e5\u9053\u5b83\u7684\u7ed3\u679c\u662f\u4ee5\u6362\u884c\u7b26\u5206\u9694\u7684, \u800c\u52a0\u4e0a`-print0`\u9009\u9879\u5219\u53ef\u4ee5\u628a\u5b83\u6362\u6210`\\0`(\u5176\u5b9e\u5c31\u662f`NUL`)\u6765\u5206\u9694. \u55ef, \u4e0d\u662f\u7a7a\u683c, \u4f46\u662f\u81f3\u5c11\u53d8\u6210\u4e86\u4e00\u884c, \u6709\u70b9\u547d\u4ee4\u884c\u53c2\u6570\u7684\u610f\u601d\u4e86\u5427?\n\n### -0\n\u5c31\u662f`--null`, \u4ee5`null`\u4e3a\u5206\u9694\u7b26, \u56e0\u4e3a\u6211\u4eec\u5728\u524d\u9762\u8bbe\u7f6e`find`\u7684\u8f93\u51fa\u4e3a`null`, \u8fd9\u91cc\u5f53\u7136\u8981\u8bbe\u7f6e\u76f8\u5e94\u7684\u5206\u9694\u7b26. \u5982\u679c\u4ed4\u7ec6\u8bfb\u4e86\u524d\u9762\u7684\u53c2\u6570\u8868, \u4f1a\u53d1\u73b0\u5176\u5b9e\u5b83\u5c31\u662f`-d '\\0'`\u7684\u7b80\u5316\u7248.\n\n### -I\n\u8fd9\u4e2a\u547d\u4ee4\u7684\u82f1\u6587\u8bf4\u660e\u770b\u5f97\u6211\u4e91\u91cc\u96fe\u91cc, \u4e00\u8d2f\u7684\u4e0d\u8bf4\u4eba\u8bdd\u98ce\u683c, \u6211\u8fd8\u662f\u7528\u4e00\u4e2a\u5b9e\u4f8b\u6765\u8bf4\u660e\u5b83\u7684\u7528\u6cd5\u5427\n\n\u6211\u5728\u4e00\u4e2a\u76ee\u5f55\u91cc\u5efa\u4e86\u51e0\u4e2a\u6587\u4ef6, \u7528`find`\u628a\u5b83\u627e\u51fa\u6765\u5e76\u7528`xargs`\u628a\u5b83`echo`\u51fa\u6765:\n\n\n$find . -name &quot;*.txt&quot; -print0 | xargs -p -0 echo\necho ./c.txt ./b.txt ./a.txt?...y\n./c.txt ./b.txt ./a.txt\n    \n\u6ce8\u610f, \u6211\u52a0\u4e86\u4e00\u4e2a`-p`\u53c2\u6570, \u8fd9\u662f\u4e3a\u4e86\u5728\u6267\u884c\u547d\u4ee4\u524d\u5148\u628a\u547d\u4ee4\u6253\u5370\u51fa\u6765, \u8fd9\u6837\u4e00\u6765\u4f60\u6709\u673a\u4f1a\u68c0\u67e5\u751f\u6210\u7684\u547d\u4ee4\u6700\u7ec8\u662f\u4e0d\u662f\u4f60\u60f3\u8981\u7684, \u53e6\u4e00\u65b9\u9762\u4e5f\u80fd\u68c0\u67e5\u4f60\u7684\u547d\u4ee4\u662f\u5426\u6267\u884c\u4e86\u591a\u6b21.\n\n\u6839\u636e\u4e0a\u9762\u7684\u6f14\u793a, \u6211\u4eec\u53d1\u73b0\u4e00\u4e2a\u95ee\u9898, \u5c31\u662f\u5982\u679c\u662f\u6267\u884c`mv file path/`\u8fd9\u6837\u7684\u547d\u4ee4, \u4e5f\u5c31\u662f\u8bf4\u6211\u4eec\u9700\u8981\u5728\u547d\u4ee4**\u4e2d\u95f4**\u63d2\u5165\u7ba1\u9053\u8fc7\u6765\u7684\u53c2\u6570, \u662f\u4e0d\u884c\u7684, \u4f3c\u4e4e\u5e94\u8be5\u7528\u5360\u4f4d\u7b26.\n\n\u53cd\u5411\u5b66\u4e60, \u6211\u4eec\u65e2\u7136\u5df2\u7ecf\u77e5\u9053\u4e86`-I replstr`\u662f\u6b63\u786e\u7b54\u6848, \u90a3\u5c31\u5c1d\u8bd5\u4e00\u4e0b\u5427:\n\n\n$find . -name &quot;*.txt&quot; -print0 | xargs -p -0 -I {} echo {} &quot;HELLO&quot;\necho ./c.txt HELLO?...y\n./c.txt HELLO\necho ./b.txt HELLO?...y\n./b.txt HELLO\necho ./a.txt HELLO?...y\n./a.txt HELLO\n\n\u9996\u5148, \u6211\u4eec\u53d1\u73b0, \u6211\u4eec\u6210\u529f\u5730\u5728`echo`\u548c`HELLO`\u95f4\u63d2\u5165\u4e86\u7ba1\u9053\u8fc7\u6765\u7684\u53c2\u6570, \u5176\u6b21, \u5b83\u8fd8\u628a\u53c2\u6570\u7528\u5206\u9694\u7b26\u81ea\u884c\u62c6\u5f00\u4e86\u4e00\u6b21\u6267\u884c\u4e00\u4e2a(\u53c8\u6709\u70b9\u7c7b\u4f3c\u4e8e\u6dfb\u52a0\u4e86`-n 1`\u7684\u9009\u9879\u7684\u610f\u601d).\n\n\u73b0\u5728\u6211\u4eec\u660e\u767d\u4e86, \u7f51\u4e0a\u67e5\u5230\u7684\u90a3\u6761\u547d\u4ee4\u6700\u7ec8\u5c31\u662f\u6267\u884c\u4e86N\u6b21`mv FILE /path`, \u8fd9\u5c31\u662f`-I {}`.\n\nFurthermore, \u6211\u4eec\u628a\u6807\u51c6\u7b54\u6848\u91cc\u90a3\u9ad8\u5927\u4e0a\u7684`{}`\u6362\u4e00\u4e0b\u5982\u4f55?\n\n\n$ find . -name &quot;*.txt&quot; -print0 | xargs -p -0 -I 'M' echo 'M' &quot;HELLO&quot;\necho ./c.txt HELLO?...y\n./c.txt HELLO\necho ./b.txt HELLO?...y\n./b.txt HELLO\necho ./a.txt HELLO?...y\n./a.txt HELLO$ find . -name &quot;*.txt&quot; -print0 | xargs -p -0 -I M echo M &quot;HELLO&quot;\necho ./c.txt HELLO?...y\n./c.txt HELLO\necho ./b.txt HELLO?...y\n./b.txt HELLO\necho ./a.txt HELLO?...y\n./a.txt HELLO\n\n\u8fd9\u91cc\u6211\u5206\u522b\u7528\u4e86`'M'`\u548c`M`, \u90fd\u4e0d\u5f71\u54cd\u5176\u4f5c\u4e3a\u5360\u4f4d\u7b26\u7684\u4f5c\u7528, \u4e0d\u8981\u88ab\u90a3\u6545\u5f04\u7384\u865a\u7684`{}`\u7ed9\u8ff7\u60d1\u4e86. \u4e4b\u6240\u4ee5\u7528`{}`\u5e94\u8be5\u8fd8\u662f\u5b83\u66f4\u597d\u88ab\u8fa8\u8bc6\u548c\u8868\u4e49, \u5e76\u4e0d\u662f\u5927\u62ec\u53f7\u672c\u8eab\u662f\u4ec0\u4e48\u8bed\u6cd5.\n\n", "categories": [{"name": "posts", "slug": "posts", "permalink": "/category/posts/"}], "tags": [{"name": "shell", "slug": "shell", "permalink": "/tag/shell/"}, {"name": "xargs", "slug": "xargs", "permalink": "/tag/xargs/"}]}, {"title": "error--IB-Designables--Failed-to-update-auto-layout-status", "date": "2020-08-21T00:00:00-00.00", "path": "/archives/error--IB-Designables--Failed-to-update-auto-layout-status/", "text": "\u9996\u5148, \u4e86\u89e3\u4e00\u4e0b IBInspectable / IBDesignable\n\u8fd9\u662f\u8ba9 Xcode\u80fd\u5728\u8bbe\u8ba1\u65f6\u5c31\u4f53\u73b0\u4f60\u4ee3\u7801\u5bf9 UI \u8fdb\u884c\u7684\u4fee\u6539, \u4ee5\u53ca\u5728\u8bbe\u8ba1\u5668\u91cc\u80fd\u52a8\u6001\u589e\u52a0\u4f60\u5bf9\u89c6\u56fe\u6dfb\u52a0\u7684\u5c5e\u6027\u7684\u63a7\u4ef6\u7684\u7279\u6027(\u662f\u7684, \u53ea\u662f xcode \u7684\u7279\u6027, \u5e76\u4e0d\u662f\u8bed\u8a00\u7279\u5f81)\u7136\u540e, \u7528\u8fd9\u4e2a\u7684\u4eba\u591a\u534a\u78b0\u5230\u4e86\u8fd9\u7c7b\u95ee\u9898:\n\nerror: IB Designables: Failed to update auto layout status: Interface Builder Cocoa Touch Tool raised a &quot;NSInternalInconsistencyException&quot; exception: Could not load NIB in bundle: 'NSBundle\n\u7f51\u4e0a\u53ef\u80fd\u6709\u4e00\u5927\u5806\u8ba8\u8bba\u76f8\u5173\u95ee\u9898\u7684\u8d34\u5b50, \u89e3\u51b3\u65b9\u6cd5\u4e0d\u5c3d\u5176\u6570, \u53ef\u80fd\u90fd\u4e0d\u9002\u7528\u4f60, \u6240\u4ee5\u6211\u7684\u8fd9\u7bc7\u4e5f\u53ef\u80fd\u4e0d\u9002\u7528\u4f60, \u6700\u597d\u8fd8\u662f\u5584\u7528\u641c\u7d22, \u6211\u8c28\u63d0\u4f9b\u4e00\u79cd\u601d\u8def.\u7f51\u4e0a\u6709\u8ba9\u4f60\u4fee\u6539\u5de5\u7a0b\u914d\u7f6e\u7684, \u5bfb\u627e\u5d29\u6e83\u65e5\u5fd7\u7684, \u89e3\u51b3\u6211\u8fd9\u4e2a\u95ee\u9898\u7684, \u662f\u5728Storyboard \u754c\u9762\u91cc\u9009\u4e2d\u51fa\u95ee\u9898\u7684 View(\u4f60\u4e00\u5b9a\u8981\u81f3\u5c11\u77e5\u9053\u662f\u7ed9\u54ea\u4e2a view \u6dfb\u52a0\u4e0a IB_DESIGNABLE\u624d\u5bfc\u81f4\u7684\u95ee\u9898, \u53ef\u4ee5\u901a\u8fc7\u9010\u4e2a\u79fb\u9664\u8fd9\u4e2a\u58f0\u660e\u4ee5\u6d4b\u8bd5), \u518d\u5728\u83dc\u5355\u91cc\u9009\u62e9: Editor - Debug Selected Views\n\u8fd9\u4e2a\u65f6\u5019\u5c31\u4f1a\u6a21\u62dfIB_DESIGNABLE\u8fdb\u884c debug, \u518d\u52a0\u4e0a\u5168\u5c40\u5f02\u5e38\u65ad\u70b9, \u4ee3\u7801\u5c31\u4f1a\u5728\u5d29\u6e83\u5904\u547d\u4e2d\u4e86.\u6211\u7684\u95ee\u9898\u662f\u6211\u7528\u4e86\u4e24\u4e2a\u5c5e\u6027, \u7136\u540e\u5728 view \u7684 drawWithRect:\u65b9\u6cd5\u4e2d, \u8fd9\u4e24\u4e2a\u5c5e\u6027\u90fd\u4e3a\u7a7a, \u800c\u6211\u7684\u5c5e\u6027\u662f\u5728initWithCoder:\u4e2d\u521d\u59cb\u5316\u7684. \u6240\u4ee5\u6211\u518d\u6dfb\u52a0initWithFrame:, \u5728\u5176\u4e2d\u89e3\u51b3, \u987a\u5229\u89e3\u51b3.\u8fd9\u8bf4\u660e\u4e09\u4e2a\u95ee\u9898:\nIB_DESIGNABLE\u76ee\u524d\u7684\u5b9e\u73b0\u8fd8\u6709 bug, \u771f\u5b9e\u542f\u52a8\u662f\u8dd1initWithCoder:\u7684, \u5b83\u5728\u8bbe\u8ba1\u5668\u91cc\u7ed8\u56fe\u7684\u65f6\u5019\u5374\u8d70\u4e86initWithFrame:, \u4f60\u53ef\u80fd\u4e0d\u5f97\u4e0d\u4e3a\u4e86\u5bf9\u4ed8\u8fd9\u4e2a bug \u800c\u6dfb\u52a0\u4e00\u6b21\u540c\u6837\u7684\u4ee3\u7801\ninitWithFrame:\u7684\u65f6\u5019 frame \u662f{0, 0, 0, 0}\u53ef\u522b\u5fd8\u4e86, \u6709\u65f6\u5019\u8fd9\u4e2a\u4e5f\u662f\u5d29\u6e83\u539f\u56e0\n\u5982\u679c\u6211\u628adrawWithRect:\u4e2d\u8981\u7528\u5230\u7684\u5c5e\u6027\u63d0\u524d\u521d\u59cb\u5316\u4e00\u6837\u53ef\u4ee5\u907f\u514d\u8fd9\u6837\u7684\u95ee\u9898, \u600e\u6837\u505a? \u914d\u5408IBInspectable, \u7136\u540e\u5728\u8bbe\u8ba1\u5668\u4e2d\u7ed9\u5c5e\u6027\u8bbe\u521d\u59cb\u503c\n\n", "categories": [{"name": "posts", "slug": "posts", "permalink": "/category/posts/"}], "tags": [{"name": "xcode", "slug": "xcode", "permalink": "/tag/xcode/"}]}, {"title": "El-Captain\u8bbe\u7f6e\u73af\u5883\u53d8\u91cf", "date": "2020-08-19T00:00:00-00.00", "path": "/archives/El-Captain%E8%AE%BE%E7%BD%AE%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F/", "text": "\u8fd9\u91cc\u8bf4\u7684\u4e0d\u662f\u8bbe\u7f6e\u53d8\u91cf\u7ed9bash/shell\u6765\u7528, \u800c\u662f\u7ed9\u7a0b\u5e8f\u4f7f\u7528, \u6bd4\u5982, chromium\u81ea36\u7248\u4ee5\u540e, \u5c31\u4e0d\u518d\u5185\u7f6egoogle api keys, \u5b98\u65b9\u6587\u6863\u8bf4\u660e\u4f60\u6253\u5305\u7684\u65f6\u5019\u6ca1\u6709\u6dfb\u52a0key\u7684\u8bdd, \u53ef\u4ee5\u5728runtime\u6dfb\u52a0, \u6bd4\u5982\u5728\u7cfb\u7edf\u7684\u73af\u5883\u53d8\u91cf\u91cc\u6dfb\u52a0\u8fdb\u53bb.\nProviding Keys at Runtime\nIf you prefer, you can build a Chromium binary (or use a pre-built Chromium binary) without API keys baked in, and instead provide them at runtime. To do so, set the environment variables GOOGLE_API_KEY, GOOGLE_DEFAULT_CLIENT_ID and GOOGLE_DEFAULT_CLIENT_SECRET to your &quot;API key&quot;, &quot;Client ID&quot; and &quot;Client secret&quot; values respectively.\u81f3\u4e8ekey\u54ea\u6765\u7684\u8bf7\u81ea\u884cgoogle, \u6211\u4eec\u4e0d\u53bb\u7533\u8bf7key\u7684\u8bdd, \u8fd8\u662f\u62ff\u6765\u4e3b\u4e49:\nexport GOOGLE_API_KEY=&quot;AIzaSyCkfPOPZXDKNn8hhgu3JrA62wIgC93d44k&quot;\nexport GOOGLE_DEFAULT_CLIENT_ID=&quot;811574891467.apps.googleusercontent.com&quot;\nexport GOOGLE_DEFAULT_CLIENT_SECRET=&quot;kdloedMFGdGla2P1zacGjAQh&quot;\u5173\u4e8e\u5982\u4f55\u5728mac\u4e0a\u8bbe\u7f6e\u73af\u5883\u53d8\u91cf, \u6709\u8fd9\u4e48\u4e00\u7bc7\u96c4\u6587, \u6211\u4e00\u822c\u662f\u76f4\u63a5\u7f16\u8f91~/.bash_profile\u6587\u4ef6, \u8fd9\u6b21\u4e0d\u751f\u6548\u4e86, \u6539\u6765\u6539\u53bb\u90fd\u6ca1\u7528, \u4e8e\u662f\u6362\u5173\u952e\u8bcd: yosemite/el captain\u4e0b\u5982\u4f55\u8bbe\u7f6e\u73af\u5883\u53d8\u91cf, \u7acb\u523b\u5c31\u6709\u7b54\u6848\u4e86\u5934\u4e24\u4e2a\u7b54\u6848\u90fd\u53ef\u4ee5, \u7b2c\u4e00\u4e2a\u662f\u4f7f\u7528\u4e86setenv VARIABLENAME=VALUE\u8fd9\u79cd\u8bed\u6cd5, \u7b2c\u4e8c\u4e2a\u662f\u76f4\u63a5\u5728\u4e00\u4e2a\u6587\u4ef6\u91cc\u7f16\u8f91, \u7136\u540e\u4f7f\u4e4b\u751f\u6548, \u6211\u76f4\u63a5\u7528\u4e86\u7b2c\u4e8c\u79cd, \u56e0\u4e3a\u6587\u672c\u968f\u65f6\u53ef\u7f16\u8f91, \u53ef\u67e5\u770b1, Create an environment.plist file in ~/Library/LaunchAgents/ with this content:\n&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;\n&lt;!DOCTYPE plist PUBLIC &quot;-//Apple//DTD PLIST 1.0//EN&quot; &quot;http://www.apple.com/DTDs/PropertyList-1.0.dtd&quot;&gt;\n&lt;plist version=&quot;1.0&quot;&gt;\n&lt;dict&gt;\n  &lt;key&gt;Label&lt;/key&gt;\n  &lt;string&gt;my.startup&lt;/string&gt;\n  &lt;key&gt;ProgramArguments&lt;/key&gt;\n  &lt;array&gt;\n    &lt;string&gt;sh&lt;/string&gt;\n    &lt;string&gt;-c&lt;/string&gt;\n    &lt;string&gt;\n        launchctl setenv GOOGLE_API_KEY AIzaSyCkfPOPZXDKNn8hhgu3JrA62wIgC93d44k\n        launchctl setenv GOOGLE_DEFAULT_CLIENT_ID 811574891467.apps.googleusercontent.com\n        launchctl setenv GOOGLE_DEFAULT_CLIENT_SECRET kdloedMFGdGla2P1zacGjAQh\n    &lt;/string&gt;\n  &lt;/array&gt;\n  &lt;key&gt;RunAtLoad&lt;/key&gt;\n  &lt;true/&gt;\n&lt;/dict&gt;\n&lt;/plist&gt;\n\n2, You can add many launchctl commands inside the &lt;string&gt;&lt;/string&gt; block.\u53ef\u89c1, \u6211\u4eec\u53ea\u9700\u8981\u5728string\u6807\u7b7e\u91cc\u5199\u9700\u8981\u7684\u5185\u5bb9\u5c31\u884c\u4e86, \u672c\u4f8b\u662f\u4e00\u7cfb\u5217google api keys.3, The plist will activate after system reboot. You can also use launchctl load ~/Library/LaunchAgents/environment.plist to launch it immediately.", "categories": [{"name": "posts", "slug": "posts", "permalink": "/category/posts/"}], "tags": [{"name": "macos", "slug": "macos", "permalink": "/tag/macos/"}]}, {"title": "-bin-bash\u548c-bin-sh\u7684\u533a\u522b", "date": "2020-07-02T00:00:00-00.00", "path": "/archives/-bin-bash%E5%92%8C-bin-sh%E7%9A%84%E5%8C%BA%E5%88%AB/", "text": "\u6559\u7a0b\u5730\u5740\u5feb\u6377\u952e:\n\nctrl+L: \u6e05\u9664\u5c4f\u5e55\u5e76\u79fb\u5230\u9876\u90e8\nctrl+U: \u5220\u5230\u884c\u9996(\u526a) ctrl+A: \u79fb\u5230\u884c\u9996\nctrl+K: \u5220\u5230\u884c\u5c3e(\u526a) ctrl+E: \u79fb\u5230\u884c\u5c3e\nctrl+b, f, (\u5de6\u79fb, \u53f3\u79fb)\nalt+b,f (\u524d, \u540e\u79fb\u4e00\u4e2a\u5355\u8bcd)\nctrl+1 \u7b49\u540c\u4e8eclear\nctrl+d delete, ctrl+w \u5220\u5230\u5355\u8bcd\u9996\nalt+t \u8bcd\u6362\u4f4d, ctrl+t \u5b57\u7b26\u6362\u4f4d (\u4e0e\u524d\u4e00\u4e2a)\nalt+d, alt+backspace \u526a\u5207\u81f3\u8bcd\u9996, \u8bcd\u5c3e\nctrl+y \u7c98\u8d34\n\n\n$ \u2019Something wrong happend\u2019 &gt;&amp;2\n\n\u89e3\u91ca:\n&gt;\u4ee3\u8868\u91cd\u5b9a\u5411\u8f93\u51fa\n&amp;\u8868\u793a\u63a5\u4e0b\u6765\u7684\u662f\u4e00\u4e2a\u6587\u4ef6\u63cf\u8ff0\u7b26\u6570\u5b57(file descriptor number)\n2\u8868\u793astderr\n\u6240\u4ee5\u5c31\u662f\u628a\u4e0a\u8ff0\u5b57\u7b26\u4e32\u8f93\u51fa\u5230stderr\u91cc\u53bb\u7684\u610f\u601d,\n\u5982\u679c\u662f$ \u201dstr\u201d &lt;2 (\u6ca1\u6709&amp;), \u5219\u4f1a\u8f93\u51fa\u5230\u4e00\u4e2a\u53eb2\u7684\u6587\u4ef6\u91cc\u53bbecho\n-n: \u53ef\u4ee5\u53d6\u6d88\u7ed3\u5c3e\u7684\u6362\u884c \n-e: \u89e3\u91ca\u5b57\u7b26\u4e32\u91cc\u7684\u8f6c\u4e49\u7b26\u6269\u5c55(\u901a\u914d\u7b26)\n\n$ ~/walker # \u8868\u793a\u7528\u6237\u76ee\u5f55\u4e0b\u7684walker\u76ee\u5f55\n$ ~walker # \u8868\u793a\u540d\u4e3awalker\u7684\u76ee\u5f55\n$ ~+ # \u6269\u5c55\u4e3a\u5f53\u524d\u76ee\u5f55, \u7b49\u540c\u4e8e pwd\n$ echo d{a, e, I, o, u}g \u8f93\u51fa: dag, deg, dig, dog, dug # \u5927\u62ec\u53f7\u5185\u4e0d\u8981\u6709\u7a7a\u683c(\u5426\u5219\u4f1a\u5f53\u6210\u53c2\u6570)\n$ echo {j{p,pe}g, png} \u2014&gt; \u5d4c\u5957\n\n\u6ce2\u6d6a\u7ebf, \u65b9\u62ec\u53f7\u7684\u62ec\u53f7\u90fd\u662f\u57fa\u4e8e\u201d\u8def\u5f84\u201d\u7684, \u5982\u679c\u5f53\u524d\u8def\u5f84\u6ca1\u6709\u5339\u914d\u5230\u5bf9\u5e94\u7684\u6587\u4ef6\u540d, \u5219\u4f1a\u53d8\u6210\u5b57\u7b26\u4e32\u539f\u6837\u8f93\u51fa, \u800c\u5927\u62ec\u53f7\u5219\u4e0d\u7136, \u662f\u57fa\u4e8e\u201d\u903b\u8f91\u201d\u7684, \u53ea\u7ba1\u6269\u5c55, \u4e0d\u4f1a\u53bb\u63a2\u6d4b\u6269\u5c55\u540e\u5bf9\u5e94\u7684\u8def\u5f84\u5b58\u4e0d\u5b58\u5728, \u56e0\u6b64\u53ef\u80fd\u62a5\u9519\u6587\u4ef6\u4e0d\u5b58\u5728. \n\u5982echo [a,b].txt, \u5982\u679c\u4e0d\u5b58\u5728a.txt, b.txt, \u5219\u4f1a\u53d8\u6210\u201d[a,b].txt\u201d\u8fd9\u6837\u4e00\u4e2a\u8f93\u51fa, \u800c{a,b}.txt\u5219\u4e00\u5b9a\u4f1a\u6269\u5c55\u6210a.txt, b.txt\n\u4f8b\u5916: \n\u5728\u7528..\u6765\u6269\u5c55\u65f6, \u5982\u679c\u7cfb\u7edf\u65e0\u6cd5\u7406\u89e3, \u5219\u4e0d\u4f1a\u6269\u5c55, \u5982{1..5}\u4f1a\u6269\u5c55\u62101,2,3,4,5, \u4f46{ab..123}, \u5219\u4f1a\u53d8\u6210\u5b57\u7b26\u4e32\n\u4f46\u662f\u524d\u5bfc0\u4e0d\u53c2\u4e0e\u8def\u5f84\u5339\u914d: {01\u20265} # 01,02,03,04,05 (\u51e0\u4e2a\u96f6\u90fd\u53ef\u4ee5)\n\u6b65\u957f:{0..8..2}  (\u672a\u6d4b\u8bd5\u6210\u529f) # \u8981\u6253\u5f00\u54ea\u4e2ashopt\u5f00\u5173?\n\u6d3b\u7528:\n$ echo .{mp{3..4},m4{a,b,p,v}} # \u5339\u914d\u4e86: .mp3 .mp4 .m4a .m4b .m4p .m4v\n$ mkdir {2007..2009}-{01..12}  # \u5efa\u4e862007-2009\u6bcf\u5e7412\u4e2a\u76ee\u5f55\nfor I in {1..4}\n\n\u6ce8\u610f\u60ca\u53f9\u53f7\u7684\u4f7f\u7528(\u7c7b\u4f3c\u6b63\u5219\u91cc\u7684^)\n$ echo ${!S*} # \u8fd4\u56de\u6240\u6709\u4ee5S\u5f00\u5934\u7684\u201d\u53d8\u91cf\u540d\u201d, \u5982SHELL, SSH..\u7b49\n\n\u53e6\u4e24\u79cd\u8f6c\u4e49(string interpolation):\n$ echo date is $(date) # \u5373\u5305\u5728$(\u2026)\u4e2d\n$ echo date is `date` # \u5305\u5728\u53cd\u5f15\u53f7\u4e2d\n\n\u4f46\u662f\u8981\u8ba1\u7b972+2, \u53ea\u6709echo $((2+2)) \u8fd9\u79cd\u5f62\u5f0f, \u53cd\u5f15\u53f7\u5c31\u4e0d\u884c\u4e86[[:alnum:]], [[:digit:]]\u7b49\u9884\u7f6e\u7684\u5b57\u7b26\u7c7b\u6269\u5c55\u89c1: https://wangdoc.com/bash/expansion.html \u5f88\u4e30\u5bcc, \u5efa\u8bae\u8be6\u8bfb.(?, \\*, +, @, !)\u5219\u4e3a\u5339\u914d\u7684\u4e2a\u6570, \u5206\u522b\u662f(0\u62161, 0\u6216\u591a, \u4e00\u6216\u591a, \u4e00\u4e2a, \u975e\u4e00\u4e2a), \u5982song@(.)mp3\u7b49\u540c\u4e8esong.mp3,\n\u662f\u7684, \u4e0d\u540c\u4e8e\u6b63\u5219, \u5b83\u662f\u5148\u89c4\u5b9a\u4e2a\u6570, \u518d\u8bbe\u5b9a\u5339\u914d\u5b57\u4e32\n\u6ce8: \u9700\u8981\u6253\u5f00shopt -s extglob\n\u53cc\u5f15\u53f7\u78b0\u5230$, \u53cd\u5f15\u53f7\u548c\u53cd\u659c\u6760\u90fd\u4f1a\u81ea\u52a8\u6269\u5c55, \u6240\u4ee5echo \u201c$SHELL\u201d \u7b49\u540c\u4e8eecho echo \\$SHELL\n\u53cc\u5f15\u53f7\u80fd\u4fdd\u7559\u201d\u8f93\u51fa\u201d\u7684\u683c\u5f0f, \u6bd4\u5982 echo `cal`, \u683c\u5f0f\u5c31\u6ca1\u4e86, \u81ea\u5df1\u8bd5\u8bd5\u770b? \u800cecho \u201c$(cal)\u201d\u5219\u53ef\u4ee5\u4fdd\u7559\u683c\u5f0f:\n$ echo &quot;$(cal)&quot;\n      \u516d\u6708 2020\n\u65e5 \u4e00 \u4e8c \u4e09 \u56db \u4e94 \u516d\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30\n\n\u5927\u6bb5\u6587\u5b57\u8f93\u5165\u53ef\u4ee5\u7528\n$command &lt;&lt; token\nyour long inputs\ntoken\n\n\u7b49\u540c\u4e8e: echo &quot;your long inputs&quot; | command \u5373\u628aecho\u7684\u8f93\u51fa\u4f5c\u4e3acommand\u7684\u8f93\u5165, \u8fd9\u4e2a\u4e00\u822c\u7528\u4e8e\u591a\u884c\u6587\u672c\ntexts\u91cc\u9762\u53ef\u4ee5\u8fdb\u884c\u4f7f\u7528\u53d8\u91cf, \u4f46\u662f\u5982\u679c\u628atoken\u7528\u53cc\u5f15\u53f7\u5305\u8d77\u6765\u5c31\u4e0d\u80fd\u89e3\u91ca\u53d8\u91cf\u4e86.\n\u5982\u679c\u53ea\u662f\u7b80\u5355\u5b57\u7b26\u4e32, \u7528\u4e0b\u9762\u66f4\u660e\u786e:\n$ command &lt;&lt;&lt; \u2018text\u2019 \n\u5982: $ cat &lt;&lt;&lt; \u201chello world\u201d, \u4e00\u6837\u7b49\u540c\u4e8e $ echo \u201chello world\u201d | cat\n&lt;&lt;&lt; \u8fd8\u6709\u4e00\u4e2a\u4f5c\u7528\u5c31\u662f\u628a\u53d8\u91cf\u503c\u7528\u8fd9\u79cd\u65b9\u5f0f\u80fd\u53d8\u6210\u6807\u51c6\u8f93\u5165, \u8fd9\u6837\u88ab\u201d\u8ba1\u7b97\u201d\u51fa\u6765\u7684\u503c\u4e5f\u80fd\u7528\u4e8e\u53ea\u63a5\u53d7\u6807\u51c6\u8f93\u5165\u7684\u547d\u4ee4\u4e86, \u6bd4\u5982read\u53d8\u91cf\nprintenv PATH \u4e0e echo $PATH\u7b49\u540c\n\u89e3\u91ca\u53d8\u91cf\u4e2d\u7684\u53d8\u91cf, \u6bd4\u5982$PATH, \u4e0d\u662f\u60f3\u8c61\u4e2d\u7684$\u5d4c\u5957: ${${myvar}}, \u5e94\u8be5\u8fd9\u4e48\u7528\n$ myvar=PATH\n$ echo ${!myvar}, # \u5373\u591a\u52a0\u4e00\u4e2a\u60ca\u53f9\u53f7\n\n$?: \u4e0a\u4e00\u4e2a\u547d\u4ee4\u7684\u9000\u51fa\u7801(0\u6210\u529f, 1\u5931\u8d25) \n$$: \u5f53\u524dShell\u8fdb\u7a0b\u7684ID\n$_: \u4e0a\u4e00\u4e2a\u547d\u4ee4\u7684\u6700\u540e\u4e00\u4e2a\u53c2\u6570\n$!: \u6700\u540e\u4e00\u4e2a\u540e\u53f0\u6267\u884c\u7684\u5f02\u6b65\u547d\u4ee4\u7684\u8fdb\u7a0bID\n$0: \u5f53\u524dShell\u7684\u540d\u79f0\n$-: \u5f53\u524dshell\u7684\u542f\u52a8\u53c2\u6570, $@, $# \u8868\u793a\u811a\u672c\u7684\u53c2\u6570\u6570\u91cf\n$?\u547d\u4ee4\u9664\u4e86\u53d6\u51fa\u4e0a\u4e00\u4e2a\u547d\u4ee4\u7684\u8fd4\u56de\u503c, \u4e5f\u53ef\u4ee5\u53d6\u51fa\u4e0a\u4e00\u4e2a\u51fd\u6570\u7684\u8fd4\u56de\u503c\n${varname-:value} \u53d6\u503c, \u5982\u679c\u4e0d\u5b58\u5728\u5219\u8fd4value, \u4f46\u4e0d\u8d4b\u503c\n${varname=:value} \u53d6\u503c, \u5982\u679c\u4e0d\u5b58\u5728\u5219\u8fd4value, \u987a\u4fbf\u8d4b\u503c\n${varname+:value} \u5982\u679c\u6709\u503c\u5219\u8fd4value(\u800c\u4e0d\u662f\u503c\u672c\u8eab), \u6ca1\u6709\u503c\u5219\u4e3a\u7a7a, \u6240\u4ee5\u8fd9\u4e2a\u65f6\u5019\u7684value\u4e00\u822c\u7528\u4e00\u4e2a\u6807\u8bc6\u7b26\u53f7\u5c31\u597d\u4e86\n${varname?:value} \u53d6\u503c, \u5982\u679c\u4e0d\u5b58\u5728\u5c31\u62a5\u9519\u5e76\u628avalue\u4f5c\u4e3a\u9519\u8bef\u9519\u8bef\u6253\u5370\u51fa\u6765\n\u6bd4\u5982 $ filename=${$1:?\u201dfilename missing\u201d} \u4ece\u811a\u672c\u4e2d\u53d6\u7b2c\u4e00\u4e2a\u53c2\u6570\u4f5c\u4e3a\u6587\u4ef6\u540d, \u53d1\u73b0\u6ca1\u6709\u6587\u4ef6\u540d\u5c31\u62a5\u9519\u9000\u51fa\u53d8\u91cf\u90fd\u662f\u5b57\u7b26\u4e32, \u53ef\u4ee5\u7528declare\u6765\u8fdb\u884c\u4e00\u4e9b\u9650\u5b9a\n$ declare -I v1=13 v2=14 v3=v1+v2 # \u58f0\u660e\u4e3ainteger\n$ echo $v3\n# \u8fd9\u6837\u66f4\u5feb: \n$ let v=13+14  # \u5982\u679c\u4e60\u60ef\u4e86=\u4e24\u8fb9\u52a0\u7a7a\u683c, \u5219\u5305\u5230\u5f15\u53f7\u91cc: $ let \u201cv = 13 + 14\u201d\n\n\u5b57\u7b26\u4e32\n${#\u201dstring\u201d} \u957f\u5ea6\n${varname:offset:length} \u5207\u7247(\u53d8\u91cf\u540d_\u4e0d\u9700\u8981_\u7f8e\u5143\u7b26\u53f7)\n\u5220\u9664: (# \u548c ## \u7684\u533a\u522b\u5c31\u662f\u8d2a\u5a6a\u4e0e\u5426\u7684\u533a\u522b)\n$ phone=&quot;555-456-1414&quot;\n$ echo ${phone#*-}\n&gt; 456-1414\n$ echo ${phone##*-}\n&gt; 1414\n\n\u66ff\u6362: ${variable/#pattern/string} \u6ce8\u610f, # \u5de6\u8fb9\u591a\u4e86\u4e00\u4e2a / , \u53f3\u8fb9\u591a\u4e86\u66ff\u6362\u5b57\u4e32\n\u4ee5\u4e0a, \u90fd\u662f\u4ece\u5934\u5339\u914d, \u4ece\u5c3e\u90e8\u5339\u914d\u628a # \u6362\u6210 % \n\u4efb\u610f\u4f4d\u7f6e\u5339\u914d\u5219\u6362\u6210/, \u6240\u4ee5\u5c31\u6210\u4e86\u4f60\u4eec\u6700\u719f\u6089\u7684\u8bed\u6cd5:varname/search/replace\n\u8fd9\u4e2a\u65f6\u5019\u518d\u56de\u5934\u770b/# , /%, \u4e0d\u8fc7\u662f/\u8bed\u6cd5\u7684\u4fee\u9970\u7b26\u7f62\u4e86(\u9650\u5b9a\u8d77\u59cb\u65b9\u5411)\n${varname^^}, ${varname,,} # \u8f6c\u5927\u5199, \u8f6c\u5c0f\u5199\u6570\u503c\u8fd0\u7b97\n\u9017\u53f7\u662f\u6c42\u503c, \u5982\n$ echo $((foo = 1+2, 3*4)) \u8f93\u51fa\u4e3a12, \u4f46foo\u7684\u503c\u662f3, \u4f9d\u6b21\u8ba1\u7b97, \u8f93\u51fa\u662f\u9017\u53f7\u540e\u9762\u7684\nexpr\u547d\u4ee4\u7b49\u540c\u4e8e\u53cc\u62ec\u53f7: expr 3+5 \u4e0e$((3+5))\u540c\u4e49\n\u884c\u64cd\u4f5c\nBash\u5185\u7f6eReadline\u5e93, \u9ed8\u8ba4\u91c7\u7528Emacs\u5feb\u6377\u952e, \u5207\u6362:\n$ set -o vi \u6216 $ set -o emacs\n\n\u5207\u6362\u76ee\u5f55/\u5806\u6808\n\u4e0d\u7ba1\u4f60cd\u5230\u54ea\u4e2a\u4e86\u54ea\u4e2a\u76ee\u5f55, \u60f3\u56de\u5230cd\u524d\u7684\u76ee\u5f55, \u7528cd -\u5c31\u884c\u4e86\npushd , popd\u5219\u53ef\u4ee5\u628a\u76ee\u5f55\u63a8\u5230\u5806\u6808\u91cc, \u6f14\u793a:\n$ pushd 2\n/test/1/2 /test/1\n$ pushd 3\n/test/1/2/3 /test/1/2 /test/1\n$ pushd 4\n/test/1/2/3/4 /test/1/2/3 /test/1/2 /test/1\n$ dirs  # \u5176\u5b9e\u6bcf\u4e00\u6b21pushd\u90fd\u4f1a\u628a\u5f53\u524d\u5806\u6808dirs\u51fa\u6765\n/test/1/2/3/4 /test/1/2/3 /test/1/2 /test/1\n$ cd /tmp\n$ dirs # \u89c2\u5bdf, cd\u5176\u5b9e\u53ea\u662f\u628a\u9876\u5c42\u7ed9\u6539\u4e86, \u4e0d\u4f1a\u589e\u51cf\u5c42\u7ea7\n/tmp /test/1/2/3 /test/1/2 /test/1\n$ cd /usr\n$ dirs  # \u9a8c\u7b97\n/usr /test/1/2/3 /test/1/2 /test/1\n\n\u73b0\u5728\u4f60\u77e5\u9053 \u4e86, cd\u6c38\u8fdc\u53ea\u662f\u66f4\u6539\u9876\u6808, \u5927\u591a\u6570\u60c5\u51b5\u4e0b, \u4f60\u53ef\u4ee5\u7528pushd\u6765\u66ff\u6362cd, \u8fd9\u6837\u4f60\u5c31\u6709\u4e86\u540e\u9000\u6743\u4e86\n\u6b64\u65f6\u4f60\u518dpopd, \u76ee\u5f55\u4f1a\u987a\u5229\u5207\u5230/test/1/2/3, \u4e0d\u7ba1\u4f60\u8fdb\u884c\u8fc7\u591a\u5c11\u6b21cd, \u7b2c\u4e8c\u5c42\u90fd\u4e0d\u4f1a\u53d8\u5e76\u4e14\u80fd\u76f4\u63a5pop\u51fa\u6765\n$\u5c0f\u7ec3\u4e60$\n\u5982\u679c\u4f60\u67e5\u770b\u5806\u6808, \u8981\u4ece\u7b2c4\u4e2a\u5f00\u59cb\u540e\u9000(0\u4e3a\u8d77\u59cb), \u90a3\u4e48\u53ef\u4ee5\u628a\u4ece3\u5f00\u59cb(\u4e0d\u662f4)\u7684\u8bb0\u5f55\u63d0\u5230\u9876\u5c42\u6765(\u7136\u540e\u518dpopd):\n$ pushd +3 (\u52a0\u53f7\u4e0d\u53ef\u7701)\n\u6ce8\u610f, \u6b64\u65f60, 1, 2\u90fd\u8fd8\u5728, \u53ea\u662f\u632a\u5230\u4e86\u5c3e\u5df4\n\u800cpopd +3\u5219\u4e0d\u662f\u201d\u79fb\u52a8\u201d, \u800c\u662f\u5220\u9664\u4e86, \u610f\u601d\u662f\u6b63\u5411\u5220\u9664\u7b2c3\u4e2a, \u5982\u679c\u4e0d\u5e26+, \u5219\u7406\u89e3\u4e3a\u5220\u96643\u4ee5\u540e\u7684\u6240\u6709\u5806\u6808(\u5373\u4ece4\u5f00\u59cb)\n\u6ce8\u610f: \u4e3a\u4ec0\u4e48\u8981\u4ece\u7b2c4\u4e2a\u5f00\u59cb\u9000\u8981\u628a\u4ece3\u5f00\u59cb\u7684\u79fb\u5230\u9876\u5c42\u5462?\n\u56e0\u4e3a\u5982\u4e0bdirs: /1, /2, /3 , \u4f60\u505apopd, \u662f\u4f1a\u56de\u5230/2\u7684\n\u53ef\u89c1\u9876\u6808\u6c38\u8fdc\u8868\u793a\u7684\u662f&quot;\u5f53\u524d&quot;\u76ee\u5f55. \u6240\u4ee5\u4f60\u81ea\u7136\u65e0\u6cd5\u8df3\u5230\u5f53\u524d\u76ee\u5f55.\n\u800cpushd, popd+\u6570\u5b57\u6539\u52a8\u7684\u53ea\u662f\u5806\u6808\u8868, \u4e0d\u662f\u76ee\u5f55, \u5373\u867d\u7136\u4f60\u7684\u76ee\u5f55\u6ca1\u53d8, \u4f46\u662f\u7cfb\u7edf\u8ba4\u4e3a\u4f60\u5728\u7b2c\u4e09\u5c42, \u8fd9\u4e2a\u65f6\u5019\u518d\u540e\u9000(popd)\u81ea\u7136\u5230\u4e86\u76ee\u5f55\u8868\u91cc\u7684\u4e0b\u4e00\u5c42/4.\u811a\u672c\nshebang\u884c#!/usr/bin/env bash \u7684\u5199\u6cd5\u662f\u4e3a\u4e86\u907f\u514d#!/bin/bash \u8fd9\u79cd\u5199\u6cd5\u65f6bash\u4e0d\u5728bin\u76ee\u5f55\nsource\u547d\u4ee4\u53ef\u4ee5 \u7528\u4e00\u4e2a\u70b9\u6765\u8868\u793a: . ~/.bash_profile\n\u8bfb\u7528\u6237\u7684\u8f93\u5165:\n$ read firstname lastname\n$ \u201cyou input: $firstname, $lastname\u201d # \u5982\u679cread\u540e\u6ca1\u6709\u7ed9\u53d8\u91cf\u540d, \u5219\u7531\u9ed8\u8ba4\u7684$REPLY\u6765\u53d6\u51fa\n\n\u8bfb\u6587\u4ef6:\nwhile read myline  # \u6bcf\u6b21\u8bfb\u4e00\u884c\ndo\n  echo &quot;$myline&quot;\ndone &lt; $filename  # \u6ce8\u610f\u8fd9\u91cc\u7279\u6b8a\u7684\u4f20\u53c2\u65b9\u5f0f, \u540c\u65f6, \u5982\u679c\u4e0d\u4f20\u5165\u6587\u4ef6\u8def\u5f84, \u5c31\u662f\u4e00\u4e2a\u65e0\u9650\u5faa\u73af\u4e86(read)\n\n\u5b58\u6570\u7ec4:\n$ read -a varname. #  -a \u53c2\u6570\u628a\u7528\u6237\u7684\u591a\u4e2a\u8f93\u5165\u5168\u5b58\u5230`varname`\u8fd9\u4e2a\u6570\u7ec4\u91cc\u4e86\n\n\u5176\u5b83\u6709\u7528\u7684:\n# -e \u53c2\u6570\u4f7f\u5f97\u7528\u6237\u5728\u8f93\u5165\u7684\u65f6\u5019\u80fd\u7528tab\u8865\u5168(\u5305\u542b\u6240\u6709readline\u5e93\u5feb\u6377\u952e),\n# \u5982\u679c\u6ca1\u6709\u8fd9\u4e2a\u53c2\u6570\u8f93\u5165\u6587\u672c\u7684\u65f6\u5019\u662f\u4e0d\u80fd\u4f7f\u7528\u5feb\u6377\u952e\u7684\n$ read -e -p \u201cplease input the path to the file\u201d \n# -s \u53ef\u4ee5\u9690\u85cf\u7528\u6237\u7684\u8f93\u5165, \u901a\u5e38\u7528\u4e8e\u5bc6\u7801\n$ read -s  -p \u201cinput password\u201d\n# -p \u663e\u7136\u5c31\u662f\u80fd\u76f4\u63a5\u663e\u793a\u8f93\u5165\u524d\u7684\u63d0\u793a\u4e86\n\n\u6761\u4ef6\u5224\u65ad\nif\u91cc\u9762\u7684test\u547d\u4ee4\ntest expression, [ expression], [[ expression ]] \u662f\u7b49\u4ef7\u7684(\u7b2c\u4e09\u79cd\u652f\u6301\u6b63\u5219)  \u7a7a\u683c\u4e0d\u80fd\u7701\n[ -? file ] \u67e5\u770b\u6587\u4ef6\u72b6\u6001\u6709\u975e\u5e38\u591a\u7684\u8868\u8fbe\u5f0f(\u53c2\u6570), \u5177\u4f53\u53c2\u9605https://wangdoc.com/bash/condition.html \u63a8\u8350\u9605\u8bfb\nfor\u5faa\u73af\nfor [ test ] in list; do \u2026 done \u5176\u4e2d\u7684in list\u5982\u679c\u7701\u7565, \u5219\u4ee3\u8868\u6240\u6709\u811a\u672c\u53c2\u6570\u201d$@\u201c:\n$ for filename; do echo \u201c$filename\u201d; done\n# \u7b49\u540c\u4e8e\n$ for filename in \u201c$@\u201c; do echo \u201c$filename\u201d; done\n\n\u540c\u7406, \u5982\u679c\u662f\u7528\u5728\u51fd\u6570\u4e2d, \u5219\u7b49\u4e8e\u6240\u6709\u51fd\u6570\u53c2\u6570.\n\u7528\u53cc\u62ec\u53f7, \u53d8\u91cf\u4e5f\u65e0\u9700\u52a0$\u4e86\nfor (( i=0; i&lt;5; i+=1 )); do echo $i; done\ncase in, \u5982\u679c\u5e0c\u671b\u4e00\u4e2a\u5339\u914d\u540e\u7ee7\u7eed\u505a\u4e0b\u4e00\u4e2a\u5339\u914d(passthrough), \u6bcf\u4e00\u4e2acase \u7684\u7ed3\u5c3e\u7528;;&amp;\u800c\u4e0d\u662f;; (\u591a\u4e86\u4e00\u4e2a&amp;)select\nselect\u751f\u6210\u7684\u83dc\u5355, \u9009\u62e9\u5e76\u6267\u884c\u547d\u4ee4\u540e, \u8981\u81ea\u884c\u5728do-done\u4f53\u5185\u7528break\u9000\u51fa, \u5426\u5219\u4f1a\u4e00\u76f4\u8981\u4f60\u9009\u62e9\u6570\u7ec4\n\u4ee5\u4e0b\u65b9\u5f0f\u58f0\u660e\u6570\u7ec4\n$ names=(hatter [5]=duchess Alice), \u6307\u5b9a\u4e860, 5, 6, \u5176\u5b83\u4e3a\u7a7a\u5b57\u7b26\u4e32\n$ mp3s=( *.mp3 )\n$ declare -a ARRAYNAME\n$ read -a ARRAYNAME\n\n\u8bfb\u53d6\u7684\u65f6\u5019: $ echo ${array[1]} \u5927\u62ec\u53f7\u4e0d\u53ef\u7701\n@\u4ecd\u7136\u662f\u8fd4\u56de\u6240\u6709\u5143\u7d20: $ echo ${array[@]} \u4f46\u662f\u5728for\u2026in\u4e2d, \u8981\u628a\u6574\u4e2a\u8868\u8fbe\u5f0f\u653e\u53cc\u5f15\u53f7\u4e2d:\n$ activities=( swimming &quot;water skiing&quot; canoeing &quot;white-water rafting&quot; surfing )\n$ for act in \u201c${activities[@]}\u201d; do\u2026.; done\n\n\u4e0d\u7136\u5176\u4e2d\u6709\u201dwater\u201d, \u201cskiing\u201d,\u201dwhite-water&quot;, rafting\u201d\u7b49\u90fd\u4f1a\u88ab\u62c6\u5f00(bug\u5427? \u5b57\u7b26\u4e32\u4e5f\u62c6)\n\u628a@\u6362\u6210*, \u52a0\u4e0a\u53cc\u5f15\u53f7, \u5219\u4f1a\u4e00\u4e2a\u4e2a\u5b57\u7b26\u8fd4\u56de\n\u62f7\u8d1d\u6570\u7ec4\u6700\u65b9\u4fbf\u7684\u65b9\u6cd5:\n$ hobbies=( \u201c${activities[@]}\u201d diving ) # \u987a\u4fbf\u6f14\u793a\u4e86\u4e3a\u6570\u7ec4\u6dfb\u52a0\u6210\u5458\n\n\u76f4\u63a5\u8d4b\u503c\u7ed9\u4e00\u4e2a\u6570\u7ec4(\u5373\u6ca1\u6709\u6307\u5b9a\u7d22\u5f15), \u5219\u662f\u8d4b\u7ed9\u7b2c0\u4e2a\u7ec4\u5458, \u540c\u7406, \u4f7f\u7528\u6570\u7ec4\u540d\u4e5f\u662f\u4f7f\u7528\u76840\u53f7\u7ec4\u5458\n# \u4ee5\u4e0b@\u53ef\u4ee5\u6362\u6210*\n$ echo ${#array[@]} # #\u4ecd\u7136\u7528\u4ee5\u8ba1\u6570, \u4f46\u662f\u5982\u679c\u4f20\u7684\u662f\u5177\u4f53\u7d22\u5f15, \u5219\u8fd4\u56de\u7684\u662f\u5bf9\u5e94\u9879\u7684\u5b57\u7b26\u4e32\u957f\u5ea6\n$ echo ${!array[@]} \u7528\u4ee5\u8fd4\u56de\u6709\u503c\u7684\u7d22\u5f15 (\u4e3a\u7a7a\u7684\u4e0d\u8fd4\u56de) # \u6d3b\u7528\u7684\u8bdd\u904d\u5386\u6570\u7ec4\u66f4\u9ad8\u6548\n$ echo ${array[@]:2:3} # \u5207\u7247\n$ arr+=(3 4 5) # \u8ffd\u52a0\n$ unset arr[2] # \u5220\u9664 , \u6216: \n$ arr[2]= # \u6216\n$ arr[2]=\u2018\u2019\n# \u4ee5\u4e0a\u4e09\u8005\u7b49\u6548, \n\n\u6839\u636e\u4e0a\u9762\u77e5\u8bc6$ arr= \u8868\u793a\u5220\u9664\u7b2c\u4e00\u4e2a\u6210\u5458, \u4f46\u662funset arr \u5219\u662f\u6e05\u7a7a\u6574\u4e2a\u6570\u7ec4\u4e86\n\u4e5f\u53ef\u4ee5\u7528\u5b57\u7b26\u4e32\u505a\u7d22\u5f15, \u5c31\u6210\u4e86\u5b57\u5178\u4e86:\n$ declare -A colors  # \u53d8\u6210\u5927\u5199\u5373\u53ef\n$ colors[\u201cred\u201d]=\u201c#ff0000\u201d\n\nset\u547d\u4ee4\n\u5355\u72ec\u4e00\u4e2aset\u4f1a\u663e\u793a\u6240\u6709\u73af\u5883\u53d8\u91cf\u548cShell\u51fd\u6570\n\u4ee5\u4e0b\u90fd\u53ef\u4ee5\u4ee5set -xxx \u7684\u65b9\u5f0f\u5199\u5728\u811a\u672c\u5934\u6216\u4efb\u4f55\u4f4d\u7f6e, \u5c31\u5f53\u4e00\u4e2a\u5373\u65f6\u5f00\u5173\u4f7f\u7528\u5427\n\u4e5f\u53ef\u4ee5\u5728\u8c03\u7528bash\u811a\u672c\u524d\u4f20\u5165\u6bd4\u5982: bash -eux script.sh\n-u: \u9047\u5230\u4e0d\u5b58\u5728\u7684\u53d8\u91cf\u5c31\u62a5\u9519, \u800c\u4e0d\u662f\u5ffd\u7565 \u4e0e -o nounset \u7b49\u4ef7\n-x: \u6bcf\u4e00\u4e2a\u547d\u4ee4\u6267\u884c\u524d\u4f1a\u5148\u6253\u5370\u51fa\u6765 \u7b49\u540c\u4e8e -o xtrace, \u5173\u95ed\u7528set +x (\u7ec4\u5408\u8d77\u6765\u7528\u5c31\u662f\u4e00\u4e2a\u5c0f\u73af\u5883)\n-e: \u6709\u9519\u8bef\u5c31\u4e2d\u6b62 \u7b49\u540c\u4e8e -o errexit\n-o pipefail: \u5373\u4f7f\u5728\u7ba1\u9053\u4e2d, \u6709\u9519\u4e5f\u4e2d\u6b62(-e \u5728\u7ba1\u9053\u4e2d\u4f1a\u5931\u6548)\n-n: -o noexec \u4e0d\u6267\u884c\u547d\u4ee4\u53ea\u68c0\u67e5\u8bed\u6cd5\n-f: -o noglob \u4e0d\u5bf9\u901a\u914d\u7b26\u8fdb\u884c\u6587\u4ef6\u540d(\u8def\u5f84)\u6269\u5c55  \u53ef\u7528+f \u5173\u95ed\n-v: -o verbose \u6253\u5370shell\u63a5\u6536\u5230\u7684\u6bcf\u4e00\u884c\u8f93\u5165     \u53ef\u7528+v \u5173\u95ed\n$ set -euxo pipefail \u4e00\u822c\u8fd9\u4e48\u56db\u4e2a\u8fde\u7528shopt\n\u5373: shell option\n\u540cset, \u76f4\u63a5shopt\u4e5f\u53ef\u4ee5\u5217\u51fa\u6240\u6709\u53c2\u6570, -s, -u\u5206\u522b\u662f\u662f\u6253\u5f00, \u5173\u95ed\u67d0\u4e2a\u53c2\u6570\nshopt \u53c2\u6570\u540d, \u53ef\u76f4\u63a5\u67e5\u8be2\u8be5\u53c2\u6570\u662f\u5426\u6253\u5f00\u5173\u95ed, \u4f46\u662f\u5982\u679c\u662f\u7528\u4e8e\u7f16\u7a0b, \u56e0\u4e3a\u8fd4\u56de\u662f\u5b57\u7b26\u4e32\u4e0d\u597d\u5224\u65ad, \u6240\u4ee5\u63d0\u4f9b\u4e86-q\u53c2\u6570(\u8fd4\u56de0/1, \u5206\u522b\u8868\u793a\u6253\u5f00/\u5173\u95ed)\n$ if shopt -q globstar; then \u2026; fi\n\n\u9664\u9519\n\n# \u5148\u770b\u76ee\u5f55\u5b58\u4e0d\u5b58\u5728, \u7136\u540e\u518d\u8fdb\u5165, \u7136\u540e\u518d\u6253\u5370\u51fa\u6765\u5c06\u8981\u5220\u9664\u7684\u6587\u4ef6, \n# \u8fd9\u662f\u6700\u5b89\u5168\u7684\u5220\u9664\u65b9\u6cd5\n# \u5426\u5219\u4e00\u65e6\u76ee\u5f55\u4e0d\u5b58\u5728, \u4e0d\u540c\u7684\u5199\u6cd5\u4f1a\u6709\u4e0d\u540c\u7684\u95ee\u9898\n[[ -d $dir_name ]] &amp;&amp; cd $dir_name &amp;&amp; echo rm *  \n\n\u5982\u679c\u5728\u6267\u884cbash\u811a\u672c\u524d\u52a0\u5165-x\u53c2\u6570, \u5219\u6bcf\u4e00\u6761\u547d\u4ee4\u6267\u884c\u524d\u90fd\u4f1a\u6253\u5370\u51fa\u6765 # \u7b49\u540c\u4e8eset -x\n\u6216\u8005\u5199\u5728\u811a\u672c\u7684shebang\u884c\u91cc\u4e5f\u884c\n\u6bcf\u4e00\u6761\u547d\u4ee4\u4f1a\u540c\u4e0a\u4e00\u4e2a\u6807\u8bc6\u7b26\u4f5c\u524d\u7f00, \u9ed8\u8ba4\u662f+, \u53ef\u4ee5\u7528export PS4=\u2018$LINENO +\u2019\u8fd9\u79cd\u65b9\u5f0f\u81ea\u5b9a\u4e49(\u6bd4\u5982\u73b0\u5728\u5c31\u52a0\u4e0a\u4e86\u884c\u53f7)\n$\u51e0\u4e2a\u73af\u5883\u53d8\u91cf$\n$LINENO: \u8fd9\u4e2a\u53d8\u91cf\u5728\u54ea, \u6253\u5370\u7684\u5c31\u662f\u8fd9\u4e00\u884c\u7684\u884c\u53f7\n$FUNCNAME: \u8fd4\u56de\u4e00\u4e2a\u6570\u7ec4, \u51fd\u6570\u8c03\u7528\u7684\u540d\u79f0\u5806\u6808, \u6700\u91cc\u5c42(\u5373\u672c\u51fd\u6570)\u7684\u662f0\n$BASH_SOURCE: \u8fd4\u56de\u4e00\u4e2a\u6570\u7ec4, \u51fd\u6570\u8c03\u7528\u7684\u811a\u672c\u5806\u6808, \u5373\u6bcf\u5c42\u8c03\u7528\u7684\u811a\u672c\u662f\u54ea\u4e00\u4e2a, \u6700\u91cc\u5c42(\u5373\u672c\u6587\u4ef6)\u7684\u662f0\n$BASH_LINENO: \u8fd4\u56de\u4e00\u4e2a\u6570\u7ec4, \u51fd\u6570\u6bcf\u4e00\u6b21\u88ab\u8c03\u7528\u65f6\u5728\u8be5\u811a\u672c\u7684\u884c\u53f7, \u540c\u6837\u4e5f\u662f\u4ece\u6700\u91cc\u5c42\u5f00\u59cb\n\u4f8b:\n${BASH_SOURCE[1] = main.sh  # [0] \u662f\u6587\u4ef6\u672c\u8eab, \u6240\u4ee5\u8981[1]\n${BASH_LINENO[0] = 17  # \u8c03\u7528\u6765\u6e90\u7684\u884c\u53f7  \u2014&gt; \u6240\u4ee5\u8c03\u7528\u6765\u6e90\u7684\u884c\u53f7\u7684\u7d22\u5f15\u6c38\u8fdc\u6bd4\u8c03\u7528\u6765\u6e90(\u6587\u4ef6)\u7684\u7d22\u5f15\u8981\u5c0f1\n${FUNCNAME[0]} = hello  # \u672c\u65b9\u6cd5(\u6216\u8005\u8bf4\u201d\u88ab\u8c03\u7528\u7684\u65b9\u6cd5\u201d)\n\n\u4e0a\u4f8b\u4ee3\u8868\u5728 main.sh\u768417\u884c\u8c03\u7528\u4e86hello()\u65b9\u6cd5 \n$\u5c0f\u7ec3\u4e60$\n#!/bin/bash\nsource lv2.sh   # \u5f15\u5165\u5916\u90e8\u811a\u672c\nfunction lv1method()\n{\n    echo ---------lv1------------\n    i=0\n    for v in &quot;${BASH_LINENO[@]}&quot;; do\n        echo &quot;bash_line_no[$((i++))]: $v&quot;\n    done\n    i=0\n    for v in &quot;${FUNCNAME[@]}&quot;; do\n        echo &quot;func_name[$((i++))]: $v&quot;\n    done\n    i=0\n    for v in &quot;${BASH_SOURCE[@]}&quot;; do\n        echo &quot;bash_source[$((i++))]: $v&quot;\n    done\n    lv2method # \u8c03\u7528\u5916\u90e8\u811a\u672c\u7684\u65b9\u6cd5\n}\n\n\u4ee5\u4e0a\u811a\u672c, \u591a\u505a\u51e0\u6b21\u5d4c\u5957,  \u6253\u5370\u51fa\u6765\u770b\u770b\u7d22\u5f15\u4e4b\u95f4\u7684\u5173\u7cfb\n\u8f93\u51fa:\n---------lv1------------\nbash_line_no[0]: 5\nbash_line_no[1]: 0\nfunc_name[0]: lv1method\nfunc_name[1]: main\nbash_source[0]: lv1.sh\nbash_source[1]: entry.sh\n---------lv2------------\nbash_line_no[0]: 21\nbash_line_no[1]: 5\nbash_line_no[2]: 0\nfunc_name[0]: lv2method\nfunc_name[1]: lv1method\nfunc_name[2]: main\nbash_source[0]: lv2.sh\nbash_source[1]: lv1.sh\nbash_source[2]: entry.sh\n---------lv3------------\nbash_line_no[0]: 19\nbash_line_no[1]: 21\nbash_line_no[2]: 5\nbash_line_no[3]: 0\nfunc_name[0]: lv3method\nfunc_name[1]: lv2method\nfunc_name[2]: lv1method\nfunc_name[3]: main\nbash_source[0]: lv3.sh\nbash_source[1]: lv2.sh\nbash_source[2]: lv1.sh\nbash_source[3]: entry.sh\n\n\u4e34\u65f6\u6587\u4ef6\n\u5b89\u5168\u7684\u7528\u6cd5:\ntrap 'rm -f &quot;$TMPFILE&quot;\u2019 EXIT  # \u9000\u51fa\u65f6\u5220\u9664\u4e34\u65f6\u6587\u4ef6)\nTMPFILE=$(mktemp) || exit 1  # \u7528mktemp\u547d\u4ee4\u5efa\u7acb\u4e34\u65f6\u6587\u4ef6\u53ef\u4ee5\u53ea\u6709\u672c\u4eba\u80fd\u8bfb, \u5982\u679c\u5931\u8d25\u5c31\u9000\u51fa\necho &quot;Our temp file is $TMPFILE\u201d\n\n\u53c2\u6570: \n-d: \u521b\u5efa\u7684\u662f\u76ee\u5f55\n-p: \u6307\u5b9a\u76ee\u5f55\n-t: \u6307\u5b9a\u6a21\u677f\n\u5982 mktemp -t aaa.XXXXXXX \u80fd\u751f\u6210/tmp/aaa.yZ1HgZV(\u4e0eX\u4e2a\u6570\u76f8\u540c)\ntrap\u662f\u7528\u6765\u54cd\u5e94\u7cfb\u7edf\u4fe1\u53f7\u7684, \u5982ctrl+c\u4ea7\u751f\u4e2d\u65ad\u4fe1\u53f7SIGINT\n$ trap -l \u5217\u51fa\u6240\u6709\u4fe1\u53f7(\u81ea\u5df1\u6253\u5370\u51fa\u6765\u770b\u770b)\ntrap\u7684\u683c\u5f0f: $ trap [\u52a8\u4f5c] [\u4fe1\u53f71] [\u4fe1\u53f72] ...\ntrap \u547d\u4ee4\u63a5\u7684\u4fe1\u53f7\u6709\u5982\u4e0b\nHUP\uff1a\u7f16\u53f71\uff0c\u811a\u672c\u4e0e\u6240\u5728\u7684\u7ec8\u7aef\u8131\u79bb\u8054\u7cfb\u3002\nINT\uff1a\u7f16\u53f72\uff0c\u7528\u6237\u6309\u4e0b Ctrl + C\uff0c\u610f\u56fe\u8ba9\u811a\u672c\u4e2d\u6b62\u8fd0\u884c\u3002\nQUIT\uff1a\u7f16\u53f73\uff0c\u7528\u6237\u6309\u4e0b Ctrl + \u659c\u6760\uff0c\u610f\u56fe\u9000\u51fa\u811a\u672c\u3002\nKILL\uff1a\u7f16\u53f79\uff0c\u8be5\u4fe1\u53f7\u7528\u4e8e\u6740\u6b7b\u8fdb\u7a0b\u3002\nTERM\uff1a\u7f16\u53f715\uff0c\u8fd9\u662fkill\u547d\u4ee4\u53d1\u51fa\u7684\u9ed8\u8ba4\u4fe1\u53f7\u3002\nEXIT\uff1a\u7f16\u53f70\uff0c\u8fd9\u4e0d\u662f\u7cfb\u7edf\u4fe1\u53f7\uff0c\u800c\u662f Bash \u811a\u672c\u7279\u6709\u7684\u4fe1\u53f7\uff0c\u4e0d\u7ba1\u4ec0\u4e48\u60c5\u51b5\uff0c\u53ea\u8981\u9000\u51fa\u811a\u672c\u5c31\u4f1a\u4ea7\u751f\u3002\n\n\u5982\u679ctrap\u8981\u6267\u884c\u591a\u6761\u547d\u4ee4, \u53ef\u4ee5\u5c01\u88c5\u5230\u51fd\u6570\u91cc, \u547d\u4ee4\u7684\u4f4d\u7f6e\u5199\u51fd\u6570:$ trap func_name EXIT\u542f\u52a8\u73af\u5883\n\u767b\u5f55session\u4f9d\u6b21\u542f\u52a8\u5982\u4e0b\u811a\u672c:\n/etc/profile\n/etc/profile.d # \u76ee\u5f55\u4e0b\u7684\u6240\u6709.sh\u6587\u4ef6\n~/.bash_profile # \u5982\u679c\u6709, \u5219\u4e2d\u6b62\n~/.bash_login # \u5982\u679c\u6709, \u5219\u4e2d\u6b62  \u6b64\u4e3aC shell \u521d\u59cb\u5316\u811a\u672c\n~/.profile # Bourne shell \u548c Korn shell \u521d\u59cb\u5316\u811a\u672c\n\n\u901a\u8fc7$ bash - -login \u53c2\u6570, \u53ef\u4ee5\u5f3a\u5236\u6267\u884c\u4ee5\u4e0a\u811a\u672c\n\u975e\u767b\u5f55session\n/etc/bash.bashrc # \u6240\u6709\u7528\u6237\u90fd\u6267\u884c\n~/.bashrc # \u5f53\u524d\u7528\u6237\u7684\n\n\u542f\u52a8\u53c2\u6570:\n-n: \u4e0d\u6267\u884c\u811a\u672c, \u53ea\u68c0\u67e5\u8bed\u6cd5\n-v: \u6267\u884c\u8bed\u53e5\u524d\u5148\u8f93\u51fa\n-x: \u6267\u884c\u8bed\u53e5\u540e\u8f93\u51fa\u8be5\u8bed\u53e5~/.bash_logout \u9000\u51fa\u65f6\u8981\u6267\u884c\u7684\u547d\u4ee4\n$ include /etc/inputrc \u5728~/.inputrc\u91cc\u52a0\u8fd9\u4e00\u884c, \u53ef\u4ee5\u5728\u91cc\u9762\u81ea\u5b9a\u4e49\u5feb\u6377\u952e\u547d\u4ee4\u63d0\u793a\u7b26\n\u4e0a\u9762\u63d0\u5230\u8fc7$PS4\u80fd\u4fee\u6539set -x\u65f6\u6253\u5370\u7684\u6bcf\u53e5\u8bed\u53e5\u524d\u9762\u7684+\u53f7\n\u547d\u4ee4\u63d0\u793a\u7b26\u9ed8\u8ba4\u7684$\u7b26\u53f7(\u6839\u7528\u6237\u662f#\u53f7)\u5219\u53ef\u4ee5\u7528$PS1\u6765\u4fee\u6539, \u600e\u4e48\u6539\u53c2\u8003https://wangdoc.com/bash/prompt.html\n$PS2\u8868\u793a\u7684\u662f\u8f93\u5165\u65f6\u6298\u884c\u7684\u63d0\u793a\u7b26, \u9ed8\u8ba4\u4e3a&gt;\n$PS3\u8868\u793a\u4f7f\u7528select\u547d\u4ee4\u65f6\u7cfb\u7edf\u8f93\u5165\u83dc\u5355\u7684\u63d0\u793a\u7b26", "categories": [{"name": "posts", "slug": "posts", "permalink": "/category/posts/"}], "tags": [{"name": "bash", "slug": "bash", "permalink": "/tag/bash/"}, {"name": "sh", "slug": "sh", "permalink": "/tag/sh/"}, {"name": "shell", "slug": "shell", "permalink": "/tag/shell/"}]}, {"title": "iOS\u5c4f\u5e55\u6eda\u52a8\u65f6Timer\u4fdd\u6301\u5de5\u4f5c\u7684\u51e0\u79cd\u65b9\u5f0f", "date": "2020-03-22T00:00:00-00.00", "path": "/archives/iOS%E5%B1%8F%E5%B9%95%E6%BB%9A%E5%8A%A8%E6%97%B6Timer%E4%BF%9D%E6%8C%81%E5%B7%A5%E4%BD%9C%E7%9A%84%E5%87%A0%E7%A7%8D%E6%96%B9%E5%BC%8F/", "text": "iOS\u5f53\u524d\u7ebf\u7a0b\u7684RunLoop\u5728TableView\u7b49scrollView\u6ed1\u52a8\u65f6\u5c06DefaultMode\u5207\u6362\u5230\u4e86TrackingRunLoopMode\u3002\u56e0\u4e3aTimer\u9ed8\u8ba4\u662f\u6dfb\u52a0\u5728RunLoop\u4e0a\u7684DefaultMode\u4e0a\u7684\uff0c\u5f53Mode\u5207\u6362\u540eTimer\u5c31\u505c\u6b62\u4e86\u8fd0\u884c\u3002\n\u5982\u8fd9\u6837:Timer.scheduledTimer(withTimeInterval: 1, repeats: true) { (timer) in\n    let dateFormatter = DateFormatter()\n    dateFormatter.dateFormat = &quot;HH:mm:ss&quot;\n    self.timeLabel.text = &quot;\\(dateFormatter.string(from: Date()))&quot;\n}\n\n\u672c\u6587\u8bb0\u5f55\u5982\u4e0b\u56db\u79cd\u65b9\u5f0f:\n\u5c06NSTimer\u6dfb\u52a0\u5230\u5f53\u524d\u7ebf\u7a0b\u6240\u5bf9\u5e94\u7684RunLoop\u4e2d\u7684commonModes\u4e2d\u3002\n\u901a\u8fc7Dispatch\u4e2d\u7684TimerSource\u6765\u5b9e\u73b0\u5b9a\u65f6\u5668\u3002\n\u662f\u5f00\u542f\u4e00\u4e2a\u65b0\u7684\u5b50\u7ebf\u7a0b\uff0c\u5c06NSTimer\u6dfb\u52a0\u5230\u8fd9\u4e2a\u5b50\u7ebf\u7a0b\u4e2d\u7684RunLoop\u4e2d\uff0c\u5e76\u4f7f\u7528DefaultRunLoopModes\u6765\u6267\u884c\u3002\n\u4f7f\u7528CADisplayLink\u6765\u5b9e\u73b0\u3002\n\nCommonModes\noverride func awakeFromNib() {\n    super.awakeFromNib()\n\n    let timer = Timer.scheduledTimer(withTimeInterval: 1, repeats: true) { (timer) in\n        let dateFormatter = DateFormatter()\n        dateFormatter.dateFormat = &quot;HH:mm:ss&quot;\n        self.timeLabel.text = &quot;\\(dateFormatter.string(from: Date()))&quot;\n    }\n\n    RunLoop.current.add(timer, forMode: .commonModes)\n}\n\n\u5b50\u7ebf\u7a0b/\u5f02\u6b65 + DefaultMode\noverride func awakeFromNib() {\n    super.awakeFromNib()\n    DispatchQueue.global().async {\n        let timer = Timer.scheduledTimer(withTimeInterval: 1, repeats: true) { (timer) in\n            let dateFormatter = DateFormatter()\n            dateFormatter.dateFormat = &quot;HH:mm:ss&quot;\n            DispatchQueue.main.async {\n                self.timeLabel.text = &quot;\\(dateFormatter.string(from: Date()))&quot;\n            }\n        }\n        RunLoop.current.add(timer, forMode: .defaultRunLoopMode)\n        RunLoop.current.run()\n    }\n}\n\nDispatchTimerSource\nGCD\u7684\u77e5\u8bc6\u70b9override func awakeFromNib() {\n    let queue: DispatchQueue = DispatchQueue.global()   //\u4e5f\u53ef\u4ee5\u7528mainQueue\u6765\u5b9e\u73b0\n    let source = DispatchSource.makeTimerSource(flags: DispatchSource.TimerFlags(rawValue: 0), queue: queue)\n    let timer = UInt64(1) * NSEC_PER_SEC\n\n    source.scheduleRepeating(deadline: DispatchTime.init(uptimeNanoseconds: UInt64(timer)), interval: DispatchTimeInterval.seconds(Int(1)), leeway: DispatchTimeInterval.seconds(0))\n\n    let timeout = 1\n    let dateFormatter = DateFormatter()\n    dateFormatter.dateFormat = &quot;HH:mm:ss&quot;\n    source.setEventHandler {\n        if(timeout &lt; 0) {\n            source.cancel()\n        }\n\n        DispatchQueue.main.async {\n            self.timeLabel.text = &quot;\\(dateFormatter.string(from: Date()))&quot;\n        }\n    }\n    source.resume()\n}\n\nCADisplayLink\nCADisplayLink\u53ef\u4ee5\u6dfb\u52a0\u5230RunLoop\u4e2d\uff0cRunLoop\u7684\u6bcf\u4e00\u6b21\u5faa\u73af\u90fd\u4f1a\u89e6\u53d1CADisplayLink\u6240\u5173\u8054\u7684\u65b9\u6cd5\u3002\u5728\u5c4f\u5e55\u4e0d\u5361\u987f\u7684\u60c5\u51b5\u4e0b\uff0c\u6bcf\u6b21\u5faa\u73af\u7684\u65f6\u95f4\u65f61/60\u79d2\u3002override func awakeFromNib() {\n    super.awakeFromNib()\n    DispatchQueue.global().async {\n        let displayLink = CADisplayLink(target: self, selector: #selector(self.update))\n        displayLink.add(to: RunLoop.current, forMode: .defaultRunLoopMode)\n        RunLoop.current.run()\n    }\n}\n\nfunc update() {\n    let dateFormatter = DateFormatter()\n    dateFormatter.dateFormat = &quot;HH:mm:ss&quot;\n    let time = &quot;\\(dateFormatter.string(from: Date()))&quot;\n\n    if time != currentTime {\n        currentTime = time\n        DispatchQueue.main.async {\n            self.timeLabel.text = self.currentTime\n        }\n    }\n}\n\n\u8be6\u7ec6\u5185\u5bb9\u8bf7\u9605\u8bfb\u539f\u6587", "categories": [{"name": "posts", "slug": "posts", "permalink": "/category/posts/"}], "tags": [{"name": "timer", "slug": "timer", "permalink": "/tag/timer/"}, {"name": "runloop", "slug": "runloop", "permalink": "/tag/runloop/"}, {"name": "cadisplaylink", "slug": "cadisplaylink", "permalink": "/tag/cadisplaylink/"}]}, {"title": "MacOS\u6dfb\u52a0\u81ea\u542f\u52a8\u811a\u672c", "date": "2020-03-21T00:00:00-00.00", "path": "/archives/MacOS%E6%B7%BB%E5%8A%A0%E8%87%AA%E5%90%AF%E5%8A%A8%E8%84%9A%E6%9C%AC/", "text": "MacOS\u4e0b\u6dfb\u52a0\u81ea\u542f\u52a8\u811a\u672c\u6709\u5f88\u591a\u65b9\u6cd5, \u5728\u4e00\u7bc7\u77e5\u4e4e\u6587\u7ae0\u4e2d\u4e86\u89e3\u5230Launchd\u66ff\u4ee3\u4e86\u8fc7\u53bb\u7684init, rc, init.d, rc.d, SystemStarter, inted/xinetd, watchdogd\u7b49, \u5efa\u8bae\u7528Launchd.\n\u5f53\u7136\u8fd8\u6709\u522b\u7684Automator, Apple Script\u7b49\u65b9\u5f0f(\u5e95\u5c42\u672a\u7814\u7a76), \u611f\u5174\u8da3\u7684\u81ea\u5df1\u641c\u7d22, \u6211\u9009\u62e9\u4e86\u76f4\u63a5Launchd, \u7ed3\u5408so\u4e0a\u7684\u8fd9\u7bc7\u6587\u7ae0:\n\u7f16\u5199\u81ea\u5df1\u7684\u811a\u672c, \u6dfb\u52a0\u53ef\u6267\u884c\u6743\u9650chmod a+x myscript.sh\n\u7f16\u5199Launchd\u914d\u7f6e\u6587\u4ef6(.plist\u6587\u4ef6)\n\u7ed3\u5408\u4e0a\u8ff0\u4e24\u7bc7\u6587\u7ae0, \u786e\u5b9a\u5728\u7cfb\u7edf\u542f\u52a8\u8fd8\u662f\u7528\u6237\u542f\u52a8\u65f6\u8fd0\u884c\u811a\u672c, \u6211\u9009\u62e9\u7684\u662f\u7528\u6237\u76ee\u5f55(~/Library/LaunchAgents/)\nload\u8fd9\u4e2a\u914d\u7f6e: launchctl load -w ~/Library/LaunchAgents/com.service.name.plist\n\u767b\u5165\u767b\u51fa\u6d4b\u8bd5, \u6216: launchctl start com.service.name\n\n\u6ce8:\n\u53ef\u6267\u884c\u811a\u672c\u91cc\u7684\u8def\u5f84\u6709\u7a7a\u683c\u9700\u8981\u8f6c\u4e49\n\u4f46plist\u6587\u4ef6\u91cc&lt;string&gt;\u6807\u7b7e\u91cc\u7684\u76ee\u5f55\u5982\u679c\u6709\u7a7a\u683c, \u4e0d\u9700\u8981\u8f6c\u4e49\nload\u5e26-w\u53c2\u6570\u53c2\u89c1\u8fd9\u7bc7\u6587\u7ae0\n\u5982\u679c\u51fa\u9519, \u8fd0\u884cConsole\u5e94\u7528\u67e5\u770b\u65e5\u5fd7, \u6216\u53c2\u8003\u8fd9\u7bc7\u6587\u7ae0, \u5b9a\u5411\u65e5\u5fd7\u8f93\u51fa\u6587\u4ef6\n\n\u5373\u5728.plist\u6587\u4ef6\u91cc\u6dfb\u52a0:&lt;key&gt;StandardOutPath&lt;/key&gt;\n&lt;string&gt;/var/log/mylog.log&lt;/string&gt;\n\n\u9644: .plist\u6587\u4ef6\u793a\u4f8b\n&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;\n&lt;!DOCTYPE plist PUBLIC &quot;-//Apple Computer//DTD PLIST 1.0//EN&quot; &quot;http://www.apple.com/DTDs/PropertyList-1.0.dtd&quot;&gt;\n&lt;plist version=&quot;1.0&quot;&gt;\n    &lt;dict&gt;\n    \t&lt;key&gt;Label&lt;/key&gt;\n    \t&lt;string&gt;com.service.name&lt;/string&gt;\n    \t&lt;key&gt;ProgramArguments&lt;/key&gt;\n    \t&lt;array&gt;\n    \t\t&lt;string&gt;/path/to/my/script.sh&lt;/string&gt;\n    \t&lt;/array&gt;\n    \t&lt;key&gt;RunAtLoad&lt;/key&gt;\n    \t&lt;true/&gt;\n    &lt;/dict&gt;\n&lt;/plist&gt;\n\n\u5982\u679c\u6267\u884c\u7684\u811a\u672c\u5c31\u4e00\u53e5\u8bdd, \u4f60\u53ef\u80fd\u5e0c\u671b\u76f4\u63a5\u5728.plist\u6587\u4ef6\u91cc\u8fd0\u884c, \u800c\u4e0d\u662f\u989d\u5916\u518d\u591a\u751f\u6210\u4e00\u4e2a\u811a\u672c\u5427? (source)\n&lt;key&gt;ProgramArguments&lt;/key&gt;\n&lt;array&gt;\n        &lt;string&gt;/bin/bash&lt;/string&gt;\n        &lt;string&gt;-c&lt;/string&gt;\n        &lt;string&gt;ls -1 | grep *.txt | echo &amp;gt; allTextFiles&lt;/string&gt;\n&lt;/array&gt;\n\n\u7ee7\u7eed, \u5982\u679c\u8fd8\u60f3\u4ee5root\u6765\u6267\u884c\u811a\u672c, \u7efc\u5408\u8d77\u6765, \u6211\u7684\u5b9e\u73b0\u5982\u4e0b:cp com.run.udp2raw.plist /Library/LaunchDaemons\ncd /Library/LaunchDaemons\nsudo launchctl load -w com.run.udp2raw.plist\nsudo launchctl start com.run.udp2raw\n\n\u5176\u4e2dudp2raw\u5bf9\u5e94\u7684\u547d\u4ee4\u662f\u9700\u8981root\u6743\u9650\u7684, \u5b9e\u6d4b\u901a\u8fc7. \u6211\u9009\u62e9\u7684\u662f/Library/LaunchDaemons/\n\u6ce8: \u552f\u4e00\u8981\u6ce8\u610f\u7684\u5730\u65b9, \u5c31\u662f\u6700\u540e\u4e24\u884c, load\u548cstart\u547d\u4ee4\u90fd\u9700\u8981\u52a0sudo. \u6ca1\u6709\u52a0\u7684\u65f6\u5019\u6ca1\u6709\u62a5\u9519, \u4f46\u662f\u6ca1\u6709\u8fd0\u884c\u6210\u529f.\n\u9644: folders and usage\n|------------------|-----------------------------------|---------------------------------------------------|\n| User Agents      | ~/Library/LaunchAgents            | Currently logged in user\n|------------------|-----------------------------------|---------------------------------------------------|\n| Global Agents    | /Library/LaunchAgents             | Currently logged in user\n|------------------|-----------------------------------|---------------------------------------------------|\n| Global Daemons   | /Library/LaunchDaemons            | root or the user specified with the key UserName\n|------------------|-----------------------------------|---------------------------------------------------|\n| System Agents    | /System/Library/LaunchAgents      | Currently logged in user\n|------------------|-----------------------------------|---------------------------------------------------|\n| System Daemons   | /System/Library/LaunchDaemons     | root or the user specified with the key UserName\n|------------------|-----------------------------------|---------------------------------------------------|\n\n", "categories": [{"name": "posts", "slug": "posts", "permalink": "/category/posts/"}], "tags": [{"name": "macos", "slug": "macos", "permalink": "/tag/macos/"}]}, {"title": "apple-store\u94fe\u63a5\u683c\u5f0f\u6587\u6863", "date": "2020-03-12T00:00:00-00.00", "path": "/archives/apple-store%E9%93%BE%E6%8E%A5%E6%A0%BC%E5%BC%8F%E6%96%87%E6%A1%A3/", "text": "The app on Appstore has specific URL format\u00a0http://itunes.apple.com/[country-code]/app/[app-name]/id+[id_value]?mt=[1...12]\ncountry-code can be\u00a0us\u00a0for\u00a0united states,\u00a0in\u00a0for\u00a0india\u00a0etc\nmt stands for Media Type\nValue for mt can be anything from 1 to 12 and each assigned to specific category\ni.\u00a08 for iOS apps\nii.\u00a012 for Mac apps\u6765\u6e90:\u00a0stackoverflow", "categories": [{"name": "posts", "slug": "posts", "permalink": "/category/posts/"}], "tags": [{"name": "app store", "slug": "app store", "permalink": "/tag/app%20store/"}]}, {"title": "Fixing-Chrome-58+-[missing_subjectAltName]-with-openssl-when-using-sel", "date": "2020-01-01T00:00:00-00.00", "path": "/archives/Fixing-Chrome-58%2B-%5Bmissing_subjectAltName%5D-with-openssl-when-using-sel/", "text": "\u539f\u6587\u94fe\u63a5\u8bf4\u5728\u524d\u9762\n\n\ncreateselfsignedcertificate.sh\u6587\u4ef6\u91cc\u7684sudo\u5220\u6389\u4e86\n\n\n\nserver.csr.cnf\u91ccdn\u91cc\u9762\u7684\u5185\u5bb9\u8bf7\u6539\u6210\u81ea\u5df1\u7684\nv3.ext\u91cc\u9762\u7684DNS.1\u4e5f\u66f4\u6539\u4e3a\u81ea\u5df1\u7684server\n\u672c\u6765\u6211\u53ea\u60f3\u7ed1\u4e00\u4e2a\u56fa\u5b9a\u7684 IP, \u57fa\u672c\u901a\u8fc7, \u4f46\u662f\u5728mac\u7684chrome58\u4e0b, \u4ecd\u7136\u8fc7\u4e0d\u4e86, \u6700\u7ec8\u8fd8\u662f\u901a\u8fc7\u57df\u540d\u89e3\u51b3\n\n\u4e0a\u4e00\u4e2a\u5728 chrome58\u4e0b\u7ec8\u4e8e\u53d8\u7eff\u7684\u56fe\u7247\n\u539f\u6587\u8f6c\u8f7d\nSince version 58, Chrome requires SSL certificates to use SAN (Subject Alternative Name) instead of the popular Common Name (CN), thus\u00a0CN support has been removed.If you're using self signed certificates (but not only!) having only CN defined, you get an error like this when calling a website using the self signed certificate:\n\nHere's how to create a self signed certificate with SAN using\u00a0opensslFirst, lets create a root CA cert using\u00a0createRootCA.sh:#!/usr/bin/env bash\nmkdir ~/ssl/openssl genrsa -des3 -out ~/ssl/rootCA.key 2048\nopenssl req -x509 -new -nodes -key ~/ssl/rootCA.key -sha256 -days 1024 -out ~/ssl/rootCA.pem\n\nNext, create a file\u00a0createselfsignedcertificate.sh:#!/usr/bin/env bash\nopenssl req -new -sha256 -nodes -out server.csr -newkey rsa:2048 -keyout server.key -config &lt;( cat server.csr.cnf )\nopenssl x509 -req -in server.csr -CA ~/ssl/rootCA.pem -CAkey ~/ssl/rootCA.key -CAcreateserial -out server.crt -days 500 -sha256 -extfile v3.ext\n\nThen, create the openssl configuration file\u00a0server.csr.cnf\n\u00a0referenced in the openssl command above:\n[req]\ndefault_bits = 2048\nprompt = no\ndefault_md = sha256\ndistinguished_name = dn\n\n[dn]\nC=US\nST=New York\nL=Rochester\nO=End Point\nOU=Testing Domain\nemailAddress=you@example.com\nCN = localhost\n\nNow we need to create the\u00a0v3.ext\u00a0file in order to create a X509 v3 certificate instead of a v1 which is the default when not specifying a extension file:\nauthorityKeyIdentifier=keyid,issuer\nbasicConstraints=CA:FALSE\nkeyUsage = digitalSignature, nonRepudiation, keyEncipherment, dataEncipherment\nsubjectAltName = @alt_names\n\n[alt_names]\nDNS.1 = localhost\n\nIn order to create your cert, first run\u00a0createRootCA.sh\u00a0which we created first. Next, run\u00a0createselfsignedcertificate.sh\u00a0to create the self signed cert using\u00a0localhost\u00a0as the SAN and CN.\nAfter adding the\u00a0rootCA.pem\u00a0to the list of your trusted root CAs, you can use the\u00a0server.key and\u00a0server.crt\u00a0in your web server and browse\u00a0https://localhost%C2%A0using Chrome 58 or later:\n\nYou can also verify your certificate to contain the SAN by calling\nopenssl x509 -text -in server.crt -noout\n\nWatch for this line\u00a0Version: 3 (0x2)\u00a0as well as\u00a0X509v3 Subject Alternative Name:\u00a0(and below).\nHappy self signing!", "categories": [{"name": "posts", "slug": "posts", "permalink": "/category/posts/"}], "tags": [{"name": "chrome", "slug": "chrome", "permalink": "/tag/chrome/"}]}, {"title": "\u5c06\u5171\u4eab\u6587\u4ef6\u5939\u7528\u4f5cTime-Machine\u5e76\u52a0\u5bc6", "date": "2019-11-21T00:00:00-00.00", "path": "/archives/%E5%B0%86%E5%85%B1%E4%BA%AB%E6%96%87%E4%BB%B6%E5%A4%B9%E7%94%A8%E4%BD%9CTime-Machine%E5%B9%B6%E5%8A%A0%E5%AF%86/", "text": "\u600e\u4e48\u5728\u5c40\u57df\u7f51\u521b\u5efa\u4e00\u4e2a\u5171\u4eab\u6587\u4ef6\u5939\u4e0d\u5728\u6b64\u6587\u8ba8\u8bba\u8303\u56f4\u5185, \u6bd4\u5982windows\u6587\u4ef6\u5939\u7b80\u5355\u53f3\u952e\u5171\u4eab\u4e00\u4e0b, \u5c31\u80fd\u8d70\u5b8c\u672c\u6559\u7a0b. \u4ee5\u4e0b\u662f\u5728macOS\u4e0a\u8bbe\u7f6eTime Machine\u7684\u64cd\u4f5c.#Step 1: \u5404\u79cd\u547d\u540d\n\u6ca1\u4ec0\u4e48\u7528\u7684\u7b2c\u4e00\u6b65, \u5982\u679c\u4f60\u6709\u591a\u53f0\u7535\u8111, \u90a3\u5c31\u6700\u597d\u7528\u540d\u5b57\u548cMAC\u5730\u5740\u6765\u4f5c\u5907\u4efd\u7684\u540d\u5b57, \u9001\u4f5b\u9001\u5230\u897f:\nMAC_ADDRESS=`ifconfig en0 | grep ether | awk '{print $2}' | sed 's/://g'`\nSHARE_NAME=`scutil --get ComputerName`\nIMG_NAME=${SHARE_NAME}_${MAC_ADDRESS}.sparsebundle\necho $IMG_NAME\n\n#Step 2: \u521b\u5efa\u5e76\u52a0\u5bc6\u4e00\u4e2a\u955c\u50cf\n\u590d\u5236\u7c98\u8d34\u524d\u8bb0\u5f97\u66f4\u6539\u4e00\u4e0b'MAXSIZE', \u8bbe\u4e3a\u81ea\u5df1\u60f3\u8981\u7684\u5927\u5c0f. \u4e3a\u4e86\u6015\u4eba\u4e0d\u770b\u6587\u5b57\u76f4\u63a5\u590d\u5236, \u6211\u8bbe\u5b9a\u4e86\u4e00\u4e2a\u5408\u7406\u7684350G\nMAXSIZE=350g\nhdiutil create -size $MAXSIZE -type SPARSEBUNDLE -nospotlight -volname &quot;Backup of $SHARE_NAME&quot; -fs &quot;Case-sensitive Journaled HFS+&quot; -verbose unencrypted_$IMG_NAME\nhdiutil convert -format UDSB -o &quot;$IMG_NAME&quot; -encryption AES-128 &quot;unencrypted_$IMG_NAME&quot;\nrm -Rf &quot;unencrypted_$IMG_NAME&quot;\n\n\u6ce8\u610f\u4e24\u70b9:\n\u8be5\u811a\u672c\u5148\u521b\u5efa\u4e86\u4e00\u4e2a\u672a\u52a0\u5bc6\u7684image(\u5176\u5b9e\u662f\u4e00\u4e2a\u6587\u4ef6\u5939), \u968f\u540e\u52a0\u5bc6, \u8fc7\u7a0b\u4e2d\u4f1a\u8be2\u95ee\u5bc6\u7801, \u6700\u540e\u5220\u9664\u672a\u52a0\u5bc6\u7684image\n\u6587\u4ef6\u4f1a\u521b\u5efa\u5728\u7528\u6237\u4e3b\u76ee\u5f55, \u5982\u679c\u7a7a\u95f4\u4e0d\u591f, \u53ef\u4ee5\u8bfb\u4e00\u4e0bhdiutil\u7684\u6587\u6863, \u81ea\u884c\u8bbe\u5b9a\u5230\u8fdc\u7a0b\u5171\u4eab\u6587\u4ef6\u5939\u53bb. \u5982\u679c\u6309\u672c\u811a\u672c, \u90a3\u4e48\u8bf7\u81ea\u884c\u79fb\u52a8\u5230\u5171\u4eab\u76ee\u5f55\n\n#Step 3: \u8bbe\u7f6eTime Machine\n\u53cc\u51fb\u5171\u4eab\u6587\u4ef6\u5939\u91cc\u7684\u955c\u50cf, \u8f93\u5165\u4e0a\u4e00\u6b65\u8bbe\u7f6e\u7684\u5bc6\u7801, \u6b64\u65f6\u4f1amount\u5230\u672c\u5730, \u83dc\u5355\u680f\u4e0a\u7684Time Machine\u7684\u9009\u62e9\u5907\u4efd\u6587\u4ef6\u5939\u529f\u80fd\u91cc\u5e94\u8be5\u80fd\u770b\u5230\u8fd9\u4e2a\u76d8, \u4f46\u662f\u4f60\u4e0d\u80fd\u7528\u5b83, \u6211\u4eec\u7528\u547d\u4ee4\u6765\u5173\u8054:\ndefaults write com.apple.systempreferences TMShowUnsupportedNetworkVolumes 1\nsudo tmutil setdestination &quot;/Volumes/Backup of $SHARE_NAME&quot;\n\n\u6b64\u65f6\u518d\u6253\u5f00\u65f6\u5149\u673a\u5668, \u5c31\u53ef\u4ee5\u770b\u5230\u5df2\u7ecf\u81ea\u52a8\u5173\u8054\u4e0a\u4e86(\u4f60\u65e0\u9700\u53bb\u9009\u62e9\u5907\u4efd\u786c\u76d8).\n\u6709\u4e00\u4e2a\u5c0f\u95ee\u9898, \u5c31\u662f\u5373\u4f7f\u6211\u8fd9\u4e48\u64cd\u4f5c\u4e0b\u6765, \u5373\u4f7fmount\u7684\u65f6\u5019\u9700\u8981\u8f93\u5165\u5bc6\u7801, \u5907\u4efd\u7684\u65f6\u5019\u8fd8\u662f\u63d0\u793a\u5f80\u4e00\u4e2a\u6ca1\u6709\u52a0\u5bc6\u7684\u76d8\u91cc\u5907\u4efd. \u4e5f\u5c31\u662f\u8bf4, \u6211\u4eec\u4ee5\u4e3aencrypt\u4e86, \u53ea\u662f\u5bf9image\u800c\u8a00, \u5907\u4efd\u8fd8\u662f\u4e0d\u52a0\u5bc6\u7684. \u53ef\u89c1\u6211\u4eec\u8fd8\u662f\u6ca1\u6709\u627e\u5230\u50cf\u4e00\u4e9bNAS\u7cfb\u7edf\u91cc\u90a3\u6837\u80fd\u88ab\u81ea\u52a8\u53d1\u73b0, \u6b63\u5e38\u52a0\u5bc6\u7684\u65b9\u6848\n\u53c2\u8003:\nsource\ncreate an sparse image\nencrypt it\nconvince Time Machine to use it\n\u5907\u6ce8: \u8bf7\u6d3b\u5b66\u6d3b\u7528, \u6bd4\u5982\u6211\u5c31\u6ca1\u7528\u90a3\u4e9b\u540d\u5b57\u53d8\u91cf, \u76f4\u63a5\u5199\u6b7b\u4e86\u955c\u50cf\u8def\u5f84\u548c\u6587\u4ef6\u540d\n", "categories": [{"name": "posts", "slug": "posts", "permalink": "/category/posts/"}], "tags": [{"name": "time machine", "slug": "time machine", "permalink": "/tag/time%20machine/"}, {"name": "nas", "slug": "nas", "permalink": "/tag/nas/"}]}, {"title": "\u7528CALayer\u7ed8\u56fe,\u6dfb\u52a0\u52a8\u753b\u548c\u6e10\u53d8", "date": "2019-10-17T00:00:00-00.00", "path": "/archives/%E7%94%A8CALayer%E7%BB%98%E5%9B%BE%2C%E6%B7%BB%E5%8A%A0%E5%8A%A8%E7%94%BB%E5%92%8C%E6%B8%90%E5%8F%98/", "text": "\u5982\u679cCALayer\u53ea\u6709\u4e00\u4e2a\u7b80\u5355\u7684 path, \u90a3\u4e48\u76f4\u63a5\u7ed9 path \u8d4b\u503c\u662f\u6700\u7b80\u5355\u7684:\nshapeLayer = [CAShapeLayer layer];\nshapeLayer.bounds = self.bounds;\nshapeLayer.anchorPoint = CGPointMake(0, 0);\n\nCGFloat endAngle = (1+_percentage)*M_PI;\nshapeLayer.path = [UIBezierPath bezierPathWithArcCenter:center\n                                                 radius:radius\n                                             startAngle:startAngle\n                                               endAngle:endAngle\n                                              clockwise:YES].CGPath;\nshapeLayer.strokeColor = _highlightColor.CGColor;\nshapeLayer.fillColor = [UIColor clearColor].CGColor;\nshapeLayer.lineWidth = arcWidth;\nshapeLayer.lineCap = kCALineCapRound;\n[self.layer addSublayer:shapeLayer];         \n\n\u5bf9 \u7ebf\u6761\u7c7b\u7684 path \u53ef\u4ee5\u5e94\u7528strokeEnd\u5c5e\u6027\u6765\u7ed8\u5236\u52a8\u753b:\nCASpringAnimation *pathAnimation = [CASpringAnimation animationWithKeyPath:@&quot;strokeEnd&quot;];\npathAnimation.fromValue = [NSNumber numberWithFloat:0.0f];\npathAnimation.toValue = [NSNumber numberWithFloat:1.0f];\npathAnimation.mass = 4.0f;              // \u7269\u4f53\u8d28\u91cf 1\npathAnimation.stiffness = 200;          // \u5f39\u7c27\u521a\u6027 100\npathAnimation.damping = 20;             // \u5f39\u7c27\u963b\u5c3c 10\npathAnimation.initialVelocity = 1.0f;  // \u521d\u59cb\u901f\u5ea6 0\npathAnimation.duration = pathAnimation.settlingDuration;\npathAnimation.timingFunction = [CAMediaTimingFunction functionWithName:kCAMediaTimingFunctionLinear];\n[shapeLayer addAnimation:pathAnimation forKey:@&quot;strokeEndAnimation&quot;];\n\n\u518d\u52a0\u70b9\u6e10\u53d8\u5427\n// \u589e\u52a0\u6e10\u53d8\u56fe\u5c42\nCAGradientLayer *gradientLayer = [CAGradientLayer layer];\ngradientLayer.frame = self.bounds;\ngradientLayer.colors = gradientColorSet;\ngradientLayer.startPoint = CGPointMake(1,0);\ngradientLayer.endPoint = CGPointMake(0, _percentage);\n\n[self.layer addSublayer:gradientLayer];\n// [self.layer addSublayer:shapeLayer]; // \u79fb\u9664\u4e4b\u524d\u7684\u56fe\u5c42\ngradientLayer.mask = shapeLayer; // \u5f53\u4f5c\u6e10\u53d8\u56fe\u5c42\u7684 mask\n\n\u7ec4\u5408\u6548\u679c\u5982\u4e0b:\n\u8981\u7ed8\u5236\u5f27\u5f62, \u5bf9\u7167\u8fd9\u4e2a\u56fe\u5c31\u5f88\u7b80\u5355\u4e86:\n\u8865\u5145\u77e5\u8bc6:1, CALayer\u7684\u52a8\u753b\u7528\u4e0d\u4e86animateWithDuration:animations:completion:\u600e\u4e48\u529e?\n\u56e0\u4e3a\u8fd9\u662fUIView\u7684\u65b9\u6cd5, \u4f60\u8981\u628a\u5b83\u52a0\u5230\u4e00\u4e2aCATransaction\u91cc\u9762\u53bb\n2, \u5373\u4f7f\u52a0\u5230CATransaction\u91cc\u9762\u4e86, \u600e\u4e48\u6211\u5bf9frame\u505a\u7684\u52a8\u753b\u8fd8\u662f\u6ca1\u6709\u751f\u6548?\n\u56e0\u4e3aframe\u662f\u4e00\u4e2a\u590d\u5408\u5c5e\u6027, \u5b83\u7531position, bounds\u7b49\u5c5e\u6027\u51b3\u5b9a, \u6240\u4ee5\u4f60\u53ea\u662f\u7528\u9519\u4e86\u5c5e\u6027.\n\u793a\u4f8b:\n    [CATransaction begin];\n    [CATransaction setCompletionBlock:^{\n        // \u5b8c\u6210\u56de\u8c03\n    }];\n    CABasicAnimation *animation = [CABasicAnimation animationWithKeyPath:@&quot;bounds.size.width&quot;];\n    animation.duration = self.defaultLayoutTransitionDuration;\n    animation.fromValue = @(0.0f); \n    animation.toValue = @(finalFrame.size.width); \n    animation.timingFunction = [CAMediaTimingFunction functionWithName:kCAMediaTimingFunctionEaseOut];\n    [line.layer addAnimation:animation forKey:@&quot;lineLayerAnimation&quot;];\n    line.bounds = finalFrame;\n    [CATransaction commit];\n\n\u5176\u5b83\u6709\u5173 CALayer \u7684\u4e0d\u540c\u751f\u547d\u5468\u671f\u91cc\u7ed8\u5236\u7684\u89e3\u8bf4\u8bf7\u53c2\u8003\u8fd9\u7bc7\u6587\u7ae0, \u5168\u6587\u8f6c\u8f7d\u5982\u4e0b\u5728iOS\u4e2d\u7ed8\u56fe\uff0c\u53ef\u4ee5\u4f7f\u7528UIView\uff0c\u4e5f\u53ef\u4ee5\u4f7f\u7528CALayer\u3002\u5b9e\u9645\u4e0a\uff0cUIView\u4e5f\u662f\u7531\u5e95\u5c42\u7684CALayer\u5b8c\u6210\u7ed8\u5236\u7684\u5de5\u4f5c#UIView\u548cCALayer\u7684\u5173\u7cfb\u6bcf\u4e2aUIView\u5185\u90e8\u90fd\u6709\u4e00\u4e2aCALayer\u5bf9\u8c61\uff0c\u7531\u5b83\u6765\u5b8c\u6210\u7ed8\u5236\u7684\u5de5\u4f5c\u3002\u548cview\u4e00\u6837\uff0clayer\u4e5f\u662f\u4e00\u4e2a\u6811\u5f62\u7684\u7ed3\u6784\u5f53\u4e0d\u9700\u8981\u81ea\u5b9a\u4e49\u7ec4\u4ef6\u7684\u65f6\u5019\uff0c\u7528UIView\u7684API\u5c31\u8db3\u4ee5\u80dc\u4efb\uff0c\u628a\u9700\u8981\u7684\u5b50view\u901a\u8fc7addSubview()\u65b9\u6cd5\u653e\u5230view\u7684\u5c42\u6b21\u91cc\u5373\u53ef\uff1b\u4f46\u662f\u5982\u679c\u9700\u8981\u81ea\u5df1\u7ed8\u5236\u4e00\u4e9b\u56fe\u5f62\uff0c\u5c31\u9700\u8981\u5728UIView\u7684drawRect()\u65b9\u6cd5\u6216\u662fCALayer\u7684\u76f8\u5173\u65b9\u6cd5\u4e2d\uff0c\u8c03\u7528CoreGraphics\u7684API\u6765\u753b\u56fe\u8ddf\u51e0\u4e2a\u670b\u53cb\u4e5f\u8ba8\u8bba\u8fc7\u8fd9\u4e2a\u95ee\u9898\uff0c\u6211\u8ba4\u4e3a\u7528layer\u6765\u753b\u662f\u66f4\u597d\u7684\u529e\u6cd5\uff0c\u56e0\u4e3a\u76f8\u5bf9\u4e8eview\uff0clayer\u662f\u66f4\u8f7b\u91cf\u7ea7\u7684\u7ec4\u4ef6\uff0c\u53ef\u4ee5\u8282\u7701\u7cfb\u7edf\u8d44\u6e90\u3002\u540c\u65f6layer\u662f\u52a8\u753b\u7684\u57fa\u672c\u5355\u5143\uff0c\u52a0\u52a8\u753b\u7279\u6548\u4e5f\u66f4\u5bb9\u6613\u3002\u5e76\u4e14view\u8d1f\u8d23\u54cd\u5e94\u624b\u52bf\u7b49\uff0c\u628a\u7ed8\u5236\u7684\u4ee3\u7801\u90fd\u653e\u5728layer\u91cc\uff0c\u903b\u8f91\u4e0a\u4e5f\u66f4\u52a0\u6e05\u6670\u4f46\u662f\u9700\u8981\u6ce8\u610f\uff0clayer\u4e0d\u80fd\u76f4\u63a5\u54cd\u5e94\u89e6\u6478\u4e8b\u4ef6\uff0c\u6240\u4ee5\u624b\u52bf\u8bc6\u522b\u8fd8\u662f\u9700\u8981\u901a\u8fc7view\u6765\u5b8c\u6210\n\u5728UIView\u4e2d\u7ed8\u56fe\u5728UIView\u4e2d\u7ed8\u56fe\u975e\u5e38\u7b80\u5355\uff0c\u5f53\u8c03\u7528\nself.setNeedsDisplay()\n\niOS\u7cfb\u7edf\u4f1a\u81ea\u52a8\u8c03\u7528view\u4e0a\u7684drawRect()\u65b9\u6cd5\uff0c\u53ef\u4ee5\u5728drawRect()\u65b9\u6cd5\u4e2d\u7ed8\u5236\u56fe\u5f62\n\u5728CALayer\u4e2d\u7ed8\u56fe\u5728layer\u4e2d\u7ed8\u56fe\uff0c\u751f\u547d\u5468\u671f\u6bd4view\u590d\u6742\u4e00\u4e9b\u9996\u5148\u4e5f\u662f\u8c03\u7528layer\u4e0a\u7684setNeedsDisplay()\u89e6\u53d1\u7684#display\u9996\u5148\u4f1a\u8fdb\u5165layer\u7684display()\u65b9\u6cd5\uff0c\u5728\u8fd9\u91cc\u53ef\u4ee5\u628aCGImage\u8d4b\u7ed9layer\u7684contents\uff0c\u90a3\u4e48\u4f1a\u76f4\u63a5\u628a\u8be5CGImage\u4f5c\u4e3a\u6b64layer\u7684\u6837\u5f0f\uff0c\u4e0d\u4f1a\u8fdb\u5165\u540e\u7eed\u7684\u65b9\u6cd5\n// \u7ed8\u56fe\u65b9\u6cd5\noverride func display() {\n\n    if let img = getFrameImage(wheelStyle) {\n        contents = img.CGImage\n    }        \n}\n\n#displayLayer\u5982\u679c\u6ca1\u6709\u5b9e\u73b0display()\u65b9\u6cd5\uff0c\u6216\u8005\u8c03\u7528\u4e86super.display()\uff0c\u5e76\u4e14\u8bbe\u7f6e\u4e86layer\u7684delegate\uff0c\u90a3\u4e48iOS\u7cfb\u7edf\u4f1a\u8c03\u7528delegate\u7684displayLayer()\u65b9\u6cd5\nlet myLayer : MyLayer = MyLayer()\nmyLayer.delegate = self;\nmyLayer.frame = bounds;\n\noverride func displayLayer(layer: CALayer) {\n\n    if let img = getFrameImage(wheelStyle) {\n        contents = img.CGImage\n    }\n}\n\n#drawInContext\u5982\u679c\u6ca1\u6709\u8bbe\u7f6edelegate\uff0c\u6216\u8005delegate\u6ca1\u6709\u5b9e\u73b0displayLayer()\u65b9\u6cd5\uff0c\u90a3\u4e48\u63a5\u4e0b\u6765\u4f1a\u8c03\u7528layer\u7684drawInContext\u65b9\u6cd5\noverride func drawInContext(ctx: CGContext) {\n\n    CGContextSetLineWidth(ctx, 1);\n    CGContextMoveToPoint(ctx, 80, 40);\n    CGContextAddLineToPoint(ctx, 80, 140);\n    CGContextStrokePath(ctx);\n}\n\n#drawLayerInContext\u5982\u679clayer\u6ca1\u6709\u5b9e\u73b0drawInContext\u65b9\u6cd5\uff0c\u90a3\u4e48\u63a5\u4e0b\u6765\u5c31\u4f1a\u8c03\u7528delegate\u7684drawLayerInContext\u65b9\u6cd5\noverride func drawLayer(layer: CALayer, inContext ctx: CGContext) {\n    CGContextSetLineWidth(ctx, 1);\n    CGContextMoveToPoint(ctx, 80, 40);\n    CGContextAddLineToPoint(ctx, 80, 140);\n    CGContextStrokePath(ctx);\n}\n\n#\u603b\u7ed3\u6240\u4ee5\uff0c\u4e00\u822c\u6765\u8bf4\uff0c\u53ef\u4ee5\u5728layer\u7684display()\u6216\u8005drawInContext()\u65b9\u6cd5\u4e2d\u6765\u7ed8\u5236\u5728display()\u4e2d\u7ed8\u5236\u7684\u8bdd\uff0c\u53ef\u4ee5\u76f4\u63a5\u7ed9contents\u5c5e\u6027\u8d4b\u503c\u4e00\u4e2aCGImage\uff0c\u5728drawInContext()\u91cc\u5c31\u662f\u5404\u79cd\u8c03\u7528CoreGraphics\u7684API\u5047\u5982\u7ed8\u5236\u7684\u903b\u8f91\u7279\u522b\u590d\u6742\uff0c\u5e0c\u671b\u80fd\u4ecelayer\u4e2d\u5265\u79bb\u51fa\u6765\uff0c\u90a3\u4e48\u53ef\u4ee5\u7ed9layer\u8bbe\u7f6edelegate\uff0c\u628a\u76f8\u5173\u7684\u7ed8\u5236\u4ee3\u7801\u5199\u5728delegate\u7684displayLayer()\u548cdrawLayerInContext()\u65b9\u6cd5\u3002\u8fd92\u4e2a\u65b9\u6cd5\u4e0edisplay()\u548cdrawInContext()\u662f\u5206\u522b\u4e00\u4e00\u5bf9\u5e94\u7684", "categories": [{"name": "posts", "slug": "posts", "permalink": "/category/posts/"}], "tags": [{"name": "calayer", "slug": "calayer", "permalink": "/tag/calayer/"}, {"name": "path", "slug": "path", "permalink": "/tag/path/"}, {"name": "animation", "slug": "animation", "permalink": "/tag/animation/"}, {"name": "gradient", "slug": "gradient", "permalink": "/tag/gradient/"}]}, {"title": "iOS\u7b7e\u540d\u76f8\u5173\u547d\u4ee4", "date": "2019-10-09T00:00:00-00.00", "path": "/archives/iOS%E7%AD%BE%E5%90%8D%E7%9B%B8%E5%85%B3%E5%91%BD%E4%BB%A4/", "text": "\u7528openssl\u67e5\u770bCSR\u6587\u4ef6\u5185\u5bb9\nopenssl asn1parse -i -in CertificateSigningRequest.certSigningRequest\n\n\u67e5\u770b\u4e0b\u53d1\u7684\u8bc1\u4e66\u7684\u5185\u5bb9:\nopenssl x509 -inform der -in ios_development.cer -noout -text\n\n\u53ef\u4ee5\u4f7f\u7528\u5982\u4e0b\u547d\u4ee4\u67e5\u770b\u4e00\u4e2amobileprovision\uff1a\nsecurity cms -D -i embedded.mobileprovision\n\nipa\u6587\u4ef6\u662f\u4e00\u4e2azip\u5305\uff0c\u53ef\u4ee5\u4f7f\u7528\u5982\u4e0b\u547d\u4ee4\u89e3\u538b\uff1a\n/usr/bin/unzip -q xxx.ipa -d &lt;destination&gt;\n\n\u7528\u4e0b\u9762\u547d\u4ee4\uff0c\u5217\u51fa\u7cfb\u7edf\u4e2d\u53ef\u7528\u4e8e\u7b7e\u540d\u7684\u6709\u6548\u8bc1\u4e66\uff1a\n/usr/bin/security find-identity -v -p codesigning\n\n\u4f7f\u7528\u5982\u4e0b\u547d\u4ee4\u5bf9xxx.app\u76ee\u5f55\u7b7e\u540d\uff0ccodesign\u7a0b\u5e8f\u4f1a\u81ea\u52a8\u5c06\u5176\u4e2d\u7684\u6587\u4ef6\u90fd\u7b7e\u540d\uff0c\uff08Frameworks\u4e0d\u4f1a\u81ea\u52a8\u7b7e\uff09\uff1a\n/user/bin/codesign -fs &quot;iPhone Developer: Your Cert Name (VDT388662Q)&quot; --no-strict Payload/xxx.app\n\n\u6700\u540e\u7528\u4e0b\u9762\u547d\u4ee4\u6821\u9a8c\u7b7e\u540d\u662f\u5426\u5408\u6cd5\uff1a\n/usr/bin/codesign -v xxx.app\n\n\u4f7f\u7528zip\u547d\u4ee4\u91cd\u65b0\u6253\u5305\u6210ipa\u5305\n/usr/bin/zip -qry destination source\n\n\u6765\u6e90", "categories": [{"name": "posts", "slug": "posts", "permalink": "/category/posts/"}], "tags": [{"name": "sign", "slug": "sign", "permalink": "/tag/sign/"}]}, {"title": "\u5173\u4e8e@synthesize", "date": "2019-08-16T00:00:00-00.00", "path": "/archives/%E5%85%B3%E4%BA%8E%40synthesize/", "text": "\u9996\u5148, @synthesize myLocalVar = _myLocalVar; \u8fd9\u53e5\u8bdd\u662f\u663e\u5f0f\u5e2e\u4f60\u7701\u6389\u4e86\u4e00\u4e2a getter \u65b9\u6cd5\u548c\u4e00\u4e2a setter \u65b9\u6cd5. \u4e24\u4e2a\u65b9\u6cd5\u957f\u4ec0\u4e48\u6837\u4e0d\u8d58\u8ff0.\u5176\u6b21, \u4ece\u67d0\u4e2a\u7248\u672c\u7684 Xcode \u5f00\u59cb, \u4f60\u8fde @synthesize \u8fd9\u53e5\u8bdd\u4e5f\u4e0d\u9700\u8981\u5199\u4e86, \u4f46\u662f\u8bf7\u6ce8\u610f, \u8fd9\u53ea\u662f\u4e00\u4e2a IDE \u7684\u7279\u6027. \u4f60\u4e0d\u9700\u8981\u624b\u52a8\u5408\u6210, \u4e0d\u4ee3\u8868 @synthesize \u4e0d\u4f5c\u7528\u4e86, \u4ec5\u4ec5\u662f\u8ba9\u4f60\u80fd\u5c11\u5199\u8fd9\u4e00\u53e5\u8bdd, \u800c Xcode \u5e2e\u4f60\u8865\u5168\u4e86.\u518d\u6b21, @synthesize \u4ec5\u4ec5\u662f\u4e00\u4e2a clang \u7684 Objective-C \u8bed\u8a00\u6269\u5c55 (autosynthesis of properties), \u7136\u540eclang\u6070\u597d\u662f Xcode \u7684\u9ed8\u8ba4\u7f16\u8bd1\u5668. \u4e5f\u5c31\u662f\u8bf4, \u5982\u679c\u4f60\u6362\u6210\u4e86 gcc, \u90a3\u4e48\u8fd9\u4e2a\u7279\u6027\u4e5f\u5c31\u4e0d\u590d\u5b58\u5728\u4e86.\u57fa\u4e8e\u4e0a\u8ff0, \u5982\u679c\u4f60\u4f7f\u7528\u4e86\u81ea\u5df1\u7684\u6587\u672c\u7f16\u8f91\u5668, \u7136\u540e\u7528\u81ea\u5df1\u7528 clang \u4ece\u547d\u4ee4\u884c\u7f16\u8bd1, @synthesize \u8fd9\u4e00\u53e5\u8bdd\u662f\u9700\u8981\u81ea\u5df1\u5199\u7684.\u6700\u540e, \u6709\u5982\u4e0b\u4f8b\u5916\n\u5bf9\u4e8e readwrite \u7c7b\u578b\u7684\u5c5e\u6027, \u4f60\u81ea\u884c\u5b9e\u73b0\u4e86 getter \u548c setter\n\u5bf9\u4e8e readonly  \u7c7b\u578b\u7684\u5c5e\u6027, \u4f60\u81ea\u884c\u5b9e\u73b0\u4e86 getter\n \u4ee5\u4e0a\u4e24\u79cd\u60c5\u51b5, \u4f60\u4e00\u65e6\u81ea\u884c\u5b9e\u73b0\u4e86\u5bf9\u5e94\u7684 getter \u6216 setter, \u5bf9\u4e8e\u672c\u6587\u7684myLocalVar\u4f8b\u5b50, \u4f60\u5c06\u53d1\u73b0 _myLocalVar\u6ca1\u6709\u4e86, \u610f\u5473\u7740\u4f60\u9700\u8981@synthesize\u4e00\u4e0b.\ndynamic\u4e0esynthesize\u662f\u4e92\u65a5\u7684\n@protocol\u4e2d\u58f0\u660e\u7684\u5c5e\u6027\ncategory\u4e2d\u58f0\u660e\u7684\u5c5e\u6027\n\u4f60\u8986\u76d6(overridden)\u7236\u7c7b\u7684\u5c5e\u6027\u65f6, \u5fc5\u987b\u624b\u52a8synthesize.\n\n\u53c2\u8003\u8d44\u6599:\n1, When should I use @synthesize explicitly?\n2, @dynamic \u4e0e @synthesize \u5173\u952e\u8bcd\u8be6\u89e3", "categories": [{"name": "posts", "slug": "posts", "permalink": "/category/posts/"}], "tags": [{"name": "synthesize", "slug": "synthesize", "permalink": "/tag/synthesize/"}, {"name": "dynamic", "slug": "dynamic", "permalink": "/tag/dynamic/"}, {"name": "property", "slug": "property", "permalink": "/tag/property/"}]}, {"title": "\u91cd\u88c5mac\u7cfb\u7edf\u540essh\u5f02\u5e38", "date": "2019-08-03T00:00:00-00.00", "path": "/archives/%E9%87%8D%E8%A3%85mac%E7%B3%BB%E7%BB%9F%E5%90%8Essh%E5%BC%82%E5%B8%B8/", "text": "\u8868\u73b0\u5728\u4e24\u4e2a\u65b9\u9762: ssh \u767b\u5f55\u670d\u52a1\u5668, \u548c\u901a\u8fc7ssh \u4f7f\u7528 git, \u62a5\u7684\u9519\u90fd\u662fPermissino denied (publickey)git\u5f02\u5e38\u7684\u89e3\u51b3\n\u6839\u636egithub\u6587\u6863, \u6211\u53ef\u4ee5\u89e3\u51b3\u7b2c\u4e8c\u4e2a\u95ee\u9898, \u7b2c\u4e00\u4e2a\u95ee\u9898(ssh login)\u89e3\u51b3\u540e\u518d\u6765\u66f4\u65b0.\u4f7f\u7528git\u51fa\u73b0\u95ee\u9898, \u5e76\u4e0d\u5c40\u9650\u4e8e github, \u6211\u8fde gitlab \u4e5f\u662f\u4e00\u6837. \u5176\u5b9e\u6839\u636e\u6587\u6863\u4e00\u9879\u9879\u68c0\u6d4b,\u6211\u5728ssh-add -l\u8fd9\u4e00\u53e5\u53d1\u73b0\u4e86\u95ee\u9898, \u867d\u7136\u6211\u751f\u6210\u4e86\u5bc6\u94a5, \u4f46\u662f\u5b83\u7684\u8f93\u51fa\u663e\u793a\u6211\u6ca1\u6709\u79c1\u94a5, \u7167\u5982\u4e0b\u89e3\u51b3\u5373\u53ef:\nTip: On most systems the default private keys (~/.ssh/id_rsa\n, ~/.ssh/id_dsa and ~/.ssh/identity) are automatically added to the SSH authentication agent. You shouldn't need to run ssh-add path/to/key\n unless you override the file name when you generate a key.\u4e5f\u5c31\u662f\u8bf4, \u628a\u4f60\u7684id_rsa\u6587\u4ef6\u624b\u52a8\u6307\u5b9a\u4e00\u4e0bssh_add \u6587\u4ef6\u8def\u5f84(\u4e0d\u77e5\u9053\u4e3a\u4ec0\u4e48\u4f1a\u51fa\u8fd9\u79cd\u9b3c\u95ee\u9898)SSH\u81ea\u52a8\u767b\u5f55\u5f02\u5e38\u7684\u89e3\u51b3\n\u8fd9\u662f\u8865\u5145\u7684\u5185\u5bb9, \u521a\u521a\u89e3\u51b3.\u9996\u5148, \u4f60\u767b\u4e0d\u4e0a\u8fd9\u662f\u670d\u52a1\u7aef\u7684\u95ee\u9898, \u6ca1\u6709\u628a\u4f60\u7684\u516c\u94a5\u5199\u5230~/.ssh/authorized_keys\u91cc\u9762\u53bb, \u4f60\u60f3\u529e\u6cd5\u628a\u5b83\u5199\u8fdb\u53bb(\u5f53\u4f60 ssh \u4e0d\u4e0a\u53bb\u7684\u65f6\u5019, scp\u5f53\u7136\u4e5f\u4e0d\u884c)\u5199\u8fdb\u53bb\u540e, \u4ecd\u7136\u62a5\u9519, \u6211\u4eec\u7ee7\u7eed\u770b\u65e5\u5fd7:\nssh root@mydomain.com -v \u6216 ssh root@mydomain.com -vvv (\u66f4\u8be6\u7ec6\u7684\u65e5\u5fd7)\u901a\u8fc7\u770b\u65e5\u5fd7, \u4f60\u53ef\u4ee5\u4e00\u6b65\u6b65\u770b\u5230\u95ee\u9898:\n...\ndebug2: service_accept: ssh-userauth\ndebug1: SSH2_MSG_SERVICE_ACCEPT received\ndebug3: send packet: type 50\ndebug3: receive packet: type 51\ndebug1: Authentications that can continue: publickey\ndebug3: start over, passed a different list publickey\ndebug3: preferred publickey,keyboard-interactive,password\ndebug3: authmethod_lookup publickey\ndebug3: remaining preferred: keyboard-interactive,password\ndebug3: authmethod_is_enabled publickey\ndebug1: Next authentication method: publickey\ndebug1: Trying private key: .ssh/id_rsa\ndebug3: no such identity: .ssh/id_rsa: No such file or directory\ndebug2: we did not send a packet, disable method\ndebug1: No more authentication methods to try.\nPermission denied (publickey).\n\n\u6ce8\u610f\u622a\u53d6\u7684\u5012\u6570\u7b2c4\u884c:\n\u9996\u5148, \u5b83\u6628\u5929\u4e0d\u662f\u8fd9\u4e48\u63d0\u793a\u7684, \u5b83\u63d0\u793a\u7684\u662f.ssh/id_rsd, \u6211\u5230\u914d\u7f6e\u6587\u4ef6\u91cc\u628a\u5b83\u6539\u6210\u4e86rsa, \u56e0\u4e3a\u6211\u751f\u6210\u7684\u662f rsa\n\u914d\u7f6e\u6587\u4ef6\u7684\u5730\u5740\u662f: /etc/ssh/ssh_config, \u6539\u7684\u8282\u70b9\u540d\u662fIdentityFile\n\u5176\u6b21, \u987a\u4fbf\u770b\u4e00\u4e0bRSAAuthentication \u548c PubkeyAuthentication\u8fd9\u4e24\u9879\u662f\u4e0d\u662f yes(\u5982\u679c\u662f\u6ce8\u91ca\u72b6\u6001, \u4e0d\u8981\u52a8, \u9ed8\u8ba4\u662f yes)\u8fd9\u6837, \u670d\u52a1\u7aef\u6709\u4f60\u7684\u516c\u94a5, \u672c\u5730\u914d\u7f6e\u4e86 IdentityFile \u8def\u5f84, \u5c31\u53ef\u4ee5\u767b\u5f55\u4e86, \u4f46\u6211\u4e00\u76f4\u6ca1\u6210\u529f\u7684\u539f\u56e0\u5728\u4e8e, \u6211\u5728\u539f\u914d\u7f6e\u6587\u4ef6\u6539\u7684, \u5b83\u662f\u8def\u5f84\u662f.ssh/id_rsa,.ssh/id_rsd, \u6211\u5355\u7eaf\u628a rsd \u7684\u53bb\u6389, \u5374\u6ca1\u53d1\u73b0\u5b83\u7684\u8def\u5f84\u662f\u9519\u7684, \u76f4\u5230\u770b\u4e86\u65e5\u5fd7\u63d0\u793a\u8fd9\u4e2a\u6587\u4ef6\u4e0d\u5b58\u5728, \u624d\u60f3\u8d77\u628a\u683c\u5f0f\u6539\u5bf9.\u6211\u78b0\u5230\u7684\u60c5\u51b5\u4e0d\u77e5\u9053\u662f\u4e0d\u662f\u4e2a\u4f8b, \u6bd4\u5982\u540c\u4e00\u4e2a\u6587\u4ef6\nUserKnownHostsFile ~/.ssh/known_hosts,~/.ssh/known_hosts2\n\n\u8fd9\u4e00\u884c, \u8def\u5f84\u683c\u5f0f\u5374\u662f\u6b63\u786e\u7684, \u532a\u5937\u6240\u601d.\u603b\u4e4b, \u4f60\u78b0\u5230Permission denied (public key)\u8fd9\u4e2a\u95ee\u9898, \u5c31\u7ed3\u5408 git \u548c server \u8fd9\u4e24\u60c5\u51b5, \u770b\u662f\u6ca1\u6709 identity, \u8fd8\u662f id_rsa\u8def\u5f84\u914d\u9519\u4e86. (\u524d\u63d0\u662f\u516c\u94a5\u5fc5\u987b\u5df2\u7ecf\u5199\u5230\u670d\u52a1\u5668\u4e0a\u53bb\u4e86)", "categories": [{"name": "posts", "slug": "posts", "permalink": "/category/posts/"}], "tags": [{"name": "macos", "slug": "macos", "permalink": "/tag/macos/"}, {"name": "ssh", "slug": "ssh", "permalink": "/tag/ssh/"}]}, {"title": "\u5907\u4efdNginx\u8bbe\u7f6ephp\u7684\u65b9\u6cd5", "date": "2019-07-31T00:00:00-00.00", "path": "/archives/%E5%A4%87%E4%BB%BDNginx%E8%AE%BE%E7%BD%AEphp%E7%9A%84%E6%96%B9%E6%B3%95/", "text": "\u7248\u672cnginx/1.12.2\n  location ~ \\.php$ {\n    fastcgi_pass   unix:/run/php/php7.0-fpm.sock;\n    fastcgi_param  SCRIPT_FILENAME $document_root/$fastcgi_script_name;\n    include        fastcgi_params;\n   }\n\n\u6211\u673a\u5668\u4e0a\u7684fastcgi_param\u503c\u4e0d\u5bf9, \u6539\u6210\u4e0a\u56fe\u6210\u529f, \u5907\u4efd\u4e0b", "categories": [{"name": "posts", "slug": "posts", "permalink": "/category/posts/"}], "tags": [{"name": "nginx", "slug": "nginx", "permalink": "/tag/nginx/"}, {"name": "php", "slug": "php", "permalink": "/tag/php/"}]}, {"title": "\u8ba9Objective-C\u4e5f\u6709map\u529f\u80fd", "date": "2019-07-30T00:00:00-00.00", "path": "/archives/%E8%AE%A9Objective-C%E4%B9%9F%E6%9C%89map%E5%8A%9F%E8%83%BD/", "text": "map\u4e00\u4e2a\u6570\u7ec4\u662f\u5927\u90e8\u5206\u9ad8\u7ea7\u8bed\u8a00\u90fd\u6709\u7684, OC \u6ca1\u6709, \u6709\u51e0\u4e2a\u65b9\u6848\u8ba9\u5b83\u5b9e\u73b0, \u6211\u4f18\u9009\u51fa\u4e09\u4e2a:\u539f\u751f\u5b9e\u73b0\n\u5176\u5b9e\u5c31\u662fvalueForKeyPath\u7684\u6d3b\u7528:NSArray *names = [allEmployees valueForKeyPath: @&quot;[collect].{daysOff&lt;10}.name&quot;];\nNSArray *albumCovers = [records valueForKeyPath:@&quot;[collect].{artist like &#39;Bon Iver&#39;}.&lt;NSUnarchiveFromDataTransformerName&gt;.albumCoverImageData&quot;];\n\ncategory\n\u8fd9\u4e2a\u5927\u5bb6\u80af\u5b9a\u65e9\u60f3\u5230\u8fc7\u4e86, \u4f60\u6ca1\u6709, \u6211\u7ed9\u4f60\u6269\u5c55\u51fa\u6765\u4e00\u4e2a:\u5b9a\u4e49:@interface NSArray (Map)\n\n- (NSArray *)mapObjectsUsingBlock:(id (^)(id obj, NSUInteger idx))block;\n\n@end\n\n@implementation NSArray (Map)\n\n- (NSArray *)mapObjectsUsingBlock:(id (^)(id obj, NSUInteger idx))block {\n    NSMutableArray *result = [NSMutableArray arrayWithCapacity:[self count]];\n    [self enumerateObjectsUsingBlock:^(id obj, NSUInteger idx, BOOL *stop) {\n        [result addObject:block(obj, idx)];\n    }];\n    return result;o\n}\n\n@end\n\n\u4f7f\u7528:NSArray *people = @[\n                     @{ @&quot;name&quot;: @&quot;Bob&quot;, @&quot;city&quot;: @&quot;Boston&quot; },\n                     @{ @&quot;name&quot;: @&quot;Rob&quot;, @&quot;city&quot;: @&quot;Cambridge&quot; },\n                     @{ @&quot;name&quot;: @&quot;Robert&quot;, @&quot;city&quot;: @&quot;Somerville&quot; }\n                  ];\n// per the original question\nNSArray *names = [people mapObjectsUsingBlock:^(id obj, NSUInteger idx) {\n    return obj[@&quot;name&quot;];\n}];\n// (Bob, Rob, Robert)\n\n// you can do just about anything in a block\nNSArray *fancyNames = [people mapObjectsUsingBlock:^(id obj, NSUInteger idx) {\n    return [NSString stringWithFormat:@&quot;%@ of %@&quot;, obj[@&quot;name&quot;], obj[@&quot;city&quot;]];\n}];\n// (Bob of Boston, Rob of Cambridge, Robert of Somerville)\n\n\u4e09\u65b9\u5e93\n\u662f\u7684, \u4e00\u822c\u7b80\u5355\u529f\u80fd\u80fd\u81ea\u5df1\u5b9e\u73b0\u5c31\u81ea\u5df1\u5b9e\u73b0, xcode \u9879\u76ee\u8fd8\u662f\u4e0d\u80fd\u50cf nodejs\u9879\u76ee\u4e00\u6837, \u54ea\u6015\u6709\u7684\u5305\u91cc\u4e5f\u53ea\u6709\u4e00\u53e5\u8bdd, \u6211\u4e5f\u8981\u4ece\u7528\u7b2c\u4e09\u65b9\u7684...dddddjs \u7684\u4e16\u754c\u91cc, underscore\u7528\u6765\u5904\u7406\u6570\u7ec4\u53ef\u7b97\u795e\u5668, \u81ea\u7136, \u6211\u4e5f\u6311\u4e2d\u4e86\u540c\u6837\u540d\u5b57\u7684 OC \u5e93: UnderscoreNSArray *tweets = Underscore.array(results)\n    // Let&#39;s make sure that we only operate on NSDictionaries, you never\n    // know with these APIs ;-)\n    .filter(Underscore.isDictionary)\n    // Remove all tweets that are in English\n    .reject(^BOOL (NSDictionary *tweet) {\n        return [tweet[@&quot;iso_language_code&quot;] isEqualToString:@&quot;en&quot;];\n    })\n    // Create a simple string representation for every tweet\n    .map(^NSString *(NSDictionary *tweet) {\n        NSString *name = tweet[@&quot;from_user_name&quot;];\n        NSString *text = tweet[@&quot;text&quot;];\n\n        return [NSString stringWithFormat:@&quot;%@: %@&quot;, name, text];\n    })\n    .unwrap;\n\n\n\u5f53\u7136, \u6240\u6709\u65b9\u6848\u6765\u6e90\u4e8eStackOverflow \u4e0a\u7684\u7b54\u6848, \u4e00\u4e9b\u5176\u5b83\u65b9\u6848, \u5176\u5b83\u5e93(\u5982BlocksKit), \u90fd\u53ef\u4ee5\u8bd5\u8bd5, \u4e5f\u633a\u7b80\u6d01\u7684\n", "categories": [{"name": "posts", "slug": "posts", "permalink": "/category/posts/"}], "tags": [{"name": "map", "slug": "map", "permalink": "/tag/map/"}, {"name": "keypath", "slug": "keypath", "permalink": "/tag/keypath/"}, {"name": "kvc", "slug": "kvc", "permalink": "/tag/kvc/"}]}, {"title": "\u8ba9\u4f60fork\u4e0b\u6765\u7684\u9879\u76ee\u4e0e\u6e90\u9879\u76ee\u4fdd\u6301\u540c\u6b65", "date": "2019-03-23T00:00:00-00.00", "path": "/archives/%E8%AE%A9%E4%BD%A0fork%E4%B8%8B%E6%9D%A5%E7%9A%84%E9%A1%B9%E7%9B%AE%E4%B8%8E%E6%BA%90%E9%A1%B9%E7%9B%AE%E4%BF%9D%E6%8C%81%E5%90%8C%E6%AD%A5/", "text": "\u539f\u6587\u5728\u6b64, \u5efa\u8bae\u9605\u8bfb, \u6211\u628a\u5173\u952e\u6b65\u9aa4\u62bd\u51fa\u6765\u4e86, \u65b9\u4fbf\u6982\u89c8(\u4e5f\u5c31\u662fadd remote upstream, fetch upstream, rebase, \u518dpush)Step 1: Forking a repo\ngit clone https://github.com/nitin-test/blog-example-fork.git\ngit remote add upstream https://github.com/nitstorm/blog-example.git\ngit remote\ngit remote show origin\ngit remote show upstream\n\nStep 2: Making changes and submitting Pull Requests\ngit checkout -b word-addition\ngit commit -am &quot;Adds the word memory&quot;\ngit push origin word-addition\n# \u7f51\u9875\u7aef\u53d1\u8d77merge\u5230master\n\nStep 3: Keeping the forked repo synced with the main repo\n# \u786e\u4fdd\u4f60\u662f\u5728master\u5206\u652f\ngit checkout master\ngit fetch upstream\ngit rebase upstream/master\ngit push origin master\n\n", "categories": [{"name": "posts", "slug": "posts", "permalink": "/category/posts/"}], "tags": [{"name": "git", "slug": "git", "permalink": "/tag/git/"}, {"name": "github", "slug": "github", "permalink": "/tag/github/"}, {"name": "fork", "slug": "fork", "permalink": "/tag/fork/"}, {"name": "upstream", "slug": "upstream", "permalink": "/tag/upstream/"}]}, {"title": "Windows\u4e0b\u7528AHK\u6765\u6620\u5c04Mac\u5e38\u7528\u5feb\u6377\u952e", "date": "2019-03-17T00:00:00-00.00", "path": "/archives/Windows%E4%B8%8B%E7%94%A8AHK%E6%9D%A5%E6%98%A0%E5%B0%84Mac%E5%B8%B8%E7%94%A8%E5%BF%AB%E6%8D%B7%E9%94%AE/", "text": "\u6700\u8fd1\u7528Windows\u505a\u4e86\u4e00\u6bb5\u4e3b\u529b\u673a, \u522b\u7684\u95ee\u9898\u5012\u6ca1\u5565, Windows\u4e0b\u6709\u5565\u5e72\u4e0d\u4e86\u7684\u5462, \u54ea\u6015\u9f20\u6807\u6eda\u8f6e\u65b9\u5411\u76f8\u53cd, \u5927\u91cf\u5feb\u6377\u952e\u4e0d\u540c\u7b49\u95ee\u9898\u90fd\u80fd\u5728\u975e\u5e38\u77ed\u7684\u9002\u5e94\u540e\u5c31\u4e0d\u4f1a\u5bf9\u81ea\u5df1\u9020\u6210\u4ec0\u4e48\u56f0\u627e, \u95ee\u9898\u662f\u6211\u8fd8\u5f97\u5728Windows\u548cMac\u73af\u5883\u5207\u6765\u5207\u53bb, \u8fd9\u6837\u9891\u7e41\u5730\u6309\u9519\u5feb\u6377\u952e\u518d\u7ea0\u6b63\u4e5f\u633a\u70e6\u4eba\u7684, \u51b3\u5b9a\u4e00\u52b3\u6c38\u9038\u5730\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898, \u7ecf\u8fc7\u53cd\u590d\u641c\u7d22\u548c\u6bd4\u8f83, \u8fd8\u662f\u4e00\u4e2a\u4ee5\u524d\u7528Windows\u7684\u65f6\u5019\u5c31\u4e00\u76f4\u656c\u800c\u8fdc\u4e4b\u7684\u8f6f\u4ef6\u6210\u4e86\u6211\u7684\u9996\u9009:AutoHotKey(AHK).\u4ee5\u524d\u4e0d\u60f3\u7528\u5b83\u5c31\u662f\u56e0\u4e3a\u8981\u5199\u811a\u672c, \u6ca1\u6709\u5927\u91cf\u7684\u9700\u6c42\u7684\u60c5\u51b5\u4e0b\u6211\u5e76\u4e0d\u60f3\u53bb\u901a\u8bfb\u4e00\u904d\u90a3\u5e76\u4e0d\u7b97\u77ed\u7684\u6587\u6863, \u8fd9\u6b21\u4e0d\u540c\u4e86, \u9700\u8981\u5b9a\u5236\u4e00\u5806\u5feb\u6377\u952e, \u611f\u89c9\u8fd9\u4e2a\u4ed8\u51fa\u662f\u503c\u5f97\u7684, \u4e00\u756a\u6587\u6863\u548c\u5b9e\u9a8c\u4e4b\u540e, \u521d\u6b65\u5f97\u5230\u5982\u4e0b\u811a\u672c:\n(\u7279\u522b\u60ca\u559c\u7684\u662f, \u4e4b\u524d\u8981\u6539\u53d8\u9f20\u6807\u6eda\u8f6e\u7684\u65b9\u5411\u8981\u6539\u6ce8\u518c\u8868, \u8fd9\u6837\u4f60\u6bcf\u6b21\u6362\u4e86\u4e2ausb\u53e3\u63d2\u9f20\u6807\u8fd8\u5f97\u518d\u6539\u4e00\u6b21, \u800c\u5728ahk\u4e0b\u90fd\u662f\u4e00\u53e5\u8bdd\u7684\u4e8b...\u662f\u4e0d\u662f\u6709\u70b9\u4f69\u670d\u8fd9\u4e2a\u624d\u767e\u6765k\u7684\u8f6f\u4ef6\u4e86?);----------Application\n\n; hyper\n^`::send #4\n\n;----------Mac Key Remap\n\n; nature scroll\n;WheelUp::send {WheelDown}\n;WheelDown::send {WheelUp}\n\n; cmd+c,v,x\n#c::send ^c\n#v::send ^v\n#x::send ^x\n; \u7528win+shift+x\u6765\u66ff\u6362\u539f\u6765\u7684win+x\n#+x::send #x\n\n; clipboard history\n; \u7528win+shift+v\u6765\u66ff\u6362\u539f\u6765\u7684win+v(\u526a\u8d34\u677f\u5386\u53f2\u8bb0\u5f55)\n#+v::send #v\n\n; save\n#s::send ^s\n\n; undo, redo\n#z::send ^z\n#+z::send ^+z\n\n; selection\n#+Left::send +{Home}\n#+Right::send +{End}\n#+Up::send +{Up}\n#+Down::send +{Down}\n\n; skip word using alt+Arrow\n!Left::send ^{Left}\n!Right::send ^{Right}\n\n; switch win+tab &amp; alt+tab\nreleaseAltKey() {\n  if GetKeyState(&quot;LWin&quot;) {\n    sleep 100\n    releaseAltKey()\n  }\n  else\n    send {alt up}\n}\n#Tab::\nsend {alt down}{Tab}\nreleaseAltKey()\nreturn\n\n!Tab::send #{Tab}\n\n; switch ctrl+w &amp; cmd+w\n#w::send ^{w}\n; \u7528win+shift+w\u66ff\u6362win+w\n#+w::send #{w}\n\n; new tab\n#t::send ^t\n#+t::send ^+t\n\n; search\n#f::send ^f\n\n; cmd+a\n#a::send ^a\n\n; cmd+n\n#n::send ^n\n\n\u6211\u8fd9\u91cc\u4e0d\u662f\u6559\u7a0b, \u5c31\u4e0d\u89e3\u91ca\u6bcf\u4e00\u884c\u7684\u539f\u7406\u4e86, \u5c31\u6211\u4e2a\u4eba\u800c\u8a00\u6700\u6700\u6700\u5e38\u7528\u7684\u590d\u5236\u7c98\u8d34\u5207\u6362\u7a0b\u5e8f\u7b49\u7b49\u90fd\u6620\u5c04\u4e86, \u552f\u4e00\u4e0d\u5b8c\u7f8e\u7684\u5730\u65b9\u5c31\u5728\u4e8e\u628a\u70ed\u952e\u5bf9\u6362\u6211\u6ca1\u7814\u7a76\u900f(\u6bd4\u5982ctrl+x \u548c win+x\u5bf9\u6362), \u6709\u4e09\u5904\u70ed\u952e\u5bf9\u6362, \u4f46\u53ea\u6709\u4e00\u5904\u6210\u529f(alt+tab \u548c win+tab\u4e92\u6362), \u5176\u5b83\u4e24\u5904\u53ea\u80fd\u628a\u5176\u4e2d\u4e00\u4e2a\u70ed\u952e\u6362\u6210\u522b\u7684, \u800c\u4e0d\u80fd\u4e92\u76f8\u66ff\u6362, \u5728\u5b98\u65b9\u8bba\u575b\u53d1\u8d34\u76ee\u524d\u8fd8\u6ca1\u4eba\u7b54\u590d\u6211.\u591a\u8bf4\u4e00\u53e5, \u6700\u524d\u9762\u7684Application\u90e8\u5206\u6211\u8d34\u4ee3\u7801\u7684\u65f6\u5019\u6ca1\u5220, \u4e5f\u662f\u4e3a\u4e86\u4ecb\u7ecd\u4e00\u79cd\u6253\u5f00\u7a0b\u5e8f\u7684\u5feb\u6377\u65b9\u6cd5\u7684\u601d\u8def, \u4e00\u822c\u4eba\u4f1a\u7528\u811a\u672c\u68c0\u6d4b\u7a0b\u5e8f\u662f\u5426\u6253\u5f00, \u6bd4\u5982\u90ae\u4ef6\u5e94\u7528, \u5982\u679c\u6253\u5f00, \u5219\u5c06\u7a97\u53e3\u6fc0\u6d3b, \u5982\u679c\u6ca1\u6709, \u5219\u6253\u5f00\u7a0b\u5e8f, \u5982\u679c\u5f53\u7136\u5df2\u662f\u6fc0\u6d3b\u72b6\u6001, \u5219\u628a\u5b83\u6700\u5c0f\u5316. \u800c\u6211\u53d1\u73b0\u5982\u679c\u4e00\u4e2a\u7a0b\u5e8f\u5728\u5e95\u90e8\u72b6\u6001\u680f\u91cc\u7684\u8bdd, \u7528win+\u6570\u5b57\u952e\u6fc0\u6d3b\u5b83\u4e5f\u53ef\u4ee5\u8fbe\u5230\u4e0a\u8ff0\u4e09\u4e2a\u76ee\u7684, \u6bd4\u5982\u6211\u7684hyper\u5e94\u7528\u6392\u5728\u7b2c\u56db\u4e2a, \u90a3\u4e48\u6211\u53ea\u8981\u53cd\u590d\u6309win+4\u5c31\u80fd\u5728\u4e0a\u8ff0\u4e09\u79cd\u72b6\u6001\u95f4\u5207\u6362, \u6bd4\u5199\u4ee3\u7801\u5b8c\u6210\u68c0\u6d4b, \u6253\u5f00, \u6fc0\u6d3b, \u6700\u5c0f\u5316\u7b49\u8981\u6765\u5f97\u7b80\u5355\u7684\u591a.\u671f\u95f4\u8fd8\u6709\u4e00\u4e2a\u6536\u83b7, mac\u4e0b\u591a\u684c\u9762\u7684\u5207\u6362\u975e\u5e38\u7b80\u5355, ctrl+\u5de6\u53f3\u65b9\u5411\u952e\u5373\u53ef, \u6216\u8005\u7528\u56db\u6839\u624b\u52bf\u8f7b\u626b\u89e6\u6478\u677f, \u800cwindows\u4e0b\u5219\u70b9taskview\u56fe\u6807, \u6216\u8005\u7528win+tab\u6fc0\u6d3b, \u7136\u540e\u518d\u7528\u9f20\u6807\u9009\u62e9(\u603b\u7684\u6765\u8bf4\u662f Win + Ctrl + D / F4 / \u2190 / \u2192 \u8fd9\u4e9b\u7ec4\u5408), \u600e\u6837\u90fd\u6ca1\u6709mac\u7684\u65b9\u6848\u6765\u5f97\u4f18\u96c5(\u5c31\u50cfmac\u4e0b\u6ca1\u6709\u4e00\u4e2a\u7a97\u53e3\u7ba1\u7406\u7a0b\u5e8f\u6709windows\u81ea\u5e26\u7684\u4f18\u96c5\u4e00\u6837^_^), \u53d1\u73b0\u6709\u4eba\u5199\u4e86\u4e00\u4e2a\u811a\u672c\u68c0\u6d4b\u9f20\u6807\u4f4d\u7f6e, \u5982\u679c\u5230\u4e86\u6700\u53f3\u4fa7\u6216\u6700\u5de6\u4fa7, \u5c31\u76f4\u63a5\u628a\u4e0b\u4e00\u4e2a\u684c\u9762\u62c9\u51fa\u6765, \u539f\u672c\u6ca1\u6253\u7b97\u5206\u4eab\u53ea\u662f\u81ea\u5df1\u7528\u7528, \u56e0\u6b64\u51fa\u5904\u6ca1\u4fdd\u5b58, \u62b1\u6b49, \u4e0d\u8fc7\u7c7b\u4f3c\u7684\u811a\u672c\u7f51\u4e0a\u5f88\u591a, \u8fd8\u6709\u5f88\u591a\u5f88\u7cbe\u7ec6\u7684, \u8fd9\u4e00\u4e2a\u5df2\u7ecf\u7b97\u5f88\u7b80\u5355\u7c97\u66b4\u4e86, \u53ef\u4ee5\u62b1\u7740\u5b66\u4e60\u7684\u76ee\u7684\u4e86\u89e3\u4e0b, \u6bd5\u7adf\u8fd9\u4e2a\u811a\u672c\u662f\u4ee5\u6beb\u79d2\u7ea7\u522b\u5728\u65f6\u523b\u76d1\u89c6\u9f20\u6807\u4f4d\u7f6e, \u8fd9\u662f\u6ca1\u5fc5\u8981\u7684\u6027\u80fd\u6d88\u8017\u5427:;----------------\u5c4f\u5e55\u70ed\u533a\n;\u8fd9\u4e2a\u662f\u8bbe\u7f6e\u9f20\u6807\u5750\u6807\u7684\u76f8\u5bf9\u4f4d\u7f6e\uff0c\u672c\u4f8b\u662f\u76f8\u5bf9\u96e8\u6574\u4e2a\u684c\u9762\nCoordMode, Mouse ,Screen\n\n#Persistent\n;\u8fd9\u4e2a\u8bbe\u7f6e\u4e86\u83b7\u53d6\u9f20\u6807\u4fe1\u606f\u7684\u9891\u7387\uff0c\u6570\u503c\u8d8a\u5c0f\u8fb9\u7f18\u70ed\u533a\u8d8a\u7075\u654f\nSetTimer, WatchCursor, 300\nreturn\n\nWatchCursor:\nGetKeyState, state, LButton \nMouseGetPos, xpos, ypos, id, control \n;\u82e5\u8981\u91cd\u8bbe\u8fb9\u7f18\u70ed\u533a\u7684\u8303\u56f4\u8bf7\uff0c\u628a\u4e0b\u4e00\u884c\u7684 ; \u53f7\u53bb\u6389\uff0c\u5c31\u4f1a\u5728\u9f20\u6807\u4f4d\u7f6e\u663e\u793a\u9f20\u6807\u7684\u5750\u6807\uff0c\u6839\u636e\u5750\u6807\u4fee\u6539\u4ee5\u4e0b\u6570\u503c\n;ToolTip,x:%xpos% y:%ypos% state:%state%\nif(state = &quot;U&quot; ){\n    ;y\u65b9\u5411\u7684\u8303\u56f4\n    if(ypos &gt; 150 and ypos &lt; 1000){\n        ;x\u65b9\u5411\u7684\u8303\u56f4\n        if(xpos = 2879){\n            sleep 650\n            Send ^#{Right}\n            MouseMove, 2870, ypos\n        }else if(xpos = 0){\n            sleep 650\n            Send ^#{Left}\n            MouseMove, 20, ypos\n        }\n    ;\u663e\u793a\u6240\u6709\u865a\u62df\u684c\u9762\u7684\u70ed\u533a\n    }else if(xpos = 0 and ypos = 0){\n        Send #{Tab}\n        MouseMove, 10, 10\n    }\n}\nreturn\n\n\u6ce8\u91ca\u5f88\u660e\u786e\u4e86, \u81ea\u5df1\u8bfb, \u9f20\u6807\u68c0\u6d4b\u7684\u70ed\u533a\u662f\u4ee3\u7801\u5199\u6b7b\u7684, \u89e3\u9664\u663e\u793a\u9f20\u6807\u4f4d\u7f6e\u7684\u6ce8\u91ca, \u7136\u540e\u4f60\u628a\u4ee3\u7801\u6539\u6210\u9002\u5408\u4f60\u7684\u5c4f\u5e55\u5206\u8fa8\u7387\u7684\u6570\u503c\u5373\u53ef", "categories": [{"name": "posts", "slug": "posts", "permalink": "/category/posts/"}], "tags": [{"name": "macos", "slug": "macos", "permalink": "/tag/macos/"}, {"name": "windows", "slug": "windows", "permalink": "/tag/windows/"}, {"name": "ahk", "slug": "ahk", "permalink": "/tag/ahk/"}]}, {"title": "\u5f00\u53d1apple-pay\u78b0\u5230\u7684\u95ee\u9898\u603b\u7ed3", "date": "2019-03-04T00:00:00-00.00", "path": "/archives/%E5%BC%80%E5%8F%91apple-pay%E7%A2%B0%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98%E6%80%BB%E7%BB%93/", "text": "\u672c\u6765\u60f3\u7b80\u5355\u603b\u7ed3\u4e00\u4e0bApple Pay \u5f00\u53d1\u8fc7\u7a0b\u4e2d\u7684\u51e0\u4e2a\u95ee\u9898, \u7ed3\u679c\u88ab\u8fd9\u7bc7\u6587\u7ae0\u5168\u78b0\u4e0a\u4e86, \u5e72\u8106\u5168\u6587\u8f6c\u8f7d, \u4f5c\u8005\u5bf9\u76f8\u5173\u8d44\u6e90\u6574\u7406\u5f97\u6bd4\u8f83\u8be6\u7ec6, \u6bd4\u8f83\u6709\u53c2\u8003\u4ef7\u503c, \u5efa\u8bae\u9605\u8bfb, \u6211\u505a\u4e2a\u6982\u8ff0.\u603b\u7684\u6765\u8bf4, \u6211\u4eec\u505a\u8fc7 APNs \u63a8\u9001\u7684\u8bdd, \u7533\u8bf7 \u5546\u6237ID \u5e76\u5173\u8054\u5230 apple id, \u7533\u8bf7\u8bc1\u4e66, \u751f\u6210provisioning profile\u7b49\u6b65\u9aa4\u90fd\u5dee\u4e0d\u591a\u7136\u540e\u6211\u771f\u673a\u8c03\u8bd5\u6709\u4e24\u4e2a\u5730\u65b9\u6ca1\u901a\u8fc7, \u4e0b\u6587\u4e5f\u603b\u7ed3\u4e86, \u6211\u62ce\u51fa\u6765\u5355\u72ec\u8bf4\u4e00\u4e0b:1, Payment request is invalid: check your entitlements. Connection to remote alert view service failed\n\u539f\u56e0:\n\u7c97\u5fc3, \u628amerchant id\u5199\u9519\u4e86.\n\u4e4b\u6240\u4ee5\u8981\u628a\u7c97\u5fc3\u7684\u4e8b\u4e5f\u5217\u51fa\u6765, \u662f\u56e0\u4e3a, \u6211\u51fa\u95ee\u9898\u662f\u7c97\u5fc3, \u4f46\u662f\u56e0\u4e3a\u96c6\u6210\u82f9\u679c\u652f\u4ed8\u7684\u8fc7\u7a0b\u4e2d, \u662f\u9700\u8981\u5728\u914d\u7f6e\u754c\u9762\u7684Capabilities\u91cc\u9762\u7528\u4e0b\u62c9\u5217\u8868\u9009\u62e9\u4e00\u4e2amerchant id, \u4ee5\u53ca\u4ee3\u7801\u91cc\u8fd8\u8981\u5199\u4e00\u6b21\u7684, \u5982\u679c\u4f60\u6709\u591a\u4e2amerchant id, \u6216\u8005\u5f00\u53d1\u8fc7\u7a0b\u4e2d\u5207\u6362\u8fc7, \u4e0b\u62c9\u5217\u8868\u503c\u548c\u4ee3\u7801\u91cc\u624b\u5199\u7684\u503c\u8981\u8bb0\u5f97\u540c\u6b65, \u6ca1\u6709\u540c\u6b65, \u4e00\u6837\u4f1a\u5f97\u4e0a\u4e0a\u9762\u7684\u9519\u8bef2, \u8fdb\u4e0d\u5230didAuthorizePayment\u65b9\u6cd5.\n\u539f\u56e0:\npayrequest.merchantCapabilities = PKMerchantCapability3DS|PKMerchantCapabilityEMV. \n\u770b\u5230\u4e86\u5427, \u540e\u9762\u7684 EMV \u662f\u5fc5\u987b\u8981\u52a0\u7684\n\u5927\u90e8\u5206\u78b0\u5230\u540c\u6837\u95ee\u9898\u7684\u540c\u5b66\u4f30\u8ba1\u90fd\u662f\u770b WWDC \u7684\u89c6\u9891, \u91cc\u9762\u7684\u5c0f\u54e5\u8bf43DS \u662f\u5fc5\u987b\u7684, \u663e\u7136\u5728\u54b1\u4eec\u5927\u5929\u671d, EMV \u4e5f\u662f\u5fc5\u987b\u7684.", "categories": [{"name": "posts", "slug": "posts", "permalink": "/category/posts/"}], "tags": [{"name": "apple pay", "slug": "apple pay", "permalink": "/tag/apple%20pay/"}, {"name": "debug", "slug": "debug", "permalink": "/tag/debug/"}]}, {"title": "\u767e\u5ea6\u5730\u56fe\u5750\u6807\u8f6c\u6362", "date": "2018-12-28T00:00:00-00.00", "path": "/archives/%E7%99%BE%E5%BA%A6%E5%9C%B0%E5%9B%BE%E5%9D%90%E6%A0%87%E8%BD%AC%E6%8D%A2/", "text": "\u9996\u5148, \u6211\u4eec\u4e86\u89e3\u4e00\u4e0b\u4e3a\u4ec0\u4e48\u8981\u5750\u6807\u8f6c\u6362\n\u56fd\u9645\u7ecf\u7eac\u5ea6\u5750\u6807\u6807\u51c6\u4e3aWGS-84,\u56fd\u5185\u5fc5\u987b\u81f3\u5c11\u4f7f\u7528\u56fd\u6d4b\u5c40\u5236\u5b9a\u7684GCJ-02,\u5bf9\u5730\u7406\u4f4d\u7f6e\u8fdb\u884c\u9996\u6b21\u52a0\u5bc6\u3002\u767e\u5ea6\u5750\u6807\u5728\u6b64\u57fa\u7840\u4e0a\uff0c\u8fdb\u884c\u4e86BD-09\u4e8c\u6b21\u52a0\u5bc6\u63aa\u65bd,\u66f4\u52a0\u4fdd\u62a4\u4e86\u4e2a\u4eba\u9690\u79c1\u3002\u767e\u5ea6\u5bf9\u5916\u63a5\u53e3\u7684\u5750\u6807\u7cfb\u5e76\u4e0d\u662fGPS\u91c7\u96c6\u7684\u771f\u5b9e\u7ecf\u7eac\u5ea6\uff0c\u9700\u8981\u901a\u8fc7\u5750\u6807\u8f6c\u6362\u63a5\u53e3\u8fdb\u884c\u8f6c\u6362\u3002\n\u5176\u6b21, \u6211\u4eec\u5728\u7f51\u4e0a\u641c\u5230\u6709\u901a\u8fc7\nhttp://api.map.baidu.com/ag/coord/convert?from=[0/2]&amp;to=4&amp;x=\u7eac\u5ea6&amp;y=\u7ecf\u5ea6\n\u8fd9\u79cdURL\u6765\u8fdb\u884c\u8f6c\u6362\u7684, \u5176\u4e2d0\u4ee3\u8868WGS-84\u5373\u6807\u51c6GPS\u8bbe\u5907\u8fd4\u56de\u7684\u5750\u6807, 2\u4ee3\u8868\u56fd\u6d4b\u5c40\u7684\u6807\u51c6, \u663e\u71364\u5c31\u662f\u767e\u5ea6\u5730\u56fe\u8ba4\u7684\u5750\u6807\u4e86. \u4f46\u6211\u904d\u641c\u7f51\u7edc, \u8fd9\u4e2a\u63a5\u53e3\u662f\u6ca1\u6709\u6587\u6863\u7684(\u4f46\u662f\u786e\u5b9e\u53ef\u7528). \u56e0\u4e3a\u4f1a\u78b0\u5230\u8de8\u57df\u7684\u95ee\u9898(CORS), \u6240\u4ee5\u5c31\u7528\u4e86jQuery\u4e2dscript\u6807\u7b7e\u8de8\u57df\u7684\u65b9\u5f0f\u6765\u6267\u884c, \u7ed3\u679c\u8fd9\u4e2a\u811a\u672c\u4e5f\u88ab\u767e\u5ea6\u201d\u56de\u6536\u201d\u4e86, \u5f53\u7136, \u7f51\u4e0a\u8fd8\u662f\u6709\u75d5\u8ff9\u7684, \u6211\u628a\u5b83\u4fdd\u5b58\u4e86\u4e00\u4e0b, \u89c1\u6b64gist. \n\u6211\u6ca1\u5728\u8fd9\u4e0a\u9762\u82b1\u592a\u591a\u65f6\u95f4, \u5e76\u6ca1\u6709\u6d4b\u5b83\u652f\u4e0d\u652f\u6301\u6279\u91cf\u8f6c\u6362(\u770b\u7f51\u53cb\u5199\u4e86\u4e00\u4e2atransMore, \u662f\u5fc5\u987b\u6279\u91cf\u9001\u5165, \u4f46\u5e95\u5c42\u8fd8\u662f\u4e00\u6b21\u6b21\u5206\u522b\u8bf7\u6c42, \u4e0d\u5408\u6211\u610f).\u800c\u4e8b\u5b9e\u4e0a, \u767e\u5ea6\u5df2\u7ecf\u63d0\u4f9b\u4e86\u6587\u6863\u5316\u7684\u5750\u6807\u8f6c\u6362\u63a5\u53e3, \u5e76\u4e14\u539f\u751f\u5c31\u652f\u6301\u6279\u91cf\u8bf7\u6c42. \u663e\u7136, \u6211\u4eec\u5e94\u8be5\u7528\u6587\u6863\u5316\u7684\u65b9\u6cd5, \u53ea\u662f\u8fd9\u79cd\u7528\u6cd5\u9700\u8981\u7533\u8bf7\u6210\u4e3a\u4e00\u4e2a\u5f00\u53d1\u8005, \u6dfb\u52a0\u4e00\u4e2a\u5e94\u7528. \u8fd9\u4e0d\u662f\u5c0f\u4e8b\u4e48, \u4e8e\u662f\u6211\u5c0f\u5305\u88c5\u4e86\u4e00\u4e0b, \u89c1\u6b64gist.\u4ec5\u4ec5\u6709\u4e00\u70b9\u5c0f\u8981\u6c42, \u5c31\u662f\u4f20\u5165\u7684\u5750\u6807, \u952e\u540d\u5206\u522b\u662flon(\u7ecf\u5ea6)\u548clat\u548c(\u7eac\u5ea6), \u5e76\u4e14\u53ef\u4ee5\u4f20\u5165\u4e00\u4e2a(\u4f20\u5165\u4e00\u4e2a, \u8fd4\u56de\u4e5f\u662f\u4e00\u4e2a), \u6216\u8005\u4e00\u7ec4\u8f6c\u6362\u4e00\u4e2a\u5750\u6807:\nBMap.Convertor.translate({lon:lon, lat:lat}, 1, 5, bdkey, function (point, status, message) {\n    if(status) return show(message || &quot;\u8f6c\u6362\u5750\u6807\u51fa\u9519:&quot;+status, true);\n    var curmarker = new BMap.Marker(point);\n    baidumap.addOverlay(curmarker);\n});\n\n\u4e00\u7ec4\u5750\u6807:\nBMap.Convertor.translate([{lon:lon, lat:lat},...], 1, 5, bdkey, function (points, status, message) {\n    if(status) return show(message || &quot;\u8f6c\u6362\u5750\u6807\u51fa\u9519:&quot;+status, true);\n    // \u904d\u5386points\n});\n\n", "categories": [{"name": "posts", "slug": "posts", "permalink": "/category/posts/"}], "tags": [{"name": "geo", "slug": "geo", "permalink": "/tag/geo/"}, {"name": "gps", "slug": "gps", "permalink": "/tag/gps/"}]}, {"title": "\u6811\u8393\u6d3e\u5229\u7528Privoxy,Shadowsocks,Kcptun\u505ahttp\u4ee3\u7406\u6392\u5751\u8bb0\u5f55", "date": "2018-11-12T00:00:00-00.00", "path": "/archives/%E6%A0%91%E8%8E%93%E6%B4%BE%E5%88%A9%E7%94%A8Privoxy%2CShadowsocks%2CKcptun%E5%81%9Ahttp%E4%BB%A3%E7%90%86%E6%8E%92%E5%9D%91%E8%AE%B0%E5%BD%95/", "text": "\u6211\u7528\u6811\u8393\u6d3e\u505a\u7ffb\u5899\u7f51\u5173, \u900f\u660e\u7f51\u5173, \u901a\u901a\u7ed5\u5230\u5751\u91cc\u51fa\u4e0d\u6765\u4e86, \u65b9\u6848\u5f88\u591a, \u601d\u8def\u662f\u6811\u8393\u6d3e\u7ffb, \u667a\u80fddns, \u667a\u80fd\u56fd\u5185\u5916\u5206\u6d41, \u5916\u52a0\u8ba9\u6811\u8393\u6d3e\u6210\u4e3a\u5c40\u57df\u7f51\u7684\u7f51\u5173\u4ee5\u4fbf\u8ba9\u5c40\u57df\u7f51\u7528\u6237\u65e0\u611f\u7ffb\u5899.\n\u9ed1\u79d1\u6280\u6ca1\u73a9\u8f6c, \u4e8e\u662f\u6211\u6574\u7406\u601d\u7eea, \u505a\u4e00\u4e2a\u6700\u7b80\u5355\u7684\u5c40\u57df\u7f51http\u4ee3\u7406\u670d\u52a1\u5668\u5427. \u4efb\u4f55\u7f51\u7edc\u8bbe\u5907/\u5e94\u7528\u90fd\u80fd\u627e\u5230\u8bbehttp\u4ee3\u7406\u7684\u5730\u65b9, \u8fd9\u6837\u6700\u540e\u53ea\u8981\u8ba9\u6811\u8393\u6d3e\u80fd\u5e94\u7528gfwlist\u7684\u89c4\u5219.\u6211\u4eec\u6765\u770b\u4e00\u4e0b\u6700\u7ec8\u7684\u62d3\u6251:\n\u51e0\u70b9\u8bf4\u660e:\n\u5982\u679c\u53ea\u662fShadowsocks\u7ffb\u5899, \u90a3\u4e48\u8fd9\u4e00\u6b65\u505a\u5b8c\u5c31\u6536\u5de5\u4e86. \u6700\u7b80\u6b65\u9aa4\n\u5982\u679c\u9700\u8981\u8f6c\u6210http\u4ee3\u7406, \u4f60\u5c31\u518d\u591a\u5305\u4e00\u5c42\u4ee3\u7406\u5de5\u5177, Prixovy, Polipo\u7b49, \u7528\u5173\u952e\u8bcd\u641c, \u6bd4, \u81ea\u5df1\u5b9a. Polipo\u914d\u7f6e\u8981\u7b80\u5355\u5f88\u591a\n\u5bf9, \u4e0d\u8003\u8651\u505a\u6210\u7f51\u5173\u5c31\u662f\u8fd9\u4e48\u7b80\u5355, \u4f46\u662f\u6211\u8fd8\u60f3\u7528kcptun\u7ed9\u63d0\u63d0\u901f, \u6240\u4ee5\u591a\u63d2\u4e00\u811a\n\u4e0d\u9700\u8981\u66f4\u591a\u4e86, \u518d\u591a\u5c31\u53c8\u6709\u65b0\u5751\u4e86.\n\n\u5f00\u59cb\u6392\u5751shadowsocks-libev\n\u6211\u4f7f\u7528\u7684\u662f\u4e00\u952e\u5b89\u88c5\u811a\u672c, \u5b83\u4f1a\u7ed9\u4f60\u9ed8\u8ba4\u542f\u52a8\u6210ss-server, \u663e\u7136, \u4f60\u9700\u8981\u7684\u662fss-local, \u5982\u679c\u4ece\u540d\u5b57\u53ef\u4ee5\u770b\u51fa\u5b83\u4eec\u7684\u5dee\u522b, \u5f53\u7136\u8fd8\u6709ss-redir, \u4f60\u8981\u642d\u5efa\u900f\u660e\u4ee3\u7406\u7684\u8bdd\u7528\u7740\u5f97, \u8fd8\u6709ss-tunnel, \u8f6c\u53d1DNS.\nlsof -i:8530\u770b\u770b\u8dd18530\u7aef\u53e3\u7684\u662f\u54ea\u4e2a\u7a0b\u5e8f\n\u6211\u8bb2\u89e3\u4e00\u4e0b\u600e\u4e48\u628ass-server\u6539\u6210ss-local.\n\u5b83\u662f\u4ee5ss-server -c &lt;configFILE&gt; -f &lt;pidFILE&gt;\u542f\u52a8\u7684, \u5199\u5728\u4e86/etc/init.d/shadowsocks \u91cc\u9762, \u4f60\u628a\u6240\u6709ss-server\u6539\u4e3ass-local, \u7136\u540e\u987a\u4fbf\u628a-f\u53c2\u6570\u5220\u6389\n\u6539\u5b8c\u540e, \u4fdd\u5b58: update-rc.d -f shadowsocks defaults\n\u91cd\u542f: /etc/init.d/shadowsocks restart\n\n\u5982\u679c\u9700\u8981\u8fdekcptun, \u90a3\u4e48\u8fd9\u91cc\u662f\u7b2c\u4e8c\u4e2a\u9700\u8981\u6ce8\u610f\u7684\u5730\u65b9, \u5373\u4f60\u7684\u670d\u52a1\u5668\u5730\u5740\u672c\u5e94\u4e3ashadowsocks\u670d\u52a1\u5668\u5730\u5740\u53ca\u7aef\u53e3, \u8fd9\u91cc\u8981\u6539\u6210127.0.0.1:&lt;kcptun\u7aef\u53e3&gt;shadowsocks\u5c31\u4e0a\u8ff0\u4e24\u4e2a\u9700\u8981\u6ce8\u610f\u7684\u5730\u65b9.\n\u5982\u679c\u4f60\u4f7f\u7528\u4e86python\u7248, go\u7248\u7684, \u6216\u662f\u624b\u5de5\u5b89\u88c5\u7684libev\u7248, \u90a3\u4e48\u6539ss-server\u8fd9\u4e2a\u5751\u4f60\u5c31\u78b0\u4e0d\u5230\u4e86kcptun\n\u4e0b\u8f7dLinux\u7248\u7684kcptun\u5305, \u9009\u62e9\u540d\u5b57\u91cc\u542b\u6709client\u548carmv7\u7684\u6587\u4ef6\u5373\u53ef, \u8fd9\u91cc\u65e0\u5176\u5b83\u5751, \u9009\u5bf9\u6587\u4ef6\u662f\u5173\u952e, \u914d\u7f6e\u6587\u4ef6\u53c2\u6570\u4e0e\u670d\u52a1\u7aef\u4e00\u81f4\u5373\u53ef.\n\u7f51\u4e0a\u6709\u4e9b\u6587\u7ae0\u8bf4\u4e00\u5b9a\u8981\u4fdd\u6301server\u6587\u4ef6\u548cclient\u6587\u4ef6\u662f\u540c\u4e00\u5929\u7684, \u6211\u5b9e\u6d4b\u6ca1\u5fc5\u8981. \u6211\u7684server\u7aef\u90fd\u90e8\u7f72\u4e86\u4e00\u5e74\u4e86, \u4eca\u5929\u7528\u7684\u6700\u65b0\u7684client, \u6ca1\u4ec0\u4e48\u95ee\u9898\nPrivoxy\n\u8fd9\u91cc\u5751\u6bd4\u8f83\u591a\n\u6309\u7f51\u4e0a\u666e\u901a\u7684\u6559\u7a0b, \u8bbe\u7f6e\u81ea\u5df1\u7684\u76d1\u542c\u7aef\u53e3(\u9ed8\u8ba48118)\u548cshadowsocks\u7684(127.0.0.1:1080), \u6ca1\u95ee\u9898\n\u505a\u5b8c\u4e0a\u4e00\u6b65, \u6211\u7528\u7535\u8111\u8bbe\u7f6e\u6811\u8393\u6d3e\u76848118\u7aef\u53e3\u4e3a\u4ee3\u7406\u670d\u52a1\u5668, \u5c45\u7136\u6240\u6709\u6d41\u91cf\u5df2\u7ecf(\u5212\u91cd\u70b9)\u88ab\u8f6c\u53d1\u4e86, \u800c\u7406\u8bba\u4e0a\u8fd9\u65f6\u662f\u9700\u8981\u4f60\u81ea\u5df1\u6dfb\u52a0\u89c4\u5219(.action\u6587\u4ef6)\u7684,\u5426\u5219\u5c31\u662f\u76f4\u8fde.\n\u627e\u4e86\u5f88\u591a\u8d44\u6599, \u6ca1\u4eba\u78b0\u5230\u8ddf\u6211\u4e00\u6837\u7684\u60c5\u51b5, \u6240\u4ee5\u6211\u662f\u7ed5\u4e86\u4e00\u5708, \u505a\u4e86\u4e00\u4e2a\u4e0d\u8f6c\u53d1\u6240\u6709\u6d41\u91cf\u7684\u89c4\u5219, \u7136\u540e\u518d\u5728\u540e\u9762\u8ddf\u4e0a\u6211\u7684gfw\u7684\u89c4\u5219, \u624d\u4f1a\u9009\u62e9\u6027\u5730\u8f6c\u53d1. \u5947\u602a\n\u6700\u540e\u5c31\u662f\u7f51\u4e0a\u627e\u4e00\u4e2a\u80fd\u8f6cgfwlist\u89c4\u5219\u7684\u65b9\u6848\u5e94\u7528\u5230action\u91cc\u5c31\u597d, \u6bd4\u5982\u8fd9\u4e2a\n\n\u5206\u4eab\u4e00\u4e2aaction\u6587\u4ef6\u7f16\u5199\u7684\u826f\u597d\u5b9e\u8df5, \u5e94\u7528\u522b\u540d:\n{{alias}}\ndirect   = +forward-override{forward .}\nsocks    = +forward-override{forward-socks5 localhost:8080 .}\nhttproxy = +forward-override{forward localhost:8000 .}\n\n{direct}\n.google.com\n.googleusercontent.com\n.mozilla.com\n\u3010\u6211\u5c31\u662f\u5728\u8fd9\u91cc\u8bbe\u4e86\u4e00\u4e2a*.*, direct\u4e86\u6240\u6709\u7684\u6d41\u91cf\u3011\n\n{socks}\n.youtube.com\n.ytimg.com\n\n{httproxy}\n.twitter.com\n.blogspot.com\nfeedproxy.google.com\n\n#\u603b\u7ed3\n\u6811\u8393\u6d3e\u5bf9\u5916\u66b4\u9732Privoxy\u76848118\u7aef\u53e3, \u8f6c\u53d1\u81f3shadowsocks\u76841080\u7aef\u53e3\nshadowsocks\u8f6c\u53d1\u81f3kcptun\u76841087\u7aef\u53e3\nkcptun client\u4e0ekcptun server\u768429900\u901a\u8baf\nkcptun server\u4e0eshadowsocks server\u76848530\u901a\u8baf\n\n\u7b49\u4e8e\u628a\u62d3\u6251\u56fe\u53e3\u8ff0\u4e86\u4e00\u904d~~~\u6211\u4e5f\u662f\u60f3\u6e05\u4e86\u8fd9\u4e2a\u624d\u6700\u7ec8\u601d\u8def\u6e05\u6670\u5730\u505a\u5b8c\u6240\u6709\u4e8b\u7684\u6700\u540e, \u4e0d\u7ba1\u662fprivoxy\u8fd8\u662fshadowsocks\u8fd8\u662fkcptun, \u90fd\u662f\u9700\u8981\u52a0\u5165\u81ea\u542f\u52a8\u7684, \u4f60\u53ef\u4ee5\u9009\u62e9\u5728/etc/rc.local\u91cc\u9762\u4f9d\u6b21\u5199\u5165\u542f\u52a8\u811a\u672c, \u4e5f\u53ef\u4ee5\u5728/etc/init.d/\u91cc\u9762\u6dfb\u52a0\u5bf9\u5e94\u7684\u811a\u672c\u6587\u4ef6\u672c\u6587\u4e0d\u662f\u6559\u7a0b, \u662f\u6392\u5751\u6307\u5357. \u76f8\u5e94\u7684\u5b89\u88c5, \u914d\u7f6e, \u52a0\u542f\u52a8, \u53ef\u4ee5\u641c\u65e2\u6709\u6559\u7a0b, \u5982\u679c\u78b0\u5230\u8ddf\u6211\u4e00\u6837\u7684\u95ee\u9898, \u5e0c\u671b\u5e2e\u52a9\u5230\u4e86\u4f60.#\u9898\u5916\u8bdd\n\u6211\u7684\u76ee\u7684\u5176\u5b9e\u662f\u7ed9\u6211\u7684Apple TV\u7b2c3\u4ee3\u7ffb\u5899, \u7ed3\u679c\u53d1\u73b0\u5b83\u5c45\u7136\u4e0d\u80fd\u76f4\u63a5\u8bbe\u7f6ehttp\u4ee3\u7406, \u5f97\u7528Apple Configurator 2\u6765\u8bbe\u7f6e, \u5e76\u63a8\u5230\u8bbe\u5907\u4e0a. \u8fd9\u91cc\u6709\u4e24\u4e2a\u9009\u62e9\n\u8bbe\u7f6e\u5168\u5c40\u4ee3\u7406(\u9700\u8981\u8bbe\u5907Supervised)\n\u8bbe\u7f6e\u67d0\u4e2aWiFi\u70ed\u70b9\u7684\u4ee3\u7406\n\n\u6211\u6ca1\u53bb\u7814\u7a76\u4ec0\u4e48\u662fSupervised\u4e86, \u800c\u4e14\u4e5f\u5e0c\u671b\u4ee3\u7406\u597d\u5207\u6362, \u4e8e\u662f\u9009\u62e9\u4e86\u7b2c\u4e8c\u79cd\u65b9\u6848, \u5373\u6362\u4e86wifi\u540e\u5c31\u6ca1\u4ee3\u7406\u4e86(\u8ddf\u5728iPhone\u4e0a\u8bbe\u7f6e\u4e00\u6837)TODO:\nudp2raw, and udp2raw on mac", "categories": [{"name": "posts", "slug": "posts", "permalink": "/category/posts/"}], "tags": [{"name": "raspberry pi", "slug": "raspberry pi", "permalink": "/tag/raspberry%20pi/"}, {"name": "shadowsocks", "slug": "shadowsocks", "permalink": "/tag/shadowsocks/"}, {"name": "kcptun", "slug": "kcptun", "permalink": "/tag/kcptun/"}]}, {"title": "\u4f7f\u7528openssl\u521b\u5efa\u81ea\u7b7e\u540d\u8bc1\u4e66\u53ca\u90e8\u7f72\u5230IIS\u6559\u7a0b", "date": "2018-10-13T00:00:00-00.00", "path": "/archives/%E4%BD%BF%E7%94%A8openssl%E5%88%9B%E5%BB%BA%E8%87%AA%E7%AD%BE%E5%90%8D%E8%AF%81%E4%B9%A6%E5%8F%8A%E9%83%A8%E7%BD%B2%E5%88%B0IIS%E6%95%99%E7%A8%8B/", "text": "#\u521b\u5efa\u81ea\u7b7e\u540d\u8bc1\u4e66\n\u9996\u5148\uff0c\u521b\u5efa\u4e00\u4e2a\u79c1\u94a5\u6587\u4ef6\uff1a\nopenssl genrsa -out myselfsigned.key 2048\n\n\u7136\u540e\u5229\u7528\u79c1\u94a5\u521b\u5efa\u81ea\u7b7e\u540d\u8bc1\u4e66\uff1a\nopenssl req -new -x509 -key myselfsigned.key -out myselfsigned.cer -days 36500\n\n\u6267\u884c\u4e0a\u9762\u7684\u4e24\u4e2a\u64cd\u4f5c\u4e4b\u540e\u4f1a\u63d0\u793a\u8f93\u5165\u4ee5\u4e0b\u51e0\u4e2a\u5185\u5bb9(\u4e3a\u4e86\u663e\u793a\u6b63\u5e38\u5c3d\u91cf\u4f7f\u7528\u82f1\u6587)\uff1a\n\nCountry Name (2 letter code) [AU]:CN //\u56fd\u5bb6\u7b80\u79f0\n\n\n\nState or Province Name (full name) [Some-State]:GuangDong //\u5dde\u6216\u7701\u7684\u540d\u5b57\nLocality Name (eg, city) []:ShenZhen //\u533a\u6216\u5e02\u53bf\u7684\u540d\u79f0\nOrganization Name (eg, company) [Internet Widgits Pty Ltd]:Comapny //\u516c\u53f8\u6216\u7ec4\u7ec7\u540d\nOrganizational Unit Name (eg, section) []:Mobile //\u5355\u4f4d\u6216\u8005\u662f\u90e8\u95e8\u540d\u79f0\nCommon Name (e.g. server FQDN or YOUR name) []:xxxxxx //\u57df\u540d\u6216\u670d\u52a1\u5668\u540d\u6216IP\nEmail Address []:xxxxx@gmail.com //Email\u5730\u5740\n\n\u6ce8, \u4e0a\u8ff0\u53ef\u76f4\u63a5\u5728\u547d\u4ee4\u4e2d\u7528-subj\u8ddf\u5728\u8bed\u53e5\u540e\u9762, \u5982:\nopenssl req -new -x509 -key myselfsigned.key -out myselfsigned.cer -days 36500 -subj /CN=\u57df\u540d\u6216\u670d\u52a1\u5668\u540d\u6216IP\n\n\u81f3\u6b64, \u751f\u6210\u7684myselfsigned.cer\u5206\u522b\u5e94\u7528\u5230\u670d\u52a1\u5668\u7aef\u4ee5\u53ca\u5ba2\u6237\u7aef(\u901a\u8fc7\u90ae\u4ef6, \u94fe\u63a5\u7b49\u65b9\u5f0f\u4e0b\u53d1), \u5373\u53ef\u4f7f\u7528, \u914d\u7f6eIIS\u89c1\u4e0b\u6587#\u521b\u5efa\u81ea\u5df1\u7684\u8bc1\u4e66\u9881\u53d1\u673a\u6784(CA)\n\u5373\u4f7f\u662f\u6d4b\u8bd5\u76ee\u7684, \u4e5f\u4f1a\u51fa\u73b0\u6709\u591a\u4e2a\u7ad9\u70b9\u9700\u8981\u81ea\u5b9a\u4e49\u8bc1\u4e66\u7684\u60c5\u51b5, \u4e0d\u53ef\u80fd\u8981\u6c42\u7528\u6237\u6bcf\u4e2a\u7ad9\u70b9\u88c5\u4e00\u4e2a \u6211\u4eec\u4f55\u4e0d\u628a\u81ea\u5df1\u6dfb\u52a0\u6210\u4e00\u4e2a\u8bc1\u4e66\u9881\u53d1\u673a\u6784(CA), \u7136\u540e\u628a\u8fd9\u4e2a\u8bc1\u4e66\u88c5\u7ed9\u5ba2\u6237\u7aef, \u90a3\u4e48\u7531\u8fd9\u4e2aCA\u9881\u53d1\u7684\u8bc1\u4e66\u90fd\u4f1a\u88ab\u81ea\u52a8\u4fe1\u4efb.\u9996\u5148, \u7528\u540c\u6837\u7684\u8bed\u6cd5\u521b\u5efa\u4e00\u4e2a\u8bc1\u4e66, \u6211\u4eec\u628a\u540d\u5b57\u53d6\u660e\u786e\u4e00\u4e9b, \u5c31\u53ebmyCA\u5427(\u8ddf\u7b2c\u4e00\u6b65\u751f\u6210\u666e\u901a\u8bc1\u4e66\u662f\u4e00\u6837\u4e00\u6837\u7684, \u53ea\u662f\u8fd9\u6b21\u6211\u4eec\u628a\u5b83\u7406\u89e3\u6210\u4e00\u4e2a\u8bc1\u4e66\u9881\u53d1\u673a\u6784)\nopenssl genrsa -out myCA.key 2048\nopenssl req -new -x509 -key myCA.key -out myCA.cer -days 36500\n\n\u7136\u540e, \u57fa\u4e8e\u8fd9\u4e2a\u8bc1\u4e66\u751f\u6210\u4e00\u4e2a\u8bc1\u4e66\u8bf7\u6c42(CSR), (\u540c\u6837, \u5148\u751f\u6210\u4e00\u4e2akey, \u8981\u7528key\u6765\u8bf7\u6c42)\nopenssl genrsa -out server.key 2048\nopenssl req -new -out server.req -key server.key -subj /CN=\u57df\u540d\n\n\n\u6ce8:\n\n\u4e00\u65e6\u57df\u540d\u914d\u7f6e\u4e86, \u7528\u4e0d\u540c\u4e8e\u8fd9\u4e2a\u57df\u540d\u7684\u4e3b\u673a\u540d\u6765\u8bf7\u6c42, \u5c31\u4f1a\u6821\u9a8c\u5931\u8d25\n\u8fd9\u91cc\u7528\u5230\u4e86\u4e0a\u9762\u8bf4\u7684-subj\u53c2\u6570\n\n\u6700\u540e, \u901a\u8fc7\u670d\u52a1\u5668\u8bc1\u4e66(\u6211\u4eec\u7406\u89e3\u7684CA), \u5bf9\u8fd9\u4e2a\u7b7e\u53d1\u8bf7\u6c42\u8fdb\u884c\u7b7e\u53d1\nopenssl x509 -req -in server.req -out server.cer -CAkey myCA.key -CA myCA.cer -days 36500 -CAcreateserial -CAserial serial\n\n#\u914d\u7f6eIIS\n\u6211\u4eec\u7684\u4f7f\u7528\u573a\u666f\u662fIIS\u4f3a\u670d\u4e86\u4e00\u4e2a\u9759\u6001\u6587\u4ef6\u670d\u52a1\u5668(\u6ca1\u9519, \u662f\u7528\u6765\u653eiOS\u4f01\u4e1a\u90e8\u7f72\u7684\u7684plist\u548cipa\u6587\u4ef6\u7684), \u505a\u5230\u5982\u4e0b\u51e0\u6b65##\u8f6c\u5316\u8bc1\u4e66\u683c\u5f0f\nIIS\u5bfc\u5165\u8bc1\u4e66\u9700\u8981\u8f6c\u5316\u4e3apkcs12\u683c\u5f0f(X509\u683c\u5f0f?), \u4e2d\u95f4\u4f1a\u8be2\u95ee\u4e00\u6b21\u5bc6\u7801, \u7262\u8bb0, \u6216\u8005\u4e0e\u5bfc\u51fa\u7684\u6587\u4ef6\u4e00\u8d77\u4fdd\u5b58\nopenssl pkcs12 -export -clcerts -in server.cer -inkey server.key -out iis.pfx\n\n\u73b0\u5728\u603b\u7ed3\u4e00\u4e0b, \u76ee\u524d\u4e3a\u6b62, \u9664\u53bbkey\u548ccar, \u751f\u6210\u4e86myCA.cer, server.cer \u548ciis.pfx\u4e09\u4e2a\u6587\u4ef6##\u5c06myCA.cer\u6dfb\u52a0\u4e3a\u201d\u53d7\u4fe1\u4efb\u7684\u6839\u8bc1\u4e66\u9881\u53d1\u673a\u6784\u201d\n\u6253\u5f00IE &gt; \u5de5\u5177 &gt; Internet\u9009\u9879 &gt; \u5185\u5bb9 &gt; \u8bc1\u4e66 &gt; \u53d7\u4fe1\u4efb\u7684\u6839\u8bc1\u4e66\u9881\u53d1\u673a\u6784 &gt; \u5bfc\u5165 &gt; \u9009\u62e9iis.pfx &gt; \u8f93\u5165\u5bc6\u7801 &gt; \u5bfc\u5165##\u6dfb\u52a0\u670d\u52a1\u5668\u8bc1\u4e66\n\u8fd9\u9700\u8981\u4e24\u4e2a\u6b65\u9aa4\u9996\u5148, \u5728IIS\u7ba1\u7406\u5668(inetmgr)\u7684\u6839\u76ee\u5f55\u4e0a(\u5c31\u662f\u673a\u5668\u540d), \u9009\u62e9\u201d\u670d\u52a1\u5668\u8bc1\u4e66\u201d, \u5bfc\u5165\u6211\u4eec\u521a\u624d\u7528server.cer\u751f\u6210\u7684iis.pfx, \u5373\u7ed9IIS\u6dfb\u52a0\u4e86\u4e00\u4e2a\u8bc1\u4e66(\u5982\u679c\u6709\u591a\u4e2a, \u91cd\u590d\u4ee5\u4e0a\u6b65\u9aa4)\u7136\u540e, \u627e\u5230\u7f51\u7ad9\u8282\u70b9, \u53f3\u952e, \u201c\u7f16\u8f91\u7ed1\u5b9a\u201d, \u6dfb\u52a0\u4e00\u4e2a\u4f9bhttps\u8bbf\u95ee\u7684\u7aef\u53e3(\u9ed8\u8ba4\u662f443), \u6b64\u65f6\u4f1a\u8981\u6c42\u4f60\u9009\u62e9\u4e00\u4e2a\u8bc1\u4e66, \u628a\u521a\u624d\u901a\u8fc7\u7ba1\u7406\u5668\u6dfb\u52a0\u7684\u8bc1\u4e66\u540d\u9009\u51fa\u6765, \u5373\u53ef.\u6700\u540e, \u628aserver.cer\u901a\u7528\u4f60\u4eec\u4f01\u4e1a\u81ea\u5df1\u7684\u65b9\u5f0f\u9881\u53d1\u7ed9\u9700\u8981\u4f7f\u7528\u7684\u5ba2\u6237\u7aef(\u90ae\u4ef6, \u94fe\u63a5\u7b49, \u5747\u53ef), \u5982\u679c\u662fiPhone, \u70b9\u51fb\u4e86server.cer\u6587\u4ef6\u540e, \u4f1a\u5bfc\u822a\u5230\u8bbe\u7f6e\u91cc\u9762\u5b89\u88c5, \u5b89\u88c5\u5e76\u4fe1\u4efb\u540e, \u5728\u8bbe\u7f6e &gt; \u901a\u7528 &gt; Profiles\u91cc\u9762\u53ef\u4ee5\u770b\u5230\u4f60\u4fe1\u4efb\u7684\u8bc1\u4e66\u4f7f\u7528openssl\u521b\u5efa\u81ea\u7b7e\u540d\u8bc1\u4e66\u53ca\u90e8\u7f72\u5230IIS\u6559\u7a0b", "categories": [{"name": "posts", "slug": "posts", "permalink": "/category/posts/"}], "tags": [{"name": "openssl", "slug": "openssl", "permalink": "/tag/openssl/"}, {"name": "iis", "slug": "iis", "permalink": "/tag/iis/"}, {"name": "\u81ea\u7b7e\u540d", "slug": "\u81ea\u7b7e\u540d", "permalink": "/tag/%E8%87%AA%E7%AD%BE%E5%90%8D/"}, {"name": "cert", "slug": "cert", "permalink": "/tag/cert/"}]}, {"title": "libxml-tree-h-file-not-found", "date": "2018-09-22T00:00:00-00.00", "path": "/archives/libxml-tree-h-file-not-found/", "text": "stackoverflow\u7528\u6237\u5bf9\u6dfb\u52a0libxml2\u5e93\u8868\u73b0\u51fa\u4e86\u6781\u5927\u7684\u62b1\u6028\uff0c\u539f\u56e0\u5728\u8981\u628a\u5b83\u597d\u597d\u5730\u6dfb\u52a0\u8fdb\u53bb\u5b9e\u5728\u662f\u592a\u590d\u6742\u4e86\u3002\u6211\u5c31\u662f\u56e0\u4e3a\u51fa\u73b0\u4e86'libxml/tree.h file not found\u2019\u9519\u8bef\uff0c\u624d\u53d1\u73b0\u7684\u8fd9\u7bc7\u8d34\u5b50\uff0c\u7167\u7740\u505a\uff0c\u9519\u8bef\u5c31\u6d88\u9664\u4e86\uff0c\u5907\u6ce8\u5982\u4e0b\uff1a\u539f\u59cb\u5730\u5740\uff1ahttp://stackoverflow.com/questions/1428847/libxml-tree-h-no-such-file-or-directory\u89c1e.w. parris\u7684\u7b54\u6848Adding libxml2 is a big, fat, finicky pain in the ass. If you're going to do it, do it before you get too far in building your project.You need to add it in two ways:1. Target settings\nClick on your target (not your project) and select Build Phases.Click on the reveal triangle titled Link Binary With Libraries. Click on the + to add a library.Scroll to the bottom of the list and select libxml2.dylib. That adds the libxml2 library to your project.\n\u6ce8: xcode 7 \u4ee5\u540e, .dylib\u6587\u4ef6\u53d8\u6210\u4e86.tbd\u6587\u4ef6, \u60f3\u8981\u5f15\u7528.dylib\u6587\u4ef6, \u70b9add others \u2192 cmd+shift+G\u2192type /usr/lib \u2192 find libxml2.dylib or libxml2.2.dylib\n2. Project settings\nNow you have to tell your project where to look for it three more times.Select the Build Settings tab.Scroll down to the Linking section. Under your projects columns double click on the Other Linker Flags row. Click the + and add -lxml2 to the list.Still more.In the same tab, scroll down to the Search Paths section.Under your projects column in the Framework Search Paths row add /usr/lib/libxml2.dylib.In the Header Search Paths and the User Header Search Paths row add $(SDKROOT)/usr/include/libxml2.In those last two cases make sure that path is entered in Debug and Release.3. Clean\nUnder the Product Menu select Clean.Then, if I were you (and lets face it, I probably am) I'd quit Xcode and walk away. When you come back and launch you should be good to go.", "categories": [{"name": "posts", "slug": "posts", "permalink": "/category/posts/"}], "tags": [{"name": "libxml2", "slug": "libxml2", "permalink": "/tag/libxml2/"}]}, {"title": "iOS\u5e94\u75283D-Touch\u5feb\u6377\u8bbf\u95ee", "date": "2018-09-14T00:00:00-00.00", "path": "/archives/iOS%E5%BA%94%E7%94%A83D-Touch%E5%BF%AB%E6%8D%B7%E8%AE%BF%E9%97%AE/", "text": "#\u7528\u6cd5\u6dfb\u52a0\u5feb\u6377\u9879(UIApplicationShortcutItem)\n\u6709\u4e24\u79cd\u9014\u5f84, \u7f16\u8f91Info.plist\u6216\u4ee3\u7801\u6dfb\u52a0Info.plist\n&lt;key&gt;UIApplicationShortcutItems&lt;/key&gt;\n&lt;array&gt;\n    &lt;dict&gt;\n       &lt;!--\u56fe\u6807, \u5fc5\u987b--&gt;\n    \t&lt;key&gt;UIApplicationShortcutItemIconType&lt;/key&gt;\n    \t&lt;string&gt;UIApplicationShortcutIconTypeCapturePhoto&lt;/string&gt;\n    \t&lt;!--\u6807\u9898, \u5fc5\u987b--&gt;\n    \t&lt;key&gt;UIApplicationShortcutItemTitle&lt;/key&gt;\n    \t&lt;string&gt;Scan&lt;/string&gt;\n    \t&lt;!-\u526f\u6807\u9898--&gt;\n    \t&lt;key&gt;UIApplicationShortcutItemSubtitle&lt;/key&gt;\n    \t&lt;string&gt;QR Code&lt;/string&gt;\n    \t&lt;!--\u5feb\u6377\u9879\u6807\u8bc6\u7b26--&gt;\n    \t&lt;key&gt;UIApplicationShortcutItemType&lt;/key&gt;\n    \t&lt;string&gt;$(PRODUCT_BUNDLE_IDENTIFIER).Scan&lt;/string&gt;\n    &lt;/dict&gt;\n&lt;/array&gt;\n\n\u5b8c\u6574\u53ef\u9009\u9879\u89c1\u6587\u6863\u4ee3\u7801\u6dfb\u52a0\n// Construct the items.\nlet shortcut3 = UIMutableApplicationShortcutItem(\n    type: ShortcutIdentifier.Third.type, \n    localizedTitle: &quot;Play&quot;, \n    localizedSubtitle: &quot;Will Play an item&quot;, \n    icon: UIApplicationShortcutIcon(type: .play), \n    userInfo: [\n        AppDelegate.applicationShortcutUserInfoIconKey: UIApplicationShortcutIconType.play.rawValue\n    ]\n)\n\nlet shortcut4 = ... // \u540c\u4e0a\n\n// Update the application providing the initial &#39;dynamic&#39; shortcut items.\napplication.shortcutItems = [shortcut3, shortcut4]\n\n\u826f\u597d\u5b9e\u8df5\n\n\u5b9e\u73b0\u4e00\u4e2a(BOOL)handleShortcutItem:(UIApplicationShortcutItem *)shortcutItem\u8fd4BOOL\u503c\u7684\u65b9\u6cd5, \u91cc\u9762\u8fdb\u884c\u4e1a\u52a1\u64cd\u4f5c\n\u5b9e\u73b0\u4ee3\u7406\u65b9\u6cd5:\n\n\n- (void)application:(UIApplication *)application performActionForShortcutItem:(UIApplicationShortcutItem *)shortcutItem completionHandler:(void (^)(BOOL))completionHandler {\n    completionHandler([self handleShortcutItem:shortcutItem]);\n}\n\n\n\u5728didBecomeActive\u65b9\u6cd5\u91cc\u5224\u65ad\u662f\u5426\u9700\u8981 handle \u5feb\u6377\u65b9\u5f0f\n\n- (void)applicationDidBecomeActive:(UIApplication *)application {\n    if(!self.launchedShortcutItem) return;\n    [self handleShortcutItem:self.launchedShortcutItem];\n    self.launchedShortcutItem = nil;\n}\n\n\n3\u8bf4\u660e\u5982\u679c\u4f60\u9700\u8981\u63d0\u53d6\u4e00\u4e2a\u5c5e\u6027launchedShortcutItem\n\u5982\u679c\u63d0\u53d6\u4e86\u5c5e\u6027, \u90a3\u4e48didFinishLaunch\u4e5f\u53ef\u4ee5\u987a\u4fbf\u6539\u4e3a:\n\nBOOL shouldPerformAdditionalDelegateHandling = YES;\nUIApplicationShortcutItem *shortcutItem = (UIApplicationShortcutItem *)launchOptions[UIApplicationLaunchOptionsShortcutItemKey];\nif(shortcutItem) {\n    self.launchedShortcutItem = shortcutItem;\n    shouldPerformAdditionalDelegateHandling = NO;\n}\n\n// \u4f60\u7684\u5176\u5b83\u521d\u59cb\u4ee3\u7801\n\nreturn shouldPerformAdditionalDelegateHandling;  // \u901a\u5e38\u8fd9\u91cc\u8fd4\u7684\u662f YES;\n\n\u8bd5\u8bd5\u5427#\u53c2\u8003\u8d44\u6599\n\u5b98\u65b9\u6587\u6863\n\u793a\u4f8b\u4ee3\u7801\n\u5feb\u6377\u56fe\u6807\n\u6a21\u62df\u5668\u652f\u6301\niOS Keys \u4e00\u4e9b\u952e\u503c\u7684\u8bf4\u660e\n\n", "categories": [{"name": "posts", "slug": "posts", "permalink": "/category/posts/"}], "tags": [{"name": "3d-touch", "slug": "3d-touch", "permalink": "/tag/3d-touch/"}]}, {"title": "\u5907\u4efd\u7bc7\u7ed8\u5236\u804a\u5929\u6c14\u6ce1\u7684\u6587\u7ae0", "date": "2018-09-06T00:00:00-00.00", "path": "/archives/%E5%A4%87%E4%BB%BD%E7%AF%87%E7%BB%98%E5%88%B6%E8%81%8A%E5%A4%A9%E6%B0%94%E6%B3%A1%E7%9A%84%E6%96%87%E7%AB%A0/", "text": "\u8bb0\u8bb0\u601d\u8def- (void)drawRect:(CGRect)rect\n{\n    CGContextRef context=UIGraphicsGetCurrentContext();\n    CGContextSetLineWidth(context, .5f);\n    CGContextSetStrokeColorWithColor(context, [UIColor lightGrayColor].CGColor);\n    CGContextSetRGBFillColor(context, 1, 1, 1, 1);\n\n    rect.origin.y++;\n    CGFloat radius = cornerRadius;\n\n    CGFloat minx = CGRectGetMinX(rect), midx = CGRectGetMidX(rect), maxx = CGRectGetMaxX(rect);\n    CGFloat miny = CGRectGetMinY(rect), midy = CGRectGetMidY(rect), maxy = CGRectGetMaxY(rect);\n\n    CGMutablePathRef outlinePath = CGPathCreateMutable();\n\n    if (![User isCurrentUser:message.user])\n    {\n        minx += 5;\n\n        CGPathMoveToPoint(outlinePath, nil, midx, miny);\n        CGPathAddArcToPoint(outlinePath, nil, maxx, miny, maxx, midy, radius);\n        CGPathAddArcToPoint(outlinePath, nil, maxx, maxy, midx, maxy, radius);\n        CGPathAddArcToPoint(outlinePath, nil, minx, maxy, minx, midy, radius);\n        CGPathAddLineToPoint(outlinePath, nil, minx, miny + 20);\n        CGPathAddLineToPoint(outlinePath, nil, minx - 5, miny + 15);\n        CGPathAddLineToPoint(outlinePath, nil, minx, miny + 10);\n        CGPathAddArcToPoint(outlinePath, nil, minx, miny, midx, miny, radius);\n        CGPathCloseSubpath(outlinePath);\n\n        CGContextSetShadowWithColor(context, CGSizeMake(0,1), 1, [UIColor lightGrayColor].CGColor);\n        CGContextAddPath(context, outlinePath);\n        CGContextFillPath(context);\n\n        CGContextAddPath(context, outlinePath);\n        CGContextClip(context);\n        CGPoint start = CGPointMake(rect.origin.x, rect.origin.y);\n        CGPoint end = CGPointMake(rect.origin.x, rect.size.height);\n        CGContextDrawLinearGradient(context, [self normalGradient], start, end, 0);\n    }\n    else\n    {\n        maxx-=5;\n        CGPathMoveToPoint(outlinePath, nil, midx, miny);\n        CGPathAddArcToPoint(outlinePath, nil, minx, miny, minx, midy, radius);\n        CGPathAddArcToPoint(outlinePath, nil, minx, maxy, midx, maxy, radius);\n        CGPathAddArcToPoint(outlinePath, nil, maxx, maxy, maxx, midy, radius);\n        CGPathAddLineToPoint(outlinePath, nil, maxx, miny + 20);\n        CGPathAddLineToPoint(outlinePath, nil, maxx + 5, miny + 15);\n        CGPathAddLineToPoint(outlinePath, nil, maxx, miny + 10);\n        CGPathAddArcToPoint(outlinePath, nil, maxx, miny, midx, miny, radius);\n        CGPathCloseSubpath(outlinePath);\n\n        CGContextSetShadowWithColor(context, CGSizeMake(0,1), 1, [UIColor lightGrayColor].CGColor);\n        CGContextAddPath(context, outlinePath);\n        CGContextFillPath(context);\n\n        CGContextAddPath(context, outlinePath);\n        CGContextClip(context);\n        CGPoint start = CGPointMake(rect.origin.x, rect.origin.y);\n        CGPoint end = CGPointMake(rect.origin.x, rect.size.height);\n        CGContextDrawLinearGradient(context, [self greenGradient], start, end, 0);\n    }\n\n\n    CGContextDrawPath(context, kCGPathFillStroke);\n\n}\n\n- (CGGradientRef)normalGradient\n{\n\n    NSMutableArray *normalGradientLocations = [NSMutableArray arrayWithObjects:\n                                               [NSNumber numberWithFloat:0.0f],\n                                               [NSNumber numberWithFloat:1.0f],\n                                               nil];\n\n\n    NSMutableArray *colors = [NSMutableArray arrayWithCapacity:2];\n\n    UIColor *color = [UIColor whiteColor];\n    [colors addObject:(id)[color CGColor]];\n    color = [StyleView lightColorFromColor:[UIColor cloudsColor]];\n    [colors addObject:(id)[color CGColor]];\n    NSMutableArray  *normalGradientColors = colors;\n\n    int locCount = [normalGradientLocations count];\n    CGFloat locations[locCount];\n    for (int i = 0; i &lt; [normalGradientLocations count]; i++)\n    {\n        NSNumber *location = [normalGradientLocations objectAtIndex:i];\n        locations[i] = [location floatValue];\n    }\n    CGColorSpaceRef space = CGColorSpaceCreateDeviceRGB();\n\n    CGGradientRef normalGradient = CGGradientCreateWithColors(space, (__bridge CFArrayRef)normalGradientColors, locations);\n    CGColorSpaceRelease(space);\n\n    return normalGradient;\n}\n\n\u6548\u679c\n\u6765\u6e90StackOverflow", "categories": [{"name": "posts", "slug": "posts", "permalink": "/category/posts/"}], "tags": [{"name": "ui", "slug": "ui", "permalink": "/tag/ui/"}]}, {"title": "UIImage\u8f6cNSData\u6709\u65f6\u4e3anil", "date": "2018-07-14T00:00:00-00.00", "path": "/archives/UIImage%E8%BD%ACNSData%E6%9C%89%E6%97%B6%E4%B8%BAnil/", "text": "\u4e00\u822c, \u6211\u4eec\u4f1a\u7528UIImagePNGRepresentation, UIImagePNGRepresentation\u6765\u8fbe\u5230\u76ee\u7684, \u4f46\u6709\u65f6\u5019, \u53d1\u73b0\u5b83\u7684\u8fd4\u56de\u503c\u4e3anil...\u4e0d\u9700\u8981\u6000\u7591\u8fd9\u4e48\u7b80\u5355\u5904\u7406\u6709\u4ec0\u4e48\u95ee\u9898, \u6587\u6863 \u5c31\u662f\u5982\u6b64:\nReturn ValueA data object containing the PNG data, or nil if there was a problem generating the data.\u00a0This function may return nil if the image has no data\u00a0or if the underlying CGImageRef contains data in an unsupported bitmap format.\n\u4e5f\u5c31\u662f\u8bf4, \u6ca1\u6709data\u7684\u60c5\u51b5\u8fd8\u662f\u633a\u591a\u7684, \u6211\u4eec\u8fd8\u662f\u653e\u5f03\u8fd9\u4e2a\u65b9\u6cd5\u5427, \u6362\u522b\u7684\u5427, \u63d0\u4f9b\u4e09\u79cd\u601d\u8def\u590d\u5236\u4e00\u5f20\u56fe\u7247\nvar imageName: String = &quot;MyImageName.png&quot;\nvar image = UIImage(named: imageName)\nvar rep = UIImagePNGRepresentation(image)\n\n\u5f53\u7136, \u8fd9\u4e0d\u80fd\u4fdd\u8bc1\u4ec0\u4e48\u91cd\u7ed8\u4e00\u5f20\u56fe\u7247\nUIGraphicsBeginImageContext(originalImage.size);\n[originalImage drawInRect:CGRectMake(0, 0, originalImage.size.width, originalImage.size.height)];\nUIImage *newImage = UIGraphicsGetImageFromCurrentImageContext();\nUIGraphicsEndImageContext();\n\n\u6216UIGraphicsBeginImageContext(CGSizeMake(1, 1))\nlet image = UIGraphicsGetImageFromCurrentImageContext()\nUIGraphicsEndImageContext()\n\n\u4e0d\u7528 UIImage\n1\u548c2\u90fd\u6ca1\u9a8c\u8bc1\u8fc7, \u4f46\u90fd\u662f\u5728StackOverflow\u4e0a\u522b\u4eba\u8d34\u51fa\u7684\u7b54\u6848, \u6211\u4e4b\u6240\u4ee5\u4e0d\u9a8c\u8bc1\u4e86, \u56e0\u4e3a\u6211\u662f\u8fd9\u4e48\u505a\u7684CGDataProviderRef provider = CGImageGetDataProvider(image.CGImage);\nNSData* data = (id)CFBridgingRelease(CGDataProviderCopyData(provider));\n\n\u901a\u4e86\u5c31\u6ca1\u52a8\u529b\u7ee7\u7eed\u8bd5\u5566, \u800c\u4e14\u672c\u8eab\u5df2\u7ecf\u5f88\u7b80\u6d01\u4e86, \u6b64\u5916\u65b9\u6cd5\u540d\u4e5f\u975e\u5e38\u76f4\u767d&quot;DataProvider&quot;, \u8fd8\u60f3\u600e\u6837!", "categories": [{"name": "posts", "slug": "posts", "permalink": "/category/posts/"}], "tags": [{"name": "debug", "slug": "debug", "permalink": "/tag/debug/"}, {"name": "uiimage", "slug": "uiimage", "permalink": "/tag/uiimage/"}]}, {"title": "\u7406\u89e3__bridge", "date": "2018-06-14T00:00:00-00.00", "path": "/archives/%E7%90%86%E8%A7%A3__bridge/", "text": "\u6bd4\u8f83\u53d7\u7528, \u5168\u6587\u8f6c\u8f7d, \u539f\u6587\u70b9\u6b64##\u4e3a\u4ec0\u4e48\u4f7f\u7528\u8981\u4f7f\u7528 Object-C++\u5728 iOS \u5f00\u53d1\u5f53\u4e2d\uff0c\u96be\u514d\u4f1a\u4f7f\u7528\u5230 OC \u8ddf C++\u6df7\u7f16\u7684\u60c5\u51b5\uff0c\u4e00\u662f\u4e3a\u4e86\u7a0b\u5e8f\u5bf9\u8d1f\u8d23\u8ba1\u7b97\u6027\u80fd\u7684\u63d0\u9ad8\uff0c\u4e8c\u662f\u56e0\u4e3a\u67d0\u4e9b\u4e09\u65b9\u5f00\u6e90\u5e93\u662f\u7528 C++ \u6765\u5199\u7684\uff0c\u8fd9\u4e24\u4e2a\u539f\u56e0\u4e5f\u662f\u8ba9\u6211\u4e0b\u51b3\u5fc3\u5b66\u597d C++ \u7684\u56e0\u7d20\uff0c\u6bd5\u7adf\u5f00\u6e90\u624d\u662f\u738b\u9053\uff0c\u4e00\u76f4\u53ea\u5199\u7740 OC \u5374\u4e0d\u80fd\u7aa5\u5176\u7a76\u7adf\uff0c\u786e\u5b9e\u96be\u53d7\uff0c\u8ba9\u53ea\u80fd\u8ba9\u4eba\u505c\u7559\u5728\u95e8\u5916\uff0c\u5750\u4e95\u89c2\u5929\u3002##\u4ec0\u4e48\u662f\u6865\u63a5 \uff1f\u6865\u63a5\uff0c\u662f object-c \u5728 ARC \u73af\u5883\u4e0b\u5f00\u53d1\u51fa\u6765\u7684\u4e00\u79cd\u7528\u4f5c\u8f6c\u6362 C \u6307\u9488\u8ddf OC \u7c7b\u6307\u9488\u7684\u4e00\u79cd\u8f6c\u6362\u6280\u672f\u3002\n\u5f53\u7136\uff0c\u8fd9\u79cd\u6280\u672f\u5728 MRC \u4e2d\u662f\u4e0d\u5b58\u5728\u7684\uff0c\u4e5f\u5c31\u662f\u6865\u63a5\u662f ARC \u7684\u8fde\u5e26\u4ea7\u7269\uff0c\u56e0\u4e3a ARC \u5c31\u662f\u89e3\u653e\u4e86\u6211\u4eec\u7a0b\u5e8f\u5458\u7684\u53cc\u624b\uff0c\u5f53\u7136\u5bf9\u5185\u5b58\u7684\u6982\u5ff5\u53c8\u6de1\u5316\u4e86\uff0c\u6240\u4ee5\u5728 ARC \u672a\u88ab\u4e1a\u754c\u63a5\u53d7\u4e4b\u524d\u591a\u5c11\u4e5f\u662f\u56e0\u4e3a\u8fd9\u4e2a\u6865\u63a5\u8ba9\u4eba\u4eec\u611f\u89c9\u6076\u5fc3\u3002##\u6865\u63a5\u7528\u5230\u76843\u4e2a\u65b9\u6cd5\uff1a\n(__bridge &lt;#type#&gt;)&lt;#expression#&gt;\n(__bridge_retained &lt;#CF type#&gt;)&lt;#expression#&gt;\n(__bridge_transfer &lt;#Objective-C type#&gt;)&lt;#expression#&gt;)##\u6865\u63a5\u65b9\u6cd5\u7684\u7528\u9014\uff1a__bridge \uff1a\u7528\u4f5c\u4e8e\u666e\u901a\u7684 C \u6307\u9488\u4e0e OC \u6307\u9488\u7684\u8f6c\u6362\uff0c\u4e0d\u505a\u4efb\u4f55\u64cd\u4f5c\u3002\nvoid *p;\nNSObject *objc = [[NSObject alloc] init];\np = (__bridge void*)objc;\n\n\u8fd9\u91cc\u7684 void *p \u6307\u9488\u76f4\u63a5\u6307\u5411\u4e86 NSObject *objc \u8fd9\u4e2a OC \u7c7b\uff0cp \u6307\u9488\u5e76\u4e0d\u62e5\u6709 OC \u5bf9\u8c61\uff0c\u8ddf\u666e\u901a\u7684\u6307\u9488\u6307\u5411\u5730\u5740\u65e0\u7591\u3002\u6240\u4ee5\u8fd9\u4e2a\u51fa\u73b0\u4e86\u4e00\u4e2a\u95ee\u9898\uff0cOC \u5bf9\u8c61\u88ab\u91ca\u653e\uff0cp \u6307\u9488\u4e5f\u5c31 Gameover \u4e86\u3002__bridge_retained\uff1a\u7528\u4f5c C \u6307\u9488\u4e0e OC \u6307\u9488\u7684\u8f6c\u6362\uff0c\u5e76\u4e14\u4e5f\u7528\u62e5\u6709\u7740\u88ab\u8f6c\u6362\u5bf9\u8c61\u7684\u6240\u6709\u6743\u90a3\u4e48\u8fd9\u4e2a\u662f\u4ec0\u4e48\u610f\u601d\u5462\uff1f\u53ef\u4ee5\u5148\u770b\u4e0b\u9762\u5c55\u793a\u4ee3\u7801\n@interface ABSClass : NSObject\n@property (nonatomic, copy) NSString *name;\n@end\n@implementation ABSClass\n@end\nint main(int argc, const char * argv[]) {\n    @autoreleasepool {\n        void *p;\n        {\n            ABSClass *objc = [[ABSClass alloc]init];\n            objc.name = @&quot;\u6211\u4eec&quot;;\n            p = (__bridge void*)objc;\n        }\n        NSLog(@&quot;%@&quot;, [(__bridge ABSClass *)p name]);\n    }\n    return 0;\n}\n\n\u8fd9\u6bb5\u4ee3\u7801\u770b\u4e0a\u53bb\u5927\u4f53\u4e0e\u4e0a\u9762\u4e00\u6bb5\u4e00\u6837\uff0c\u4f46\u662f\u6211\u4eec\u6dfb\u52a0\u4e86\u4e00\u4e2a\u4f5c\u7528\u57df {} \uff0c \u5728\u4f5c\u7528\u57df\u4e2d\u521b\u5efa ABSClass *objc \u8fd9\u4e2a\u5bf9\u8c61\uff0c\u7136\u540e\u7528\u4f5c\u7528\u57df\u5916\u7684 p\uff0c\u6307\u9488\u8fdb\u884c\u6865\u63a5(__bridge)\u6307\u5411\uff0c\u7136\u540e\u8f93\u51fa ABSClass objc\u8fd9\u4e2a\u5bf9\u8c61\u7684name\u5c5e\u6027\u7684\u503c\uff0c\u6309\u9053\u7406\u6765\u8bf4\u6211\u4eec\u4f1a\u770b\u5230\u63a7\u5236\u53f0\u4e0a\u8f93\u51fa\u6211\u4eec\u8fd9\u4e24\u4e2a\u5b57\u3002 \u4f46\u662f\uff0c\u5f53\u6211\u4eec\u4e00\u8fd0\u884c\u7a0b\u5e8f\uff0c\u6beb\u65e0\u7591\u95ee\uff0c\u7a0b\u5e8f\u5f88\u5d29\u6e83\u5728NSLog(@\u201d%@\u201d, [(__bridge ABSClass )p name]);\u8fd9\u53e5\u4ee3\u7801\u4e2d\u3002 \u6709\u70b9\u57fa\u7840\u7684\u5c0f\u4f19\u4f34\u90fd\u77e5\u9053\uff0c\u5f53ABSClass objc\u8fd9\u4e2a\u5bf9\u8c61\u51fa\u4e86\u4f5c\u7528\u57df\u8303\u56f4\uff0c\u5185\u5b58\u5c31\u4f1a\u88ab\u56de\u6536\uff0c\u4f46\u662f\u6211\u4eec\u5728\u4f5c\u7528\u57df\u8303\u56f4\u5916\u8fd8\u7528void p\u53bb\u8bbf\u95eeobjc \u7684\u5185\u5b58\uff0c\u5f53\u7136\u4f1a\u5d29\u6e83\u5566\u3002\n\u90a3\u4e48\uff0c\u6211\u4eec\u5c1d\u8bd5\u4fee\u6539\u4e3a\u4ee5\u4e0b\u4ee3\u7801\n@interface ABSClass : NSObject\n@property (nonatomic, copy) NSString *name;\n@end\n@implementation ABSClass\n@end\nint main(int argc, const char * argv[]) {\n    @autoreleasepool {\n        void *p;\n        {\n            ABSClass *objc = [[ABSClass alloc]init];\n            objc.name = @&quot;\u6211\u4eec&quot;;\n            p = (__bridge_retained void*)objc;\n        }\n        NSLog(@&quot;%@&quot;, [(__bridge ABSClass *)p name]);\n    }\n    return 0;\n}\n\n\u7a0b\u5e8f\u6b63\u5e38\u8fd0\u884c\uff0c\u56e0\u4e3a\u6211\u4eec\u4f7f\u7528\u4e86 __bridge_retained \u5c31\u76f8\u5f53\u4e8e MRC \u4e0b\u7684 retain \uff0c\u5c06\u5185\u5b58\u8ba1\u6570\u5668 +1\uff0c\u7136\u540e\u7528 void *p \u6307\u5411\u6539\u5185\u5b58\uff0c\u6240\u4ee5\u5f53 *objc\u8fc7\u4e86\u4f5c\u7528\u57df\uff0c\u5f15\u7528\u8ba1\u7b97\u5668 -1\uff0c\u4e5f\u5e76\u6ca1\u6709\u91ca\u653e void *p \u6240\u5f15\u7528\u7684\u5185\u5b58\u3002__bridge_transfer\uff1a\u7528\u4f5c C \u6307\u9488\u4e0e OC \u6307\u9488\u7684\u8f6c\u6362\uff0c\u5e76\u5728\u62e5\u6709\u5bf9\u8c61\u6240\u6709\u6743\u540e\u5c06\u539f\u5148\u5bf9\u8c61\u6240\u6709\u6743\u91ca\u653e\u3002(\u53ea\u652f\u6301 C \u6307\u9488\u8f6c\u6362 OC \u5bf9\u8c61\u6307\u9488)\u8bf4\u8d77\u6765\u76f8\u5f53\u7ed5\u53e3\uff0c\u5176\u5b9e\u53ef\u4ee5\u7406\u89e3\u4e3a\u5148\u5c06\u5bf9\u8c61\u7684\u5f15\u7528\u8ba1\u6570\u5668 +1\uff0c\u7136\u540e\u518d\u5c06\u5f15\u7528\u8ba1\u6570\u5668 -1\u3002\n\u901a\u8fc7\u4ee5\u4e0b\u4ee3\u7801\u5c55\u73b0\uff1a\n@interface ABSClass : NSObject\n@property (nonatomic, copy) NSString *name;\n@end\n@implementation ABSClass\n@end\nint main(int argc, const char * argv[]) {\n    @autoreleasepool {\n        void *p;\n        @autoreleasepool {\n            ABSClass *obj = [[ABSClass alloc] init];\n            obj.name = @&quot;\u6211\u4eec&quot;;\n            p = (__bridge_retained void *)obj;\n        }\n        id obj = (__bridge_transfer id)p;\n        NSLog(@&quot;%@&quot;, [(__bridge ABSClass *)p name]);\n        NSLog(@&quot;%@&quot;, [(ABSClass *)obj name]);\n        NSLog(@&quot;Hello, World!&quot;);\n    }\n    return 0;\n}\n\n\u4ee5\u4e0a\u4ee3\u7801\u53ef\u4ee5\u6b63\u786e\u8fd0\u884c\uff0c\u5728\u6211\u4eec\u5c06 void *p \u6307\u9488\u8f6c\u6362\u4e3a\u8fdb\u884c __bridge_transfer \u4e3a OC \u6307\u9488\uff0c\u8fd9\u4e2a\u64cd\u4f5c\u5176\u5b9e\u76f8\u5f53\u4e8e - (void)set: \u64cd\u4f5c\uff0c\u8f6c\u6362\u4e3a MRC \u4e3a\u5982\u4e0b\u4ee3\u7801 :\nid obj = (id)p\n[obj retain];\n[(id)p release];\n\n\u6211\u4eec\u5148\u5c06\u65b0\u503c retain\uff0c\u7136\u540e\u518d\u5c06\u65e7\u503c release\uff0c\u8fd9\u6837\u662f\u4e3a\u4e86\u4fdd\u8bc1\u5f15\u7528\u8ba1\u6570\u5668\u59cb\u7ec8\u4e3a1\uff0c\u4e00\u4e2a retain \u5bf9\u5e94\u4e00\u4e2a release\u3002\u597d\u4e86\uff0c\u4ee5\u4e0a\u505a\u6cd5\u5c31\u662f C/C++ \u6307\u9488\u4e0e OC \u5bf9\u8c61\u6307\u9488\u7684\u76f8\u4e92\u8f6c\u6362\u4ecb\u7ecd\uff0c\u5e0c\u671b\u80fd\u5e2e\u52a9\u66f4\u591a\u7684\u5c0f\u4f19\u4f34\u7406\u89e3\u3002", "categories": [{"name": "posts", "slug": "posts", "permalink": "/category/posts/"}], "tags": [{"name": "bridge", "slug": "bridge", "permalink": "/tag/bridge/"}, {"name": "c++", "slug": "c++", "permalink": "/tag/c%2B%2B/"}]}, {"title": "Xcode\u81ea\u589ebuild\u53f7", "date": "2018-03-22T00:00:00-00.00", "path": "/archives/Xcode%E8%87%AA%E5%A2%9Ebuild%E5%8F%B7/", "text": "\u811a\u672c:buildNumber=$(/usr/libexec/PlistBuddy -c &quot;Print CFBundleVersion&quot; &quot;${PROJECT_DIR}/${INFOPLIST_FILE}&quot;)  \nbuildNumber=$(($buildNumber + 1))  \n/usr/libexec/PlistBuddy -c &quot;Set :CFBundleVersion $buildNumber&quot; &quot;${PROJECT_DIR}/${INFOPLIST_FILE}&quot;\n\nTo use this script, follow these steps:\nSelect your app target in the project overview.\nSelect\u00a0Build Phases.\nAdd a new build phase (&quot;New Run Script Phase&quot;).\nEnter the above script in the appropriate field.\nIn your\u00a0Info.plist, ensure the current build number is numeric (\u662f\u7684, \u4e3b\u8981\u662f\u4fdd\u8bc1\u4f60\u539f\u6765\u586b\u5199\u7684\u786e\u5b9e\u662f\u6570\u5b57\u5c31\u884c\u4e86)\n\n\u6765\u6e90: http://crunchybagel.com/auto-incrementing-build-numbers-in-xcode/\u6216\u8005\u4e00\u4e9b\u522b\u7684\u601d\u8003: \nhttp://stackoverflow.com/questions/9258344/better-way-of-incrementing-build-number", "categories": [{"name": "posts", "slug": "posts", "permalink": "/category/posts/"}], "tags": [{"name": "xcode", "slug": "xcode", "permalink": "/tag/xcode/"}]}, {"title": "UIMenuController\u7684\u4f7f\u7528", "date": "2018-03-21T00:00:00-00.00", "path": "/archives/UIMenuController%E7%9A%84%E4%BD%BF%E7%94%A8/", "text": "#1, \u57fa\u672c\u4f7f\u7528\n\u4ee5\u5bf9\u4e00\u4e2aUILabel\u957f\u6309\u5f39\u51fa\u83dc\u5355\u4e3a\u4f8b\n##\u5b50\u7c7b\u5316UILabel\n\u56e0\u4e3a\u9700\u8981\u8986\u76d6\u8fd9\u51e0\u4e2a\u65b9\u6cd5:\n- (BOOL)canBecomeFirstResponder; \u8fd4\u56deYES \n\u540c\u65f6\u9700\u8981\u5728\u6bcf\u6b21UI\u5143\u7d20\u51fa\u73b0\u7684\u65f6\u5019\u53bbbecomeFirstResponder\u4e00\u6b21,\u624d\u80fd\u663e\u793a\u51fa\u83dc\u5355. \u5728\u6211\u7684\u5b9e\u6d4b\u4e2d, \u6211\u5728ViewDidLoad\u91cc\u9762\u8fd9\u4e48\u505a\u4e86, \u5f53UI\u5bfc\u822a\u5230\u522b\u7684\u9875\u9762(\u5bfc\u822a\u63a7\u4ef6, \u6216modal\u9875\u9762), \u7136\u540e\u56de\u6765, \u83dc\u5355\u53c8\u5931\u6548\u4e86, \u6240\u4ee5\u6211\u5199\u5230ViewWillAppear\u91cc\u9762\u53bb\u4e86, \u901a\u8fc7- (BOOL)canPerformAction:(SEL)action withSender:(nullable id)sender;\n\u8fd9\u4e2a\u65b9\u6cd5\u4f1a\u5728\u6bcf\u4e00\u4e2amenuItem\u751f\u6210\u7684\u65f6\u5019\u8c03\u7528\u4e00\u6b21, \u56e0\u6b64\u5728\u65b9\u6cd5\u4f53\u91cc\u5c31\u8981\u6839\u636eaction\u6765\u5224\u65ad\u662f\u5426\u9700\u8981\u663e\u793a\u5728\u83dc\u5355\u91cc, \u5982\u679c\u4e0d\u9700\u8981, \u5219\u8fd4\u56deNO. \u4e5f\u5c31\u662f\u8bf4, \u5982\u679c\u4f60\u4ec0\u4e48\u90fd\u4e0d\u505a, \u76f4\u63a5\u8fd4\u4e00\u4e2aYES, \u90a3\u4e48\u6240\u6709\u7684\u9ed8\u8ba4\u83dc\u5355\u9879\u90fd\u4f1a\u663e\u793a\u51fa\u6765, \u6b64\u5904\u6211\u4eec\u53ea\u8981\u4e00\u4e2aCopy\u9009\u9879\u5427:\n- (BOOL)canPerformAction:(SEL)action withSender:(id)sender {\n    return (action == @selector(copy:));\n}\n\n##\u6dfb\u52a0\u89e6\u53d1\u65b9\u5f0f\n\u5982\u679c\u662f\u4ee5\u957f\u6309\u4e3a\u89e6\u53d1, \u5219\u6dfb\u52a0\u957f\u6309\u624b\u52bf, \u4ee3\u7801\u7247\u6bb5\u5982\u4e0b:\n// \u5728awakeFromNib\u91cc\u9762\u6dfb\u52a0\u5373\u53ef\nUILongPressGestureRecognizer *menuGesture = [[UILongPressGestureRecognizer alloc] initWithTarget:self action:@selector(menu:)];\n    menuGesture.minimumPressDuration = 0.2;\n    [self addGestureRecognizer:menuGesture];\n\n- (void)menu:(UILongPressGestureRecognizer *)sender {\n    if (sender.state == UIGestureRecognizerStateBegan) {\n        UIMenuController *menu = [UIMenuController sharedMenuController];\n        [menu setTargetRect:self.frame inView:self.superView]; // \u628a\u8c01\u7684\u4f4d\u7f6e\u544a\u8bc9\u63a7\u5236\u5668, \u83dc\u5355\u5c31\u4f1a\u4ee5\u5176\u4e3a\u57fa\u51c6\u5728\u5408\u9002\u7684\u4f4d\u7f6e\u51fa\u73b0\n        [menu setMenuVisible:YES animated:YES];\n    }\n}\n\n##\u7f16\u5199\u83dc\u5355\u884c\u4e3a\n\u4e0a\u9762\u6211\u4eec\u53ea\u8981\u4e86copy, \u90a3\u4e48\u5c31\u8986\u76d6\u9ed8\u8ba4\u7684copy\u65b9\u6cd5:\n- (void)copy:(id)sender {\n    UIPasteboard *paste = [UIPasteboard generalPasteboard];\n    paste.string = self.text;\n}\n\n#2, \u6dfb\u52a0\u81ea\u5b9a\u4e49\u83dc\u5355\u9879\n\u81ea\u5b9a\u4e49\u83dc\u5355\u53ea\u9700\u8981\u5728\u83dc\u5355\u63a7\u5236\u5668\u6dfb\u52a0\u51e0\u4e2aitem\u5373\u53ef, \u7ed3\u5408\u4e0a\u4f8b, \u6211\u7684\u90a3\u4e2alabel\u662f\u663e\u793a\u7535\u8bdd\u53f7\u7801\u7684, \u90a3\u4e48\u5c31\u8ba9\u5b83\u591a\u663e\u793a\u4e00\u4e2a\u201d\u6253\u7535\u8bdd\u201d\u548c\u4e00\u4e2a\u201d\u53d1\u77ed\u4fe1\u201d\u83dc\u5355\u5427, \u552f\u4e00\u9700\u8981\u6ce8\u610f\u7684\u662f, \u5728\u8bbe\u7f6e\u81ea\u5b9a\u4e49\u83dc\u5355\u9879\u65f6, \u8bbe\u7f6e\u7684items\u53ea\u5f71\u54cd\u81ea\u5b9a\u4e49\u90e8\u5206, \u6807\u51c6\u83dc\u5355\u9879\u4ecd\u7136\u662f\u7531canPerformAction\u51b3\u5b9a\u7684:\nUIMenuItem *itemCall = [[UIMenuItem alloc] initWithTitle:@&quot;Call&quot; action:@selector(call:)];\nUIMenuItem *itemMessage = [[UIMenuItem alloc] initWithTitle:@&quot;Message&quot; action:@selector(message:)];\n[[UIMenuController sharedMenuController] setMenuItems: @[itemCall, itemMessage]];\n[[UIMenuController sharedMenuController] update];\n\n\n\u6ce8, \u6dfb\u52a0\u4e86\u4e24\u4e2a\u83dc\u5355\u540e, canPerformAction\u9700\u8981\u76f8\u5e94\u53d8\u5316, \u81ea\u5df1\u60f3\u60f3\u5e94\u8be5\u600e\u4e48\u6539. \u4e5f\u53ef\u4ee5\u5728\u4e0b\u4e00\u8282\u770b\u4ee3\u7801. \u5f53\u7136\u4e5f\u8981\u81ea\u884c\u5199\u5b8c\u91cc\u9762\u7684call\u548cmessage\u65b9\u6cd5, \u53c2\u7167copy\u7684\u5199\u6cd5\u5373\u53ef\n#3, UITableViewCell\u957f\u6309\u663e\u793a\u83dc\u5355\n##\u6807\u51c6\u83dc\u5355\u9879\nUITableView\u91cc\u9762\u957f\u9879\u6761\u76ee\u663e\u793a\u6807\u51c6\u83dc\u5355, \u53ea\u9700\u8981\u5b9e\u73b0\u4e0b\u8ff0\u4ee3\u7406\u65b9\u6cd5\u5373\u53ef:\n- (BOOL)tableView:(UITableView *)tableView shouldShowMenuForRowAtIndexPath:(NSIndexPath *)indexPath {\n    return YES;\n}\n\n- (BOOL)tableView:(UITableView *)tableView canPerformAction:(SEL)action forRowAtIndexPath:(NSIndexPath *)indexPath withSender:(id)sender {\n    return (action == @selector(copy:)); // \u53ea\u663e\u793aCopy\n}\n\n- (void)tableView:(UITableView *)tableView performAction:(SEL)action forRowAtIndexPath:(NSIndexPath *)indexPath withSender:(id)sender {\n    if (action == @select(copy:)) {\n        UIPasteboard *paste = [UIPasteboard generalPasteboard];\n        paste.string = cell.detailLabel.text; // \u81ea\u884c\u5199\u4e1a\u52a1\u903b\u8f91\n    }\n}\n\n#4, TableViewCell\u6dfb\u52a0\u81ea\u5b9a\u4e49\u83dc\u5355\u9879\u540c\u6837\u4e5f\u5f97\u5b50\u7c7b\u5316\u4e00\u4e2aTableViewCell,\u76ee\u7684\u4e5f\u662f\u4e3a\u4e86\u8986\u76d6\u540c\u6837\u7684\u51e0\u4e2a\u65b9\u6cd5:\n- (BOOL)canPerformAction:(SEL)action withSender:(id)sender {\n    return (action == @selector(copy:) || action == @selector(call:) || action == @selector(message:)); // \u6b64\u5904\u6211\u4eec\u628a\u4e09\u4e2a\u884c\u4e3a\u90fd\u5199\u5168\u4e86, \u56de\u7b54\u4e0a\u4e00\u8282\u7684\u95ee\u9898\n}\n\n- (BOOL)canBecomeFirstResponder {\n    return YES;\n}\n\n\u4f46\u56e0\u4e3atableView\u5df2\u7ecf\u5b9e\u73b0\u4e86\u83dc\u5355, \u6240\u4ee5\u4e0d\u9700\u8981\u663e\u5f0f\u4e3a\u6bcf\u4e2acell\u53bbbecomeFirtResponder\u4e86.\u6dfb\u52a0\u83dc\u5355\u9879\u7684\u65b9\u6cd5\u540c\u4e0a, \u5199\u83dc\u5355\u884c\u4e3a\u7684\u65b9\u6cd5\u540ccopy:, \u90fd\u662f\u4e00\u6837\u7684.\n\u6ce8: \u4f60\u4eec\u6216\u8bb8\u5df2\u7ecf\u53d1\u73b0\u4e86, \u6dfb\u52a0\u81ea\u5b9a\u4e49\u83dc\u5355\u9879\u7684\u65f6\u5019, \u4ecd\u7136\u9700\u8981canPerformAction, \u5728\u8fd9\u91cc, \u4e0etableView\u4ee3\u7406\u91cc\u9762\u7684\u540c\u540d\u65b9\u6cd5\u6709\u4ec0\u4e48\u5173\u7cfb? \u662f\u7684, \u4e24\u4e2a\u90fd\u8981\u5199, tableView\u91cc\u9762\u7684\u53ea\u4f1a\u5f71\u54cd\u6807\u51c6\u83dc\u5355, \u6587\u6863\u8bf4\u53ea\u652f\u6301\u8fd9\u4e24\u4e2aUIResponderStandardEditActions (copy/paste)\n\n\u6ce8: \u7136\u800c, - (void)tableView:(UITableView *)tableView performAction:(SEL)action forRowAtIndexPath:(NSIndexPath *)indexPath withSender:(id)sender\u8fd9\u4e2a\u65b9\u6cd5\u5374\u6709\u70b9\u522b\u626d, \u4e00\u6765\u4e0d\u9700\u8981\u53bb\u5b9e\u73b0\u4e86, \u4e8c\u6765\u53c8\u4e0d\u80fd\u6ce8\u91ca\u6389(\u4f60\u4eec\u81ea\u5df1\u8bd5\u4e00\u4e0b), \u7b49\u4e8e\u4e00\u5b9a\u8981\u7559\u4e00\u4e2a\u7a7a\u7684\u65b9\u6cd5\u4f53\u5728\u90a3\u91cc\u2026\n", "categories": [{"name": "posts", "slug": "posts", "permalink": "/category/posts/"}], "tags": [{"name": "menu", "slug": "menu", "permalink": "/tag/menu/"}]}, {"title": "OC\u9759\u6001\u5e93\u91ccNSClassFromString\u5f97\u5230nil\u7684\u89e3\u51b3", "date": "2018-03-15T00:00:00-00.00", "path": "/archives/OC%E9%9D%99%E6%80%81%E5%BA%93%E9%87%8CNSClassFromString%E5%BE%97%E5%88%B0nil%E7%9A%84%E8%A7%A3%E5%86%B3/", "text": "\u5982\u679c\u4f60\u5728\u9759\u6001\u5e93\u4e2d\u6709\u4ece\u7c7b\u540d\u53cd\u5c04\u56de\u7c7b\u7684\u4ee3\u7801, \u5982\u4e0b:\nNSString *myClassStr = @&quot;myClass&quot;;  \nClass myClazz = NSClassFromString(myClassStr);  \nif (myClazz) {  \n    id myClassInit = [[myClazz alloc] init];  \n}\n\n\u6709\u65f6\u5019(\u7ecf\u5e38)\u4f1a\u51fa\u73b0\u5f97\u5230\u4e86Class\u4e3anil\u7684\u60c5\u51b5, \u7f51\u4e0a\u641c\u7d22, \u4e00\u822c\u662f\u8fd9\u4e48\u8bf4\u7684:\nThe class object named by aClassName, or nil if no class by that name is currently loaded. If aClassName is nil, returns nil.\n\u6765\u81ea\u4e8e64\u4f4d\u7cfb\u7edf\u7684\u4e00\u4e2abug:\nIMPORTANT: For 64-bit and iPhone OS applications, there is a linker bug that prevents -ObjC from loading objects files from static libraries that contain only categories and no classes. The workaround is to use the -all_load or -force_load flags. -all_load forces the linker to load all object files from every archive it sees, even those without Objective-C code. -force_load is available in Xcode 3.2 and later. It allows finer grain control of archive loading. Each -force_load option must be followed by a path to an archive, and every object file in that archive will be loaded.\n\u5c31\u6211\u7684\u5b9e\u6d4b\n\u9996\u5148, \u4f60\u9700\u8981\u5728\u4f60\u7684\u4e3b\u9879\u76ee(\u7684target)\u5bf9build setting\u8fdb\u884c\u66f4\u6539, \u800c\u4e0d\u662f\u9759\u6001\u5e93\u7684\u9879\u76ee!\n\u5176\u6b21, -all_load\u6709\u6548, -force_load\u751a\u81f3\u7f16\u8bd1\u90fd\u8fc7\u4e0d\u4e86\n\u6700\u540e, \u7ed3\u5408\u4e0a\u9762, \u5c31\u662f\u5728\u4e3b\u9879\u76ee(\u5f15\u7528\u9759\u6001\u5e93\u7684\u9879\u76ee)\u7684build setting\u91cc\u9762\u641c\u7d22other linker flags, \u7136\u540e\u628a-all_load\u52a0\u8fdb\u53bb\u5c31\u884c\u4e86\n\n", "categories": [{"name": "posts", "slug": "posts", "permalink": "/category/posts/"}], "tags": [{"name": "d", "slug": "d", "permalink": "/tag/d/"}, {"name": "e", "slug": "e", "permalink": "/tag/e/"}, {"name": "b", "slug": "b", "permalink": "/tag/b/"}, {"name": "u", "slug": "u", "permalink": "/tag/u/"}, {"name": "g", "slug": "g", "permalink": "/tag/g/"}]}, {"title": "\u901a\u8fc7GPS\u6570\u636e\u53cd\u5411\u5730\u7406\u4fe1\u606f\u7f16\u7801\u5f97\u5230\u5f53\u524d\u4f4d\u7f6e\u4fe1\u606f", "date": "2018-01-14T00:00:00-00.00", "path": "/archives/%E9%80%9A%E8%BF%87GPS%E6%95%B0%E6%8D%AE%E5%8F%8D%E5%90%91%E5%9C%B0%E7%90%86%E4%BF%A1%E6%81%AF%E7%BC%96%E7%A0%81%E5%BE%97%E5%88%B0%E5%BD%93%E5%89%8D%E4%BD%8D%E7%BD%AE%E4%BF%A1%E6%81%AF/", "text": "\u68c0\u67e5\u53ef\u7528\u6027\n\u8fd9\u5c5e\u4e8e\u57fa\u7840\u77e5\u8bc6, \u4e0d\u8d58\u8ff0, \u603b\u7684\u6765\u8bf4,\u4f60\u7684\u8bbe\u5907\u7684\u652f\u6301\u8981\u6253\u5f00, \u6dfb\u52a0CoreLocation\u7684framework, \u5f15\u7528\u5934\u6587\u4ef6, \u6dfb\u52a0\u59d4\u6258,\u7136\u540e, \u597d\u7684\u5b9e\u8df5\u662f\u5728\u4f7f\u7528\u524d\u7f16\u7a0b\u68c0\u67e5\u76f8\u5173\u53ef\u7528\u6027:\n- (CLLocationManager *)locationManager\n{\n    if(!_locationManager){\n        if([CLLocationManager locationServicesEnabled]){\n            _locationManager = [[CLLocationManager alloc] init];\n            _locationManager.delegate = self;\n            _locationManager.desiredAccuracy = kCLLocationAccuracyHundredMeters;\n            CLAuthorizationStatus status = [CLLocationManager authorizationStatus];\n            if (status == kCLAuthorizationStatusNotDetermined) {\n                NSLog(@&quot; not determined&quot;);\n                if([_locationManager respondsToSelector:@selector(requestWhenInUseAuthorization)]){\n                    [_locationManager requestAlwaysAuthorization];\n                }\n            }else if (status == kCLAuthorizationStatusDenied) {\n                NSLog(@&quot;denied&quot;);\n            }else if (status == kCLAuthorizationStatusRestricted) {\n                NSLog(@&quot;restricted&quot;);\n            }else if (status == kCLAuthorizationStatusAuthorizedAlways) {\n                NSLog(@&quot;always allowed&quot;);\n            }else if (status == kCLAuthorizationStatusAuthorizedWhenInUse) {\n                NSLog(@&quot;when in use allowed&quot;);\n            }else{\n            }\n        }else _locationManager = nil;\n    }\n    return _locationManager;\n}\n\n\u6ce8\u610fkCLAuthorizationStatusNotDetermined\u72b6\u6001, iOS8\u4ee5\u540e, \u9700\u8981\u624b\u52a8\u7f16\u8f91info.plist\u6587\u4ef6, \u6dfb\u52a0\u4e24\u4e2a\u8bf7\u6c42\u7528\u6237\u6388\u6743\u65f6\u7684\u6587\u6848, \u624d\u80fd\u6b63\u5e38\u4f7f\u7528, \u8fd9\u91cc\u89c9\u5f97\u532a\u5937\u6240\u601d:\n&lt;key&gt;NSLocationWhenInUseUsageDescription&lt;/key&gt;&lt;string&gt;\u8bf7\u6388\u6743\u4f7f\u7528\u5730\u7406\u4f4d\u7f6e\u670d\u52a1&lt;/string&gt;\n&lt;key&gt;NSLocationAlwaysUsageDescription&lt;/key&gt;&lt;string&gt;\u8bf7\u6388\u6743\u4f7f\u7528\u5730\u7406\u4f4d\u7f6e\u670d\u52a1&lt;/string&gt;\n\n\u4ee5\u4e0a, \u53ef\u968f\u4fbf\u53c2\u8003\u7f51\u4e0a\u4efb\u4f55\u4e00\u7bc7\u6559\u7a0b\u8bf7\u6c42\u5730\u7406\u4f4d\u7f6e\u5e76\u53cd\u5411\u7f16\u7801\n\u8fd9\u91cc\u9700\u8981\u6ce8\u610f\u7684\u662f, \u82f9\u679c\u7684CLGeocoder API\u5e76\u4e0d\u5141\u8bb8\u4f60\u9891\u7e41\u8c03\u7528, \u4e00\u5206\u949f\u4e00\u6b21\u4e3a\u5b9c, \u6240\u4ee5\u4f60\u5343\u4e07\u4e0d\u8981[self.locationManager startUpdatingLocation], \u7136\u540e\u5728locationManager:didChangeAuthorizationStatus:\n\u65b9\u6cd5\u91cc\u53bbdecode, \u56e0\u4e3a\u53ea\u662f\u4e3a\u4e86\u83b7\u53d6\u57ce\u5e02, \u7cbe\u5ea6\u8981\u6c42\u4e0d\u9ad8, \u5e76\u4e14\u4e0d\u9700\u8981\u6301\u7eed\u66f4\u65b0, \u6240\u4ee5\u6211\u4eec\u5c31\u4e0dupdate\u4e86, \u53earequest\u4e00\u6b21, \u7136\u540e\u5728\u83b7\u53d6\u4f4d\u7f6e\u5931\u8d25\u7684\u65f6\u5019\u518d\u624b\u52a8request\u4e00\u6b21:\n+ (void)locationManager:(nonnull CLLocationManager *)manager didFailWithError:(nonnull NSError *)error{\n    NSLog(@&quot;fail with error:\\n %@&quot;, error);\n    [self.locationManager requestLocation];\n}\n\n\u76f8\u5173\u89e3\u91ca\u53c2\u8003\u8fd9\u7bc7\u6587\u7ae0#\u8bed\u8a00\u7684\u95ee\u9898\u56e0\u4e3a\u4e60\u60ef\u7528\u82f1\u6587\u7cfb\u7edf, \u5c31\u78b0\u5230\u8bf7\u6c42\u56de\u6765\u7684\u4fe1\u606f\u662f\u82f1\u6587\u7684\u539f\u56e0, \u8fd9\u91cc\u82f9\u679c\u662f\u56fa\u5316\u8d77\u6765\u7684, \u6682\u65f6\u4e0d\u652f\u6301\u7528\u53c2\u6570\u6765\u6307\u5b9a\u8fd4\u56de\u6570\u636e\u7684\u663e\u793a\u8bed\u8a00, \u501f\u9274\u8fd9\u7bc7\u6587\u7ae0\u7684\u601d\u8def, \u5728\u8bf7\u6c42\u524d\u628a\u5f53\u524d\u8bed\u8a00\u8bbe\u7f6e\u4fdd\u5b58\u8d77\u6765, \u4e34\u65f6\u6539\u6210\u4e2d\u6587, \u8bf7\u6c42\u7ed3\u675f\u540e\u518d\u4fee\u6539\u56de\u6765:\n+ (void)locationManager:(nonnull CLLocationManager *)manager didUpdateLocations:(nonnull NSArray *)locations{\n    CLLocation *location = [locations lastObject];\n    CLGeocoder *geocoder = [CLGeocoder new];\n    // \u4fee\u6539\u8bed\u8a00\u4e3a\u4e2d\u6587\n    NSArray *currentLanguageArray = [[NSUserDefaults standardUserDefaults] objectForKey:@&quot;AppleLanguages&quot;];\n    [[NSUserDefaults standardUserDefaults] setObject: [NSArray arrayWithObjects:@&quot;zh_Hans&quot;, nil] forKey:@&quot;AppleLanguages&quot;];\n    [geocoder reverseGeocodeLocation:location completionHandler:^(NSArray&lt;CLPlacemark *&gt; * __nullable placemarks, NSError * __nullable error) {\n        // \u6062\u590d\u8bed\u8a00\n        [[NSUserDefaults standardUserDefaults] setObject:currentLanguageArray forKey:@&quot;AppleLanguages&quot;];\n        if(error){\n            NSLog(@&quot;reverse error:%@&quot;, [error localizedDescription]);\n        }else{\n            if([placemarks count] &gt; 0){\n                CLPlacemark *mark = [placemarks firstObject];\n                NSLog(@&quot;%@&quot;, mark);\n                NSLog(@&quot;\u57ce\u5e02\u540d:%@&quot;, mark.locality);\n            }\n        }\n    }];\n}\n\n", "categories": [{"name": "posts", "slug": "posts", "permalink": "/category/posts/"}], "tags": [{"name": "gps", "slug": "gps", "permalink": "/tag/gps/"}, {"name": "geo", "slug": "geo", "permalink": "/tag/geo/"}]}, {"title": "\u6211\u6700\u5e38\u7528\u7684\u51e0\u4e2aXcode\u5feb\u6377\u952e", "date": "2017-03-16T00:00:00-00.00", "path": "/archives/%E6%88%91%E6%9C%80%E5%B8%B8%E7%94%A8%E7%9A%84%E5%87%A0%E4%B8%AAXcode%E5%BF%AB%E6%8D%B7%E9%94%AE/", "text": "\n\u2318(command) \u23ce(return) \u2325(option/alt) \u21e7(shift) \u2303(control/ctrl)\n\n\u5feb\u901f\u6253\u5f00\u6587\u4ef6 \u2318 + \u21e7 + O(\u5b57\u6bcd)\n\u5feb\u901f\u641c\u7d22\u6587\u672c \u2318 + \u21e7 + F\n\u5206\u680f\u663e\u793a \u2318 + \u2325 + \u23ce\n\u9000\u51fa\u5206\u680f\u663e\u793a \u2318 + \u23ce\n\u8ba9\u6587\u4ef6\u5728\u5206\u680f\u7684\u53f3\u4fa7\u663e\u793a \u2325 + click\n\u663e\u793a\u51fa\u6d6e\u5c42\u9009\u62e9\u6253\u5f00\u4f4d\u7f6e\n\u5bfc\u822a\u4e2d\u70b9\u51fb\u6587\u4ef6 \u21e7 + \u2325 + click\n\u7f16\u8f91\u533a\u57df\u4e2d\u70b9\u51fb\u6587\u4ef6\u540d \u21e7 + \u2325 + \u2318 + click\n\u9690\u85cf/\u663e\u793a\u5de6\u4fa7\u5bfc\u822a\u533a \u2318 + 0(\u6570\u5b57)\n\u9690\u85cf/\u663e\u793a\u53f3\u4fa7\u529f\u80fd\u533a \u2318 + \u2325 + 0(\u6570\u5b57)\n\u9690\u85cf/\u663e\u793a\u4e0b\u65b9\u8c03\u8bd5\u533a \u2318 + \u21e7 + Y\n\u6253\u5f00/\u5173\u95ed\u81ea\u52a8\u8865\u5168 Esc\n\u5feb\u901f\u7c7b/\u65b9\u6cd5\u63d0\u793a \u2325 + click\n\u81ea\u52a8\u7f29\u8fdb \u2303 + I(\u5b57\u6bcdi)\n\u5bfc\u822a\u4e2d\u6807\u7b7e\u9875\u7684\u9009\u62e9 \u2318 + (1...6)\n\u7f16\u8f91\u533a\u6587\u4ef6\u7684\u9009\u62e9 \u2303 + (1...5)\n\u8df3\u8f6c\u5230\u65b9\u6cd5 \u2303 + 6\n\u7f16\u8bd1 \u2318 + B\n\u7f16\u8bd1\u5e76\u8fd0\u884c \u2318 + R\n\u6e05\u7406\u9879\u76ee \u2318 + \u21e7 + K\n\u4e2d\u6b62\u4efb\u52a1(\u7f16\u8bd1/\u6e05\u7406) \u2318 + .\n\n", "categories": [{"name": "posts", "slug": "posts", "permalink": "/category/posts/"}], "tags": [{"name": "xcode", "slug": "xcode", "permalink": "/tag/xcode/"}]}, {"title": "\u628aGAE\u7a0b\u5e8f\u901a\u8fc7SSH\u90e8\u7f72\u5230VPS", "date": "2017-01-14T00:00:00-00.00", "path": "/archives/%E6%8A%8AGAE%E7%A8%8B%E5%BA%8F%E9%80%9A%E8%BF%87SSH%E9%83%A8%E7%BD%B2%E5%88%B0VPS/", "text": "\u5927\u90e8\u5206\u5728\u6587\u6863\u4e0a\u90fd\u5199\u4e86, \u5199\u8fd9\u7bc7\u6587\u7ae0\u7684\u76ee\u7684\u662f\u53d1\u73b0\u73b0\u5728appcfg.py update xxxx\u7684\u65f6\u5019\u4f1a\u6253\u5f00\u6d4f\u89c8\u5668\u8bbf\u95eegoogle\u8bf7\u6c42\u6388\u6743(\u540e\u53f0\u5185\u5efa\u4e86\u4e00\u4e2a\u672c\u5730server, \u7aef\u53e3\u662f8090, \u6388\u6743\u6210\u529f\u540e\u4f1a\u5e26\u6388\u6743\u7801\u8bf7\u6c42\u672c\u5730\u76848090\u7aef\u53e3, \u6240\u4ee5\u6211\u4eec\u5728 ssh \u73af\u5883\u4e2d\u662f\u6ca1\u6709\u6d4f\u89c8\u5668\u7684, \u8be5\u600e\u4e48\u89e3\u51b3\u5462?\u6211\u73a9 linux \u4e0d\u591a, \u5c31\u4ee5\u6211\u7684\u77e5\u8bc6\u91cf\u8fd9\u4e48\u89e3\u51b3:\n\u78b0\u5230\u9700\u8981\u8bbf\u95ee\u7f51\u7ad9\u7684\u65f6\u5019, \u7a0b\u5e8f\u5df2\u7ecf\u7ed9\u51fa\u4e86\u63d0\u793a, \u8981\u4f60\u9000\u51fa, \u4f60\u5f53\u7136\u4e0d\u9000\u51fa, \u800c\u662f\u628a\u7f51\u5740\u590d\u5236\u51fa\u6765, \u5728\u672c\u5730\u6253\u5f00, \u6388\u6743\u6210\u529f\u540e, \u672c\u5730\u6d4f\u89c8\u5668\u4f1a\u8bf7\u6c42127.0.0.1:8090, \u5f53\u7136, \u4ec0\u4e48\u90fd\u4e0d\u4f1a\u53d1\u751f, \u4f46\u4ece\u5730\u5740\u680f\u91cc\u628a\u5730\u5740\u590d\u5236\u5230\u526a\u8d34\u677f.\n\u56de\u5230SSH, \u628a\u5f53\u524d\u4efb\u52a1\u653e\u5230\u540e\u53f0(ctrl+z)\n\u7528curl\u8bbf\u95ee\u526a\u8d34\u677f\u91cc\u7684\u5730\u5740\n\u7ee7\u7eedctrl+z\u628acurl\u8bf7\u6c42\u653e\u5230\u540e\u53f0\njobs\u547d\u4ee4\u67e5\u4e00\u4e0b, \u5982\u679c\u540e\u53f0\u6ca1\u6709\u522b\u7684\u4efb\u52a1\u7684\u8bdd, appcfg\u4efb\u52a1\u7684id \u5e94\u8be5\u662f1, curl\u4efb\u52a1id \u5e94\u8be5\u662f2(\u73b0\u5728\u4ee5\u6211\u76841\u548c2\u4e3a\u51c6)\n\u628aappcfg\u63d0\u5230\u524d\u53f0: fg %1\n\u4f60\u4f1a\u770b\u5230\u7a0b\u5e8f\u987a\u5229\u8fdb\u884c\u4e0b\u53bb\u4e86\n\u7ee7\u7eed, fg %2\u628a curl \u4efb\u52a1\u63d0\u5230\u524d\u53f0, \u4f60\u4f1a\u770b\u5230\u63d0\u793a, \u4ec0\u4e48\u6388\u6743\u6210\u529f\u4e4b\u7c7b\u7684\n\n\u6f14\u793a:\nroot@walker:~/KindleEar# appcfg.py update app.yaml module-worker.yaml\n07:52 AM Host: appengine.google.com\n07:52 AM Application: kindleearwalker; version: 1\n07:52 AM Starting update of app: kindleearwalker, version: 1\n07:52 AM Getting current resource limits.\nYour browser has been opened to visit:\n\n    https://accounts.google.com/o/oauth2/auth?scope=\u6f14\u793a\u6570\u636e\n    # step1: \u8bf7\u590d\u5236\u6b64\u7f51\u5740, \u5e76\u5ffd\u7565\u8981\u4f60\u9000\u51fa\u6362\u7535\u8111\u7684\u63d0\u793a\n\nIf your browser is on a different machine then exit and re-run this\napplication with the command-line parameter\n\n  --noauth_local_webserver\n\n# step2: \u73b0\u5728\u5f00\u59cb\u628a\u4efb\u52a1\u653e\u5230\u540e\u53f0\n^Z\n[1]+  Stopped                 appcfg.py update app.yaml module-worker.yaml\n# step3: \u628a\u4ece\u672c\u673a\u6d4f\u89c8\u5668\u590d\u5236\u7684\u56de\u8c03 url \u8bbf\u95ee\u4e00\u4e0b\nroot@walker:~/KindleEar# curl http://localhost:8090/?code=4/CYdQFQLiLBFwa7ajsU1acb1Xx9Kpal6SxMuPIS-dRYo#\n# step4: \u628a\u8bbf\u95ee\u4efb\u52a1\u653e\u5230\u540e\u53f0\n^Z\n[2]+  Stopped                 curl http://localhost:8090/?code=4/CYdQFQLiLBFwa7ajsU1acb1Xx9Kpal6SxMuPIS-dRYo#\n# step 5: \u67e5\u770b\u4e00\u4e0b\u4efb\u52a1\u548c ID\nroot@walker:~/KindleEar# jobs\n[1]-  Stopped                 appcfg.py update app.yaml module-worker.yaml\n[2]+  Stopped                 curl http://localhost:8090/?code=4/xxxxx#\n# step 6: \u628aappcgf\u7684\u4efb\u52a1\u63d0\u5230\u524d\u53f0\nroot@walker:~/KindleEar# fg %1\nappcfg.py update app.yaml module-worker.yaml\nAuthentication successful.\n07:54 AM Scanning files on local disk.\n07:54 AM Cloning 15 static files.\n07:54 AM Cloning 387 application files.\n07:54 AM Uploading 3 files and blobs.\n07:54 AM Uploaded 3 files and blobs.\n.........\u7701\u7565\n07:54 AM Compilation completed.\n07:54 AM Starting deployment.\n07:54 AM Checking if deployment succeeded.\n07:54 AM Deployment successful.\n07:54 AM Checking if updated app version is serving.\n07:54 AM Completed update of app: kindleearwalker, module: worker, version: 1\n# step 7: see? \u6210\u529f\u4e86, \u770b\u770b\u5269\u4e0b\u7684\u4efb\u52a1\u5427\nroot@walker:~/KindleEar# jobs\n[2]+  Stopped                 curl http://localhost:8090/?code=4/xxxxxxx#\n# step 8: \u63d0\u5230\u524d\u53f0\u6765\u7ed3\u675f\u5427\nroot@walker:~/KindleEar# fg %2\ncurl http://localhost:8090/?code=4/CYdQFQLiLBFwa7ajsU1acb1Xx9Kpal6SxMuPIS-dRYo#\n&lt;html&gt;&lt;head&gt;&lt;title&gt;Authentication Status&lt;/title&gt;&lt;/head&gt;&lt;body&gt;&lt;p&gt;The authentication flow has completed.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;root@walker:~/KindleEar#\n\n", "categories": [{"name": "posts", "slug": "posts", "permalink": "/category/posts/"}], "tags": [{"name": "gae", "slug": "gae", "permalink": "/tag/gae/"}, {"name": "vps", "slug": "vps", "permalink": "/tag/vps/"}]}, {"title": "-bin-bash\u548c-bin-sh\u7684\u533a\u522b", "date": "2010-03-26T00:00:00-00.00", "path": "/archives/-bin-bash%E5%92%8C-bin-sh%E7%9A%84%E5%8C%BA%E5%88%AB/", "text": "[\u8be5\u6587\u4e0d\u4e25\u8c28, \u6587\u672b\u6709\u8865\u5145]\u811a\u672ctest.sh\u5185\u5bb9\uff1a\n#!/bin/sh\nsource pcy.sh #pcy.sh\u5e76\u4e0d\u5b58\u5728\necho hello\n\n\u6267\u884c./test.sh\uff0c\u5c4f\u5e55\u8f93\u51fa\u4e3a\uff1a\n./test.sh: line 2: pcy.sh: No such file or directory\n\n\u7531\u6b64\u53ef\u89c1\uff0c\u5728#!/bin/sh\u7684\u60c5\u51b5\u4e0b\uff0csource\u4e0d\u6210\u529f\uff0c\u4e0d\u4f1a\u8fd0\u884csource\u540e\u9762\u7684\u4ee3\u7801\u3002\n\u4fee\u6539test.sh\u811a\u672c\u7684\u7b2c\u4e00\u884c\uff0c\u53d8\u4e3a#!/bin/bash\uff0c\u518d\u6b21\u6267\u884c./test.sh\uff0c\u5c4f\u5e55\u8f93\u51fa\u4e3a\uff1a\n./test.sh: line 2: pcy.sh: No such file or directory\nhello\n\n\u7531\u6b64\u53ef\u89c1\uff0c\u5728#!/bin/bash\u7684\u60c5\u51b5\u4e0b\uff0c\u867d\u7136source\u4e0d\u6210\u529f\uff0c\u4f46\u662f\u8fd8\u662f\u8fd0\u884c\u4e86source\u540e\u9762\u7684echo\u8bed\u53e5\u3002\n\u4f46\u662f\u7d27\u63a5\u7740\u6211\u53c8\u8bd5\u7740\u8fd0\u884c\u4e86\u4e00\u4e0bsh ./test.sh\uff0c\u8fd9\u6b21\u5c4f\u5e55\u8f93\u51fa\u4e3a\uff1a\n./test.sh: line 2: pcy.sh: No such file or directory\n\n\u8868\u793a\u867d\u7136\u811a\u672c\u4e2d\u6307\u5b9a\u4e86#!/bin/bash\uff0c\u4f46\u662f\u5982\u679c\u4f7f\u7528sh \u65b9\u5f0f\u8fd0\u884c\uff0c\u5982\u679csource\u4e0d\u6210\u529f\uff0c\u4e5f\u4e0d\u4f1a\u8fd0\u884csource\u540e\u9762\u7684\u4ee3\u7801\u3002\u4e3a\u4ec0\u4e48\u4f1a\u6709\u8fd9\u6837\u7684\u533a\u522b\u5462\uff1fjunru\u540c\u5b66\u4f5c\u4e86\u89e3\u91ca\nsh\u4e00\u822c\u8bbe\u6210bash\u7684\u8f6f\u94fe\n\n\n[work@zjm-testing-app46 cy]$ ll /bin/sh\nlrwxrwxrwx 1 root root 4 Nov 13 2006 /bin/sh -&gt; bash\n\n\n\u5728\u4e00\u822c\u7684linux\u7cfb\u7edf\u5f53\u4e2d\uff08\u5982redhat\uff09\uff0c\u4f7f\u7528sh\u8c03\u7528\u6267\u884c\u811a\u672c\u76f8\u5f53\u4e8e\u6253\u5f00\u4e86bash\u7684POSIX\u6807\u51c6\u6a21\u5f0f\n\u4e5f\u5c31\u662f\u8bf4 /bin/sh \u76f8\u5f53\u4e8e /bin/bash --posix\n\n\u6240\u4ee5\uff0csh\u8ddfbash\u7684\u533a\u522b\uff0c\u5b9e\u9645\u4e0a\u5c31\u662fbash\u6709\u6ca1\u6709\u5f00\u542fposix\u6a21\u5f0f\u7684\u533a\u522bso\uff0c\u53ef\u4ee5\u9884\u60f3\u7684\u662f\uff0c\u5982\u679c\u7b2c\u4e00\u884c\u5199\u6210 #!/bin/bash --posix\uff0c\u90a3\u4e48\u811a\u672c\u6267\u884c\u6548\u679c\u8ddf#!/bin/sh\u662f\u4e00\u6837\u7684\uff08\u9075\u5faaposix\u7684\u7279\u5b9a\u89c4\u8303\uff0c\u6709\u53ef\u80fd\u5c31\u5305\u62ec\u8fd9\u6837\u7684\u89c4\u8303\uff1a\u201c\u5f53\u67d0\u884c\u4ee3\u7801\u51fa\u9519\u65f6\uff0c\u4e0d\u7ee7\u7eed\u5f80\u4e0b\u89e3\u91ca\u201d\uff09\u6765\u6e90: http://www.cnblogs.com/baizhantang/archive/2012/09/11/2680453.html\u5176\u5b83\u89e3\u91ca\n\u7b49\u7b49,  \u8fd9\u91cc\u5c31\u5b8c\u4e86\u5417? \u8fd9\u91cc\u6709\u66f4\u660e\u786e\u7684\u8bf4\u6cd5\u5728CentOS\u91cc\uff0c/bin/sh\u662f\u4e00\u4e2a\u6307\u5411/bin/bash\u7684\u7b26\u53f7\u94fe\u63a5: (\u53ea\u662f\u5728 CentOS \u91cc\u54e6)\n[root@centosraw ~]# ls -l /bin/*sh\n-rwxr-xr-x. 1 root root 903272 Feb 22 05:09 /bin/bash\n-rwxr-xr-x. 1 root root 106216 Oct 17  2012 /bin/dash\nlrwxrwxrwx. 1 root root      4 Mar 22 10:22 /bin/sh -&gt; bash\n\n\u4f46\u5728Mac OS\u4e0a\u4e0d\u662f\uff0c/bin/sh\u548c/bin/bash\u662f\u4e24\u4e2a\u4e0d\u540c\u7684\u6587\u4ef6\uff0c\u5c3d\u7ba1\u5b83\u4eec\u7684\u5927\u5c0f\u53ea\u76f8\u5dee100\u5b57\u8282\u5de6\u53f3:\niMac:~ wuxiao$ ls -l /bin/*sh\n-r-xr-xr-x  1 root  wheel  1371648  6 Nov 16:52 /bin/bash\n-rwxr-xr-x  2 root  wheel   772992  6 Nov 16:52 /bin/csh\n-r-xr-xr-x  1 root  wheel  2180736  6 Nov 16:52 /bin/ksh\n-r-xr-xr-x  1 root  wheel  1371712  6 Nov 16:52 /bin/sh\n-rwxr-xr-x  2 root  wheel   772992  6 Nov 16:52 /bin/tcsh\n-rwxr-xr-x  1 root  wheel  1103984  6 Nov 16:52 /bin/zsh\n\n\u6765\u6e90: https://github.com/qinjx/30min_guides/blob/master/shell.md", "categories": [{"name": "posts", "slug": "posts", "permalink": "/category/posts/"}], "tags": [{"name": "bash", "slug": "bash", "permalink": "/tag/bash/"}, {"name": "shell", "slug": "shell", "permalink": "/tag/shell/"}]}], "pages": []}